android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    android.graphics.drawable.Drawable mWrapped -> mWrapped
    float mOffset -> mOffset
    float mOffsetBy -> mOffsetBy
    android.graphics.Rect mTmpRect -> mTmpRect
    void setOffset(float) -> setOffset
    float getOffset() -> getOffset
    void setOffsetBy(float) -> setOffsetBy
    void draw(android.graphics.Canvas) -> draw
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    boolean onStateChange(int[]) -> onStateChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    java.util.HashMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    java.util.HashMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> registerContentObserver
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    int binarySearch(long[],int,int,long) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    int binarySearch(int[],int,int,int) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealIntArraySize(int) -> idealIntArraySize
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    android.support.v4.view.MenuCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$MenuVersionImpl -> android.support.v4.view.MenuCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewGravity(android.view.View) -> getDrawerViewGravity
    boolean checkDrawerViewGravity(android.view.View,int) -> checkDrawerViewGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> access$100
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mGravity -> mGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> IMPL
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$900
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> access$1000
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.ab.activity.AbActivity -> com.ab.activity.AbActivity:
    java.lang.String TAG -> TAG
    boolean D -> D
    java.lang.String mProgressMessage -> mProgressMessage
    android.view.LayoutInflater mInflater -> mInflater
    android.app.ProgressDialog mProgressDialog -> mProgressDialog
    android.app.Dialog mBottomDialog -> mBottomDialog
    android.app.Dialog mCenterDialog -> mCenterDialog
    android.app.Dialog mTopDialog -> mTopDialog
    android.view.View mBottomDialogView -> mBottomDialogView
    android.view.View mCenterDialogView -> mCenterDialogView
    android.view.View mTopDialogView -> mTopDialogView
    int dialogPadding -> dialogPadding
    android.app.Application abApplication -> abApplication
    android.content.SharedPreferences abSharedPreferences -> abSharedPreferences
    android.widget.LinearLayout$LayoutParams layoutParamsFF -> layoutParamsFF
    android.widget.LinearLayout$LayoutParams layoutParamsFW -> layoutParamsFW
    android.widget.LinearLayout$LayoutParams layoutParamsWF -> layoutParamsWF
    android.widget.LinearLayout$LayoutParams layoutParamsWW -> layoutParamsWW
    android.widget.RelativeLayout ab_base -> ab_base
    com.ab.view.titlebar.AbTitleBar mAbTitleBar -> mAbTitleBar
    com.ab.view.titlebar.AbBottomBar mAbBottomBar -> mAbBottomBar
    android.widget.RelativeLayout contentLayout -> contentLayout
    int diaplayWidth -> diaplayWidth
    int diaplayHeight -> diaplayHeight
    com.ab.view.app.AbMonitorView mAbMonitorView -> mAbMonitorView
    android.os.Handler mMonitorHandler -> mMonitorHandler
    java.lang.Runnable mMonitorRunnable -> mMonitorRunnable
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.WindowManager$LayoutParams mMonitorParams -> mMonitorParams
    android.os.Handler baseHandler -> baseHandler
    int[] $SWITCH_TABLE$com$ab$activity$AbActivity$Method -> $SWITCH_TABLE$com$ab$activity$AbActivity$Method
    void onCreate(android.os.Bundle) -> onCreate
    void showToast(java.lang.String) -> showToast
    void showToast(int) -> showToast
    void setAbContentView(android.view.View) -> setAbContentView
    void setAbContentView(int) -> setAbContentView
    void showToastInThread(int) -> showToastInThread
    void showToastInThread(java.lang.String) -> showToastInThread
    void showProgressDialog() -> showProgressDialog
    void showProgressDialog(java.lang.String) -> showProgressDialog
    void showDialog(int,android.view.View) -> showDialog
    void showDialog(java.lang.String,java.lang.String,android.content.DialogInterface$OnClickListener) -> showDialog
    android.app.AlertDialog showDialog(java.lang.String,android.view.View,android.content.DialogInterface$OnClickListener) -> showDialog
    android.app.AlertDialog showDialog(java.lang.String,java.lang.String) -> showDialog
    android.app.AlertDialog showDialog(java.lang.String,android.view.View) -> showDialog
    void setDialogLayoutParams(android.app.Dialog,int,int) -> setDialogLayoutParams
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void removeProgressDialog() -> removeProgressDialog
    void removeDialogInThread(int) -> removeDialogInThread
    com.ab.view.titlebar.AbTitleBar getTitleBar() -> getTitleBar
    com.ab.view.titlebar.AbBottomBar getBottomBar() -> getBottomBar
    void openMonitor() -> openMonitor
    void closeMonitor() -> closeMonitor
    void setDialogPadding(int) -> setDialogPadding
    java.lang.String getProgressMessage() -> getProgressMessage
    void setProgressMessage(java.lang.String) -> setProgressMessage
    void onBackPressed() -> onBackPressed
    void finish() -> finish
    android.app.Dialog getBottomDialog() -> getBottomDialog
    android.app.Dialog getCenterDialog() -> getCenterDialog
    android.app.Dialog getTopDialog() -> getTopDialog
    void setTitleBarAbove(boolean) -> setTitleBarAbove
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void initIocView() -> initIocView
    void setViewSelectListener(java.lang.reflect.Field,java.lang.String,java.lang.String) -> setViewSelectListener
    void setListener(java.lang.reflect.Field,java.lang.String,com.ab.activity.AbActivity$Method) -> setListener
    java.lang.String access$0(com.ab.activity.AbActivity) -> access$0
    com.ab.view.app.AbMonitorView access$1(com.ab.activity.AbActivity) -> access$1
    android.os.Handler access$2(com.ab.activity.AbActivity) -> access$2
    android.view.WindowManager$LayoutParams access$3(com.ab.activity.AbActivity) -> access$3
    android.view.WindowManager access$4(com.ab.activity.AbActivity) -> access$4
    int[] $SWITCH_TABLE$com$ab$activity$AbActivity$Method() -> $SWITCH_TABLE$com$ab$activity$AbActivity$Method
com.ab.activity.AbActivity$1 -> com.ab.activity.AbActivity$1:
    com.ab.activity.AbActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.ab.activity.AbActivity$2 -> com.ab.activity.AbActivity$2:
    com.ab.activity.AbActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.ab.activity.AbActivity$3 -> com.ab.activity.AbActivity$3:
    com.ab.activity.AbActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.ab.activity.AbActivity$4 -> com.ab.activity.AbActivity$4:
    com.ab.activity.AbActivity this$0 -> this$0
    void run() -> run
com.ab.activity.AbActivity$5 -> com.ab.activity.AbActivity$5:
    int lastX -> lastX
    int lastY -> lastY
    int paramX -> paramX
    int paramY -> paramY
    com.ab.activity.AbActivity this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ab.activity.AbActivity$Method -> com.ab.activity.AbActivity$Method:
    com.ab.activity.AbActivity$Method Click -> Click
    com.ab.activity.AbActivity$Method LongClick -> LongClick
    com.ab.activity.AbActivity$Method ItemClick -> ItemClick
    com.ab.activity.AbActivity$Method itemLongClick -> itemLongClick
    com.ab.activity.AbActivity$Method[] ENUM$VALUES -> ENUM$VALUES
    com.ab.activity.AbActivity$Method[] values() -> values
    com.ab.activity.AbActivity$Method valueOf(java.lang.String) -> valueOf
com.ab.adapter.AbFragmentPagerAdapter -> com.ab.adapter.AbFragmentPagerAdapter:
    java.util.ArrayList mFragmentList -> mFragmentList
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
com.ab.adapter.AbViewPagerAdapter -> com.ab.adapter.AbViewPagerAdapter:
    android.content.Context mContext -> mContext
    java.util.ArrayList mListViews -> mListViews
    java.util.HashMap mViews -> mViews
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    int getItemPosition(java.lang.Object) -> getItemPosition
com.ab.bitmap.AbFileCache -> com.ab.bitmap.AbFileCache:
    java.lang.String TAG -> TAG
    boolean D -> D
    int maxCacheSize -> maxCacheSize
    int cacheSize -> cacheSize
    java.util.HashMap fileCache -> fileCache
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.io.File getFileFromCache(java.lang.String) -> getFileFromCache
    void addFileToCache(java.lang.String,java.io.File) -> addFileToCache
    void removeFileFromCache(java.lang.String) -> removeFileFromCache
    void removeAllFileFromCache() -> removeAllFileFromCache
    void setMaxCacheSize(int) -> setMaxCacheSize
    int getCacheSize() -> getCacheSize
com.ab.bitmap.AbImageCache -> com.ab.bitmap.AbImageCache:
    java.lang.String TAG -> TAG
    boolean D -> D
    int cacheSize -> cacheSize
    android.support.v4.util.LruCache bitmapCache -> bitmapCache
    java.util.HashMap runRunnableCache -> runRunnableCache
    java.util.List waitRunnableList -> waitRunnableList
    java.util.concurrent.locks.ReentrantLock lock -> lock
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> getBitmapFromCache
    void addBitmapToCache(java.lang.String,android.graphics.Bitmap) -> addBitmapToCache
    void removeBitmapFromCache(java.lang.String) -> removeBitmapFromCache
    void removeAllBitmapFromCache() -> removeAllBitmapFromCache
    java.lang.String getCacheKey(java.lang.String,int,int,int) -> getCacheKey
    java.lang.Runnable getRunRunnableFromCache(java.lang.String) -> getRunRunnableFromCache
    void addToRunRunnableCache(java.lang.String,java.lang.Runnable) -> addToRunRunnableCache
    void removeRunRunnableFromCache(java.lang.String) -> removeRunRunnableFromCache
    java.lang.Runnable getWaitRunnableFromCache(java.lang.String) -> getWaitRunnableFromCache
    void addToWaitRunnableCache(java.lang.String,java.lang.Runnable) -> addToWaitRunnableCache
    void removeWaitRunnableFromCache(java.lang.String) -> removeWaitRunnableFromCache
    boolean access$0() -> access$0
    java.lang.String access$1() -> access$1
com.ab.bitmap.AbImageCache$1 -> com.ab.bitmap.AbImageCache$1:
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    void entryRemoved(boolean,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap) -> entryRemoved
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
com.ab.bitmap.AbImageDownloadItem -> com.ab.bitmap.AbImageDownloadItem:
    java.lang.String imageUrl -> imageUrl
    int width -> width
    int height -> height
    int type -> type
    android.graphics.Bitmap bitmap -> bitmap
    com.ab.bitmap.AbImageDownloadListener listener -> listener
    java.lang.String getImageUrl() -> getImageUrl
    void setImageUrl(java.lang.String) -> setImageUrl
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    int getHeight() -> getHeight
    void setHeight(int) -> setHeight
    int getType() -> getType
    void setType(int) -> setType
    android.graphics.Bitmap getBitmap() -> getBitmap
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    com.ab.bitmap.AbImageDownloadListener getListener() -> getListener
    void setListener(com.ab.bitmap.AbImageDownloadListener) -> setListener
com.ab.bitmap.AbImageDownloadListener -> com.ab.bitmap.AbImageDownloadListener:
    void update(android.graphics.Bitmap,java.lang.String) -> update
com.ab.bitmap.AbImageDownloadPool -> com.ab.bitmap.AbImageDownloadPool:
    java.lang.String TAG -> TAG
    boolean D -> D
    com.ab.bitmap.AbImageDownloadPool imageDownload -> imageDownload
    java.util.concurrent.Executor mExecutorService -> mExecutorService
    android.os.Handler handler -> handler
    com.ab.bitmap.AbImageDownloadPool getInstance() -> getInstance
    void execute(com.ab.bitmap.AbImageDownloadItem) -> execute
    android.os.Handler access$0() -> access$0
    boolean access$1() -> access$1
    java.lang.String access$2() -> access$2
com.ab.bitmap.AbImageDownloadPool$1 -> com.ab.bitmap.AbImageDownloadPool$1:
    void handleMessage(android.os.Message) -> handleMessage
com.ab.bitmap.AbImageDownloadPool$2 -> com.ab.bitmap.AbImageDownloadPool$2:
    com.ab.bitmap.AbImageDownloadPool this$0 -> this$0
    com.ab.bitmap.AbImageDownloadItem val$item -> val$item
    java.lang.String val$cacheKey -> val$cacheKey
    void run() -> run
com.ab.bitmap.AbImageDownloader -> com.ab.bitmap.AbImageDownloader:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.content.Context mContext -> mContext
    int width -> width
    int height -> height
    int type -> type
    android.graphics.drawable.Drawable loadingImage -> loadingImage
    android.view.View loadingView -> loadingView
    android.graphics.drawable.Drawable errorImage -> errorImage
    android.graphics.drawable.Drawable noImage -> noImage
    boolean animation -> animation
    com.ab.bitmap.AbImageDownloadPool mAbImageDownloadPool -> mAbImageDownloadPool
    void display(android.widget.ImageView,java.lang.String) -> display
    void setLoadingImage(int) -> setLoadingImage
    void setLoadingView(android.view.View) -> setLoadingView
    void setErrorImage(int) -> setErrorImage
    void setNoImage(int) -> setNoImage
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    int getHeight() -> getHeight
    void setHeight(int) -> setHeight
    int getType() -> getType
    void setType(int) -> setType
    void setAnimation(boolean) -> setAnimation
    android.view.View access$0(com.ab.bitmap.AbImageDownloader) -> access$0
    boolean access$1(com.ab.bitmap.AbImageDownloader) -> access$1
    android.graphics.drawable.Drawable access$2(com.ab.bitmap.AbImageDownloader) -> access$2
com.ab.bitmap.AbImageDownloader$1 -> com.ab.bitmap.AbImageDownloader$1:
    com.ab.bitmap.AbImageDownloader this$0 -> this$0
    android.widget.ImageView val$imageView -> val$imageView
    void update(android.graphics.Bitmap,java.lang.String) -> update
com.ab.db.AbBasicDBDao -> com.ab.db.AbBasicDBDao:
    java.lang.String getStringColumnValue(java.lang.String,android.database.Cursor) -> getStringColumnValue
    int getIntColumnValue(java.lang.String,android.database.Cursor) -> getIntColumnValue
    void closeDatabase(android.database.Cursor,android.database.sqlite.SQLiteDatabase) -> closeDatabase
    void closeCursor(android.database.Cursor) -> closeCursor
com.ab.db.MyDBHelper -> com.ab.db.MyDBHelper:
    java.lang.String DBNAME -> DBNAME
    int VERSION -> VERSION
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.ab.db.orm.AbDBHelper -> com.ab.db.orm.AbDBHelper:
    java.lang.Class[] modelClasses -> modelClasses
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.ab.db.orm.AbSDDBHelper -> com.ab.db.orm.AbSDDBHelper:
    java.lang.Class[] modelClasses -> modelClasses
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.ab.db.orm.AbSDSQLiteOpenHelper -> com.ab.db.orm.AbSDSQLiteOpenHelper:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    java.lang.String mName -> mName
    java.lang.String mPath -> mPath
    android.database.sqlite.SQLiteDatabase$CursorFactory mFactory -> mFactory
    int mNewVersion -> mNewVersion
    android.database.sqlite.SQLiteDatabase mDatabase -> mDatabase
    boolean mIsInitializing -> mIsInitializing
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    android.database.sqlite.SQLiteDatabase getReadableDatabase() -> getReadableDatabase
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.io.File getDatabasePath(java.lang.String,java.lang.String) -> getDatabasePath
com.ab.db.orm.AbTableHelper -> com.ab.db.orm.AbTableHelper:
    java.lang.String TAG -> TAG
    void createTablesByClasses(android.database.sqlite.SQLiteDatabase,java.lang.Class[]) -> createTablesByClasses
    void dropTablesByClasses(android.database.sqlite.SQLiteDatabase,java.lang.Class[]) -> dropTablesByClasses
    void createTable(android.database.sqlite.SQLiteDatabase,java.lang.Class) -> createTable
    void dropTable(android.database.sqlite.SQLiteDatabase,java.lang.Class) -> dropTable
    java.lang.String getColumnType(java.lang.Class) -> getColumnType
    java.util.List joinFieldsOnlyColumn(java.lang.reflect.Field[],java.lang.reflect.Field[]) -> joinFieldsOnlyColumn
    java.util.List joinFields(java.lang.reflect.Field[],java.lang.reflect.Field[]) -> joinFields
com.ab.db.orm.annotation.ActionType -> com.ab.db.orm.annotation.ActionType:
    java.lang.String query -> query
    java.lang.String insert -> insert
    java.lang.String update -> update
    java.lang.String delete -> delete
    java.lang.String query_insert -> query_insert
com.ab.db.orm.annotation.Column -> com.ab.db.orm.annotation.Column:
    java.lang.String name() -> name
    java.lang.String type() -> type
    int length() -> length
com.ab.db.orm.annotation.Id -> com.ab.db.orm.annotation.Id:
com.ab.db.orm.annotation.Relations -> com.ab.db.orm.annotation.Relations:
    java.lang.String name() -> name
    java.lang.String foreignKey() -> foreignKey
    java.lang.String type() -> type
    java.lang.String action() -> action
com.ab.db.orm.annotation.RelationsType -> com.ab.db.orm.annotation.RelationsType:
    java.lang.String one2one -> one2one
    java.lang.String one2many -> one2many
    java.lang.String many2many -> many2many
com.ab.db.orm.annotation.Table -> com.ab.db.orm.annotation.Table:
    java.lang.String name() -> name
com.ab.db.orm.dao.AbDBDao -> com.ab.db.orm.dao.AbDBDao:
    android.database.sqlite.SQLiteOpenHelper getDbHelper() -> getDbHelper
    long insert(java.lang.Object) -> insert
    long insert(java.lang.Object,boolean) -> insert
    long insertList(java.util.List) -> insertList
    long insertList(java.util.List,boolean) -> insertList
    long delete(int) -> delete
    long delete(java.lang.Integer[]) -> delete
    long delete(java.lang.String,java.lang.String[]) -> delete
    long deleteAll() -> deleteAll
    long update(java.lang.Object) -> update
    long updateList(java.util.List) -> updateList
    java.lang.Object queryOne(int) -> queryOne
    java.util.List rawQuery(java.lang.String,java.lang.String[],java.lang.Class) -> rawQuery
    java.util.List queryList() -> queryList
    java.util.List queryList(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> queryList
    java.util.List queryList(java.lang.String,java.lang.String[]) -> queryList
    boolean isExist(java.lang.String,java.lang.String[]) -> isExist
    java.util.List queryMapList(java.lang.String,java.lang.String[]) -> queryMapList
    int queryCount(java.lang.String,java.lang.String[]) -> queryCount
    void execSql(java.lang.String,java.lang.Object[]) -> execSql
com.ab.db.orm.dao.AbDBDaoImpl -> com.ab.db.orm.dao.AbDBDaoImpl:
    java.lang.String TAG -> TAG
    android.database.sqlite.SQLiteOpenHelper dbHelper -> dbHelper
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.lang.String tableName -> tableName
    java.lang.String idColumn -> idColumn
    java.lang.Class clazz -> clazz
    java.util.List allFields -> allFields
    int METHOD_INSERT -> METHOD_INSERT
    int METHOD_UPDATE -> METHOD_UPDATE
    int TYPE_NOT_INCREMENT -> TYPE_NOT_INCREMENT
    int TYPE_INCREMENT -> TYPE_INCREMENT
    android.database.sqlite.SQLiteDatabase db -> db
    android.database.sqlite.SQLiteOpenHelper getDbHelper() -> getDbHelper
    java.lang.Object queryOne(int) -> queryOne
    java.util.List rawQuery(java.lang.String,java.lang.String[],java.lang.Class) -> rawQuery
    boolean isExist(java.lang.String,java.lang.String[]) -> isExist
    java.util.List queryList() -> queryList
    java.util.List queryList(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> queryList
    java.util.List queryList(java.lang.String,java.lang.String[]) -> queryList
    void getListFromCursor(java.lang.Class,java.util.List,android.database.Cursor) -> getListFromCursor
    long insert(java.lang.Object) -> insert
    long insert(java.lang.Object,boolean) -> insert
    long insertList(java.util.List) -> insertList
    long insertList(java.util.List,boolean) -> insertList
    long delete(int) -> delete
    long delete(java.lang.Integer[]) -> delete
    long delete(java.lang.String,java.lang.String[]) -> delete
    long deleteAll() -> deleteAll
    long update(java.lang.Object) -> update
    long updateList(java.util.List) -> updateList
    java.lang.String setContentValues(java.lang.Object,android.content.ContentValues,int,int) -> setContentValues
    java.util.List queryMapList(java.lang.String,java.lang.String[]) -> queryMapList
    int queryCount(java.lang.String,java.lang.String[]) -> queryCount
    void execSql(java.lang.String,java.lang.Object[]) -> execSql
    void startWritableDatabase(boolean) -> startWritableDatabase
    void startReadableDatabase() -> startReadableDatabase
    void closeDatabase() -> closeDatabase
    java.lang.String getLogSql(java.lang.String,java.lang.Object[]) -> getLogSql
com.ab.db.storage.AbSqliteStorage -> com.ab.db.storage.AbSqliteStorage:
    android.content.Context mContext -> mContext
    com.ab.db.storage.AbSqliteStorage mSqliteStorage -> mSqliteStorage
    com.ab.task.AbTaskQueue mAbTask -> mAbTask
    int errorCode100 -> errorCode100
    java.lang.String errorMessage100 -> errorMessage100
    int errorCode101 -> errorCode101
    java.lang.String errorMessage101 -> errorMessage101
    com.ab.db.storage.AbSqliteStorage getInstance(android.content.Context) -> getInstance
    void insertData(java.lang.Object,com.ab.db.orm.dao.AbDBDaoImpl,com.ab.db.storage.AbSqliteStorageListener$AbDataInsertListener) -> insertData
    void insertData(java.util.List,com.ab.db.orm.dao.AbDBDaoImpl,com.ab.db.storage.AbSqliteStorageListener$AbDataInsertListener) -> insertData
    void findData(com.ab.db.storage.AbStorageQuery,com.ab.db.orm.dao.AbDBDaoImpl,com.ab.db.storage.AbSqliteStorageListener$AbDataInfoListener) -> findData
    void updateData(java.lang.Object,com.ab.db.orm.dao.AbDBDaoImpl,com.ab.db.storage.AbSqliteStorageListener$AbDataOperationListener) -> updateData
    void updateData(java.util.List,com.ab.db.orm.dao.AbDBDaoImpl,com.ab.db.storage.AbSqliteStorageListener$AbDataOperationListener) -> updateData
    void deleteData(com.ab.db.storage.AbStorageQuery,com.ab.db.orm.dao.AbDBDaoImpl,com.ab.db.storage.AbSqliteStorageListener$AbDataOperationListener) -> deleteData
    void release() -> release
    int access$0(com.ab.db.storage.AbSqliteStorage) -> access$0
    java.lang.String access$1(com.ab.db.storage.AbSqliteStorage) -> access$1
com.ab.db.storage.AbSqliteStorage$1 -> com.ab.db.storage.AbSqliteStorage$1:
    com.ab.db.storage.AbSqliteStorage this$0 -> this$0
    com.ab.db.storage.AbSqliteStorageListener$AbDataInsertListener val$paramDataInsertListener -> val$paramDataInsertListener
    com.ab.db.orm.dao.AbDBDaoImpl val$dao -> val$dao
    java.lang.Object val$entity -> val$entity
    void update(java.lang.Object) -> update
    java.lang.Object getObject() -> getObject
com.ab.db.storage.AbSqliteStorage$2 -> com.ab.db.storage.AbSqliteStorage$2:
    com.ab.db.storage.AbSqliteStorage this$0 -> this$0
    com.ab.db.storage.AbSqliteStorageListener$AbDataInsertListener val$paramDataInsertListener -> val$paramDataInsertListener
    com.ab.db.orm.dao.AbDBDaoImpl val$dao -> val$dao
    java.util.List val$entityList -> val$entityList
    void update(java.lang.Object) -> update
    java.lang.Object getObject() -> getObject
com.ab.db.storage.AbSqliteStorage$3 -> com.ab.db.storage.AbSqliteStorage$3:
    com.ab.db.storage.AbSqliteStorage this$0 -> this$0
    com.ab.db.storage.AbSqliteStorageListener$AbDataInfoListener val$paramDataInsertListener -> val$paramDataInsertListener
    com.ab.db.orm.dao.AbDBDaoImpl val$dao -> val$dao
    com.ab.db.storage.AbStorageQuery val$storageQuery -> val$storageQuery
    void update(java.util.List) -> update
    java.util.List getList() -> getList
com.ab.db.storage.AbSqliteStorage$4 -> com.ab.db.storage.AbSqliteStorage$4:
    com.ab.db.storage.AbSqliteStorage this$0 -> this$0
    com.ab.db.orm.dao.AbDBDaoImpl val$dao -> val$dao
    java.lang.Object val$entity -> val$entity
    com.ab.db.storage.AbSqliteStorageListener$AbDataOperationListener val$paramDataInsertListener -> val$paramDataInsertListener
    java.lang.Object getObject() -> getObject
    void update(java.lang.Object) -> update
com.ab.db.storage.AbSqliteStorage$5 -> com.ab.db.storage.AbSqliteStorage$5:
    com.ab.db.storage.AbSqliteStorage this$0 -> this$0
    com.ab.db.storage.AbSqliteStorageListener$AbDataOperationListener val$paramDataInsertListener -> val$paramDataInsertListener
    com.ab.db.orm.dao.AbDBDaoImpl val$dao -> val$dao
    java.util.List val$entityList -> val$entityList
    void update(java.lang.Object) -> update
    java.lang.Object getObject() -> getObject
com.ab.db.storage.AbSqliteStorage$6 -> com.ab.db.storage.AbSqliteStorage$6:
    com.ab.db.storage.AbSqliteStorage this$0 -> this$0
    com.ab.db.storage.AbSqliteStorageListener$AbDataOperationListener val$paramDataInsertListener -> val$paramDataInsertListener
    com.ab.db.orm.dao.AbDBDaoImpl val$dao -> val$dao
    com.ab.db.storage.AbStorageQuery val$storageQuery -> val$storageQuery
    void update(java.lang.Object) -> update
    java.lang.Object getObject() -> getObject
com.ab.db.storage.AbSqliteStorageListener -> com.ab.db.storage.AbSqliteStorageListener:
com.ab.db.storage.AbSqliteStorageListener$AbDataInfoListener -> com.ab.db.storage.AbSqliteStorageListener$AbDataInfoListener:
    void onSuccess(java.util.List) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.ab.db.storage.AbSqliteStorageListener$AbDataInsertListener -> com.ab.db.storage.AbSqliteStorageListener$AbDataInsertListener:
    void onSuccess(long) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.ab.db.storage.AbSqliteStorageListener$AbDataOperationListener -> com.ab.db.storage.AbSqliteStorageListener$AbDataOperationListener:
    void onSuccess(long) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.ab.db.storage.AbStorageQuery -> com.ab.db.storage.AbStorageQuery:
    java.lang.String whereClause -> whereClause
    java.util.ArrayList whereArgs -> whereArgs
    java.lang.String having -> having
    java.lang.String groupBy -> groupBy
    java.lang.String orderBy -> orderBy
    int limit -> limit
    int offset -> offset
    com.ab.db.storage.AbStorageQuery equals(java.lang.String,java.lang.Object) -> equals
    com.ab.db.storage.AbStorageQuery notEqual(java.lang.String,java.lang.Object) -> notEqual
    com.ab.db.storage.AbStorageQuery like(java.lang.String,java.lang.Object) -> like
    com.ab.db.storage.AbStorageQuery greaterThan(java.lang.String,java.lang.Object) -> greaterThan
    com.ab.db.storage.AbStorageQuery lessThan(java.lang.String,java.lang.Object) -> lessThan
    com.ab.db.storage.AbStorageQuery greaterThanEqualTo(java.lang.String,java.lang.Object) -> greaterThanEqualTo
    com.ab.db.storage.AbStorageQuery lessThanEqualTo(java.lang.String,java.lang.Object) -> lessThanEqualTo
    com.ab.db.storage.AbStorageQuery in(java.lang.String,java.lang.Object[]) -> in
    com.ab.db.storage.AbStorageQuery notIn(java.lang.String,java.lang.Object[]) -> notIn
    com.ab.db.storage.AbStorageQuery and(com.ab.db.storage.AbStorageQuery) -> and
    com.ab.db.storage.AbStorageQuery or(com.ab.db.storage.AbStorageQuery) -> or
    void setWhereClause(java.lang.String,java.lang.String[]) -> setWhereClause
    java.lang.String getWhereClause() -> getWhereClause
    java.lang.String[] getWhereArgs() -> getWhereArgs
    com.ab.db.storage.AbStorageQuery addSort(java.lang.String,com.ab.db.storage.AbStorageQuery$SortOrder) -> addSort
    java.lang.String getHaving() -> getHaving
    void setHaving(java.lang.String) -> setHaving
    java.lang.String getGroupBy() -> getGroupBy
    void setGroupBy(java.lang.String) -> setGroupBy
    java.lang.String getOrderBy() -> getOrderBy
    void setOrderBy(java.lang.String) -> setOrderBy
    int getLimit() -> getLimit
    void setLimit(int) -> setLimit
    int getOffset() -> getOffset
    void setOffset(int) -> setOffset
    void printLog(com.ab.db.storage.AbStorageQuery) -> printLog
    void main(java.lang.String[]) -> main
com.ab.db.storage.AbStorageQuery$SortOrder -> com.ab.db.storage.AbStorageQuery$SortOrder:
    com.ab.db.storage.AbStorageQuery$SortOrder ASC -> ASC
    com.ab.db.storage.AbStorageQuery$SortOrder DESC -> DESC
    com.ab.db.storage.AbStorageQuery$SortOrder[] ENUM$VALUES -> ENUM$VALUES
    com.ab.db.storage.AbStorageQuery$SortOrder[] values() -> values
    com.ab.db.storage.AbStorageQuery$SortOrder valueOf(java.lang.String) -> valueOf
com.ab.download.AbDownloadProgressListener -> com.ab.download.AbDownloadProgressListener:
    void onDownloadSize(long) -> onDownloadSize
com.ab.download.AbDownloadThread -> com.ab.download.AbDownloadThread:
    java.lang.String TAG -> TAG
    boolean D -> D
    java.io.File saveFile -> saveFile
    com.ab.download.DownFile mDownFile -> mDownFile
    boolean finish -> finish
    boolean flag -> flag
    com.ab.download.AbFileDownloader downloader -> downloader
    void run() -> run
    boolean isFinish() -> isFinish
    java.io.File getSaveFile() -> getSaveFile
    void setFlag(boolean) -> setFlag
com.ab.download.AbFileDownloader -> com.ab.download.AbFileDownloader:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.content.Context context -> context
    com.ab.download.AbDownloadThread threads -> threads
    com.ab.download.DownFileDao mDownFileDao -> mDownFileDao
    java.io.File saveFile -> saveFile
    com.ab.download.DownFile mDownFile -> mDownFile
    int mThreadNum -> mThreadNum
    boolean flag -> flag
    void update(com.ab.download.DownFile) -> update
    void download(com.ab.download.AbDownloadProgressListener) -> download
    java.util.Map getHttpResponseHeader(java.net.HttpURLConnection) -> getHttpResponseHeader
    void printResponseHeader(java.net.HttpURLConnection) -> printResponseHeader
    com.ab.download.AbDownloadThread getThreads() -> getThreads
    java.io.File getSaveFile() -> getSaveFile
    boolean getFlag() -> getFlag
    void setFlag(boolean) -> setFlag
com.ab.download.DownFile -> com.ab.download.DownFile:
    int _ID -> _ID
    java.lang.String icon -> icon
    java.lang.String name -> name
    java.lang.String description -> description
    java.lang.String pakageName -> pakageName
    int state -> state
    java.lang.String downUrl -> downUrl
    java.lang.String downPath -> downPath
    long downLength -> downLength
    long totalLength -> totalLength
    java.lang.String suffix -> suffix
    int get_ID() -> get_ID
    void set_ID(int) -> set_ID
    java.lang.String getIcon() -> getIcon
    void setIcon(java.lang.String) -> setIcon
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getPakageName() -> getPakageName
    void setPakageName(java.lang.String) -> setPakageName
    int getState() -> getState
    void setState(int) -> setState
    java.lang.String getDownUrl() -> getDownUrl
    void setDownUrl(java.lang.String) -> setDownUrl
    java.lang.String getDownPath() -> getDownPath
    void setDownPath(java.lang.String) -> setDownPath
    long getDownLength() -> getDownLength
    void setDownLength(long) -> setDownLength
    long getTotalLength() -> getTotalLength
    void setTotalLength(long) -> setTotalLength
    java.lang.String getSuffix() -> getSuffix
    void setSuffix(java.lang.String) -> setSuffix
com.ab.download.DownFileDao -> com.ab.download.DownFileDao:
    com.ab.db.MyDBHelper openHelper -> openHelper
    android.content.Context mContext -> mContext
    com.ab.download.DownFileDao mDownFileDao -> mDownFileDao
    com.ab.download.DownFileDao getInstance(android.content.Context) -> getInstance
    com.ab.download.DownFile getDownFile(java.lang.String) -> getDownFile
    java.util.List getAllDownFiles() -> getAllDownFiles
    long save(com.ab.download.DownFile) -> save
    long update(com.ab.download.DownFile) -> update
    long delete(java.lang.String) -> delete
com.ab.global.AbAppData -> com.ab.global.AbAppData:
    boolean DEBUG -> DEBUG
    boolean mMonitorOpened -> mMonitorOpened
    long startLogTimeInMillis -> startLogTimeInMillis
    int uiWidth -> uiWidth
    int uiHeight -> uiHeight
com.ab.global.AbAppException -> com.ab.global.AbAppException:
    long serialVersionUID -> serialVersionUID
    java.lang.String msg -> msg
    java.lang.String getMessage() -> getMessage
com.ab.global.AbConstant -> com.ab.global.AbConstant:
    java.lang.String SHAREPATH -> SHAREPATH
    int RESULRCODE_OK -> RESULRCODE_OK
    int RESULRCODE_ERROR -> RESULRCODE_ERROR
    int SHOW_TOAST -> SHOW_TOAST
    int SHOW_PROGRESS -> SHOW_PROGRESS
    int REMOVE_PROGRESS -> REMOVE_PROGRESS
    int REMOVE_DIALOGBOTTOM -> REMOVE_DIALOGBOTTOM
    int REMOVE_DIALOGCENTER -> REMOVE_DIALOGCENTER
    int REMOVE_DIALOGTOP -> REMOVE_DIALOGTOP
    int LISTVIEW -> LISTVIEW
    int GRIDVIEW -> GRIDVIEW
    int GALLERYVIEW -> GALLERYVIEW
    int RELATIVELAYOUTVIEW -> RELATIVELAYOUTVIEW
    int DIALOGPROGRESS -> DIALOGPROGRESS
    int DIALOGBOTTOM -> DIALOGBOTTOM
    int DIALOGCENTER -> DIALOGCENTER
    int DIALOGTOP -> DIALOGTOP
    int CONNECT_FAILURE_CODE -> CONNECT_FAILURE_CODE
    int CONNECT_TIMEOUT_CODE -> CONNECT_TIMEOUT_CODE
    int RESPONSE_TIMEOUT_CODE -> RESPONSE_TIMEOUT_CODE
    int UNTREATED_CODE -> UNTREATED_CODE
    java.lang.String CONNECTEXCEPTION -> CONNECTEXCEPTION
    java.lang.String UNKNOWNHOSTEXCEPTION -> UNKNOWNHOSTEXCEPTION
    java.lang.String SOCKETEXCEPTION -> SOCKETEXCEPTION
    java.lang.String SOCKETTIMEOUTEXCEPTION -> SOCKETTIMEOUTEXCEPTION
    java.lang.String NULLPOINTEREXCEPTION -> NULLPOINTEREXCEPTION
    java.lang.String NULLMESSAGEEXCEPTION -> NULLMESSAGEEXCEPTION
    java.lang.String CLIENTPROTOCOLEXCEPTION -> CLIENTPROTOCOLEXCEPTION
    java.lang.String MISSINGPARAMETERS -> MISSINGPARAMETERS
com.ab.http.AbBinaryHttpResponseListener -> com.ab.http.AbBinaryHttpResponseListener:
    java.lang.String TAG -> TAG
    void onSuccess(int,byte[]) -> onSuccess
    void sendSuccessMessage(int,byte[]) -> sendSuccessMessage
com.ab.http.AbFileHttpResponseListener -> com.ab.http.AbFileHttpResponseListener:
    java.lang.String TAG -> TAG
    java.io.File mFile -> mFile
    void onSuccess(int,java.io.File) -> onSuccess
    void onSuccess(int) -> onSuccess
    void onFailure(int,java.lang.String,java.lang.Throwable) -> onFailure
    void sendSuccessMessage(int) -> sendSuccessMessage
    void sendFailureMessage(int,java.lang.Throwable) -> sendFailureMessage
    java.io.File getFile() -> getFile
    void setFile(java.io.File) -> setFile
    void setFile(java.lang.String) -> setFile
com.ab.http.AbHttpClient -> com.ab.http.AbHttpClient:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    java.util.concurrent.Executor mExecutorService -> mExecutorService
    int DEFAULT_MAX_CONNECTIONS -> DEFAULT_MAX_CONNECTIONS
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    int DEFAULT_SOCKET_BUFFER_SIZE -> DEFAULT_SOCKET_BUFFER_SIZE
    int BUFFER_SIZE -> BUFFER_SIZE
    int SUCCESS_MESSAGE -> SUCCESS_MESSAGE
    int FAILURE_MESSAGE -> FAILURE_MESSAGE
    int START_MESSAGE -> START_MESSAGE
    int FINISH_MESSAGE -> FINISH_MESSAGE
    int PROGRESS_MESSAGE -> PROGRESS_MESSAGE
    int RETRY_MESSAGE -> RETRY_MESSAGE
    int timeout -> timeout
    boolean debug -> debug
    void get(java.lang.String,com.ab.http.AbHttpResponseListener) -> get
    void get(java.lang.String,com.ab.http.AbRequestParams,com.ab.http.AbHttpResponseListener) -> get
    void post(java.lang.String,com.ab.http.AbHttpResponseListener) -> post
    void post(java.lang.String,com.ab.http.AbRequestParams,com.ab.http.AbHttpResponseListener) -> post
    void doGet(java.lang.String,com.ab.http.AbRequestParams,com.ab.http.AbHttpResponseListener) -> doGet
    void doPost(java.lang.String,com.ab.http.AbRequestParams,com.ab.http.AbHttpResponseListener) -> doPost
    void writeResponseData(org.apache.http.HttpEntity,java.lang.String,com.ab.http.AbFileHttpResponseListener) -> writeResponseData
    void readResponseData(org.apache.http.HttpEntity,com.ab.http.AbBinaryHttpResponseListener) -> readResponseData
    void setTimeout(int) -> setTimeout
    boolean isDebug() -> isDebug
    void setDebug(boolean) -> setDebug
    void access$0(com.ab.http.AbHttpClient,java.lang.String,com.ab.http.AbRequestParams,com.ab.http.AbHttpResponseListener) -> access$0
    void access$1(com.ab.http.AbHttpClient,java.lang.String,com.ab.http.AbRequestParams,com.ab.http.AbHttpResponseListener) -> access$1
com.ab.http.AbHttpClient$1 -> com.ab.http.AbHttpClient$1:
    com.ab.http.AbHttpClient this$0 -> this$0
    java.lang.String val$url -> val$url
    com.ab.http.AbRequestParams val$params -> val$params
    com.ab.http.AbHttpResponseListener val$responseListener -> val$responseListener
    void run() -> run
com.ab.http.AbHttpClient$2 -> com.ab.http.AbHttpClient$2:
    com.ab.http.AbHttpClient this$0 -> this$0
    java.lang.String val$url -> val$url
    com.ab.http.AbRequestParams val$params -> val$params
    com.ab.http.AbHttpResponseListener val$responseListener -> val$responseListener
    void run() -> run
com.ab.http.AbHttpClient$ResponderHandler -> com.ab.http.AbHttpClient$ResponderHandler:
    java.lang.Object[] response -> response
    com.ab.http.AbHttpResponseListener responseListener -> responseListener
    void handleMessage(android.os.Message) -> handleMessage
com.ab.http.AbHttpResponseListener -> com.ab.http.AbHttpResponseListener:
    java.lang.String TAG -> TAG
    android.os.Handler mHandler -> mHandler
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onRetry() -> onRetry
    void onFailure(int,java.lang.String,java.lang.Throwable) -> onFailure
    void onProgress(int,int) -> onProgress
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void sendProgressMessage(int,int) -> sendProgressMessage
    void sendFailureMessage(int,java.lang.String,java.lang.Throwable) -> sendFailureMessage
    void sendRetryMessage() -> sendRetryMessage
    void sendMessage(android.os.Message) -> sendMessage
    android.os.Message obtainMessage(int,java.lang.Object) -> obtainMessage
    android.os.Handler getHandler() -> getHandler
    void setHandler(android.os.Handler) -> setHandler
com.ab.http.AbHttpUtil -> com.ab.http.AbHttpUtil:
    android.content.Context mContext -> mContext
    com.ab.http.AbHttpClient client -> client
    com.ab.http.AbHttpUtil mAbHttpUtil -> mAbHttpUtil
    int SUCCESS_MESSAGE -> SUCCESS_MESSAGE
    int FAILURE_MESSAGE -> FAILURE_MESSAGE
    int START_MESSAGE -> START_MESSAGE
    int FINISH_MESSAGE -> FINISH_MESSAGE
    int PROGRESS_MESSAGE -> PROGRESS_MESSAGE
    int RETRY_MESSAGE -> RETRY_MESSAGE
    com.ab.http.AbHttpUtil getInstance(android.content.Context) -> getInstance
    void get(java.lang.String,com.ab.http.AbHttpResponseListener) -> get
    void get(java.lang.String,com.ab.http.AbRequestParams,com.ab.http.AbHttpResponseListener) -> get
    void get(java.lang.String,com.ab.http.AbBinaryHttpResponseListener) -> get
    void get(java.lang.String,com.ab.http.AbRequestParams,com.ab.http.AbFileHttpResponseListener) -> get
    void post(java.lang.String,com.ab.http.AbHttpResponseListener) -> post
    void post(java.lang.String,com.ab.http.AbRequestParams,com.ab.http.AbHttpResponseListener) -> post
    void post(java.lang.String,com.ab.http.AbRequestParams,com.ab.http.AbFileHttpResponseListener) -> post
    void setTimeout(int) -> setTimeout
    void setDebug(boolean) -> setDebug
com.ab.http.AbMultipartEntity -> com.ab.http.AbMultipartEntity:
    java.lang.String TAG -> TAG
    java.lang.String APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    byte[] CR_LF -> CR_LF
    byte[] TRANSFER_ENCODING_BINARY -> TRANSFER_ENCODING_BINARY
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    java.lang.String boundary -> boundary
    byte[] boundaryLine -> boundaryLine
    byte[] boundaryEnd -> boundaryEnd
    java.util.List fileParts -> fileParts
    java.io.ByteArrayOutputStream out -> out
    com.ab.http.AbHttpResponseListener responseListener -> responseListener
    int bytesWritten -> bytesWritten
    int totalSize -> totalSize
    void addPart(java.lang.String,java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.io.File) -> addPart
    void addPart(java.lang.String,java.io.File,java.lang.String) -> addPart
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String) -> addPart
    byte[] createContentType(java.lang.String) -> createContentType
    byte[] createContentDisposition(java.lang.String) -> createContentDisposition
    byte[] createContentDisposition(java.lang.String,java.lang.String) -> createContentDisposition
    void updateProgress(int) -> updateProgress
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    byte[] access$0(com.ab.http.AbMultipartEntity) -> access$0
    byte[] access$1(com.ab.http.AbMultipartEntity,java.lang.String,java.lang.String) -> access$1
    byte[] access$2(com.ab.http.AbMultipartEntity,java.lang.String) -> access$2
    byte[] access$3() -> access$3
    byte[] access$4() -> access$4
    void access$5(com.ab.http.AbMultipartEntity,int) -> access$5
com.ab.http.AbMultipartEntity$FilePart -> com.ab.http.AbMultipartEntity$FilePart:
    java.io.File file -> file
    byte[] header -> header
    com.ab.http.AbMultipartEntity this$0 -> this$0
    byte[] createHeader(java.lang.String,java.lang.String,java.lang.String) -> createHeader
    long getTotalLength() -> getTotalLength
    void writeTo(java.io.OutputStream) -> writeTo
com.ab.http.AbRequestParams -> com.ab.http.AbRequestParams:
    java.lang.String TAG -> TAG
    java.util.concurrent.ConcurrentHashMap urlParams -> urlParams
    java.util.concurrent.ConcurrentHashMap fileParams -> fileParams
    void init() -> init
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.File,java.lang.String) -> put
    void put(java.lang.String,java.io.File) -> put
    void remove(java.lang.String) -> remove
    java.lang.String toString() -> toString
    java.util.List getParamsList() -> getParamsList
    java.lang.String getParamString() -> getParamString
    org.apache.http.HttpEntity getEntity(com.ab.http.AbHttpResponseListener) -> getEntity
    org.apache.http.HttpEntity createFormEntity() -> createFormEntity
    org.apache.http.HttpEntity createMultipartEntity(com.ab.http.AbHttpResponseListener) -> createMultipartEntity
    java.util.concurrent.ConcurrentHashMap getUrlParams() -> getUrlParams
    void setUrlParams(java.util.concurrent.ConcurrentHashMap) -> setUrlParams
com.ab.http.AbRequestParams$FileWrapper -> com.ab.http.AbRequestParams$FileWrapper:
    java.io.File file -> file
    java.lang.String contentType -> contentType
com.ab.http.AbStringHttpResponseListener -> com.ab.http.AbStringHttpResponseListener:
    java.lang.String TAG -> TAG
    void onSuccess(int,java.lang.String) -> onSuccess
    void sendSuccessMessage(int,java.lang.String) -> sendSuccessMessage
com.ab.model.AbDisplayMetrics -> com.ab.model.AbDisplayMetrics:
    int displayWidth -> displayWidth
    int displayHeight -> displayHeight
    int widthPixels -> widthPixels
    int heightPixels -> heightPixels
    float density -> density
    float scaledDensity -> scaledDensity
com.ab.model.AbMenuItem -> com.ab.model.AbMenuItem:
    int id -> id
    int iconId -> iconId
    java.lang.String text -> text
    java.lang.String mark -> mark
    int getId() -> getId
    void setId(int) -> setId
    int getIconId() -> getIconId
    void setIconId(int) -> setIconId
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    java.lang.String getMark() -> getMark
    void setMark(java.lang.String) -> setMark
com.ab.model.AbResult -> com.ab.model.AbResult:
    int resultCode -> resultCode
    java.lang.String resultMsg -> resultMsg
    int getResultCode() -> getResultCode
    void setResultCode(int) -> setResultCode
    java.lang.String getResultMsg() -> getResultMsg
    void setResultMsg(java.lang.String) -> setResultMsg
com.ab.task.AbTask -> com.ab.task.AbTask:
    com.ab.task.AbTaskListener listener -> listener
    java.lang.Object result -> result
    com.ab.task.AbTaskItem doInBackground(com.ab.task.AbTaskItem[]) -> doInBackground
    void onCancelled() -> onCancelled
    void onPostExecute(com.ab.task.AbTaskItem) -> onPostExecute
    void onPreExecute() -> onPreExecute
    void onProgressUpdate(java.lang.Integer[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.ab.task.AbTaskItem -> com.ab.task.AbTaskItem:
    int position -> position
    com.ab.task.AbTaskListener listener -> listener
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    com.ab.task.AbTaskListener getListener() -> getListener
    void setListener(com.ab.task.AbTaskListener) -> setListener
com.ab.task.AbTaskListListener -> com.ab.task.AbTaskListListener:
    java.util.List getList() -> getList
    void update(java.util.List) -> update
com.ab.task.AbTaskListener -> com.ab.task.AbTaskListener:
    void get() -> get
    void update() -> update
    void onProgressUpdate(java.lang.Integer[]) -> onProgressUpdate
com.ab.task.AbTaskObjectListener -> com.ab.task.AbTaskObjectListener:
    java.lang.Object getObject() -> getObject
    void update(java.lang.Object) -> update
com.ab.task.AbTaskPool -> com.ab.task.AbTaskPool:
    java.lang.String TAG -> TAG
    boolean D -> D
    com.ab.task.AbTaskPool abTaskPool -> abTaskPool
    java.util.concurrent.Executor mExecutorService -> mExecutorService
    java.util.HashMap result -> result
    android.os.Handler handler -> handler
    com.ab.task.AbTaskPool getInstance() -> getInstance
    void execute(com.ab.task.AbTaskItem) -> execute
    java.util.HashMap access$0() -> access$0
    android.os.Handler access$1() -> access$1
com.ab.task.AbTaskPool$1 -> com.ab.task.AbTaskPool$1:
    void handleMessage(android.os.Message) -> handleMessage
com.ab.task.AbTaskPool$2 -> com.ab.task.AbTaskPool$2:
    com.ab.task.AbTaskPool this$0 -> this$0
    com.ab.task.AbTaskItem val$item -> val$item
    void run() -> run
com.ab.task.AbTaskQueue -> com.ab.task.AbTaskQueue:
    java.lang.String TAG -> TAG
    boolean D -> D
    java.util.LinkedList mAbTaskItemList -> mAbTaskItemList
    com.ab.task.AbTaskQueue abTaskQueue -> abTaskQueue
    boolean mQuit -> mQuit
    java.util.HashMap result -> result
    android.os.Handler handler -> handler
    com.ab.task.AbTaskQueue getInstance() -> getInstance
    void execute(com.ab.task.AbTaskItem) -> execute
    void execute(com.ab.task.AbTaskItem,boolean) -> execute
    void addTaskItem(com.ab.task.AbTaskItem) -> addTaskItem
    void run() -> run
    void cancel(boolean) -> cancel
    java.util.HashMap access$0() -> access$0
com.ab.task.AbTaskQueue$1 -> com.ab.task.AbTaskQueue$1:
    void handleMessage(android.os.Message) -> handleMessage
com.ab.task.AbThreadFactory -> com.ab.task.AbThreadFactory:
    java.util.concurrent.Executor mExecutorService -> mExecutorService
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory mThreadFactory -> mThreadFactory
    java.util.concurrent.BlockingQueue mPoolWorkQueue -> mPoolWorkQueue
    java.util.concurrent.Executor getExecutorService() -> getExecutorService
com.ab.task.AbThreadFactory$1 -> com.ab.task.AbThreadFactory$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.ab.util.AbAnimationUtil -> com.ab.util.AbAnimationUtil:
    long aniDurationMillis -> aniDurationMillis
    void largerView(android.view.View,float) -> largerView
    void restoreLargerView(android.view.View,float) -> restoreLargerView
    void scaleView(android.view.View,float) -> scaleView
    void playJumpAnimation(android.view.View,float) -> playJumpAnimation
    void playLandAnimation(android.view.View,float) -> playLandAnimation
    void access$0(com.ab.util.AbAnimationUtil,android.view.View,float) -> access$0
    void access$1(com.ab.util.AbAnimationUtil,android.view.View,float) -> access$1
com.ab.util.AbAnimationUtil$1 -> com.ab.util.AbAnimationUtil$1:
    com.ab.util.AbAnimationUtil this$0 -> this$0
    android.view.View val$view -> val$view
    float val$offsetY -> val$offsetY
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.ab.util.AbAnimationUtil$2 -> com.ab.util.AbAnimationUtil$2:
    com.ab.util.AbAnimationUtil this$0 -> this$0
    android.view.View val$view -> val$view
    float val$offsetY -> val$offsetY
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    com.ab.util.AbAnimationUtil access$0(com.ab.util.AbAnimationUtil$2) -> access$0
com.ab.util.AbAnimationUtil$2$1 -> com.ab.util.AbAnimationUtil$2$1:
    com.ab.util.AbAnimationUtil$2 this$1 -> this$1
    android.view.View val$view -> val$view
    float val$offsetY -> val$offsetY
    void run() -> run
com.ab.util.AbAppUtil -> com.ab.util.AbAppUtil:
    void installApk(android.content.Context,java.io.File) -> installApk
    void uninstallApk(android.content.Context,java.lang.String) -> uninstallApk
    boolean isServiceRunning(android.content.Context,java.lang.String) -> isServiceRunning
    boolean stopRunningService(android.content.Context,java.lang.String) -> stopRunningService
    int getNumCores() -> getNumCores
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
    boolean isGpsEnabled(android.content.Context) -> isGpsEnabled
    boolean isWifiEnabled(android.content.Context) -> isWifiEnabled
    boolean isWifi(android.content.Context) -> isWifi
    boolean is3G(android.content.Context) -> is3G
    void setDebug(boolean) -> setDebug
    void prepareLog() -> prepareLog
    void logD(java.lang.String,java.lang.String) -> logD
    boolean importDatabase(android.content.Context,java.lang.String,int) -> importDatabase
    com.ab.model.AbDisplayMetrics getDisplayMetrics(android.content.Context) -> getDisplayMetrics
    void showSoftInput(android.content.Context) -> showSoftInput
    void closeSoftInput(android.content.Context) -> closeSoftInput
com.ab.util.AbAppUtil$1 -> com.ab.util.AbAppUtil$1:
    boolean accept(java.io.File) -> accept
com.ab.util.AbBase64 -> com.ab.util.AbBase64:
    char[] base64EncodeChars -> base64EncodeChars
    byte[] base64DecodeChars -> base64DecodeChars
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String,java.lang.String,int) -> encode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
com.ab.util.AbDateUtil -> com.ab.util.AbDateUtil:
    java.lang.String TAG -> TAG
    boolean D -> D
    java.lang.String dateFormatYMDHMS -> dateFormatYMDHMS
    java.lang.String dateFormatYMD -> dateFormatYMD
    java.lang.String dateFormatYM -> dateFormatYM
    java.lang.String dateFormatYMDHM -> dateFormatYMDHM
    java.lang.String dateFormatMD -> dateFormatMD
    java.lang.String dateFormatHMS -> dateFormatHMS
    java.lang.String dateFormatHM -> dateFormatHM
    java.lang.String AM -> AM
    java.lang.String PM -> PM
    java.util.Date getDateByFormat(java.lang.String,java.lang.String) -> getDateByFormat
    java.util.Date getDateByOffset(java.util.Date,int,int) -> getDateByOffset
    java.lang.String getStringByOffset(java.lang.String,java.lang.String,int,int) -> getStringByOffset
    java.lang.String getStringByOffset(java.util.Date,java.lang.String,int,int) -> getStringByOffset
    java.lang.String getStringByFormat(java.util.Date,java.lang.String) -> getStringByFormat
    java.lang.String getStringByFormat(java.lang.String,java.lang.String) -> getStringByFormat
    java.lang.String getStringByFormat(long,java.lang.String) -> getStringByFormat
    java.lang.String getCurrentDate(java.lang.String) -> getCurrentDate
    java.lang.String getCurrentDateByOffset(java.lang.String,int,int) -> getCurrentDateByOffset
    int getOffectDay(long,long) -> getOffectDay
    int getOffectHour(long,long) -> getOffectHour
    int getOffectMinutes(long,long) -> getOffectMinutes
    java.lang.String getFirstDayOfWeek(java.lang.String) -> getFirstDayOfWeek
    java.lang.String getLastDayOfWeek(java.lang.String) -> getLastDayOfWeek
    java.lang.String getDayOfWeek(java.lang.String,int) -> getDayOfWeek
    java.lang.String getFirstDayOfMonth(java.lang.String) -> getFirstDayOfMonth
    java.lang.String getLastDayOfMonth(java.lang.String) -> getLastDayOfMonth
    long getFirstTimeOfDay() -> getFirstTimeOfDay
    long getLastTimeOfDay() -> getLastTimeOfDay
    boolean isLeapYear(int) -> isLeapYear
    java.lang.String formatDateStr2Desc(java.lang.String,java.lang.String) -> formatDateStr2Desc
    java.lang.String getWeekNumber(java.lang.String,java.lang.String) -> getWeekNumber
    java.lang.String getTimeQuantum(java.lang.String,java.lang.String) -> getTimeQuantum
    java.lang.String getTimeDescription(long) -> getTimeDescription
    void main(java.lang.String[]) -> main
com.ab.util.AbFileUtil -> com.ab.util.AbFileUtil:
    java.lang.String TAG -> TAG
    boolean D -> D
    java.lang.String downPathRootDir -> downPathRootDir
    java.lang.String downPathImageDir -> downPathImageDir
    java.lang.String downPathFileDir -> downPathFileDir
    int MB -> MB
    java.lang.String imageDownFullDir -> imageDownFullDir
    java.lang.String fileDownFullDir -> fileDownFullDir
    int freeSdSpaceNeededToCache -> freeSdSpaceNeededToCache
    java.lang.String downFileToSD(java.lang.String,java.lang.String) -> downFileToSD
    android.graphics.Bitmap getBitmapFromSDCache(java.lang.String,int,int,int) -> getBitmapFromSDCache
    android.graphics.Bitmap getBitmapFromSD(java.io.File,int,int,int) -> getBitmapFromSD
    android.graphics.Bitmap getBitmapFormByte(byte[],java.lang.String,int,int,int) -> getBitmapFormByte
    android.graphics.Bitmap getBitmapFormURL(java.lang.String,int,int,int) -> getBitmapFormURL
    android.graphics.Bitmap getBitmapFormSrc(java.lang.String) -> getBitmapFormSrc
    android.graphics.Bitmap getBitmapFromSD(java.io.File) -> getBitmapFromSD
    int getContentLengthFormUrl(java.lang.String) -> getContentLengthFormUrl
    java.lang.String getRealFileNameFromUrl(java.lang.String) -> getRealFileNameFromUrl
    java.lang.String getRealFileName(java.net.HttpURLConnection) -> getRealFileName
    java.lang.String getRealFileName(org.apache.http.HttpResponse) -> getRealFileName
    java.lang.String getCacheFileNameFromUrl(java.lang.String) -> getCacheFileNameFromUrl
    java.lang.String getCacheFileNameFromUrl(java.lang.String,org.apache.http.HttpResponse) -> getCacheFileNameFromUrl
    java.lang.String getCacheFileNameFromUrl(java.lang.String,java.net.HttpURLConnection) -> getCacheFileNameFromUrl
    java.lang.String getMIMEFromUrl(java.lang.String,java.net.HttpURLConnection) -> getMIMEFromUrl
    java.lang.String getMIMEFromUrl(java.lang.String,org.apache.http.HttpResponse) -> getMIMEFromUrl
    byte[] getByteArrayFromSD(java.lang.String) -> getByteArrayFromSD
    void writeByteArrayToSD(java.lang.String,byte[],boolean) -> writeByteArrayToSD
    boolean isCanUseSD() -> isCanUseSD
    java.lang.String getDownPathImageDir() -> getDownPathImageDir
    void setDownPathImageDir(java.lang.String) -> setDownPathImageDir
    java.lang.String getDownPathFileDir() -> getDownPathFileDir
    void setDownPathFileDir(java.lang.String) -> setDownPathFileDir
    void initImageDownFullDir() -> initImageDownFullDir
    void initFileDownFullDir() -> initFileDownFullDir
    boolean initFileCache() -> initFileCache
    boolean freeCacheFiles() -> freeCacheFiles
    int freeSpaceOnSD() -> freeSpaceOnSD
    int getFreeSdSpaceNeededToCache() -> getFreeSdSpaceNeededToCache
    void setFreeSdSpaceNeededToCache(int) -> setFreeSdSpaceNeededToCache
    boolean removeAllFileCache() -> removeAllFileCache
    java.lang.String readAssetsByName(android.content.Context,java.lang.String,java.lang.String) -> readAssetsByName
    java.lang.String readRawByName(android.content.Context,int,java.lang.String) -> readRawByName
    java.lang.String getImageDownFullDir() -> getImageDownFullDir
    void setImageDownFullDir(java.lang.String) -> setImageDownFullDir
    java.lang.String getFileDownFullDir() -> getFileDownFullDir
    void setFileDownFullDir(java.lang.String) -> setFileDownFullDir
com.ab.util.AbFileUtil$FileLastModifSort -> com.ab.util.AbFileUtil$FileLastModifSort:
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.ab.util.AbGraphical -> com.ab.util.AbGraphical:
    int subStringLength(java.lang.String,int,android.text.TextPaint) -> subStringLength
    float getStringWidth(java.lang.String,android.text.TextPaint) -> getStringWidth
    float getDesiredWidth(java.lang.String,android.text.TextPaint) -> getDesiredWidth
    java.util.List getDrawRowStr(java.lang.String,int,android.text.TextPaint) -> getDrawRowStr
    int getDrawRowCount(java.lang.String,int,android.text.TextPaint) -> getDrawRowCount
    int drawText(android.graphics.Canvas,java.lang.String,int,android.text.TextPaint,int,int) -> drawText
com.ab.util.AbImageUtil -> com.ab.util.AbImageUtil:
    java.lang.String TAG -> TAG
    boolean D -> D
    int CUTIMG -> CUTIMG
    int SCALEIMG -> SCALEIMG
    int ORIGINALIMG -> ORIGINALIMG
    android.graphics.Bitmap getBitmapFormURL(java.lang.String,int,int,int) -> getBitmapFormURL
    android.graphics.Bitmap originalImg(java.io.File) -> originalImg
    android.graphics.Bitmap scaleImg(java.io.File,int,int) -> scaleImg
    android.graphics.Bitmap scaleImg(android.graphics.Bitmap,int,int) -> scaleImg
    android.graphics.Bitmap scaleImg(android.graphics.Bitmap,float) -> scaleImg
    android.graphics.Bitmap cutImg(java.io.File,int,int) -> cutImg
    android.graphics.Bitmap cutImg(android.graphics.Bitmap,int,int) -> cutImg
    android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable) -> drawableToBitmap
    android.graphics.drawable.Drawable bitmapToDrawable(android.graphics.Bitmap) -> bitmapToDrawable
    android.graphics.drawable.TransitionDrawable bitmapToTransitionDrawable(android.graphics.Bitmap) -> bitmapToTransitionDrawable
    android.graphics.drawable.TransitionDrawable drawableToTransitionDrawable(android.graphics.drawable.Drawable) -> drawableToTransitionDrawable
    byte[] bitmap2Bytes(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,boolean) -> bitmap2Bytes
    int getByteCount(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat) -> getByteCount
    android.graphics.Bitmap bytes2Bimap(byte[]) -> bytes2Bimap
    android.graphics.Bitmap imageView2Bitmap(android.widget.ImageView) -> imageView2Bitmap
    android.graphics.drawable.Drawable view2Drawable(android.view.View) -> view2Drawable
    android.graphics.Bitmap view2Bitmap(android.view.View) -> view2Bitmap
    byte[] view2Bytes(android.view.View,android.graphics.Bitmap$CompressFormat) -> view2Bytes
    android.graphics.Bitmap rotateBitmap(android.graphics.Bitmap,float) -> rotateBitmap
    android.graphics.Bitmap rotateBitmapTranslate(android.graphics.Bitmap,float) -> rotateBitmapTranslate
    android.graphics.Bitmap toRoundBitmap(android.graphics.Bitmap) -> toRoundBitmap
    android.graphics.Bitmap toReflectionBitmap(android.graphics.Bitmap) -> toReflectionBitmap
    void releaseBitmap(android.graphics.Bitmap) -> releaseBitmap
    void releaseBitmapArray(android.graphics.Bitmap[]) -> releaseBitmapArray
    java.lang.String getHashCode(android.graphics.Bitmap) -> getHashCode
    java.lang.String getDCTHashCode(android.graphics.Bitmap) -> getDCTHashCode
    int[] getColorHistogram(android.graphics.Bitmap) -> getColorHistogram
    int hammingDistance(java.lang.String,java.lang.String) -> hammingDistance
    int rgbToGray(int) -> rgbToGray
    void main(java.lang.String[]) -> main
com.ab.util.AbMathUtil -> com.ab.util.AbMathUtil:
    java.math.BigDecimal round(double,int) -> round
    java.lang.String byte2HexStr(byte[],int) -> byte2HexStr
    char binaryToHex(int) -> binaryToHex
    int[][] arrayToMatrix(int[],int,int) -> arrayToMatrix
    double[] matrixToArray(double[][]) -> matrixToArray
    double[] intToDoubleArray(int[]) -> intToDoubleArray
    double[][] intToDoubleMatrix(int[][]) -> intToDoubleMatrix
    int average(int[]) -> average
    int average(double[]) -> average
com.ab.util.AbMd5 -> com.ab.util.AbMd5:
    java.lang.String MD5(java.lang.String) -> MD5
    void main(java.lang.String[]) -> main
com.ab.util.AbStrUtil -> com.ab.util.AbStrUtil:
    java.lang.String parseEmpty(java.lang.String) -> parseEmpty
    boolean isEmpty(java.lang.String) -> isEmpty
    int chineseLength(java.lang.String) -> chineseLength
    int strLength(java.lang.String) -> strLength
    int subStringLength(java.lang.String,int) -> subStringLength
    java.lang.Boolean isMobileNo(java.lang.String) -> isMobileNo
    java.lang.Boolean isNumberLetter(java.lang.String) -> isNumberLetter
    java.lang.Boolean isNumber(java.lang.String) -> isNumber
    java.lang.Boolean isEmail(java.lang.String) -> isEmail
    java.lang.Boolean isChinese(java.lang.String) -> isChinese
    java.lang.Boolean isContainChinese(java.lang.String) -> isContainChinese
    java.lang.String convertStreamToString(java.io.InputStream) -> convertStreamToString
    java.lang.String dateTimeFormat(java.lang.String) -> dateTimeFormat
    java.lang.String strFormat2(java.lang.String) -> strFormat2
    java.lang.String cutString(java.lang.String,int) -> cutString
    java.lang.String cutString(java.lang.String,int,java.lang.String) -> cutString
    java.lang.String cutStringFromChar(java.lang.String,java.lang.String,int) -> cutStringFromChar
    int strlen(java.lang.String,java.lang.String) -> strlen
    java.lang.String getSizeDesc(long) -> getSizeDesc
    long ip2int(java.lang.String) -> ip2int
    void main(java.lang.String[]) -> main
com.ab.util.AbViewUtil -> com.ab.util.AbViewUtil:
    void setAbsListViewHeight(android.widget.AbsListView,int,int) -> setAbsListViewHeight
    int getAbsListViewHeight(android.widget.AbsListView,int,int) -> getAbsListViewHeight
    void measureView(android.view.View) -> measureView
    int dip2px(android.content.Context,float) -> dip2px
    int px2dip(android.content.Context,float) -> px2dip
    int resize(android.content.Context,float) -> resize
    int resize(int,int,float) -> resize
    float getDipSize(android.content.Context,float) -> getDipSize
    float getDipSize(float) -> getDipSize
    void setPadding(android.content.Context,android.view.View,int,int,int,int) -> setPadding
    void setMargin(android.content.Context,android.view.View,int,int,int,int) -> setMargin
com.ab.util.dct.DCT -> com.ab.util.dct.DCT:
    double C1 -> C1
    double C2 -> C2
    double C3 -> C3
    double C4 -> C4
    double C5 -> C5
    double C6 -> C6
    double C7 -> C7
com.ab.util.dct.FDCT -> com.ab.util.dct.FDCT:
    double[][] fDctTransform(double[][]) -> fDctTransform
com.ab.util.dct.IFDCT -> com.ab.util.dct.IFDCT:
    double[][] iFDctTransform(double[][]) -> iFDctTransform
com.ab.view.app.AbAnalogClock -> com.ab.view.app.AbAnalogClock:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.text.format.Time mCalendar -> mCalendar
    android.graphics.drawable.Drawable mHourHand -> mHourHand
    android.graphics.drawable.Drawable mMinuteHand -> mMinuteHand
    android.graphics.drawable.Drawable mSecondHand -> mSecondHand
    android.graphics.drawable.Drawable mDial -> mDial
    int mDialWidth -> mDialWidth
    int mDialHeight -> mDialHeight
    boolean mAttached -> mAttached
    float mMinutes -> mMinutes
    float mHour -> mHour
    float mSecond -> mSecond
    android.os.Handler mHandler -> mHandler
    boolean mChanged -> mChanged
    android.content.BroadcastReceiver mIntentReceiver -> mIntentReceiver
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onTimeChanged() -> onTimeChanged
    void updateContentDescription(android.text.format.Time) -> updateContentDescription
    void access$0(com.ab.view.app.AbAnalogClock,android.text.format.Time) -> access$0
    void access$1(com.ab.view.app.AbAnalogClock) -> access$1
com.ab.view.app.AbAnalogClock$1 -> com.ab.view.app.AbAnalogClock$1:
    com.ab.view.app.AbAnalogClock this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.ab.view.app.AbAnalogClock$2 -> com.ab.view.app.AbAnalogClock$2:
    com.ab.view.app.AbAnalogClock this$0 -> this$0
    void run() -> run
com.ab.view.app.AbCalendar -> com.ab.view.app.AbCalendar:
    android.text.format.Time mCalendar -> mCalendar
    android.graphics.drawable.Drawable mCaleBg -> mCaleBg
    android.graphics.drawable.Drawable mCaleDot -> mCaleDot
    android.graphics.Point mPosYear -> mPosYear
    java.util.List dArrayYear -> dArrayYear
    android.graphics.Point mPosMonth -> mPosMonth
    java.util.List dArrayMonth -> dArrayMonth
    android.graphics.Point mPosDate -> mPosDate
    java.util.List dArrayDate -> dArrayDate
    android.graphics.Point mPosWeek -> mPosWeek
    java.util.List dArrayWeek -> dArrayWeek
    int mBgWidth -> mBgWidth
    int mBgHeight -> mBgHeight
    float mDateTextSize -> mDateTextSize
    android.content.BroadcastReceiver dateChangedReceiver -> dateChangedReceiver
    boolean mAttached -> mAttached
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    float getDateTextSize() -> getDateTextSize
    void setDateTextSize(float) -> setDateTextSize
    void access$0(com.ab.view.app.AbCalendar,android.text.format.Time) -> access$0
com.ab.view.app.AbCalendar$1 -> com.ab.view.app.AbCalendar$1:
    com.ab.view.app.AbCalendar this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.ab.view.app.AbCameraView -> com.ab.view.app.AbCameraView:
    android.view.SurfaceHolder surfaceHolder -> surfaceHolder
    android.hardware.Camera camera -> camera
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
com.ab.view.app.AbCompassView -> com.ab.view.app.AbCompassView:
    android.graphics.drawable.Drawable mCompassDrawable -> mCompassDrawable
    int w -> w
    int h -> h
    float mDirection -> mDirection
    float posCompassX -> posCompassX
    float posCompassY -> posCompassY
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawPictures(android.graphics.Canvas) -> drawPictures
    void onMeasure(int,int) -> onMeasure
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    float getDirection() -> getDirection
    void setDirection(float) -> setDirection
    void setCompassDrawable(android.graphics.drawable.Drawable) -> setCompassDrawable
com.ab.view.app.AbFocusView -> com.ab.view.app.AbFocusView:
    android.graphics.drawable.Drawable selectorDrawable -> selectorDrawable
    int selectorResourse -> selectorResourse
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    android.graphics.drawable.Drawable getSelectorDrawable() -> getSelectorDrawable
    void setSelectorDrawable(android.graphics.drawable.Drawable) -> setSelectorDrawable
    int getSelectorResourse() -> getSelectorResourse
    void setSelectorResourse(int) -> setSelectorResourse
com.ab.view.app.AbMonitorView -> com.ab.view.app.AbMonitorView:
    java.lang.String TAG -> TAG
    boolean D -> D
    long mStartTime -> mStartTime
    int mCounter -> mCounter
    int mFps -> mFps
    android.graphics.Paint mPaint -> mPaint
    void onDraw(android.graphics.Canvas) -> onDraw
com.ab.view.app.AbNumberClock -> com.ab.view.app.AbNumberClock:
    android.text.format.Time mCalendar -> mCalendar
    android.graphics.drawable.Drawable mTimeBg -> mTimeBg
    android.graphics.drawable.Drawable mTimeColon -> mTimeColon
    java.util.List dTimeBmp -> dTimeBmp
    java.util.List dApmBmp -> dApmBmp
    int mTimeBgWidth -> mTimeBgWidth
    int mTimeBgHeight -> mTimeBgHeight
    boolean mAttached -> mAttached
    android.os.Handler mHandler -> mHandler
    java.lang.String mMinutes -> mMinutes
    java.lang.String mHour -> mHour
    java.lang.String mSecond -> mSecond
    android.content.BroadcastReceiver mIntentReceiver -> mIntentReceiver
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean get24HourMode() -> get24HourMode
    void onTimeChanged() -> onTimeChanged
    void updateContentDescription(android.text.format.Time) -> updateContentDescription
    void access$0(com.ab.view.app.AbNumberClock,android.text.format.Time) -> access$0
    void access$1(com.ab.view.app.AbNumberClock) -> access$1
com.ab.view.app.AbNumberClock$1 -> com.ab.view.app.AbNumberClock$1:
    com.ab.view.app.AbNumberClock this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.ab.view.app.AbNumberClock$2 -> com.ab.view.app.AbNumberClock$2:
    com.ab.view.app.AbNumberClock this$0 -> this$0
    void run() -> run
com.ab.view.app.AbPopoverView -> com.ab.view.app.AbPopoverView:
    int PopoverArrowDirectionUp -> PopoverArrowDirectionUp
    int PopoverArrowDirectionDown -> PopoverArrowDirectionDown
    int PopoverArrowDirectionLeft -> PopoverArrowDirectionLeft
    int PopoverArrowDirectionRight -> PopoverArrowDirectionRight
    int PopoverArrowDirectionAny -> PopoverArrowDirectionAny
    com.ab.view.app.AbPopoverView$PopoverViewListener popoverViewListener -> popoverViewListener
    android.widget.RelativeLayout popoverView -> popoverView
    android.view.ViewGroup superview -> superview
    android.graphics.Point contentSizeForViewInPopover -> contentSizeForViewInPopover
    android.graphics.Point realContentSize -> realContentSize
    java.util.Map possibleRects -> possibleRects
    boolean isAnimating -> isAnimating
    int fadeAnimationTime -> fadeAnimationTime
    android.graphics.Rect popoverLayoutRect -> popoverLayoutRect
    android.graphics.drawable.Drawable backgroundDrawable -> backgroundDrawable
    android.graphics.drawable.Drawable arrowUpDrawable -> arrowUpDrawable
    android.graphics.drawable.Drawable arrowDownDrawable -> arrowDownDrawable
    android.graphics.drawable.Drawable arrowLeftDrawable -> arrowLeftDrawable
    android.graphics.drawable.Drawable arrowRightDrawable -> arrowRightDrawable
    android.widget.ImageView arrowImageView -> arrowImageView
    android.view.View popoverContentView -> popoverContentView
    void initPopoverView() -> initPopoverView
    android.graphics.Rect getFrameForView(android.view.View) -> getFrameForView
    void addPopoverInRect(android.graphics.Rect) -> addPopoverInRect
    void initArrow(android.graphics.Rect,java.lang.Integer) -> initArrow
    android.graphics.Rect getRectForArrowUp(android.graphics.Rect) -> getRectForArrowUp
    android.graphics.Rect getRectForArrowDown(android.graphics.Rect) -> getRectForArrowDown
    android.graphics.Rect getRectForArrowRight(android.graphics.Rect) -> getRectForArrowRight
    android.graphics.Rect getRectForArrowLeft(android.graphics.Rect) -> getRectForArrowLeft
    void addAvailableRects(android.graphics.Rect,int) -> addAvailableRects
    java.lang.Integer getBestRect() -> getBestRect
    int getFadeAnimationTime() -> getFadeAnimationTime
    void setFadeAnimationTime(int) -> setFadeAnimationTime
    android.graphics.Point getContentSizeForViewInPopover() -> getContentSizeForViewInPopover
    void setContentSizeForViewInPopover(android.graphics.Point) -> setContentSizeForViewInPopover
    com.ab.view.app.AbPopoverView$PopoverViewListener getPopoverViewListener() -> getPopoverViewListener
    void setPopoverViewListener(com.ab.view.app.AbPopoverView$PopoverViewListener) -> setPopoverViewListener
    void showPopoverFromRectInViewGroup(android.view.ViewGroup,android.graphics.Rect,int,boolean) -> showPopoverFromRectInViewGroup
    void dissmissPopover(boolean) -> dissmissPopover
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    android.graphics.drawable.Drawable getBackgroundDrawable() -> getBackgroundDrawable
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    android.graphics.drawable.Drawable getArrowUpDrawable() -> getArrowUpDrawable
    void setArrowUpDrawable(android.graphics.drawable.Drawable) -> setArrowUpDrawable
    android.graphics.drawable.Drawable getArrowDownDrawable() -> getArrowDownDrawable
    void setArrowDownDrawable(android.graphics.drawable.Drawable) -> setArrowDownDrawable
    android.graphics.drawable.Drawable getArrowLeftDrawable() -> getArrowLeftDrawable
    void setArrowLeftDrawable(android.graphics.drawable.Drawable) -> setArrowLeftDrawable
    android.graphics.drawable.Drawable getArrowRightDrawable() -> getArrowRightDrawable
    void setArrowRightDrawable(android.graphics.drawable.Drawable) -> setArrowRightDrawable
    android.view.View getPopoverContentView() -> getPopoverContentView
    void setPopoverContentView(android.view.View) -> setPopoverContentView
    void access$0(com.ab.view.app.AbPopoverView,boolean) -> access$0
    com.ab.view.app.AbPopoverView$PopoverViewListener access$1(com.ab.view.app.AbPopoverView) -> access$1
    android.widget.RelativeLayout access$2(com.ab.view.app.AbPopoverView) -> access$2
    android.view.ViewGroup access$3(com.ab.view.app.AbPopoverView) -> access$3
com.ab.view.app.AbPopoverView$1 -> com.ab.view.app.AbPopoverView$1:
    com.ab.view.app.AbPopoverView this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.ab.view.app.AbPopoverView$2 -> com.ab.view.app.AbPopoverView$2:
    com.ab.view.app.AbPopoverView this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.ab.view.app.AbPopoverView$PopoverViewListener -> com.ab.view.app.AbPopoverView$PopoverViewListener:
    void popoverViewWillShow(com.ab.view.app.AbPopoverView) -> popoverViewWillShow
    void popoverViewDidShow(com.ab.view.app.AbPopoverView) -> popoverViewDidShow
    void popoverViewWillDismiss(com.ab.view.app.AbPopoverView) -> popoverViewWillDismiss
    void popoverViewDidDismiss(com.ab.view.app.AbPopoverView) -> popoverViewDidDismiss
com.ab.view.app.AbRotate3dAnimation -> com.ab.view.app.AbRotate3dAnimation:
    float mFromDegrees -> mFromDegrees
    float mToDegrees -> mToDegrees
    float mCenterX -> mCenterX
    float mCenterY -> mCenterY
    float mDepthZ -> mDepthZ
    boolean mReverse -> mReverse
    android.graphics.Camera mCamera -> mCamera
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.ab.view.app.AbRotate3dAnimation2 -> com.ab.view.app.AbRotate3dAnimation2:
    float mFromDegree -> mFromDegree
    float mToDegree -> mToDegree
    float mCenterX -> mCenterX
    float mCenterY -> mCenterY
    float mLeft -> mLeft
    float mTop -> mTop
    android.graphics.Camera mCamera -> mCamera
    java.lang.String TAG -> TAG
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.ab.view.calendar.CalendarCell -> com.ab.view.calendar.CalendarCell:
    int textSize -> textSize
    com.ab.view.listener.AbOnItemClickListener mOnItemClickListener -> mOnItemClickListener
    android.graphics.Paint pt -> pt
    android.graphics.RectF rect -> rect
    java.lang.String textDateValue -> textDateValue
    int iDateYear -> iDateYear
    int iDateMonth -> iDateMonth
    int iDateDay -> iDateDay
    boolean isSelected -> isSelected
    boolean isActiveMonth -> isActiveMonth
    boolean isToday -> isToday
    boolean bTouchedDown -> bTouchedDown
    boolean isHoliday -> isHoliday
    boolean hasRecord -> hasRecord
    int position -> position
    int ANIM_ALPHA_DURATION -> ANIM_ALPHA_DURATION
    int selectCellColor -> selectCellColor
    int bgColor -> bgColor
    int numberColor -> numberColor
    int cellColor -> cellColor
    int notActiveMonthColor -> notActiveMonthColor
    int todayColor -> todayColor
    java.util.Calendar getThisCellDate() -> getThisCellDate
    void setThisCellDate(int,int,int,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,int,boolean) -> setThisCellDate
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean IsViewFocused() -> IsViewFocused
    void drawDayView(android.graphics.Canvas,boolean) -> drawDayView
    void drawDayNumber(android.graphics.Canvas) -> drawDayNumber
    int getTextHeight() -> getTextHeight
    int getCellColor() -> getCellColor
    void setSelected(boolean) -> setSelected
    void setHasRecord(boolean) -> setHasRecord
    void setOnItemClickListener(com.ab.view.listener.AbOnItemClickListener) -> setOnItemClickListener
    void doItemClick() -> doItemClick
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void startAlphaAnimIn(android.view.View) -> startAlphaAnimIn
    void createReminder(android.graphics.Canvas,int) -> createReminder
    boolean isActiveMonth() -> isActiveMonth
com.ab.view.calendar.CalendarHeader -> com.ab.view.calendar.CalendarHeader:
    java.lang.String TAG -> TAG
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF rect -> rect
    int weekDay -> weekDay
    java.lang.String[] dayName -> dayName
    int width -> width
    int height -> height
    int cellWidth -> cellWidth
    int defaultTextColor -> defaultTextColor
    int specialTextColor -> specialTextColor
    int defaultTextSize -> defaultTextSize
    boolean defaultTextBold -> defaultTextBold
    boolean hasBg -> hasBg
    void setHeaderBackgroundResource(int) -> setHeaderBackgroundResource
    int getTextSize() -> getTextSize
    void setTextSize(int) -> setTextSize
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDayHeader(android.graphics.Canvas) -> drawDayHeader
    java.lang.String getWeekDayName(int) -> getWeekDayName
com.ab.view.calendar.CalendarView -> com.ab.view.calendar.CalendarView:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    android.widget.LinearLayout$LayoutParams layoutParamsFW -> layoutParamsFW
    android.widget.LinearLayout mLinearLayoutHeader -> mLinearLayoutHeader
    android.widget.LinearLayout mLinearLayoutContent -> mLinearLayoutContent
    com.ab.view.calendar.CalendarHeader mCalendarHeader -> mCalendarHeader
    int width -> width
    int height -> height
    int headerHeight -> headerHeight
    int rowHeight -> rowHeight
    int cellWidth -> cellWidth
    java.util.Calendar calStartDate -> calStartDate
    java.util.Calendar calToday -> calToday
    java.util.Calendar calSelected -> calSelected
    java.util.Calendar calCalendar -> calCalendar
    int currentMonth -> currentMonth
    int currentYear -> currentYear
    int firstDayOfWeek -> firstDayOfWeek
    java.util.ArrayList mCalendarCells -> mCalendarCells
    com.ab.view.listener.AbOnItemClickListener mOnItemClickListener -> mOnItemClickListener
    com.ab.view.listener.AbOnItemClickListener mOnDayCellClick -> mOnDayCellClick
    void initRow() -> initRow
    void initStartDateForMonth() -> initStartDateForMonth
    void updateCalendar() -> updateCalendar
    void initCalendar() -> initCalendar
    void setOnItemClickListener(com.ab.view.listener.AbOnItemClickListener) -> setOnItemClickListener
    void setHeaderHeight(int) -> setHeaderHeight
    void setHeaderTextSize(int) -> setHeaderTextSize
    void rebuildCalendar(java.util.Calendar) -> rebuildCalendar
    void setHeaderBackgroundResource(int) -> setHeaderBackgroundResource
    java.lang.String getStrDateAtPosition(int) -> getStrDateAtPosition
    int getCalendarCellSize() -> getCalendarCellSize
    java.util.ArrayList getCalendarCells() -> getCalendarCells
    java.lang.String getCalSelected() -> getCalSelected
    java.util.ArrayList access$0(com.ab.view.calendar.CalendarView) -> access$0
    java.util.Calendar access$1(com.ab.view.calendar.CalendarView) -> access$1
    com.ab.view.listener.AbOnItemClickListener access$2(com.ab.view.calendar.CalendarView) -> access$2
com.ab.view.calendar.CalendarView$1 -> com.ab.view.calendar.CalendarView$1:
    com.ab.view.calendar.CalendarView this$0 -> this$0
    void onClick(int) -> onClick
com.ab.view.carousel.CarouselAdapter -> com.ab.view.carousel.CarouselAdapter:
    int ITEM_VIEW_TYPE_IGNORE -> ITEM_VIEW_TYPE_IGNORE
    int ITEM_VIEW_TYPE_HEADER_OR_FOOTER -> ITEM_VIEW_TYPE_HEADER_OR_FOOTER
    int mFirstPosition -> mFirstPosition
    int mSpecificTop -> mSpecificTop
    int mSyncPosition -> mSyncPosition
    long mSyncRowId -> mSyncRowId
    long mSyncHeight -> mSyncHeight
    boolean mNeedSync -> mNeedSync
    int mSyncMode -> mSyncMode
    int mLayoutHeight -> mLayoutHeight
    int SYNC_SELECTED_POSITION -> SYNC_SELECTED_POSITION
    int SYNC_FIRST_POSITION -> SYNC_FIRST_POSITION
    int SYNC_MAX_DURATION_MILLIS -> SYNC_MAX_DURATION_MILLIS
    boolean mInLayout -> mInLayout
    com.ab.view.carousel.CarouselAdapter$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    com.ab.view.carousel.CarouselAdapter$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    com.ab.view.carousel.CarouselAdapter$OnItemLongClickListener mOnItemLongClickListener -> mOnItemLongClickListener
    boolean mDataChanged -> mDataChanged
    int mNextSelectedPosition -> mNextSelectedPosition
    long mNextSelectedRowId -> mNextSelectedRowId
    int mSelectedPosition -> mSelectedPosition
    long mSelectedRowId -> mSelectedRowId
    android.view.View mEmptyView -> mEmptyView
    int mItemCount -> mItemCount
    int mOldItemCount -> mOldItemCount
    int INVALID_POSITION -> INVALID_POSITION
    long INVALID_ROW_ID -> INVALID_ROW_ID
    int mOldSelectedPosition -> mOldSelectedPosition
    long mOldSelectedRowId -> mOldSelectedRowId
    boolean mDesiredFocusableState -> mDesiredFocusableState
    boolean mDesiredFocusableInTouchModeState -> mDesiredFocusableInTouchModeState
    com.ab.view.carousel.CarouselAdapter$SelectionNotifier mSelectionNotifier -> mSelectionNotifier
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    void setOnItemClickListener(com.ab.view.carousel.CarouselAdapter$OnItemClickListener) -> setOnItemClickListener
    com.ab.view.carousel.CarouselAdapter$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setOnItemLongClickListener(com.ab.view.carousel.CarouselAdapter$OnItemLongClickListener) -> setOnItemLongClickListener
    com.ab.view.carousel.CarouselAdapter$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(com.ab.view.carousel.CarouselAdapter$OnItemSelectedListener) -> setOnItemSelectedListener
    com.ab.view.carousel.CarouselAdapter$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getPositionForView(android.view.View) -> getPositionForView
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> isInFilterMode
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> checkFocus
    void updateEmptyStatus(boolean) -> updateEmptyStatus
    java.lang.Object getItemAtPosition(int) -> getItemAtPosition
    long getItemIdAtPosition(int) -> getItemIdAtPosition
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void selectionChanged() -> selectionChanged
    void fireOnSelected() -> fireOnSelected
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> handleDataChanged
    void checkSelectionChanged() -> checkSelectionChanged
    int findSyncPosition() -> findSyncPosition
    int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> rememberSyncState
    void access$0(com.ab.view.carousel.CarouselAdapter,android.os.Parcelable) -> access$0
    android.os.Parcelable access$1(com.ab.view.carousel.CarouselAdapter) -> access$1
    void access$2(com.ab.view.carousel.CarouselAdapter) -> access$2
com.ab.view.carousel.CarouselAdapter$AdapterContextMenuInfo -> com.ab.view.carousel.CarouselAdapter$AdapterContextMenuInfo:
    android.view.View targetView -> targetView
    int position -> position
    long id -> id
com.ab.view.carousel.CarouselAdapter$AdapterDataSetObserver -> com.ab.view.carousel.CarouselAdapter$AdapterDataSetObserver:
    android.os.Parcelable mInstanceState -> mInstanceState
    com.ab.view.carousel.CarouselAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void clearSavedState() -> clearSavedState
com.ab.view.carousel.CarouselAdapter$OnItemClickListener -> com.ab.view.carousel.CarouselAdapter$OnItemClickListener:
    void onItemClick(com.ab.view.carousel.CarouselAdapter,android.view.View,int,long) -> onItemClick
com.ab.view.carousel.CarouselAdapter$OnItemLongClickListener -> com.ab.view.carousel.CarouselAdapter$OnItemLongClickListener:
    boolean onItemLongClick(com.ab.view.carousel.CarouselAdapter,android.view.View,int,long) -> onItemLongClick
com.ab.view.carousel.CarouselAdapter$OnItemSelectedListener -> com.ab.view.carousel.CarouselAdapter$OnItemSelectedListener:
    void onItemSelected(com.ab.view.carousel.CarouselAdapter,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.ab.view.carousel.CarouselAdapter) -> onNothingSelected
com.ab.view.carousel.CarouselAdapter$SelectionNotifier -> com.ab.view.carousel.CarouselAdapter$SelectionNotifier:
    com.ab.view.carousel.CarouselAdapter this$0 -> this$0
    void run() -> run
com.ab.view.carousel.CarouselImageAdapter -> com.ab.view.carousel.CarouselImageAdapter:
    android.content.Context mContext -> mContext
    java.util.List mDrawables -> mDrawables
    boolean mReflected -> mReflected
    com.ab.view.carousel.CarouselItemImage[] mCarouselImageViews -> mCarouselImageViews
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setImages() -> setImages
com.ab.view.carousel.CarouselImageView -> com.ab.view.carousel.CarouselImageView:
    java.lang.String TAG -> TAG
    boolean localLOGV -> localLOGV
    int MIN_QUANTITY -> MIN_QUANTITY
    int MAX_QUANTITY -> MAX_QUANTITY
    float MAX_THETA -> MAX_THETA
    int SCROLL_TO_FLING_UNCERTAINTY_TIMEOUT -> SCROLL_TO_FLING_UNCERTAINTY_TIMEOUT
    com.ab.view.carousel.CarouselAdapter$AdapterContextMenuInfo mContextMenuInfo -> mContextMenuInfo
    int mAnimationDuration -> mAnimationDuration
    android.graphics.Camera mCamera -> mCamera
    java.lang.Runnable mDisableSuppressSelectionChangedRunnable -> mDisableSuppressSelectionChangedRunnable
    int mDownTouchPosition -> mDownTouchPosition
    android.view.View mDownTouchView -> mDownTouchView
    com.ab.view.carousel.CarouselImageView$FlingRotateRunnable mFlingRunnable -> mFlingRunnable
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    int mGravity -> mGravity
    boolean mIsFirstScroll -> mIsFirstScroll
    int mMaxQuantity -> mMaxQuantity
    int mMinQuantity -> mMinQuantity
    boolean mReceivedInvokeKeyDown -> mReceivedInvokeKeyDown
    android.view.View mSelectedChild -> mSelectedChild
    boolean mShouldCallbackDuringFling -> mShouldCallbackDuringFling
    boolean mShouldCallbackOnUnselectedItemClick -> mShouldCallbackOnUnselectedItemClick
    boolean mShouldStopFling -> mShouldStopFling
    boolean mSuppressSelectionChanged -> mSuppressSelectionChanged
    float mTheta -> mTheta
    boolean mUseReflection -> mUseReflection
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    boolean showContextMenu() -> showContextMenu
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void dispatchSetSelected(boolean) -> dispatchSetSelected
    void dispatchSetPressed(boolean) -> dispatchSetPressed
    boolean showContextMenuForChild(android.view.View) -> showContextMenuForChild
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation) -> getChildStaticTransformation
    void layout(int,boolean) -> layout
    void onLayout(boolean,int,int,int,int) -> onLayout
    void selectionChanged() -> selectionChanged
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    void Calculate3DPosition(com.ab.view.carousel.CarouselItemImage,int,float) -> Calculate3DPosition
    int calculateTop(android.view.View,boolean) -> calculateTop
    boolean dispatchLongPress(android.view.View,int,long) -> dispatchLongPress
    void dispatchPress(android.view.View) -> dispatchPress
    void dispatchUnpress() -> dispatchUnpress
    int getCenterOfGallery() -> getCenterOfGallery
    int getCenterOfView(android.view.View) -> getCenterOfView
    float getLimitedMotionScrollAmount(boolean,float) -> getLimitedMotionScrollAmount
    int getLimitedMotionScrollAmount(boolean,int) -> getLimitedMotionScrollAmount
    void makeAndAddView(int,float) -> makeAndAddView
    void onCancel() -> onCancel
    void onFinishedMovement() -> onFinishedMovement
    void onUp() -> onUp
    void scrollIntoSlots() -> scrollIntoSlots
    void scrollToChild(int) -> scrollToChild
    void setCallbackDuringFling(boolean) -> setCallbackDuringFling
    void setCallbackOnUnselectedItemClick(boolean) -> setCallbackOnUnselectedItemClick
    void setAnimationDuration(int) -> setAnimationDuration
    void setGravity(int) -> setGravity
    void setUpChild(com.ab.view.carousel.CarouselItemImage,int,float) -> setUpChild
    void trackMotionScroll(float) -> trackMotionScroll
    void updateSelectedItemMetadata() -> updateSelectedItemMetadata
    void access$0(com.ab.view.carousel.CarouselImageView,boolean) -> access$0
    int access$1(com.ab.view.carousel.CarouselImageView) -> access$1
    void access$2(com.ab.view.carousel.CarouselImageView) -> access$2
    void access$3(com.ab.view.carousel.CarouselImageView,boolean) -> access$3
    boolean access$4(com.ab.view.carousel.CarouselImageView) -> access$4
    void access$5(com.ab.view.carousel.CarouselImageView) -> access$5
com.ab.view.carousel.CarouselImageView$1 -> com.ab.view.carousel.CarouselImageView$1:
    com.ab.view.carousel.CarouselImageView this$0 -> this$0
    void run() -> run
com.ab.view.carousel.CarouselImageView$2 -> com.ab.view.carousel.CarouselImageView$2:
    com.ab.view.carousel.CarouselImageView this$0 -> this$0
    void run() -> run
com.ab.view.carousel.CarouselImageView$3 -> com.ab.view.carousel.CarouselImageView$3:
    com.ab.view.carousel.CarouselImageView this$0 -> this$0
    int compare(com.ab.view.carousel.CarouselItemImage,com.ab.view.carousel.CarouselItemImage) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.ab.view.carousel.CarouselImageView$FlingRotateRunnable -> com.ab.view.carousel.CarouselImageView$FlingRotateRunnable:
    com.ab.view.carousel.Rotator mRotator -> mRotator
    float mLastFlingAngle -> mLastFlingAngle
    com.ab.view.carousel.CarouselImageView this$0 -> this$0
    void startCommon() -> startCommon
    void startUsingVelocity(float) -> startUsingVelocity
    void startUsingDistance(float) -> startUsingDistance
    void stop(boolean) -> stop
    void endFling(boolean) -> endFling
    void run() -> run
    com.ab.view.carousel.Rotator access$0(com.ab.view.carousel.CarouselImageView$FlingRotateRunnable) -> access$0
com.ab.view.carousel.CarouselItemImage -> com.ab.view.carousel.CarouselItemImage:
    int index -> index
    float currentAngle -> currentAngle
    float itemX -> itemX
    float itemY -> itemY
    float itemZ -> itemZ
    boolean drawn -> drawn
    android.graphics.Matrix mCIMatrix -> mCIMatrix
    void setIndex(int) -> setIndex
    int getIndex() -> getIndex
    void setCurrentAngle(float) -> setCurrentAngle
    float getCurrentAngle() -> getCurrentAngle
    int compareTo(com.ab.view.carousel.CarouselItemImage) -> compareTo
    void setItemX(float) -> setItemX
    float getItemX() -> getItemX
    void setItemY(float) -> setItemY
    float getItemY() -> getItemY
    void setItemZ(float) -> setItemZ
    float getItemZ() -> getItemZ
    void setDrawn(boolean) -> setDrawn
    boolean isDrawn() -> isDrawn
    android.graphics.Matrix getCIMatrix() -> getCIMatrix
    void setCIMatrix(android.graphics.Matrix) -> setCIMatrix
    int compareTo(java.lang.Object) -> compareTo
com.ab.view.carousel.CarouselItemView -> com.ab.view.carousel.CarouselItemView:
    android.widget.ImageView mImage -> mImage
    android.widget.TextView mText -> mText
    int index -> index
    float currentAngle -> currentAngle
    float itemX -> itemX
    float itemY -> itemY
    float itemZ -> itemZ
    boolean drawn -> drawn
    android.graphics.Matrix mCIMatrix -> mCIMatrix
    java.lang.String getName() -> getName
    void setIndex(int) -> setIndex
    int getIndex() -> getIndex
    void setCurrentAngle(float) -> setCurrentAngle
    float getCurrentAngle() -> getCurrentAngle
    int compareTo(com.ab.view.carousel.CarouselItemView) -> compareTo
    void setItemX(float) -> setItemX
    float getItemX() -> getItemX
    void setItemY(float) -> setItemY
    float getItemY() -> getItemY
    void setItemZ(float) -> setItemZ
    float getItemZ() -> getItemZ
    void setDrawn(boolean) -> setDrawn
    boolean isDrawn() -> isDrawn
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setText(java.lang.String) -> setText
    android.graphics.Matrix getCIMatrix() -> getCIMatrix
    void setCIMatrix(android.graphics.Matrix) -> setCIMatrix
    int compareTo(java.lang.Object) -> compareTo
com.ab.view.carousel.CarouselSpinner -> com.ab.view.carousel.CarouselSpinner:
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    int mHeightMeasureSpec -> mHeightMeasureSpec
    int mWidthMeasureSpec -> mWidthMeasureSpec
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    int mSelectionLeftPadding -> mSelectionLeftPadding
    int mSelectionTopPadding -> mSelectionTopPadding
    int mSelectionRightPadding -> mSelectionRightPadding
    int mSelectionBottomPadding -> mSelectionBottomPadding
    android.graphics.Rect mSpinnerPadding -> mSpinnerPadding
    com.ab.view.carousel.CarouselSpinner$RecycleBin mRecycler -> mRecycler
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    void initCarouselSpinner() -> initCarouselSpinner
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setSelection(int,boolean) -> setSelection
    void setSelectionInt(int,boolean) -> setSelectionInt
    void layout(int,boolean) -> layout
    void setSelection(int) -> setSelection
    void resetList() -> resetList
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> getChildHeight
    int getChildWidth(android.view.View) -> getChildWidth
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> recycleAllViews
    void requestLayout() -> requestLayout
    int getCount() -> getCount
    int pointToPositionView(int,int) -> pointToPositionView
    int pointToPositionImage(int,int) -> pointToPositionImage
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void access$2(com.ab.view.carousel.CarouselSpinner,android.view.View,boolean) -> access$2
com.ab.view.carousel.CarouselSpinner$RecycleBin -> com.ab.view.carousel.CarouselSpinner$RecycleBin:
    android.util.SparseArray mScrapHeap -> mScrapHeap
    com.ab.view.carousel.CarouselSpinner this$0 -> this$0
    void put(int,android.view.View) -> put
    android.view.View get(int) -> get
    void clear() -> clear
com.ab.view.carousel.CarouselSpinner$SavedState -> com.ab.view.carousel.CarouselSpinner$SavedState:
    long selectedId -> selectedId
    int position -> position
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.ab.view.carousel.CarouselSpinner$SavedState$1 -> com.ab.view.carousel.CarouselSpinner$SavedState$1:
    com.ab.view.carousel.CarouselSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.ab.view.carousel.CarouselSpinner$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.ab.view.carousel.CarouselView -> com.ab.view.carousel.CarouselView:
    java.lang.String TAG -> TAG
    boolean localLOGV -> localLOGV
    int MIN_QUANTITY -> MIN_QUANTITY
    int MAX_QUANTITY -> MAX_QUANTITY
    float MAX_THETA -> MAX_THETA
    int SCROLL_TO_FLING_UNCERTAINTY_TIMEOUT -> SCROLL_TO_FLING_UNCERTAINTY_TIMEOUT
    com.ab.view.carousel.CarouselAdapter$AdapterContextMenuInfo mContextMenuInfo -> mContextMenuInfo
    int mAnimationDuration -> mAnimationDuration
    android.graphics.Camera mCamera -> mCamera
    java.lang.Runnable mDisableSuppressSelectionChangedRunnable -> mDisableSuppressSelectionChangedRunnable
    int mDownTouchPosition -> mDownTouchPosition
    android.view.View mDownTouchView -> mDownTouchView
    com.ab.view.carousel.CarouselView$FlingRotateRunnable mFlingRunnable -> mFlingRunnable
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    int mGravity -> mGravity
    boolean mIsFirstScroll -> mIsFirstScroll
    int mMaxQuantity -> mMaxQuantity
    int mMinQuantity -> mMinQuantity
    boolean mReceivedInvokeKeyDown -> mReceivedInvokeKeyDown
    android.view.View mSelectedChild -> mSelectedChild
    boolean mShouldCallbackDuringFling -> mShouldCallbackDuringFling
    boolean mShouldCallbackOnUnselectedItemClick -> mShouldCallbackOnUnselectedItemClick
    boolean mShouldStopFling -> mShouldStopFling
    boolean mSuppressSelectionChanged -> mSuppressSelectionChanged
    float mTheta -> mTheta
    boolean mUseReflection -> mUseReflection
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    boolean showContextMenu() -> showContextMenu
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void dispatchSetSelected(boolean) -> dispatchSetSelected
    void dispatchSetPressed(boolean) -> dispatchSetPressed
    boolean showContextMenuForChild(android.view.View) -> showContextMenuForChild
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation) -> getChildStaticTransformation
    void layout(int,boolean) -> layout
    void onLayout(boolean,int,int,int,int) -> onLayout
    void selectionChanged() -> selectionChanged
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    void Calculate3DPosition(com.ab.view.carousel.CarouselItemView,int,float) -> Calculate3DPosition
    int calculateTop(android.view.View,boolean) -> calculateTop
    boolean dispatchLongPress(android.view.View,int,long) -> dispatchLongPress
    void dispatchPress(android.view.View) -> dispatchPress
    void dispatchUnpress() -> dispatchUnpress
    int getCenterOfGallery() -> getCenterOfGallery
    int getCenterOfView(android.view.View) -> getCenterOfView
    float getLimitedMotionScrollAmount(boolean,float) -> getLimitedMotionScrollAmount
    int getLimitedMotionScrollAmount(boolean,int) -> getLimitedMotionScrollAmount
    void makeAndAddView(int,float) -> makeAndAddView
    void onCancel() -> onCancel
    void onFinishedMovement() -> onFinishedMovement
    void onUp() -> onUp
    void scrollIntoSlots() -> scrollIntoSlots
    void scrollToChild(int) -> scrollToChild
    void setCallbackDuringFling(boolean) -> setCallbackDuringFling
    void setCallbackOnUnselectedItemClick(boolean) -> setCallbackOnUnselectedItemClick
    void setAnimationDuration(int) -> setAnimationDuration
    void setGravity(int) -> setGravity
    void setUpChild(com.ab.view.carousel.CarouselItemView,int,float) -> setUpChild
    void trackMotionScroll(float) -> trackMotionScroll
    void updateSelectedItemMetadata() -> updateSelectedItemMetadata
    void access$0(com.ab.view.carousel.CarouselView,boolean) -> access$0
    int access$1(com.ab.view.carousel.CarouselView) -> access$1
    void access$2(com.ab.view.carousel.CarouselView) -> access$2
    void access$3(com.ab.view.carousel.CarouselView,boolean) -> access$3
    boolean access$4(com.ab.view.carousel.CarouselView) -> access$4
    void access$5(com.ab.view.carousel.CarouselView) -> access$5
com.ab.view.carousel.CarouselView$1 -> com.ab.view.carousel.CarouselView$1:
    com.ab.view.carousel.CarouselView this$0 -> this$0
    void run() -> run
com.ab.view.carousel.CarouselView$2 -> com.ab.view.carousel.CarouselView$2:
    com.ab.view.carousel.CarouselView this$0 -> this$0
    void run() -> run
com.ab.view.carousel.CarouselView$3 -> com.ab.view.carousel.CarouselView$3:
    com.ab.view.carousel.CarouselView this$0 -> this$0
    int compare(com.ab.view.carousel.CarouselItemView,com.ab.view.carousel.CarouselItemView) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.ab.view.carousel.CarouselView$FlingRotateRunnable -> com.ab.view.carousel.CarouselView$FlingRotateRunnable:
    com.ab.view.carousel.Rotator mRotator -> mRotator
    float mLastFlingAngle -> mLastFlingAngle
    com.ab.view.carousel.CarouselView this$0 -> this$0
    void startCommon() -> startCommon
    void startUsingVelocity(float) -> startUsingVelocity
    void startUsingDistance(float) -> startUsingDistance
    void stop(boolean) -> stop
    void endFling(boolean) -> endFling
    void run() -> run
    com.ab.view.carousel.Rotator access$0(com.ab.view.carousel.CarouselView$FlingRotateRunnable) -> access$0
com.ab.view.carousel.CarouselViewAdapter -> com.ab.view.carousel.CarouselViewAdapter:
    android.content.Context mContext -> mContext
    java.util.List mViews -> mViews
    boolean mReflected -> mReflected
    com.ab.view.carousel.CarouselItemView[] mCarouselItemViews -> mCarouselItemViews
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setImages() -> setImages
com.ab.view.carousel.CarouselViewAdapter$1 -> com.ab.view.carousel.CarouselViewAdapter$1:
    com.ab.view.carousel.CarouselViewAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.ab.view.carousel.CarouselViewAdapter$2 -> com.ab.view.carousel.CarouselViewAdapter$2:
    com.ab.view.carousel.CarouselViewAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.ab.view.carousel.Rotator -> com.ab.view.carousel.Rotator:
    int mMode -> mMode
    float mStartAngle -> mStartAngle
    float mCurrAngle -> mCurrAngle
    long mStartTime -> mStartTime
    long mDuration -> mDuration
    float mDeltaAngle -> mDeltaAngle
    boolean mFinished -> mFinished
    float mCoeffVelocity -> mCoeffVelocity
    float mVelocity -> mVelocity
    int DEFAULT_DURATION -> DEFAULT_DURATION
    int SCROLL_MODE -> SCROLL_MODE
    int FLING_MODE -> FLING_MODE
    float mDeceleration -> mDeceleration
    boolean isFinished() -> isFinished
    void forceFinished(boolean) -> forceFinished
    long getDuration() -> getDuration
    float getCurrAngle() -> getCurrAngle
    float getCurrVelocity() -> getCurrVelocity
    float getStartAngle() -> getStartAngle
    int timePassed() -> timePassed
    void extendDuration(int) -> extendDuration
    void abortAnimation() -> abortAnimation
    boolean computeAngleOffset() -> computeAngleOffset
    void startRotate(float,float,int) -> startRotate
    void startRotate(float,float) -> startRotate
    void fling(float) -> fling
com.ab.view.chart.AbstractChart -> com.ab.view.chart.AbstractChart:
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> draw
    void drawBackground(com.ab.view.chart.DefaultRenderer,android.graphics.Canvas,int,int,int,int,android.graphics.Paint,boolean,int) -> drawBackground
    int drawLegend(android.graphics.Canvas,com.ab.view.chart.DefaultRenderer,java.lang.String[],int,int,int,int,int,int,android.graphics.Paint,boolean) -> drawLegend
    void drawString(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint) -> drawString
    boolean getExceed(float,com.ab.view.chart.DefaultRenderer,int,int) -> getExceed
    boolean isVertical(com.ab.view.chart.DefaultRenderer) -> isVertical
    java.lang.String getLabel(double) -> getLabel
    float[] calculateDrawPoints(float,float,float,float,int,int) -> calculateDrawPoints
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> drawPath
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,com.ab.view.chart.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    java.lang.String getFitText(java.lang.String,float,android.graphics.Paint) -> getFitText
    int getLegendSize(com.ab.view.chart.DefaultRenderer,int,float) -> getLegendSize
    void drawLabel(android.graphics.Canvas,java.lang.String,com.ab.view.chart.DefaultRenderer,java.util.List,int,int,float,float,float,float,int,int,int,android.graphics.Paint,boolean) -> drawLabel
    boolean isNullValue(double) -> isNullValue
    com.ab.view.chart.SeriesSelection getSeriesAndPointForScreenCoordinate(com.ab.view.chart.Point) -> getSeriesAndPointForScreenCoordinate
com.ab.view.chart.AbstractTool -> com.ab.view.chart.AbstractTool:
    com.ab.view.chart.AbstractChart mChart -> mChart
    com.ab.view.chart.XYMultipleSeriesRenderer mRenderer -> mRenderer
    double[] getRange(int) -> getRange
    void checkRange(double[],int) -> checkRange
    void setXRange(double,double,int) -> setXRange
    void setYRange(double,double,int) -> setYRange
com.ab.view.chart.AreaChart -> com.ab.view.chart.AreaChart:
    long serialVersionUID -> serialVersionUID
    java.lang.String TYPE -> TYPE
    float firstMultiplier -> firstMultiplier
    float secondMultiplier -> secondMultiplier
    com.ab.view.chart.Point p1 -> p1
    com.ab.view.chart.Point p2 -> p2
    com.ab.view.chart.Point p3 -> p3
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> drawPath
    void calc(float[],com.ab.view.chart.Point,int,int,float) -> calc
    java.lang.String getChartType() -> getChartType
com.ab.view.chart.BarChart -> com.ab.view.chart.BarChart:
    java.lang.String TYPE -> TYPE
    int SHAPE_WIDTH -> SHAPE_WIDTH
    com.ab.view.chart.BarChart$Type mType -> mType
    com.ab.view.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> clickableAreasForPoints
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],int[],com.ab.view.chart.SimpleSeriesRenderer,float,int,int) -> drawSeries
    void drawBar(android.graphics.Canvas,float,float,float,float,float,int,int,android.graphics.Paint) -> drawBar
    void drawBar(android.graphics.Canvas,float,float,float,float,int,int,android.graphics.Paint) -> drawBar
    int getGradientPartialColor(int,int,float) -> getGradientPartialColor
    void drawChartValuesText(android.graphics.Canvas,com.ab.view.chart.XYSeries,com.ab.view.chart.SimpleSeriesRenderer,android.graphics.Paint,float[],int,int) -> drawChartValuesText
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,com.ab.view.chart.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    float getHalfDiffX(float[],int,int) -> getHalfDiffX
    float getCoeficient() -> getCoeficient
    boolean isRenderNullValues() -> isRenderNullValues
    double getDefaultMinimum() -> getDefaultMinimum
    java.lang.String getChartType() -> getChartType
com.ab.view.chart.BarChart$Type -> com.ab.view.chart.BarChart$Type:
    com.ab.view.chart.BarChart$Type DEFAULT -> DEFAULT
    com.ab.view.chart.BarChart$Type STACKED -> STACKED
    com.ab.view.chart.BarChart$Type[] ENUM$VALUES -> ENUM$VALUES
    com.ab.view.chart.BarChart$Type[] values() -> values
    com.ab.view.chart.BarChart$Type valueOf(java.lang.String) -> valueOf
com.ab.view.chart.BasicStroke -> com.ab.view.chart.BasicStroke:
    com.ab.view.chart.BasicStroke SOLID -> SOLID
    com.ab.view.chart.BasicStroke DASHED -> DASHED
    com.ab.view.chart.BasicStroke DOTTED -> DOTTED
    android.graphics.Paint$Cap mCap -> mCap
    android.graphics.Paint$Join mJoin -> mJoin
    float mMiter -> mMiter
    float[] mIntervals -> mIntervals
    float mPhase -> mPhase
    android.graphics.Paint$Cap getCap() -> getCap
    android.graphics.Paint$Join getJoin() -> getJoin
    float getMiter() -> getMiter
    float[] getIntervals() -> getIntervals
    float getPhase() -> getPhase
com.ab.view.chart.CategorySeries -> com.ab.view.chart.CategorySeries:
    java.lang.String mTitle -> mTitle
    java.util.List mCategories -> mCategories
    java.util.List mValues -> mValues
    java.util.List mColors -> mColors
    java.util.List mExplains -> mExplains
    java.lang.String getTitle() -> getTitle
    void add(double) -> add
    void add(double,int) -> add
    void add(double,int,java.lang.String) -> add
    void add(java.lang.String,double) -> add
    void add(java.lang.String,double,int) -> add
    void add(java.lang.String,double,int,java.lang.String) -> add
    void set(int,java.lang.String,double) -> set
    void remove(int) -> remove
    void clear() -> clear
    double getValue(int) -> getValue
    java.lang.String getCategory(int) -> getCategory
    java.util.List getColors() -> getColors
    java.util.List getExplains() -> getExplains
    int getItemCount() -> getItemCount
    com.ab.view.chart.XYSeries toXYSeries() -> toXYSeries
com.ab.view.chart.ChartFactory -> com.ab.view.chart.ChartFactory:
    java.lang.String CHART -> CHART
    java.lang.String TITLE -> TITLE
    com.ab.view.chart.GraphicalView getLineChartView(android.content.Context,com.ab.view.chart.XYMultipleSeriesDataset,com.ab.view.chart.XYMultipleSeriesRenderer) -> getLineChartView
    com.ab.view.chart.GraphicalView getBarChartView(android.content.Context,com.ab.view.chart.XYMultipleSeriesDataset,com.ab.view.chart.XYMultipleSeriesRenderer,com.ab.view.chart.BarChart$Type) -> getBarChartView
    com.ab.view.chart.GraphicalView getPieChartView(android.content.Context,com.ab.view.chart.CategorySeries,com.ab.view.chart.DefaultRenderer) -> getPieChartView
    com.ab.view.chart.GraphicalView getTimeChartView(android.content.Context,com.ab.view.chart.XYMultipleSeriesDataset,com.ab.view.chart.XYMultipleSeriesRenderer,java.lang.String) -> getTimeChartView
    com.ab.view.chart.GraphicalView getAreaChartView(android.content.Context,com.ab.view.chart.XYMultipleSeriesDataset,com.ab.view.chart.XYMultipleSeriesRenderer,float) -> getAreaChartView
    void checkParameters(com.ab.view.chart.XYMultipleSeriesDataset,com.ab.view.chart.XYMultipleSeriesRenderer) -> checkParameters
    void checkParameters(com.ab.view.chart.CategorySeries,com.ab.view.chart.DefaultRenderer) -> checkParameters
    void checkParameters(com.ab.view.chart.MultipleCategorySeries,com.ab.view.chart.DefaultRenderer) -> checkParameters
    boolean checkMultipleSeriesItems(com.ab.view.chart.MultipleCategorySeries,int) -> checkMultipleSeriesItems
com.ab.view.chart.ClickableArea -> com.ab.view.chart.ClickableArea:
    android.graphics.RectF rect -> rect
    double x -> x
    double y -> y
    android.graphics.RectF getRect() -> getRect
    double getX() -> getX
    double getY() -> getY
com.ab.view.chart.DefaultRenderer -> com.ab.view.chart.DefaultRenderer:
    java.lang.String mChartTitle -> mChartTitle
    float mChartTitleTextSize -> mChartTitleTextSize
    int NO_COLOR -> NO_COLOR
    int BACKGROUND_COLOR -> BACKGROUND_COLOR
    int TEXT_COLOR -> TEXT_COLOR
    android.graphics.Typeface REGULAR_TEXT_FONT -> REGULAR_TEXT_FONT
    java.lang.String mTextTypefaceName -> mTextTypefaceName
    int mTextTypefaceStyle -> mTextTypefaceStyle
    int mBackgroundColor -> mBackgroundColor
    boolean mApplyBackgroundColor -> mApplyBackgroundColor
    boolean mShowAxes -> mShowAxes
    int mAxesColor -> mAxesColor
    boolean mShowLabels -> mShowLabels
    int mLabelsColor -> mLabelsColor
    float mLabelsTextSize -> mLabelsTextSize
    boolean mShowLegend -> mShowLegend
    float mLegendTextSize -> mLegendTextSize
    boolean mFitLegend -> mFitLegend
    boolean mShowGridX -> mShowGridX
    boolean mShowGridY -> mShowGridY
    boolean mShowCustomTextGrid -> mShowCustomTextGrid
    java.util.List mRenderers -> mRenderers
    boolean mAntialiasing -> mAntialiasing
    int mLegendHeight -> mLegendHeight
    int[] mMargins -> mMargins
    float mScale -> mScale
    boolean mPanEnabled -> mPanEnabled
    boolean mZoomEnabled -> mZoomEnabled
    boolean mZoomButtonsVisible -> mZoomButtonsVisible
    float mZoomRate -> mZoomRate
    boolean mExternalZoomEnabled -> mExternalZoomEnabled
    float mOriginalScale -> mOriginalScale
    boolean mClickEnabled -> mClickEnabled
    int selectableBuffer -> selectableBuffer
    boolean mDisplayValues -> mDisplayValues
    boolean mInScroll -> mInScroll
    float mStartAngle -> mStartAngle
    java.lang.String getChartTitle() -> getChartTitle
    void setChartTitle(java.lang.String) -> setChartTitle
    float getChartTitleTextSize() -> getChartTitleTextSize
    void setChartTitleTextSize(float) -> setChartTitleTextSize
    void addSeriesRenderer(com.ab.view.chart.SimpleSeriesRenderer) -> addSeriesRenderer
    void addSeriesRenderer(int,com.ab.view.chart.SimpleSeriesRenderer) -> addSeriesRenderer
    void removeSeriesRenderer(com.ab.view.chart.SimpleSeriesRenderer) -> removeSeriesRenderer
    void removeAllRenderers() -> removeAllRenderers
    com.ab.view.chart.SimpleSeriesRenderer getSeriesRendererAt(int) -> getSeriesRendererAt
    int getSeriesRendererCount() -> getSeriesRendererCount
    com.ab.view.chart.SimpleSeriesRenderer[] getSeriesRenderers() -> getSeriesRenderers
    int getBackgroundColor() -> getBackgroundColor
    void setBackgroundColor(int) -> setBackgroundColor
    boolean isApplyBackgroundColor() -> isApplyBackgroundColor
    void setApplyBackgroundColor(boolean) -> setApplyBackgroundColor
    int getAxesColor() -> getAxesColor
    void setAxesColor(int) -> setAxesColor
    int getLabelsColor() -> getLabelsColor
    void setLabelsColor(int) -> setLabelsColor
    float getLabelsTextSize() -> getLabelsTextSize
    void setLabelsTextSize(float) -> setLabelsTextSize
    boolean isShowAxes() -> isShowAxes
    void setShowAxes(boolean) -> setShowAxes
    boolean isShowLabels() -> isShowLabels
    void setShowLabels(boolean) -> setShowLabels
    boolean isShowGridX() -> isShowGridX
    boolean isShowGridY() -> isShowGridY
    void setShowGridX(boolean) -> setShowGridX
    void setShowGridY(boolean) -> setShowGridY
    void setShowGrid(boolean) -> setShowGrid
    boolean isShowCustomTextGrid() -> isShowCustomTextGrid
    void setShowCustomTextGrid(boolean) -> setShowCustomTextGrid
    boolean isShowLegend() -> isShowLegend
    void setShowLegend(boolean) -> setShowLegend
    boolean isFitLegend() -> isFitLegend
    void setFitLegend(boolean) -> setFitLegend
    java.lang.String getTextTypefaceName() -> getTextTypefaceName
    int getTextTypefaceStyle() -> getTextTypefaceStyle
    float getLegendTextSize() -> getLegendTextSize
    void setLegendTextSize(float) -> setLegendTextSize
    void setTextTypeface(java.lang.String,int) -> setTextTypeface
    boolean isAntialiasing() -> isAntialiasing
    void setAntialiasing(boolean) -> setAntialiasing
    float getScale() -> getScale
    float getOriginalScale() -> getOriginalScale
    void setScale(float) -> setScale
    boolean isZoomEnabled() -> isZoomEnabled
    void setZoomEnabled(boolean) -> setZoomEnabled
    boolean isZoomButtonsVisible() -> isZoomButtonsVisible
    void setZoomButtonsVisible(boolean) -> setZoomButtonsVisible
    boolean isExternalZoomEnabled() -> isExternalZoomEnabled
    void setExternalZoomEnabled(boolean) -> setExternalZoomEnabled
    float getZoomRate() -> getZoomRate
    boolean isPanEnabled() -> isPanEnabled
    void setPanEnabled(boolean) -> setPanEnabled
    void setZoomRate(float) -> setZoomRate
    boolean isClickEnabled() -> isClickEnabled
    void setClickEnabled(boolean) -> setClickEnabled
    int getSelectableBuffer() -> getSelectableBuffer
    void setSelectableBuffer(int) -> setSelectableBuffer
    int getLegendHeight() -> getLegendHeight
    void setLegendHeight(int) -> setLegendHeight
    int[] getMargins() -> getMargins
    void setMargins(int[]) -> setMargins
    boolean isInScroll() -> isInScroll
    void setInScroll(boolean) -> setInScroll
    float getStartAngle() -> getStartAngle
    void setStartAngle(float) -> setStartAngle
    boolean isDisplayValues() -> isDisplayValues
    void setDisplayValues(boolean) -> setDisplayValues
com.ab.view.chart.FitZoom -> com.ab.view.chart.FitZoom:
    void apply() -> apply
com.ab.view.chart.GraphicalView -> com.ab.view.chart.GraphicalView:
    android.content.Context mContext -> mContext
    com.ab.view.chart.AbstractChart mChart -> mChart
    com.ab.view.chart.DefaultRenderer mRenderer -> mRenderer
    android.graphics.Rect mRect -> mRect
    android.os.Handler mHandler -> mHandler
    android.graphics.RectF mZoomR -> mZoomR
    android.graphics.Bitmap zoomInImage -> zoomInImage
    android.graphics.Bitmap zoomOutImage -> zoomOutImage
    android.graphics.Bitmap fitZoomImage -> fitZoomImage
    int zoomSize -> zoomSize
    int ZOOM_BUTTONS_COLOR -> ZOOM_BUTTONS_COLOR
    com.ab.view.chart.Zoom mZoomIn -> mZoomIn
    com.ab.view.chart.Zoom mZoomOut -> mZoomOut
    com.ab.view.chart.FitZoom mFitZoom -> mFitZoom
    android.graphics.Paint mPaint -> mPaint
    com.ab.view.chart.ITouchHandler mTouchHandler -> mTouchHandler
    float oldX -> oldX
    float oldY -> oldY
    com.ab.view.chart.SeriesSelection getCurrentSeriesAndPoint() -> getCurrentSeriesAndPoint
    double[] toRealPoint(int) -> toRealPoint
    void onDraw(android.graphics.Canvas) -> onDraw
    void setZoomRate(float) -> setZoomRate
    void zoomIn() -> zoomIn
    void zoomOut() -> zoomOut
    void zoomReset() -> zoomReset
    void addZoomListener(com.ab.view.chart.ZoomListener,boolean,boolean) -> addZoomListener
    void removeZoomListener(com.ab.view.chart.ZoomListener) -> removeZoomListener
    void addPanListener(com.ab.view.chart.PanListener) -> addPanListener
    void removePanListener(com.ab.view.chart.PanListener) -> removePanListener
    android.graphics.RectF getZoomRectangle() -> getZoomRectangle
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void repaint() -> repaint
    void repaint(int,int,int,int) -> repaint
    android.graphics.Bitmap toBitmap() -> toBitmap
com.ab.view.chart.GraphicalView$1 -> com.ab.view.chart.GraphicalView$1:
    com.ab.view.chart.GraphicalView this$0 -> this$0
    void run() -> run
com.ab.view.chart.GraphicalView$2 -> com.ab.view.chart.GraphicalView$2:
    com.ab.view.chart.GraphicalView this$0 -> this$0
    int val$left -> val$left
    int val$top -> val$top
    int val$right -> val$right
    int val$bottom -> val$bottom
    void run() -> run
com.ab.view.chart.ITouchHandler -> com.ab.view.chart.ITouchHandler:
    boolean handleTouch(android.view.MotionEvent) -> handleTouch
    boolean handleTouchControl(android.view.MotionEvent) -> handleTouchControl
    void addZoomListener(com.ab.view.chart.ZoomListener) -> addZoomListener
    void removeZoomListener(com.ab.view.chart.ZoomListener) -> removeZoomListener
    void addPanListener(com.ab.view.chart.PanListener) -> addPanListener
    void removePanListener(com.ab.view.chart.PanListener) -> removePanListener
com.ab.view.chart.IndexXYMap -> com.ab.view.chart.IndexXYMap:
    java.util.List indexList -> indexList
    double maxXDifference -> maxXDifference
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void updateMaxXDifference() -> updateMaxXDifference
    double getMaxXDifference() -> getMaxXDifference
    void clear() -> clear
    java.lang.Object getXByIndex(int) -> getXByIndex
    java.lang.Object getYByIndex(int) -> getYByIndex
    com.ab.view.chart.XYEntry getByIndex(int) -> getByIndex
    com.ab.view.chart.XYEntry removeByIndex(int) -> removeByIndex
    int getIndexForKey(java.lang.Object) -> getIndexForKey
com.ab.view.chart.LineChart -> com.ab.view.chart.LineChart:
    java.lang.String TYPE -> TYPE
    int SHAPE_WIDTH -> SHAPE_WIDTH
    com.ab.view.chart.ScatterChart pointsChart -> pointsChart
    void setDatasetRenderer(com.ab.view.chart.XYMultipleSeriesDataset,com.ab.view.chart.XYMultipleSeriesRenderer) -> setDatasetRenderer
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],int[],com.ab.view.chart.SimpleSeriesRenderer,float,int,int) -> drawSeries
    com.ab.view.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> clickableAreasForPoints
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,com.ab.view.chart.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    boolean isRenderPoints(com.ab.view.chart.SimpleSeriesRenderer) -> isRenderPoints
    com.ab.view.chart.ScatterChart getPointsChart() -> getPointsChart
    java.lang.String getChartType() -> getChartType
com.ab.view.chart.MathHelper -> com.ab.view.chart.MathHelper:
    double NULL_VALUE -> NULL_VALUE
    java.text.NumberFormat FORMAT -> FORMAT
    double[] minmax(java.util.List) -> minmax
    java.util.List getLabels(double,double,int) -> getLabels
    double[] computeLabels(double,double,int) -> computeLabels
    double roundUp(double) -> roundUp
    float[] getFloats(java.util.List) -> getFloats
    double[] getDoubles(java.util.List) -> getDoubles
    int[] getInts(java.util.List) -> getInts
com.ab.view.chart.MultipleCategorySeries -> com.ab.view.chart.MultipleCategorySeries:
    java.lang.String mTitle -> mTitle
    java.util.List mCategories -> mCategories
    java.util.List mTitles -> mTitles
    java.util.List mValues -> mValues
    void add(java.lang.String[],double[]) -> add
    void add(java.lang.String,java.lang.String[],double[]) -> add
    void remove(int) -> remove
    void clear() -> clear
    double[] getValues(int) -> getValues
    java.lang.String getCategory(int) -> getCategory
    int getCategoriesCount() -> getCategoriesCount
    int getItemCount(int) -> getItemCount
    java.lang.String[] getTitles(int) -> getTitles
    com.ab.view.chart.XYSeries toXYSeries() -> toXYSeries
com.ab.view.chart.Pan -> com.ab.view.chart.Pan:
    java.util.List mPanListeners -> mPanListeners
    boolean limitsReachedX -> limitsReachedX
    boolean limitsReachedY -> limitsReachedY
    void apply(float,float,float,float) -> apply
    double getAxisRatio(double[]) -> getAxisRatio
    void notifyPanListeners() -> notifyPanListeners
    void addPanListener(com.ab.view.chart.PanListener) -> addPanListener
    void removePanListener(com.ab.view.chart.PanListener) -> removePanListener
com.ab.view.chart.PanListener -> com.ab.view.chart.PanListener:
    void panApplied() -> panApplied
com.ab.view.chart.PieChart -> com.ab.view.chart.PieChart:
    com.ab.view.chart.PieMapper mPieMapper -> mPieMapper
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> draw
    com.ab.view.chart.SeriesSelection getSeriesAndPointForScreenCoordinate(com.ab.view.chart.Point) -> getSeriesAndPointForScreenCoordinate
com.ab.view.chart.PieMapper -> com.ab.view.chart.PieMapper:
    java.util.List mPieSegmentList -> mPieSegmentList
    int mPieChartRadius -> mPieChartRadius
    int mCenterX -> mCenterX
    int mCenterY -> mCenterY
    void setDimensions(int,int,int) -> setDimensions
    boolean areAllSegmentPresent(int) -> areAllSegmentPresent
    void addPieSegment(int,float,float,float) -> addPieSegment
    void clearPieSegments() -> clearPieSegments
    double getAngle(com.ab.view.chart.Point) -> getAngle
    boolean isOnPieChart(com.ab.view.chart.Point) -> isOnPieChart
    com.ab.view.chart.SeriesSelection getSeriesAndPointForScreenCoordinate(com.ab.view.chart.Point) -> getSeriesAndPointForScreenCoordinate
com.ab.view.chart.PieSegment -> com.ab.view.chart.PieSegment:
    float mStartAngle -> mStartAngle
    float mEndAngle -> mEndAngle
    int mDataIndex -> mDataIndex
    float mValue -> mValue
    boolean isInSegment(double) -> isInSegment
    float getStartAngle() -> getStartAngle
    float getEndAngle() -> getEndAngle
    int getDataIndex() -> getDataIndex
    float getValue() -> getValue
    java.lang.String toString() -> toString
com.ab.view.chart.Point -> com.ab.view.chart.Point:
    float mX -> mX
    float mY -> mY
    float getX() -> getX
    float getY() -> getY
    void setX(float) -> setX
    void setY(float) -> setY
com.ab.view.chart.PointStyle -> com.ab.view.chart.PointStyle:
    com.ab.view.chart.PointStyle X -> X
    com.ab.view.chart.PointStyle CIRCLE -> CIRCLE
    com.ab.view.chart.PointStyle TRIANGLE -> TRIANGLE
    com.ab.view.chart.PointStyle SQUARE -> SQUARE
    com.ab.view.chart.PointStyle DIAMOND -> DIAMOND
    com.ab.view.chart.PointStyle POINT -> POINT
    java.lang.String mName -> mName
    com.ab.view.chart.PointStyle[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String getName() -> getName
    java.lang.String toString() -> toString
    com.ab.view.chart.PointStyle getPointStyleForName(java.lang.String) -> getPointStyleForName
    int getIndexForName(java.lang.String) -> getIndexForName
    com.ab.view.chart.PointStyle[] values() -> values
    com.ab.view.chart.PointStyle valueOf(java.lang.String) -> valueOf
com.ab.view.chart.RoundChart -> com.ab.view.chart.RoundChart:
    int SHAPE_WIDTH -> SHAPE_WIDTH
    com.ab.view.chart.CategorySeries mDataset -> mDataset
    com.ab.view.chart.DefaultRenderer mRenderer -> mRenderer
    int NO_VALUE -> NO_VALUE
    int mCenterX -> mCenterX
    int mCenterY -> mCenterY
    void drawTitle(android.graphics.Canvas,int,int,int,android.graphics.Paint) -> drawTitle
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,com.ab.view.chart.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    com.ab.view.chart.DefaultRenderer getRenderer() -> getRenderer
    int getCenterX() -> getCenterX
    int getCenterY() -> getCenterY
    void setCenterX(int) -> setCenterX
    void setCenterY(int) -> setCenterY
com.ab.view.chart.ScatterChart -> com.ab.view.chart.ScatterChart:
    java.lang.String TYPE -> TYPE
    float SIZE -> SIZE
    int SHAPE_WIDTH -> SHAPE_WIDTH
    float size -> size
    int[] $SWITCH_TABLE$com$ab$view$chart$PointStyle -> $SWITCH_TABLE$com$ab$view$chart$PointStyle
    void setDatasetRenderer(com.ab.view.chart.XYMultipleSeriesDataset,com.ab.view.chart.XYMultipleSeriesRenderer) -> setDatasetRenderer
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],int[],com.ab.view.chart.SimpleSeriesRenderer,float,int,int) -> drawSeries
    com.ab.view.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> clickableAreasForPoints
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,com.ab.view.chart.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    void drawX(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawX
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawCircle
    void drawTriangle(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> drawTriangle
    void drawSquare(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawSquare
    void drawDiamond(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> drawDiamond
    java.lang.String getChartType() -> getChartType
    int[] $SWITCH_TABLE$com$ab$view$chart$PointStyle() -> $SWITCH_TABLE$com$ab$view$chart$PointStyle
com.ab.view.chart.SeriesSelection -> com.ab.view.chart.SeriesSelection:
    int mSeriesIndex -> mSeriesIndex
    int mPointIndex -> mPointIndex
    double mXValue -> mXValue
    double mValue -> mValue
    int getSeriesIndex() -> getSeriesIndex
    int getPointIndex() -> getPointIndex
    double getXValue() -> getXValue
    double getValue() -> getValue
com.ab.view.chart.SimpleSeriesRenderer -> com.ab.view.chart.SimpleSeriesRenderer:
    int mColor -> mColor
    boolean mDisplayChartValues -> mDisplayChartValues
    float mChartValuesTextSize -> mChartValuesTextSize
    android.graphics.Paint$Align mChartValuesTextAlign -> mChartValuesTextAlign
    float mChartValuesSpacing -> mChartValuesSpacing
    com.ab.view.chart.BasicStroke mStroke -> mStroke
    boolean mGradientEnabled -> mGradientEnabled
    double mGradientStartValue -> mGradientStartValue
    int mGradientStartColor -> mGradientStartColor
    double mGradientStopValue -> mGradientStopValue
    int mGradientStopColor -> mGradientStopColor
    int getColor() -> getColor
    void setColor(int) -> setColor
    boolean isDisplayChartValues() -> isDisplayChartValues
    void setDisplayChartValues(boolean) -> setDisplayChartValues
    float getChartValuesTextSize() -> getChartValuesTextSize
    void setChartValuesTextSize(float) -> setChartValuesTextSize
    android.graphics.Paint$Align getChartValuesTextAlign() -> getChartValuesTextAlign
    void setChartValuesTextAlign(android.graphics.Paint$Align) -> setChartValuesTextAlign
    float getChartValuesSpacing() -> getChartValuesSpacing
    void setChartValuesSpacing(float) -> setChartValuesSpacing
    com.ab.view.chart.BasicStroke getStroke() -> getStroke
    void setStroke(com.ab.view.chart.BasicStroke) -> setStroke
    boolean isGradientEnabled() -> isGradientEnabled
    void setGradientEnabled(boolean) -> setGradientEnabled
    double getGradientStartValue() -> getGradientStartValue
    int getGradientStartColor() -> getGradientStartColor
    void setGradientStart(double,int) -> setGradientStart
    double getGradientStopValue() -> getGradientStopValue
    int getGradientStopColor() -> getGradientStopColor
    void setGradientStop(double,int) -> setGradientStop
com.ab.view.chart.TimeChart -> com.ab.view.chart.TimeChart:
    java.lang.String TYPE -> TYPE
    long DAY -> DAY
    java.lang.String mDateFormat -> mDateFormat
    java.lang.Double mStartPoint -> mStartPoint
    java.lang.String getDateFormat() -> getDateFormat
    void setDateFormat(java.lang.String) -> setDateFormat
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> drawXLabels
    java.text.DateFormat getDateFormat(double,double) -> getDateFormat
    java.lang.String getChartType() -> getChartType
    java.util.List getXLabels(double,double,int) -> getXLabels
com.ab.view.chart.TimeSeries -> com.ab.view.chart.TimeSeries:
    void add(java.util.Date,double) -> add
    void add(java.util.Date,double,int,java.lang.String) -> add
com.ab.view.chart.TouchHandler -> com.ab.view.chart.TouchHandler:
    com.ab.view.chart.DefaultRenderer mRenderer -> mRenderer
    float oldX -> oldX
    float oldY -> oldY
    float oldX2 -> oldX2
    float oldY2 -> oldY2
    android.graphics.RectF zoomR -> zoomR
    com.ab.view.chart.Pan mPan -> mPan
    com.ab.view.chart.Zoom mPinchZoom -> mPinchZoom
    com.ab.view.chart.GraphicalView graphicalView -> graphicalView
    boolean handleTouch(android.view.MotionEvent) -> handleTouch
    boolean handleTouchControl(android.view.MotionEvent) -> handleTouchControl
    void addZoomListener(com.ab.view.chart.ZoomListener) -> addZoomListener
    void removeZoomListener(com.ab.view.chart.ZoomListener) -> removeZoomListener
    void addPanListener(com.ab.view.chart.PanListener) -> addPanListener
    void removePanListener(com.ab.view.chart.PanListener) -> removePanListener
    float getOldX() -> getOldX
    float getOldY() -> getOldY
com.ab.view.chart.XYChart -> com.ab.view.chart.XYChart:
    com.ab.view.chart.XYMultipleSeriesDataset mDataset -> mDataset
    com.ab.view.chart.XYMultipleSeriesRenderer mRenderer -> mRenderer
    float mScale -> mScale
    float mTranslate -> mTranslate
    com.ab.view.chart.Point mCenter -> mCenter
    android.graphics.Rect mScreenR -> mScreenR
    java.util.Map mCalcRange -> mCalcRange
    java.util.Map clickableAreas -> clickableAreas
    java.util.Map values -> values
    java.util.Map points -> points
    java.util.Map colors -> colors
    java.util.Map explains -> explains
    void setDatasetRenderer(com.ab.view.chart.XYMultipleSeriesDataset,com.ab.view.chart.XYMultipleSeriesRenderer) -> setDatasetRenderer
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> draw
    java.util.List getXLabels(double,double,int) -> getXLabels
    java.util.Map getYLabels(double[],double[],int) -> getYLabels
    android.graphics.Rect getScreenR() -> getScreenR
    void setScreenR(android.graphics.Rect) -> setScreenR
    java.util.List getValidLabels(java.util.List) -> getValidLabels
    void drawSeries(com.ab.view.chart.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,java.util.List,com.ab.view.chart.SimpleSeriesRenderer,float,int,com.ab.view.chart.XYMultipleSeriesRenderer$Orientation,int) -> drawSeries
    void setStroke(android.graphics.Paint$Cap,android.graphics.Paint$Join,float,android.graphics.Paint$Style,android.graphics.PathEffect,android.graphics.Paint) -> setStroke
    void drawChartValuesText(android.graphics.Canvas,com.ab.view.chart.XYSeries,com.ab.view.chart.SimpleSeriesRenderer,android.graphics.Paint,float[],int,int) -> drawChartValuesText
    void drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,float) -> drawText
    void transform(android.graphics.Canvas,float,boolean) -> transform
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> drawXLabels
    void drawYLabels(java.util.Map,android.graphics.Canvas,android.graphics.Paint,int,int,int,int,double[],double[]) -> drawYLabels
    void drawXTextLabels(java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,boolean,int,int,int,double,double,double) -> drawXTextLabels
    com.ab.view.chart.XYMultipleSeriesRenderer getRenderer() -> getRenderer
    com.ab.view.chart.XYMultipleSeriesDataset getDataset() -> getDataset
    double[] getCalcRange(int) -> getCalcRange
    void setCalcRange(double[],int) -> setCalcRange
    double[] toRealPoint(float,float) -> toRealPoint
    double[] toScreenPoint(double[]) -> toScreenPoint
    int getLabelLinePos(android.graphics.Paint$Align) -> getLabelLinePos
    double[] toRealPoint(float,float,int) -> toRealPoint
    double[] toScreenPoint(double[],int) -> toScreenPoint
    com.ab.view.chart.SeriesSelection getSeriesAndPointForScreenCoordinate(com.ab.view.chart.Point) -> getSeriesAndPointForScreenCoordinate
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],int[],com.ab.view.chart.SimpleSeriesRenderer,float,int,int) -> drawSeries
    com.ab.view.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> clickableAreasForPoints
    boolean isRenderNullValues() -> isRenderNullValues
    boolean isRenderPoints(com.ab.view.chart.SimpleSeriesRenderer) -> isRenderPoints
    double getDefaultMinimum() -> getDefaultMinimum
    com.ab.view.chart.ScatterChart getPointsChart() -> getPointsChart
    java.lang.String getChartType() -> getChartType
    java.util.Map getPoints() -> getPoints
    java.util.Map getValues() -> getValues
    java.util.Map getExplains() -> getExplains
com.ab.view.chart.XYEntry -> com.ab.view.chart.XYEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.ab.view.chart.XYMultipleSeriesDataset -> com.ab.view.chart.XYMultipleSeriesDataset:
    java.util.List mSeries -> mSeries
    void addSeries(com.ab.view.chart.XYSeries) -> addSeries
    void addSeries(int,com.ab.view.chart.XYSeries) -> addSeries
    void removeSeries(int) -> removeSeries
    void removeSeries(com.ab.view.chart.XYSeries) -> removeSeries
    com.ab.view.chart.XYSeries getSeriesAt(int) -> getSeriesAt
    int getSeriesCount() -> getSeriesCount
    com.ab.view.chart.XYSeries[] getSeries() -> getSeries
com.ab.view.chart.XYMultipleSeriesRenderer -> com.ab.view.chart.XYMultipleSeriesRenderer:
    java.lang.String mXTitle -> mXTitle
    java.lang.String[] mYTitle -> mYTitle
    float mAxisTitleTextSize -> mAxisTitleTextSize
    double[] mMinX -> mMinX
    double[] mMaxX -> mMaxX
    double[] mMinY -> mMinY
    double[] mMaxY -> mMaxY
    int mXLabels -> mXLabels
    int mYLabels -> mYLabels
    com.ab.view.chart.XYMultipleSeriesRenderer$Orientation mOrientation -> mOrientation
    java.util.Map mXTextLabels -> mXTextLabels
    java.util.Map mYTextLabels -> mYTextLabels
    boolean mPanXEnabled -> mPanXEnabled
    boolean mPanYEnabled -> mPanYEnabled
    boolean mZoomXEnabled -> mZoomXEnabled
    boolean mZoomYEnabled -> mZoomYEnabled
    double mBarSpacing -> mBarSpacing
    int mMarginsColor -> mMarginsColor
    double[] mPanLimits -> mPanLimits
    double[] mZoomLimits -> mZoomLimits
    float mXLabelsAngle -> mXLabelsAngle
    float mYLabelsAngle -> mYLabelsAngle
    java.util.Map initialRange -> initialRange
    float mPointSize -> mPointSize
    int mGridColor -> mGridColor
    int scalesCount -> scalesCount
    android.graphics.Paint$Align xLabelsAlign -> xLabelsAlign
    android.graphics.Paint$Align[] yLabelsAlign -> yLabelsAlign
    android.graphics.Paint$Align[] yAxisAlign -> yAxisAlign
    int mXLabelsColor -> mXLabelsColor
    int[] mYLabelsColor -> mYLabelsColor
    double[] mYLimitsLine -> mYLimitsLine
    int[] mYLimitsLineColor -> mYLimitsLineColor
    boolean mScaleLineEnabled -> mScaleLineEnabled
    int mScaleRectHeight -> mScaleRectHeight
    int mScaleRectWidth -> mScaleRectWidth
    int mScaleLineColor -> mScaleLineColor
    int mScaleRectColor -> mScaleRectColor
    int explainTextSize1 -> explainTextSize1
    int explainTextSize2 -> explainTextSize2
    int scaleCircleRadius -> scaleCircleRadius
    boolean displayValue0 -> displayValue0
    boolean mXRoundedLabels -> mXRoundedLabels
    void initAxesRange(int) -> initAxesRange
    void initAxesRangeForScale(int) -> initAxesRangeForScale
    com.ab.view.chart.XYMultipleSeriesRenderer$Orientation getOrientation() -> getOrientation
    void setOrientation(com.ab.view.chart.XYMultipleSeriesRenderer$Orientation) -> setOrientation
    java.lang.String getXTitle() -> getXTitle
    void setXTitle(java.lang.String) -> setXTitle
    java.lang.String getYTitle() -> getYTitle
    java.lang.String getYTitle(int) -> getYTitle
    void setYTitle(java.lang.String) -> setYTitle
    void setYTitle(java.lang.String,int) -> setYTitle
    float getAxisTitleTextSize() -> getAxisTitleTextSize
    void setAxisTitleTextSize(float) -> setAxisTitleTextSize
    double getXAxisMin() -> getXAxisMin
    void setXAxisMin(double) -> setXAxisMin
    boolean isMinXSet() -> isMinXSet
    double getXAxisMax() -> getXAxisMax
    void setXAxisMax(double) -> setXAxisMax
    boolean isMaxXSet() -> isMaxXSet
    double getYAxisMin() -> getYAxisMin
    void setYAxisMin(double) -> setYAxisMin
    boolean isMinYSet() -> isMinYSet
    double getYAxisMax() -> getYAxisMax
    void setYAxisMax(double) -> setYAxisMax
    boolean isMaxYSet() -> isMaxYSet
    double getXAxisMin(int) -> getXAxisMin
    void setXAxisMin(double,int) -> setXAxisMin
    boolean isMinXSet(int) -> isMinXSet
    double getXAxisMax(int) -> getXAxisMax
    void setXAxisMax(double,int) -> setXAxisMax
    boolean isMaxXSet(int) -> isMaxXSet
    double getYAxisMin(int) -> getYAxisMin
    void setYAxisMin(double,int) -> setYAxisMin
    boolean isMinYSet(int) -> isMinYSet
    double getYAxisMax(int) -> getYAxisMax
    void setYAxisMax(double,int) -> setYAxisMax
    boolean isMaxYSet(int) -> isMaxYSet
    int getXLabels() -> getXLabels
    void setXLabels(int) -> setXLabels
    void addTextLabel(double,java.lang.String) -> addTextLabel
    void addXTextLabel(double,java.lang.String) -> addXTextLabel
    java.lang.String getXTextLabel(java.lang.Double) -> getXTextLabel
    java.lang.Double[] getXTextLabelLocations() -> getXTextLabelLocations
    void clearTextLabels() -> clearTextLabels
    void clearXTextLabels() -> clearXTextLabels
    boolean isXRoundedLabels() -> isXRoundedLabels
    void setXRoundedLabels(boolean) -> setXRoundedLabels
    void addYTextLabel(double,java.lang.String) -> addYTextLabel
    void addYTextLabel(double,java.lang.String,int) -> addYTextLabel
    java.lang.String getYTextLabel(java.lang.Double) -> getYTextLabel
    java.lang.String getYTextLabel(java.lang.Double,int) -> getYTextLabel
    java.lang.Double[] getYTextLabelLocations() -> getYTextLabelLocations
    java.lang.Double[] getYTextLabelLocations(int) -> getYTextLabelLocations
    void clearYTextLabels() -> clearYTextLabels
    void clearYTextLabels(int) -> clearYTextLabels
    int getYLabels() -> getYLabels
    void setYLabels(int) -> setYLabels
    void setDisplayChartValues(boolean) -> setDisplayChartValues
    void setChartValuesTextSize(float) -> setChartValuesTextSize
    boolean isPanEnabled() -> isPanEnabled
    boolean isPanXEnabled() -> isPanXEnabled
    boolean isPanYEnabled() -> isPanYEnabled
    void setPanEnabled(boolean,boolean) -> setPanEnabled
    boolean isZoomEnabled() -> isZoomEnabled
    boolean isZoomXEnabled() -> isZoomXEnabled
    boolean isZoomYEnabled() -> isZoomYEnabled
    void setZoomEnabled(boolean,boolean) -> setZoomEnabled
    double getBarsSpacing() -> getBarsSpacing
    double getBarSpacing() -> getBarSpacing
    void setBarSpacing(double) -> setBarSpacing
    int getMarginsColor() -> getMarginsColor
    void setMarginsColor(int) -> setMarginsColor
    int getGridColor() -> getGridColor
    void setGridColor(int) -> setGridColor
    double[] getPanLimits() -> getPanLimits
    void setPanLimits(double[]) -> setPanLimits
    double[] getZoomLimits() -> getZoomLimits
    void setZoomLimits(double[]) -> setZoomLimits
    float getXLabelsAngle() -> getXLabelsAngle
    void setXLabelsAngle(float) -> setXLabelsAngle
    float getYLabelsAngle() -> getYLabelsAngle
    void setYLabelsAngle(float) -> setYLabelsAngle
    float getPointSize() -> getPointSize
    void setPointSize(float) -> setPointSize
    void setRange(double[]) -> setRange
    void setRange(double[],int) -> setRange
    boolean isInitialRangeSet() -> isInitialRangeSet
    boolean isInitialRangeSet(int) -> isInitialRangeSet
    double[] getInitialRange() -> getInitialRange
    double[] getInitialRange(int) -> getInitialRange
    void setInitialRange(double[]) -> setInitialRange
    void setInitialRange(double[],int) -> setInitialRange
    int getXLabelsColor() -> getXLabelsColor
    int getYLabelsColor(int) -> getYLabelsColor
    void setXLabelsColor(int) -> setXLabelsColor
    void setYLabelsColor(int,int) -> setYLabelsColor
    android.graphics.Paint$Align getXLabelsAlign() -> getXLabelsAlign
    void setXLabelsAlign(android.graphics.Paint$Align) -> setXLabelsAlign
    android.graphics.Paint$Align getYLabelsAlign(int) -> getYLabelsAlign
    void setYLabelsAlign(android.graphics.Paint$Align) -> setYLabelsAlign
    android.graphics.Paint$Align getYAxisAlign(int) -> getYAxisAlign
    void setYAxisAlign(android.graphics.Paint$Align,int) -> setYAxisAlign
    void setYLabelsAlign(android.graphics.Paint$Align,int) -> setYLabelsAlign
    int getScalesCount() -> getScalesCount
    double[] getmYLimitsLine() -> getmYLimitsLine
    void setmYLimitsLine(double[]) -> setmYLimitsLine
    int[] getmYLimitsLineColor() -> getmYLimitsLineColor
    void setmYLimitsLineColor(int[]) -> setmYLimitsLineColor
    void setScaleLineEnabled(boolean) -> setScaleLineEnabled
    boolean isScaleLineEnabled() -> isScaleLineEnabled
    int getScaleRectHeight() -> getScaleRectHeight
    void setScaleRectHeight(int) -> setScaleRectHeight
    int getScaleRectWidth() -> getScaleRectWidth
    void setScaleRectWidth(int) -> setScaleRectWidth
    int getScaleRectColor() -> getScaleRectColor
    void setScaleRectColor(int) -> setScaleRectColor
    int getScaleLineColor() -> getScaleLineColor
    void setScaleLineColor(int) -> setScaleLineColor
    int getExplainTextSize1() -> getExplainTextSize1
    void setExplainTextSize1(int) -> setExplainTextSize1
    int getExplainTextSize2() -> getExplainTextSize2
    void setExplainTextSize2(int) -> setExplainTextSize2
    int getScaleCircleRadius() -> getScaleCircleRadius
    void setScaleCircleRadius(int) -> setScaleCircleRadius
    boolean isDisplayValue0() -> isDisplayValue0
    void setDisplayValue0(boolean) -> setDisplayValue0
com.ab.view.chart.XYMultipleSeriesRenderer$Orientation -> com.ab.view.chart.XYMultipleSeriesRenderer$Orientation:
    com.ab.view.chart.XYMultipleSeriesRenderer$Orientation HORIZONTAL -> HORIZONTAL
    com.ab.view.chart.XYMultipleSeriesRenderer$Orientation VERTICAL -> VERTICAL
    int mAngle -> mAngle
    com.ab.view.chart.XYMultipleSeriesRenderer$Orientation[] ENUM$VALUES -> ENUM$VALUES
    int getAngle() -> getAngle
    com.ab.view.chart.XYMultipleSeriesRenderer$Orientation[] values() -> values
    com.ab.view.chart.XYMultipleSeriesRenderer$Orientation valueOf(java.lang.String) -> valueOf
com.ab.view.chart.XYSeries -> com.ab.view.chart.XYSeries:
    java.lang.String mTitle -> mTitle
    com.ab.view.chart.IndexXYMap mXY -> mXY
    com.ab.view.chart.IndexXYMap mXC -> mXC
    com.ab.view.chart.IndexXYMap mXE -> mXE
    double mMinX -> mMinX
    double mMaxX -> mMaxX
    double mMinY -> mMinY
    double mMaxY -> mMaxY
    int mScaleNumber -> mScaleNumber
    int getScaleNumber() -> getScaleNumber
    void initRange() -> initRange
    void updateRange(double,double) -> updateRange
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void add(double,double) -> add
    void add(double,double,int) -> add
    void add(double,double,int,java.lang.String) -> add
    void remove(int) -> remove
    void clear() -> clear
    double getX(int) -> getX
    double getY(int) -> getY
    java.util.SortedMap getRange(double,double,int) -> getRange
    int getIndexForKey(double) -> getIndexForKey
    int getItemCount() -> getItemCount
    double getMinX() -> getMinX
    double getMinY() -> getMinY
    double getMaxX() -> getMaxX
    double getMaxY() -> getMaxY
    com.ab.view.chart.IndexXYMap getmXC() -> getmXC
    int getmXCValue(double) -> getmXCValue
    com.ab.view.chart.IndexXYMap getmXE() -> getmXE
    java.lang.String getmXEValue(double) -> getmXEValue
com.ab.view.chart.XYSeriesRenderer -> com.ab.view.chart.XYSeriesRenderer:
    boolean mFillPoints -> mFillPoints
    boolean mFillBelowLine -> mFillBelowLine
    int mFillColor -> mFillColor
    com.ab.view.chart.PointStyle mPointStyle -> mPointStyle
    float mLineWidth -> mLineWidth
    boolean isFillBelowLine() -> isFillBelowLine
    void setFillBelowLine(boolean) -> setFillBelowLine
    boolean isFillPoints() -> isFillPoints
    void setFillPoints(boolean) -> setFillPoints
    int getFillBelowLineColor() -> getFillBelowLineColor
    void setFillBelowLineColor(int) -> setFillBelowLineColor
    com.ab.view.chart.PointStyle getPointStyle() -> getPointStyle
    void setPointStyle(com.ab.view.chart.PointStyle) -> setPointStyle
    float getLineWidth() -> getLineWidth
    void setLineWidth(float) -> setLineWidth
com.ab.view.chart.XYValueSeries -> com.ab.view.chart.XYValueSeries:
    java.util.List mValue -> mValue
    double mMinValue -> mMinValue
    double mMaxValue -> mMaxValue
    void add(double,double,double) -> add
    void initRange() -> initRange
    void updateRange(double) -> updateRange
    void add(double,double) -> add
    void remove(int) -> remove
    void clear() -> clear
    double getValue(int) -> getValue
    double getMinValue() -> getMinValue
    double getMaxValue() -> getMaxValue
com.ab.view.chart.Zoom -> com.ab.view.chart.Zoom:
    boolean mZoomIn -> mZoomIn
    float mZoomRate -> mZoomRate
    java.util.List mZoomListeners -> mZoomListeners
    boolean limitsReachedX -> limitsReachedX
    boolean limitsReachedY -> limitsReachedY
    int ZOOM_AXIS_XY -> ZOOM_AXIS_XY
    int ZOOM_AXIS_X -> ZOOM_AXIS_X
    int ZOOM_AXIS_Y -> ZOOM_AXIS_Y
    void setZoomRate(float) -> setZoomRate
    void apply(int) -> apply
    void notifyZoomListeners(com.ab.view.chart.ZoomEvent) -> notifyZoomListeners
    void notifyZoomResetListeners() -> notifyZoomResetListeners
    void addZoomListener(com.ab.view.chart.ZoomListener) -> addZoomListener
    void removeZoomListener(com.ab.view.chart.ZoomListener) -> removeZoomListener
com.ab.view.chart.ZoomEvent -> com.ab.view.chart.ZoomEvent:
    boolean mZoomIn -> mZoomIn
    float mZoomRate -> mZoomRate
    boolean isZoomIn() -> isZoomIn
    float getZoomRate() -> getZoomRate
com.ab.view.chart.ZoomListener -> com.ab.view.chart.ZoomListener:
    void zoomApplied(com.ab.view.chart.ZoomEvent) -> zoomApplied
    void zoomReset() -> zoomReset
com.ab.view.cropimage.CropImage -> com.ab.view.cropimage.CropImage:
    java.io.File FILE_LOCAL -> FILE_LOCAL
    boolean mWaitingToPick -> mWaitingToPick
    boolean mSaving -> mSaving
    com.ab.view.cropimage.HighlightView mCrop -> mCrop
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    com.ab.view.cropimage.CropImageView mImageView -> mImageView
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.Runnable mRunFaceDetection -> mRunFaceDetection
    void crop(android.graphics.Bitmap) -> crop
    void startRotate(float) -> startRotate
    void startFaceDetection() -> startFaceDetection
    android.graphics.Bitmap cropAndSave() -> cropAndSave
    android.graphics.Bitmap cropAndSave(android.graphics.Bitmap) -> cropAndSave
    void cropCancel() -> cropCancel
    android.graphics.Bitmap onSaveClicked(android.graphics.Bitmap) -> onSaveClicked
    java.lang.String saveToLocal(android.graphics.Bitmap) -> saveToLocal
    com.ab.view.cropimage.CropImageView access$0(com.ab.view.cropimage.CropImage) -> access$0
    android.graphics.Bitmap access$1(com.ab.view.cropimage.CropImage) -> access$1
    android.os.Handler access$2(com.ab.view.cropimage.CropImage) -> access$2
    void access$3(com.ab.view.cropimage.CropImage,android.graphics.Bitmap) -> access$3
com.ab.view.cropimage.CropImage$1 -> com.ab.view.cropimage.CropImage$1:
    float mScale -> mScale
    android.graphics.Matrix mImageMatrix -> mImageMatrix
    android.media.FaceDetector$Face[] mFaces -> mFaces
    int mNumFaces -> mNumFaces
    com.ab.view.cropimage.CropImage this$0 -> this$0
    void handleFace(android.media.FaceDetector$Face) -> handleFace
    void makeDefault() -> makeDefault
    android.graphics.Bitmap prepareBitmap() -> prepareBitmap
    void run() -> run
    void access$0(com.ab.view.cropimage.CropImage$1) -> access$0
    com.ab.view.cropimage.CropImage access$1(com.ab.view.cropimage.CropImage$1) -> access$1
com.ab.view.cropimage.CropImage$1$1 -> com.ab.view.cropimage.CropImage$1$1:
    com.ab.view.cropimage.CropImage$1 this$1 -> this$1
    void run() -> run
com.ab.view.cropimage.CropImage$2 -> com.ab.view.cropimage.CropImage$2:
    com.ab.view.cropimage.CropImage this$0 -> this$0
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    float val$degrees -> val$degrees
    void run() -> run
    com.ab.view.cropimage.CropImage access$0(com.ab.view.cropimage.CropImage$2) -> access$0
com.ab.view.cropimage.CropImage$2$1 -> com.ab.view.cropimage.CropImage$2$1:
    com.ab.view.cropimage.CropImage$2 this$1 -> this$1
    float val$degrees -> val$degrees
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    void run() -> run
com.ab.view.cropimage.CropImage$3 -> com.ab.view.cropimage.CropImage$3:
    com.ab.view.cropimage.CropImage this$0 -> this$0
    void run() -> run
    com.ab.view.cropimage.CropImage access$0(com.ab.view.cropimage.CropImage$3) -> access$0
com.ab.view.cropimage.CropImage$3$1 -> com.ab.view.cropimage.CropImage$3$1:
    com.ab.view.cropimage.CropImage$3 this$1 -> this$1
    android.graphics.Bitmap val$b -> val$b
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    void run() -> run
com.ab.view.cropimage.CropImage$BackgroundJob -> com.ab.view.cropimage.CropImage$BackgroundJob:
    java.lang.String message -> message
    java.lang.Runnable mJob -> mJob
    android.os.Handler mHandler -> mHandler
    com.ab.view.cropimage.CropImage this$0 -> this$0
    void run() -> run
    android.os.Handler access$0(com.ab.view.cropimage.CropImage$BackgroundJob) -> access$0
com.ab.view.cropimage.CropImage$BackgroundJob$1 -> com.ab.view.cropimage.CropImage$BackgroundJob$1:
    com.ab.view.cropimage.CropImage$BackgroundJob this$1 -> this$1
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    void run() -> run
com.ab.view.cropimage.CropImageView -> com.ab.view.cropimage.CropImageView:
    java.util.ArrayList mHighlightViews -> mHighlightViews
    com.ab.view.cropimage.HighlightView mMotionHighlightView -> mMotionHighlightView
    float mLastX -> mLastX
    float mLastY -> mLastY
    int mMotionEdge -> mMotionEdge
    com.ab.view.cropimage.CropImage mCropImage -> mCropImage
    void onLayout(boolean,int,int,int,int) -> onLayout
    void zoomTo(float,float,float) -> zoomTo
    void zoomIn() -> zoomIn
    void zoomOut() -> zoomOut
    void postTranslate(float,float) -> postTranslate
    void recomputeFocus(android.view.MotionEvent) -> recomputeFocus
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void ensureVisible(com.ab.view.cropimage.HighlightView) -> ensureVisible
    void centerBasedOnHighlightView(com.ab.view.cropimage.HighlightView) -> centerBasedOnHighlightView
    void onDraw(android.graphics.Canvas) -> onDraw
    void add(com.ab.view.cropimage.HighlightView) -> add
    void setCropImage(com.ab.view.cropimage.CropImage) -> setCropImage
    void resetView(android.graphics.Bitmap) -> resetView
com.ab.view.cropimage.CropViewBase -> com.ab.view.cropimage.CropViewBase:
    java.lang.String TAG -> TAG
    android.graphics.Matrix mBaseMatrix -> mBaseMatrix
    android.graphics.Matrix mSuppMatrix -> mSuppMatrix
    android.graphics.Matrix mDisplayMatrix -> mDisplayMatrix
    float[] mMatrixValues -> mMatrixValues
    com.ab.view.cropimage.RotateBitmap mBitmapDisplayed -> mBitmapDisplayed
    int mThisWidth -> mThisWidth
    int mThisHeight -> mThisHeight
    float mMaxZoom -> mMaxZoom
    int STATE_HIGHLIGHT -> STATE_HIGHLIGHT
    int STATE_DOODLE -> STATE_DOODLE
    int STATE_NONE -> STATE_NONE
    int mState -> mState
    com.ab.view.cropimage.CropViewBase$Recycler mRecycler -> mRecycler
    android.os.Handler mHandler -> mHandler
    int mLastXTouchPos -> mLastXTouchPos
    int mLastYTouchPos -> mLastYTouchPos
    java.lang.Runnable mOnLayoutRunnable -> mOnLayoutRunnable
    float SCALE_RATE -> SCALE_RATE
    void setRecycler(com.ab.view.cropimage.CropViewBase$Recycler) -> setRecycler
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageBitmap(android.graphics.Bitmap,int) -> setImageBitmap
    void clear() -> clear
    void setImageBitmapResetBase(android.graphics.Bitmap,boolean) -> setImageBitmapResetBase
    void setImageRotateBitmapResetBase(com.ab.view.cropimage.RotateBitmap,boolean) -> setImageRotateBitmapResetBase
    void center(boolean,boolean) -> center
    void init() -> init
    float getValue(android.graphics.Matrix,int) -> getValue
    float getScale(android.graphics.Matrix) -> getScale
    float getScale() -> getScale
    void getProperBaseMatrix(com.ab.view.cropimage.RotateBitmap,android.graphics.Matrix) -> getProperBaseMatrix
    android.graphics.Matrix getImageViewMatrix() -> getImageViewMatrix
    float maxZoom() -> maxZoom
    void zoomTo(float,float,float) -> zoomTo
    void zoomTo(float,float,float,float) -> zoomTo
    void zoomTo(float) -> zoomTo
    void zoomIn() -> zoomIn
    void zoomOut() -> zoomOut
    void zoomIn(float) -> zoomIn
    void zoomOut(float) -> zoomOut
    void postTranslate(float,float) -> postTranslate
    void panBy(float,float) -> panBy
com.ab.view.cropimage.CropViewBase$1 -> com.ab.view.cropimage.CropViewBase$1:
    com.ab.view.cropimage.CropViewBase this$0 -> this$0
    com.ab.view.cropimage.RotateBitmap val$bitmap -> val$bitmap
    boolean val$resetSupp -> val$resetSupp
    void run() -> run
com.ab.view.cropimage.CropViewBase$2 -> com.ab.view.cropimage.CropViewBase$2:
    com.ab.view.cropimage.CropViewBase this$0 -> this$0
    float val$durationMs -> val$durationMs
    long val$startTime -> val$startTime
    float val$oldScale -> val$oldScale
    float val$incrementPerMs -> val$incrementPerMs
    float val$centerX -> val$centerX
    float val$centerY -> val$centerY
    void run() -> run
com.ab.view.cropimage.CropViewBase$Recycler -> com.ab.view.cropimage.CropViewBase$Recycler:
    void recycle(android.graphics.Bitmap) -> recycle
com.ab.view.cropimage.HighlightView -> com.ab.view.cropimage.HighlightView:
    java.lang.String TAG -> TAG
    android.view.View mContext -> mContext
    int GROW_NONE -> GROW_NONE
    int GROW_LEFT_EDGE -> GROW_LEFT_EDGE
    int GROW_RIGHT_EDGE -> GROW_RIGHT_EDGE
    int GROW_TOP_EDGE -> GROW_TOP_EDGE
    int GROW_BOTTOM_EDGE -> GROW_BOTTOM_EDGE
    int MOVE -> MOVE
    boolean mIsFocused -> mIsFocused
    boolean mHidden -> mHidden
    com.ab.view.cropimage.HighlightView$ModifyMode mMode -> mMode
    android.graphics.Rect mDrawRect -> mDrawRect
    android.graphics.RectF mImageRect -> mImageRect
    android.graphics.RectF mCropRect -> mCropRect
    android.graphics.Matrix mMatrix -> mMatrix
    boolean mMaintainAspectRatio -> mMaintainAspectRatio
    float mInitialAspectRatio -> mInitialAspectRatio
    boolean mCircle -> mCircle
    android.graphics.drawable.Drawable mResizeDrawableDiagonal -> mResizeDrawableDiagonal
    android.graphics.drawable.Drawable mResizeDrawableDiagonal2 -> mResizeDrawableDiagonal2
    android.graphics.Paint mFocusPaint -> mFocusPaint
    android.graphics.Paint mNoFocusPaint -> mNoFocusPaint
    android.graphics.Paint mOutlinePaint -> mOutlinePaint
    void init() -> init
    boolean hasFocus() -> hasFocus
    void setFocus(boolean) -> setFocus
    void setHidden(boolean) -> setHidden
    void draw(android.graphics.Canvas) -> draw
    void setMode(com.ab.view.cropimage.HighlightView$ModifyMode) -> setMode
    int getHit(float,float) -> getHit
    void handleMotion(int,float,float) -> handleMotion
    void moveBy(float,float) -> moveBy
    void growBy(float,float) -> growBy
    android.graphics.Rect getCropRect() -> getCropRect
    android.graphics.Rect computeLayout() -> computeLayout
    void invalidate() -> invalidate
    void setup(android.graphics.Matrix,android.graphics.Rect,android.graphics.RectF,boolean,boolean) -> setup
com.ab.view.cropimage.HighlightView$ModifyMode -> com.ab.view.cropimage.HighlightView$ModifyMode:
    com.ab.view.cropimage.HighlightView$ModifyMode None -> None
    com.ab.view.cropimage.HighlightView$ModifyMode Move -> Move
    com.ab.view.cropimage.HighlightView$ModifyMode Grow -> Grow
    com.ab.view.cropimage.HighlightView$ModifyMode[] ENUM$VALUES -> ENUM$VALUES
    com.ab.view.cropimage.HighlightView$ModifyMode[] values() -> values
    com.ab.view.cropimage.HighlightView$ModifyMode valueOf(java.lang.String) -> valueOf
com.ab.view.cropimage.RotateBitmap -> com.ab.view.cropimage.RotateBitmap:
    java.lang.String TAG -> TAG
    android.graphics.Bitmap mBitmap -> mBitmap
    int mRotation -> mRotation
    void setRotation(int) -> setRotation
    int getRotation() -> getRotation
    android.graphics.Bitmap getBitmap() -> getBitmap
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    android.graphics.Matrix getRotateMatrix() -> getRotateMatrix
    boolean isOrientationChanged() -> isOrientationChanged
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    void recycle() -> recycle
com.ab.view.ioc.AbIocSelect -> com.ab.view.ioc.AbIocSelect:
    java.lang.String selected() -> selected
    java.lang.String noSelected() -> noSelected
com.ab.view.ioc.AbIocView -> com.ab.view.ioc.AbIocView:
    int id() -> id
    java.lang.String click() -> click
    java.lang.String longClick() -> longClick
    java.lang.String itemClick() -> itemClick
    java.lang.String itemLongClick() -> itemLongClick
    com.ab.view.ioc.AbIocSelect select() -> select
com.ab.view.level.AbLevelAbstractChart -> com.ab.view.level.AbLevelAbstractChart:
    long serialVersionUID -> serialVersionUID
    void draw(android.graphics.Canvas,int,int,int,int,int,int,android.graphics.Paint) -> draw
com.ab.view.level.AbLevelChart -> com.ab.view.level.AbLevelChart:
    long serialVersionUID -> serialVersionUID
    com.ab.view.level.AbLevelSeriesDataset mDataset -> mDataset
    com.ab.view.level.AbLevelSeriesRenderer mRenderer -> mRenderer
    int measureWidth -> measureWidth
    int measureHeight -> measureHeight
    int[] color -> color
    float[] part -> part
    float[] partValue -> partValue
    java.lang.String textValue -> textValue
    java.lang.String textDesc -> textDesc
    int textlevelIndex -> textlevelIndex
    int textLevelSize -> textLevelSize
    int marginTop -> marginTop
    int arrowWidth -> arrowWidth
    int arrowHeight -> arrowHeight
    int levelHeight -> levelHeight
    int arrowMarginTop -> arrowMarginTop
    int partTextSize -> partTextSize
    int textDescSize -> textDescSize
    void setDatasetRenderer(com.ab.view.level.AbLevelSeriesDataset,com.ab.view.level.AbLevelSeriesRenderer) -> setDatasetRenderer
    void draw(android.graphics.Canvas,int,int,int,int,int,int,android.graphics.Paint) -> draw
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.ab.view.level.AbLevelChartFactory -> com.ab.view.level.AbLevelChartFactory:
    com.ab.view.level.AbLevelView getLevelChartView(android.content.Context,com.ab.view.level.AbLevelSeriesDataset,com.ab.view.level.AbLevelSeriesRenderer) -> getLevelChartView
    void checkParameters(com.ab.view.level.AbLevelSeriesDataset,com.ab.view.level.AbLevelSeriesRenderer) -> checkParameters
com.ab.view.level.AbLevelDefaultRenderer -> com.ab.view.level.AbLevelDefaultRenderer:
    long serialVersionUID -> serialVersionUID
com.ab.view.level.AbLevelSeries -> com.ab.view.level.AbLevelSeries:
    long serialVersionUID -> serialVersionUID
com.ab.view.level.AbLevelSeriesDataset -> com.ab.view.level.AbLevelSeriesDataset:
    long serialVersionUID -> serialVersionUID
    com.ab.view.level.AbLevelSeries mSeries -> mSeries
    com.ab.view.level.AbLevelSeries getmSeries() -> getmSeries
    void setmSeries(com.ab.view.level.AbLevelSeries) -> setmSeries
com.ab.view.level.AbLevelSeriesRenderer -> com.ab.view.level.AbLevelSeriesRenderer:
    long serialVersionUID -> serialVersionUID
    int width -> width
    int height -> height
    int[] color -> color
    float[] part -> part
    float[] partValue -> partValue
    java.lang.String textValue -> textValue
    java.lang.String textDesc -> textDesc
    int textlevelIndex -> textlevelIndex
    int textLevelSize -> textLevelSize
    int marginTop -> marginTop
    int arrowWidth -> arrowWidth
    int arrowHeight -> arrowHeight
    int levelHeight -> levelHeight
    int arrowMarginTop -> arrowMarginTop
    int partTextSize -> partTextSize
    int textDescSize -> textDescSize
    int textRectWidth -> textRectWidth
    int textRectHeight -> textRectHeight
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    int getHeight() -> getHeight
    void setHeight(int) -> setHeight
    int[] getColor() -> getColor
    void setColor(int[]) -> setColor
    float[] getPart() -> getPart
    void setPart(float[]) -> setPart
    float[] getPartValue() -> getPartValue
    void setPartValue(float[]) -> setPartValue
    java.lang.String getTextValue() -> getTextValue
    void setTextValue(java.lang.String) -> setTextValue
    java.lang.String getTextDesc() -> getTextDesc
    void setTextDesc(java.lang.String) -> setTextDesc
    int getTextlevelIndex() -> getTextlevelIndex
    void setTextlevelIndex(int) -> setTextlevelIndex
    int getTextLevelSize() -> getTextLevelSize
    void setTextLevelSize(int) -> setTextLevelSize
    int getMarginTop() -> getMarginTop
    void setMarginTop(int) -> setMarginTop
    int getArrowWidth() -> getArrowWidth
    void setArrowWidth(int) -> setArrowWidth
    int getArrowHeight() -> getArrowHeight
    void setArrowHeight(int) -> setArrowHeight
    int getLevelHeight() -> getLevelHeight
    void setLevelHeight(int) -> setLevelHeight
    int getArrowMarginTop() -> getArrowMarginTop
    void setArrowMarginTop(int) -> setArrowMarginTop
    int getPartTextSize() -> getPartTextSize
    void setPartTextSize(int) -> setPartTextSize
    int getTextDescSize() -> getTextDescSize
    void setTextDescSize(int) -> setTextDescSize
    int getTextRectWidth() -> getTextRectWidth
    void setTextRectWidth(int) -> setTextRectWidth
    int getTextRectHeight() -> getTextRectHeight
    void setTextRectHeight(int) -> setTextRectHeight
com.ab.view.level.AbLevelView -> com.ab.view.level.AbLevelView:
    android.content.Context mContext -> mContext
    com.ab.view.level.AbLevelChart mAbLevelChart -> mAbLevelChart
    android.graphics.Paint mPaint -> mPaint
    int width -> width
    int height -> height
    int screenWidth -> screenWidth
    int screenHeight -> screenHeight
    void onDraw(android.graphics.Canvas) -> onDraw
com.ab.view.listener.AbIocEventListener -> com.ab.view.listener.AbIocEventListener:
    java.lang.Object handler -> handler
    java.lang.String clickMethod -> clickMethod
    java.lang.String longClickMethod -> longClickMethod
    java.lang.String itemClickMethod -> itemClickMethod
    java.lang.String itemSelectMethod -> itemSelectMethod
    java.lang.String nothingSelectedMethod -> nothingSelectedMethod
    java.lang.String itemLongClickMehtod -> itemLongClickMehtod
    com.ab.view.listener.AbIocEventListener click(java.lang.String) -> click
    com.ab.view.listener.AbIocEventListener longClick(java.lang.String) -> longClick
    com.ab.view.listener.AbIocEventListener itemLongClick(java.lang.String) -> itemLongClick
    com.ab.view.listener.AbIocEventListener itemClick(java.lang.String) -> itemClick
    com.ab.view.listener.AbIocEventListener select(java.lang.String) -> select
    com.ab.view.listener.AbIocEventListener noSelect(java.lang.String) -> noSelect
    boolean onLongClick(android.view.View) -> onLongClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    java.lang.Object invokeClickMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeClickMethod
    boolean invokeLongClickMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeLongClickMethod
    java.lang.Object invokeItemClickMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeItemClickMethod
    boolean invokeItemLongClickMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeItemLongClickMethod
    java.lang.Object invokeItemSelectMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeItemSelectMethod
    java.lang.Object invokeNoSelectMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeNoSelectMethod
com.ab.view.listener.AbOnChangeListener -> com.ab.view.listener.AbOnChangeListener:
    void onChange(int) -> onChange
com.ab.view.listener.AbOnItemClickListener -> com.ab.view.listener.AbOnItemClickListener:
    void onClick(int) -> onClick
com.ab.view.listener.AbOnListViewListener -> com.ab.view.listener.AbOnListViewListener:
    void onRefresh() -> onRefresh
    void onLoadMore() -> onLoadMore
com.ab.view.listener.AbOnOpenListener -> com.ab.view.listener.AbOnOpenListener:
    void open() -> open
    void close() -> close
com.ab.view.listener.AbOnPageChangeListener -> com.ab.view.listener.AbOnPageChangeListener:
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void notifyDataSetChanged() -> notifyDataSetChanged
com.ab.view.listener.AbOnProgressListener -> com.ab.view.listener.AbOnProgressListener:
    void onProgress(int) -> onProgress
    void onComplete(int) -> onComplete
com.ab.view.listener.AbOnRefreshListener -> com.ab.view.listener.AbOnRefreshListener:
    void onRefresh() -> onRefresh
com.ab.view.listener.AbOnScrollListener -> com.ab.view.listener.AbOnScrollListener:
    void onScroll(int) -> onScroll
    void onScrollStoped() -> onScrollStoped
    void onScrollToLeft() -> onScrollToLeft
    void onScrollToRight() -> onScrollToRight
com.ab.view.listener.AbOnTouchListener -> com.ab.view.listener.AbOnTouchListener:
    void onTouch(android.view.MotionEvent) -> onTouch
com.ab.view.progress.AbCircleProgressBar -> com.ab.view.progress.AbCircleProgressBar:
    int progress -> progress
    int max -> max
    android.graphics.Paint pathPaint -> pathPaint
    android.graphics.Paint fillArcPaint -> fillArcPaint
    android.graphics.RectF oval -> oval
    int[] arcColors -> arcColors
    int[] shadowsColors -> shadowsColors
    int pathColor -> pathColor
    int pathBorderColor -> pathBorderColor
    int pathWidth -> pathWidth
    int width -> width
    int height -> height
    int radius -> radius
    android.graphics.EmbossMaskFilter emboss -> emboss
    float[] direction -> direction
    float light -> light
    float specular -> specular
    float blur -> blur
    android.graphics.BlurMaskFilter mBlur -> mBlur
    com.ab.view.listener.AbOnProgressListener mAbOnProgressListener -> mAbOnProgressListener
    boolean reset -> reset
    void onDraw(android.graphics.Canvas) -> onDraw
    int getRadius() -> getRadius
    void setRadius(int) -> setRadius
    int getMax() -> getMax
    void setMax(int) -> setMax
    int getProgress() -> getProgress
    void setProgress(int) -> setProgress
    void onMeasure(int,int) -> onMeasure
    com.ab.view.listener.AbOnProgressListener getAbOnProgressListener() -> getAbOnProgressListener
    void setAbOnProgressListener(com.ab.view.listener.AbOnProgressListener) -> setAbOnProgressListener
    void reset() -> reset
com.ab.view.progress.AbHorizontalProgressBar -> com.ab.view.progress.AbHorizontalProgressBar:
    int progress -> progress
    int max -> max
    android.graphics.Paint pathPaint -> pathPaint
    android.graphics.Paint fillPaint -> fillPaint
    int pathWidth -> pathWidth
    int width -> width
    int height -> height
    int pathColor -> pathColor
    int pathBorderColor -> pathBorderColor
    int[] fillColors -> fillColors
    android.graphics.EmbossMaskFilter emboss -> emboss
    float[] direction -> direction
    float light -> light
    float specular -> specular
    float blur -> blur
    android.graphics.BlurMaskFilter mBlur -> mBlur
    com.ab.view.listener.AbOnProgressListener mAbOnProgressListener -> mAbOnProgressListener
    boolean reset -> reset
    int getProgress() -> getProgress
    void setProgress(int) -> setProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void onDraw(android.graphics.Canvas) -> onDraw
    com.ab.view.listener.AbOnProgressListener getAbOnProgressListener() -> getAbOnProgressListener
    void setAbOnProgressListener(com.ab.view.listener.AbOnProgressListener) -> setAbOnProgressListener
    void reset() -> reset
com.ab.view.pullview.AbListViewFooter -> com.ab.view.pullview.AbListViewFooter:
    android.content.Context mContext -> mContext
    int mState -> mState
    int STATE_READY -> STATE_READY
    int STATE_LOADING -> STATE_LOADING
    int STATE_NO -> STATE_NO
    int STATE_EMPTY -> STATE_EMPTY
    android.widget.LinearLayout footerView -> footerView
    android.widget.ProgressBar footerProgressBar -> footerProgressBar
    android.widget.TextView footerTextView -> footerTextView
    int footerHeight -> footerHeight
    void initView(android.content.Context) -> initView
    void setState(int) -> setState
    int getVisiableHeight() -> getVisiableHeight
    void hide() -> hide
    void show() -> show
    void setTextColor(int) -> setTextColor
    void setBackgroundColor(int) -> setBackgroundColor
    android.widget.ProgressBar getFooterProgressBar() -> getFooterProgressBar
    void setFooterProgressBarDrawable(android.graphics.drawable.Drawable) -> setFooterProgressBarDrawable
    int getFooterHeight() -> getFooterHeight
    void setVisiableHeight(int) -> setVisiableHeight
    int getState() -> getState
com.ab.view.pullview.AbListViewHeader -> com.ab.view.pullview.AbListViewHeader:
    android.content.Context mContext -> mContext
    android.widget.LinearLayout headerView -> headerView
    android.widget.ImageView arrowImageView -> arrowImageView
    android.widget.ProgressBar headerProgressBar -> headerProgressBar
    android.graphics.Bitmap arrowImage -> arrowImage
    android.widget.TextView tipsTextview -> tipsTextview
    android.widget.TextView headerTimeView -> headerTimeView
    int mState -> mState
    android.view.animation.Animation mRotateUpAnim -> mRotateUpAnim
    android.view.animation.Animation mRotateDownAnim -> mRotateDownAnim
    int ROTATE_ANIM_DURATION -> ROTATE_ANIM_DURATION
    int STATE_NORMAL -> STATE_NORMAL
    int STATE_READY -> STATE_READY
    int STATE_REFRESHING -> STATE_REFRESHING
    java.lang.String lastRefreshTime -> lastRefreshTime
    int headerHeight -> headerHeight
    void initView(android.content.Context) -> initView
    void setState(int) -> setState
    void setVisiableHeight(int) -> setVisiableHeight
    int getVisiableHeight() -> getVisiableHeight
    android.widget.LinearLayout getHeaderView() -> getHeaderView
    void setRefreshTime(java.lang.String) -> setRefreshTime
    int getHeaderHeight() -> getHeaderHeight
    void setTextColor(int) -> setTextColor
    void setBackgroundColor(int) -> setBackgroundColor
    android.widget.ProgressBar getHeaderProgressBar() -> getHeaderProgressBar
    void setHeaderProgressBarDrawable(android.graphics.drawable.Drawable) -> setHeaderProgressBarDrawable
    int getState() -> getState
com.ab.view.pullview.AbLoadingView -> com.ab.view.pullview.AbLoadingView:
    android.content.Context mContext -> mContext
    android.widget.LinearLayout loadingView -> loadingView
    android.widget.ProgressBar loadingProgressBar -> loadingProgressBar
    void initView(android.content.Context) -> initView
    android.widget.ProgressBar getFooterProgressBar() -> getFooterProgressBar
    void setLoadingProgressBar(android.widget.ProgressBar) -> setLoadingProgressBar
com.ab.view.pullview.AbPullToRefreshView -> com.ab.view.pullview.AbPullToRefreshView:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    boolean mEnablePullRefresh -> mEnablePullRefresh
    boolean mEnableLoadMore -> mEnableLoadMore
    int mLastMotionY -> mLastMotionY
    com.ab.view.pullview.AbListViewHeader mHeaderView -> mHeaderView
    com.ab.view.pullview.AbListViewFooter mFooterView -> mFooterView
    android.widget.AdapterView mAdapterView -> mAdapterView
    android.widget.ScrollView mScrollView -> mScrollView
    int mHeaderViewHeight -> mHeaderViewHeight
    int mFooterViewHeight -> mFooterViewHeight
    int mPullState -> mPullState
    int PULL_UP_STATE -> PULL_UP_STATE
    int PULL_DOWN_STATE -> PULL_DOWN_STATE
    int mCount -> mCount
    boolean isAll -> isAll
    boolean mPullRefreshing -> mPullRefreshing
    boolean mPullLoading -> mPullLoading
    com.ab.view.pullview.AbPullToRefreshView$OnFooterLoadListener mOnFooterLoadListener -> mOnFooterLoadListener
    com.ab.view.pullview.AbPullToRefreshView$OnHeaderRefreshListener mOnHeaderRefreshListener -> mOnHeaderRefreshListener
    void init(android.content.Context) -> init
    void addHeaderView() -> addHeaderView
    void addFooterView() -> addFooterView
    void onFinishInflate() -> onFinishInflate
    void initContentAdapterView() -> initContentAdapterView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isRefreshViewScroll(int) -> isRefreshViewScroll
    void headerPrepareToRefresh(int) -> headerPrepareToRefresh
    void footerPrepareToRefresh(int) -> footerPrepareToRefresh
    int updateHeaderViewTopMargin(int) -> updateHeaderViewTopMargin
    void headerRefreshing() -> headerRefreshing
    void footerLoading() -> footerLoading
    void setHeaderTopMargin(int) -> setHeaderTopMargin
    void onHeaderRefreshFinish() -> onHeaderRefreshFinish
    void onFooterLoadFinish() -> onFooterLoadFinish
    int getHeaderTopMargin() -> getHeaderTopMargin
    void setOnHeaderRefreshListener(com.ab.view.pullview.AbPullToRefreshView$OnHeaderRefreshListener) -> setOnHeaderRefreshListener
    void setOnFooterLoadListener(com.ab.view.pullview.AbPullToRefreshView$OnFooterLoadListener) -> setOnFooterLoadListener
    void setPullRefreshEnable(boolean) -> setPullRefreshEnable
    void setLoadMoreEnable(boolean) -> setLoadMoreEnable
    boolean isEnablePullRefresh() -> isEnablePullRefresh
    boolean isEnableLoadMore() -> isEnableLoadMore
    com.ab.view.pullview.AbListViewHeader getHeaderView() -> getHeaderView
    com.ab.view.pullview.AbListViewFooter getFooterView() -> getFooterView
    android.widget.ProgressBar getHeaderProgressBar() -> getHeaderProgressBar
    android.widget.ProgressBar getFooterProgressBar() -> getFooterProgressBar
com.ab.view.pullview.AbPullToRefreshView$OnFooterLoadListener -> com.ab.view.pullview.AbPullToRefreshView$OnFooterLoadListener:
    void onFooterLoad(com.ab.view.pullview.AbPullToRefreshView) -> onFooterLoad
com.ab.view.pullview.AbPullToRefreshView$OnHeaderRefreshListener -> com.ab.view.pullview.AbPullToRefreshView$OnHeaderRefreshListener:
    void onHeaderRefresh(com.ab.view.pullview.AbPullToRefreshView) -> onHeaderRefresh
com.ab.view.sample.AbHorizontalScrollView -> com.ab.view.sample.AbHorizontalScrollView:
    int intitPosition -> intitPosition
    int childWidth -> childWidth
    com.ab.view.listener.AbOnScrollListener onScrollListner -> onScrollListner
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void setOnScrollListener(com.ab.view.listener.AbOnScrollListener) -> setOnScrollListener
    void checkTotalWidth() -> checkTotalWidth
    com.ab.view.listener.AbOnScrollListener access$0(com.ab.view.sample.AbHorizontalScrollView) -> access$0
    int access$1(com.ab.view.sample.AbHorizontalScrollView) -> access$1
com.ab.view.sample.AbHorizontalScrollView$1 -> com.ab.view.sample.AbHorizontalScrollView$1:
    com.ab.view.sample.AbHorizontalScrollView this$0 -> this$0
    void run() -> run
com.ab.view.sample.AbInnerListView -> com.ab.view.sample.AbInnerListView:
    android.widget.ScrollView parentScrollView -> parentScrollView
    int maxHeight -> maxHeight
    android.widget.ScrollView getParentScrollView() -> getParentScrollView
    void setParentScrollView(android.widget.ScrollView) -> setParentScrollView
    int getMaxHeight() -> getMaxHeight
    void setMaxHeight(int) -> setMaxHeight
    void onMeasure(int,int) -> onMeasure
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setParentScrollAble(boolean) -> setParentScrollAble
com.ab.view.sample.AbInnerViewPager -> com.ab.view.sample.AbInnerViewPager:
    android.widget.ScrollView parentScrollView -> parentScrollView
    android.widget.ListView parentListView -> parentListView
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setParentScrollAble(boolean) -> setParentScrollAble
    void setParentScrollView(android.widget.ScrollView) -> setParentScrollView
    void setParentListView(android.widget.ListView) -> setParentListView
    void access$0(com.ab.view.sample.AbInnerViewPager,boolean) -> access$0
com.ab.view.sample.AbInnerViewPager$YScrollDetector -> com.ab.view.sample.AbInnerViewPager$YScrollDetector:
    com.ab.view.sample.AbInnerViewPager this$0 -> this$0
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
com.ab.view.sample.AbLetterFilterView -> com.ab.view.sample.AbLetterFilterView:
    char[] l -> l
    android.widget.SectionIndexer sectionIndexter -> sectionIndexter
    android.widget.ListView list -> list
    android.widget.TextView mDialogText -> mDialogText
    android.graphics.Paint paint -> paint
    int backgroundResource -> backgroundResource
    float widthCenter -> widthCenter
    float singleHeight -> singleHeight
    void init() -> init
    void setListView(android.widget.ListView) -> setListView
    void setTextView(android.widget.TextView) -> setTextView
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    int getBackgroundResource() -> getBackgroundResource
    void setBackgroundResource(int) -> setBackgroundResource
com.ab.view.sample.AbLinedEditText -> com.ab.view.sample.AbLinedEditText:
    android.graphics.Rect mRect -> mRect
    android.graphics.Paint mPaint -> mPaint
    void onDraw(android.graphics.Canvas) -> onDraw
com.ab.view.sample.AbNetworkImageView -> com.ab.view.sample.AbNetworkImageView:
    java.lang.String mUrl -> mUrl
    com.ab.bitmap.AbImageDownloader mAbImageDownloader -> mAbImageDownloader
    void setImageUrl(java.lang.String,com.ab.bitmap.AbImageDownloader) -> setImageUrl
    void loadImageIfNecessary(boolean) -> loadImageIfNecessary
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void drawableStateChanged() -> drawableStateChanged
com.ab.view.sample.AbOuterListView -> com.ab.view.sample.AbOuterListView:
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.ab.view.sample.AbOuterListView$YScrollDetector -> com.ab.view.sample.AbOuterListView$YScrollDetector:
    com.ab.view.sample.AbOuterListView this$0 -> this$0
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
com.ab.view.sample.AbOuterScrollView -> com.ab.view.sample.AbOuterScrollView:
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.ab.view.sample.AbOuterScrollView$YScrollDetector -> com.ab.view.sample.AbOuterScrollView$YScrollDetector:
    com.ab.view.sample.AbOuterScrollView this$0 -> this$0
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
com.ab.view.sample.AbScaleImageView -> com.ab.view.sample.AbScaleImageView:
    android.graphics.Bitmap currentBitmap -> currentBitmap
    int imageWidth -> imageWidth
    int imageHeight -> imageHeight
    void init() -> init
    void recycle() -> recycle
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void onMeasure(int,int) -> onMeasure
    void setImageWidth(int) -> setImageWidth
    void setImageHeight(int) -> setImageHeight
com.ab.view.sample.AbScrollTextView -> com.ab.view.sample.AbScrollTextView:
    boolean isFocused() -> isFocused
com.ab.view.sample.AbTextView -> com.ab.view.sample.AbTextView:
    float leftPadding -> leftPadding
    float topPadding -> topPadding
    float rightPadding -> rightPadding
    float bottomPadding -> bottomPadding
    float lineSpacing -> lineSpacing
    int maxLines -> maxLines
    float textSize -> textSize
    int textColor -> textColor
    android.text.TextPaint mTextPaint -> mTextPaint
    void onDraw(android.graphics.Canvas) -> onDraw
    void setPadding(float,float,float,float) -> setPadding
    int subStringLength(java.lang.String,int,android.text.TextPaint) -> subStringLength
    float getStringWidth(java.lang.String,android.text.TextPaint) -> getStringWidth
    float getDesiredWidth(java.lang.String,android.text.TextPaint) -> getDesiredWidth
    java.util.List getDrawRowStr(java.lang.String,int,android.text.TextPaint) -> getDrawRowStr
    int getDrawRowCount(java.lang.String,int,android.text.TextPaint) -> getDrawRowCount
    int drawText(android.graphics.Canvas,java.lang.String,int,android.text.TextPaint) -> drawText
    int getMaxLines() -> getMaxLines
    void setMaxLines(int) -> setMaxLines
    float getLineSpacing() -> getLineSpacing
    void setLineSpacing(float) -> setLineSpacing
    void setTextSize(float) -> setTextSize
    void setRawTextSize(float) -> setRawTextSize
    float getTextSize() -> getTextSize
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
com.ab.view.sample.AbUnSlideViewPager -> com.ab.view.sample.AbUnSlideViewPager:
    boolean enabled -> enabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setPagingEnabled(boolean) -> setPagingEnabled
com.ab.view.sliding.AbBottomTabView -> com.ab.view.sliding.AbBottomTabView:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.content.Context context -> context
    android.widget.LinearLayout mTabLayout -> mTabLayout
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    java.util.ArrayList tabItemList -> tabItemList
    java.util.ArrayList pagerItemList -> pagerItemList
    java.util.List tabItemTextList -> tabItemTextList
    java.util.List tabItemDrawableList -> tabItemDrawableList
    android.widget.LinearLayout$LayoutParams layoutParamsFF -> layoutParamsFF
    android.widget.LinearLayout$LayoutParams layoutParamsFW -> layoutParamsFW
    android.widget.LinearLayout$LayoutParams layoutParamsWW -> layoutParamsWW
    int mSelectedTabIndex -> mSelectedTabIndex
    com.ab.adapter.AbFragmentPagerAdapter mFragmentPagerAdapter -> mFragmentPagerAdapter
    int tabBackgroundResource -> tabBackgroundResource
    int tabTextSize -> tabTextSize
    int tabTextColor -> tabTextColor
    int tabSelectColor -> tabSelectColor
    android.view.View$OnClickListener mTabClickListener -> mTabClickListener
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    void setTabBackgroundResource(int) -> setTabBackgroundResource
    void setTabLayoutBackgroundResource(int) -> setTabLayoutBackgroundResource
    int getTabTextSize() -> getTabTextSize
    void setTabTextSize(int) -> setTabTextSize
    void setTabTextColor(int) -> setTabTextColor
    void setTabSelectColor(int) -> setTabSelectColor
    void addTab(java.lang.String,int) -> addTab
    void addTab(java.lang.String,int,android.graphics.drawable.Drawable) -> addTab
    void notifyTabDataSetChanged() -> notifyTabDataSetChanged
    void addItemViews(java.util.List,java.util.List) -> addItemViews
    void addItemViews(java.util.List,java.util.List,java.util.List) -> addItemViews
    void addItemView(java.lang.String,android.support.v4.app.Fragment) -> addItemView
    void addItemView(java.lang.String,android.support.v4.app.Fragment,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> addItemView
    void removeItemView(int) -> removeItemView
    void removeAllItemViews() -> removeAllItemViews
    android.support.v4.view.ViewPager getViewPager() -> getViewPager
    void setTabPadding(int,int,int,int) -> setTabPadding
com.ab.view.sliding.AbBottomTabView$1 -> com.ab.view.sliding.AbBottomTabView$1:
    com.ab.view.sliding.AbBottomTabView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.ab.view.sliding.AbBottomTabView$MyOnPageChangeListener -> com.ab.view.sliding.AbBottomTabView$MyOnPageChangeListener:
    com.ab.view.sliding.AbBottomTabView this$0 -> this$0
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.ab.view.sliding.AbSlidingButton -> com.ab.view.sliding.AbSlidingButton:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.content.Context context -> context
    android.graphics.Bitmap btnFrame -> btnFrame
    android.graphics.Bitmap btnMask -> btnMask
    android.graphics.Bitmap btnBottom -> btnBottom
    android.graphics.Bitmap mBtnNormal -> mBtnNormal
    android.graphics.Bitmap mBtnPressed -> mBtnPressed
    android.widget.CompoundButton$OnCheckedChangeListener onCheckedChangeListener -> onCheckedChangeListener
    boolean isChecked -> isChecked
    float mMaskHeight -> mMaskHeight
    float mMaskWidth -> mMaskWidth
    float mBtnOffPos -> mBtnOffPos
    float mBtnOnPos -> mBtnOnPos
    float mBtnPos -> mBtnPos
    float mLastBtnPos -> mLastBtnPos
    float mRealPos -> mRealPos
    float mBtnWidth -> mBtnWidth
    float mExtendOffsetY -> mExtendOffsetY
    int mAlpha -> mAlpha
    android.graphics.Paint mPaint -> mPaint
    android.graphics.PorterDuffXfermode mXfermode -> mXfermode
    android.graphics.RectF mSaveLayerRectF -> mSaveLayerRectF
    android.graphics.Bitmap mCurBtnPic -> mCurBtnPic
    float mFirstDownX -> mFirstDownX
    boolean mMoveEvent -> mMoveEvent
    boolean mAnimating -> mAnimating
    float mAnimationPosition -> mAnimationPosition
    float mAnimatedVelocity -> mAnimatedVelocity
    android.os.Handler handler -> handler
    void init(android.content.Context) -> init
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void setImageResource(int,int,int,int,int) -> setImageResource
    float getRealPos(float) -> getRealPos
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void setChecked(boolean,boolean) -> setChecked
    void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListener
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void moveView(float) -> moveView
    void moveView(float,boolean) -> moveView
    void startAnimation() -> startAnimation
    void moveViewToTarget() -> moveViewToTarget
    boolean performClick() -> performClick
    void toggle() -> toggle
    float access$0(com.ab.view.sliding.AbSlidingButton,float) -> access$0
    void access$1(com.ab.view.sliding.AbSlidingButton,float) -> access$1
    void access$2(com.ab.view.sliding.AbSlidingButton,float) -> access$2
com.ab.view.sliding.AbSlidingButton$1 -> com.ab.view.sliding.AbSlidingButton$1:
    com.ab.view.sliding.AbSlidingButton this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.ab.view.sliding.AbSlidingMenuView -> com.ab.view.sliding.AbSlidingMenuView:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.widget.Scroller mScroller -> mScroller
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mWidth -> mWidth
    int SCREEN_STATE_CLOSE -> SCREEN_STATE_CLOSE
    int SCREEN_STATE_OPEN -> SCREEN_STATE_OPEN
    int TOUCH_STATE_RESTART -> TOUCH_STATE_RESTART
    int TOUCH_STATE_SCROLLING -> TOUCH_STATE_SCROLLING
    int SCROLL_STATE_NO_ALLOW -> SCROLL_STATE_NO_ALLOW
    int SCROLL_STATE_ALLOW -> SCROLL_STATE_ALLOW
    int mScreenState -> mScreenState
    int mTouchState -> mTouchState
    int mScrollState -> mScrollState
    int mVelocityValue -> mVelocityValue
    boolean mOnClick -> mOnClick
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void open() -> open
    void close() -> close
    void computeScroll() -> computeScroll
    void obtainVelocityTracker(android.view.MotionEvent) -> obtainVelocityTracker
    void releaseVelocityTracker() -> releaseVelocityTracker
    int getScreenState() -> getScreenState
    void setContentView(android.view.View) -> setContentView
com.ab.view.sliding.AbSlidingPageView -> com.ab.view.sliding.AbSlidingPageView:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.widget.Scroller mScroller -> mScroller
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int SCREEN_STATE_NEXT -> SCREEN_STATE_NEXT
    int SCREEN_STATE_PROVIOUS -> SCREEN_STATE_PROVIOUS
    int mScreenState -> mScreenState
    int nextViewOffset -> nextViewOffset
    android.support.v4.view.ViewPager$OnPageChangeListener onPageChangeListener -> onPageChangeListener
    boolean finish -> finish
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void showNext() -> showNext
    void showPrevious() -> showPrevious
    void computeScroll() -> computeScroll
    void obtainVelocityTracker(android.view.MotionEvent) -> obtainVelocityTracker
    void releaseVelocityTracker() -> releaseVelocityTracker
    int getScreenState() -> getScreenState
    void addContentView(android.view.View) -> addContentView
    void addNextView(android.view.View) -> addNextView
    int getNextViewOffset() -> getNextViewOffset
    void setNextViewOffset(int) -> setNextViewOffset
    android.support.v4.view.ViewPager$OnPageChangeListener getOnPageChangeListener() -> getOnPageChangeListener
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
com.ab.view.sliding.AbSlidingPageView$1 -> com.ab.view.sliding.AbSlidingPageView$1:
    com.ab.view.sliding.AbSlidingPageView this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.ab.view.sliding.AbSlidingPageView$2 -> com.ab.view.sliding.AbSlidingPageView$2:
    com.ab.view.sliding.AbSlidingPageView this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ab.view.sliding.AbSlidingPageView$3 -> com.ab.view.sliding.AbSlidingPageView$3:
    com.ab.view.sliding.AbSlidingPageView this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.ab.view.sliding.AbSlidingPageView$4 -> com.ab.view.sliding.AbSlidingPageView$4:
    com.ab.view.sliding.AbSlidingPageView this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ab.view.sliding.AbSlidingPlayView -> com.ab.view.sliding.AbSlidingPlayView:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.content.Context context -> context
    com.ab.view.sample.AbInnerViewPager mViewPager -> mViewPager
    android.widget.LinearLayout navLinearLayout -> navLinearLayout
    android.widget.LinearLayout$LayoutParams pageLineLayoutParams -> pageLineLayoutParams
    int count -> count
    int position -> position
    android.graphics.Bitmap displayImage -> displayImage
    android.graphics.Bitmap hideImage -> hideImage
    com.ab.view.listener.AbOnItemClickListener mOnItemClickListener -> mOnItemClickListener
    com.ab.view.listener.AbOnChangeListener mAbChangeListener -> mAbChangeListener
    com.ab.view.listener.AbOnScrollListener mAbScrolledListener -> mAbScrolledListener
    com.ab.view.listener.AbOnTouchListener mAbOnTouchListener -> mAbOnTouchListener
    android.widget.LinearLayout$LayoutParams layoutParamsFF -> layoutParamsFF
    android.widget.LinearLayout$LayoutParams layoutParamsFW -> layoutParamsFW
    android.widget.LinearLayout$LayoutParams layoutParamsWF -> layoutParamsWF
    java.util.ArrayList mListViews -> mListViews
    com.ab.adapter.AbViewPagerAdapter mAbViewPagerAdapter -> mAbViewPagerAdapter
    android.widget.LinearLayout mNavLayoutParent -> mNavLayoutParent
    int navHorizontalGravity -> navHorizontalGravity
    int playingDirection -> playingDirection
    boolean play -> play
    android.os.Handler handler -> handler
    java.lang.Runnable runnable -> runnable
    void initView(android.content.Context) -> initView
    void creatIndex() -> creatIndex
    void makesurePosition() -> makesurePosition
    void addView(android.view.View) -> addView
    void addViews(java.util.List) -> addViews
    void removeAllViews() -> removeAllViews
    void onPageScrolledCallBack(int) -> onPageScrolledCallBack
    void onPageSelectedCallBack(int) -> onPageSelectedCallBack
    void startPlay() -> startPlay
    void stopPlay() -> stopPlay
    void setOnItemClickListener(com.ab.view.listener.AbOnItemClickListener) -> setOnItemClickListener
    void setOnPageChangeListener(com.ab.view.listener.AbOnChangeListener) -> setOnPageChangeListener
    void setOnPageScrolledListener(com.ab.view.listener.AbOnScrollListener) -> setOnPageScrolledListener
    void setOnTouchListener(com.ab.view.listener.AbOnTouchListener) -> setOnTouchListener
    void setPageLineImage(android.graphics.Bitmap,android.graphics.Bitmap) -> setPageLineImage
    android.support.v4.view.ViewPager getViewPager() -> getViewPager
    int getCount() -> getCount
    void setNavHorizontalGravity(int) -> setNavHorizontalGravity
    void setParentScrollView(android.widget.ScrollView) -> setParentScrollView
    void setParentListView(android.widget.ListView) -> setParentListView
    void setNavLayoutBackground(int) -> setNavLayoutBackground
    java.util.ArrayList access$0(com.ab.view.sliding.AbSlidingPlayView) -> access$0
    com.ab.view.sample.AbInnerViewPager access$1(com.ab.view.sliding.AbSlidingPlayView) -> access$1
    int access$2(com.ab.view.sliding.AbSlidingPlayView) -> access$2
    void access$3(com.ab.view.sliding.AbSlidingPlayView,int) -> access$3
    boolean access$4(com.ab.view.sliding.AbSlidingPlayView) -> access$4
    android.os.Handler access$5(com.ab.view.sliding.AbSlidingPlayView) -> access$5
    java.lang.Runnable access$6(com.ab.view.sliding.AbSlidingPlayView) -> access$6
    void access$7(com.ab.view.sliding.AbSlidingPlayView,int) -> access$7
    void access$8(com.ab.view.sliding.AbSlidingPlayView,int) -> access$8
    com.ab.view.listener.AbOnItemClickListener access$9(com.ab.view.sliding.AbSlidingPlayView) -> access$9
    int access$10(com.ab.view.sliding.AbSlidingPlayView) -> access$10
    com.ab.view.listener.AbOnTouchListener access$11(com.ab.view.sliding.AbSlidingPlayView) -> access$11
com.ab.view.sliding.AbSlidingPlayView$1 -> com.ab.view.sliding.AbSlidingPlayView$1:
    com.ab.view.sliding.AbSlidingPlayView this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.ab.view.sliding.AbSlidingPlayView$2 -> com.ab.view.sliding.AbSlidingPlayView$2:
    com.ab.view.sliding.AbSlidingPlayView this$0 -> this$0
    void run() -> run
com.ab.view.sliding.AbSlidingPlayView$3 -> com.ab.view.sliding.AbSlidingPlayView$3:
    com.ab.view.sliding.AbSlidingPlayView this$0 -> this$0
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
com.ab.view.sliding.AbSlidingPlayView$4 -> com.ab.view.sliding.AbSlidingPlayView$4:
    com.ab.view.sliding.AbSlidingPlayView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.ab.view.sliding.AbSlidingPlayView$5 -> com.ab.view.sliding.AbSlidingPlayView$5:
    com.ab.view.sliding.AbSlidingPlayView this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ab.view.sliding.AbSlidingPlayView$6 -> com.ab.view.sliding.AbSlidingPlayView$6:
    com.ab.view.sliding.AbSlidingPlayView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.ab.view.sliding.AbSlidingPlayView$7 -> com.ab.view.sliding.AbSlidingPlayView$7:
    com.ab.view.sliding.AbSlidingPlayView this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ab.view.sliding.AbSlidingSmoothFixTabView -> com.ab.view.sliding.AbSlidingSmoothFixTabView:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.content.Context context -> context
    android.widget.LinearLayout mTabLayout -> mTabLayout
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    java.util.ArrayList tabItemList -> tabItemList
    java.util.ArrayList pagerItemList -> pagerItemList
    java.util.List tabItemTextList -> tabItemTextList
    android.widget.LinearLayout$LayoutParams layoutParamsFF -> layoutParamsFF
    android.widget.LinearLayout$LayoutParams layoutParamsFW -> layoutParamsFW
    android.widget.LinearLayout$LayoutParams layoutParamsWW -> layoutParamsWW
    android.widget.ImageView mTabImg -> mTabImg
    int mSelectedTabIndex -> mSelectedTabIndex
    com.ab.adapter.AbFragmentPagerAdapter mFragmentPagerAdapter -> mFragmentPagerAdapter
    int tabTextSize -> tabTextSize
    int tabColor -> tabColor
    int tabSelectedColor -> tabSelectedColor
    int tabSlidingHeight -> tabSlidingHeight
    int startX -> startX
    int mWidth -> mWidth
    void imageSlide(android.view.View,int,int,int,int) -> imageSlide
    void computeTabImg(int) -> computeTabImg
    void addItemViews(java.util.List,java.util.List) -> addItemViews
    void addItemView(java.lang.String,android.support.v4.app.Fragment) -> addItemView
    void removeItemView(int) -> removeItemView
    void removeAllItemView(int) -> removeAllItemView
    android.support.v4.view.ViewPager getViewPager() -> getViewPager
    android.widget.LinearLayout getTabLayout() -> getTabLayout
    void setTabLayoutBackgroundResource(int) -> setTabLayoutBackgroundResource
    int getTabColor() -> getTabColor
    void setTabColor(int) -> setTabColor
    void setTabSelectedColor(int) -> setTabSelectedColor
    int getTabTextSize() -> getTabTextSize
    void setTabTextSize(int) -> setTabTextSize
    void setTabPadding(int,int,int,int) -> setTabPadding
    int getTabSlidingHeight() -> getTabSlidingHeight
    void setTabSlidingHeight(int) -> setTabSlidingHeight
    void onMeasure(int,int) -> onMeasure
    android.support.v4.view.ViewPager access$0(com.ab.view.sliding.AbSlidingSmoothFixTabView) -> access$0
com.ab.view.sliding.AbSlidingSmoothFixTabView$1 -> com.ab.view.sliding.AbSlidingSmoothFixTabView$1:
    com.ab.view.sliding.AbSlidingSmoothFixTabView this$0 -> this$0
    int val$index -> val$index
    void onClick(android.view.View) -> onClick
com.ab.view.sliding.AbSlidingSmoothFixTabView$2 -> com.ab.view.sliding.AbSlidingSmoothFixTabView$2:
    com.ab.view.sliding.AbSlidingSmoothFixTabView this$0 -> this$0
    int val$index -> val$index
    void onClick(android.view.View) -> onClick
com.ab.view.sliding.AbSlidingSmoothFixTabView$MyOnPageChangeListener -> com.ab.view.sliding.AbSlidingSmoothFixTabView$MyOnPageChangeListener:
    com.ab.view.sliding.AbSlidingSmoothFixTabView this$0 -> this$0
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.ab.view.sliding.AbSlidingSmoothTabView -> com.ab.view.sliding.AbSlidingSmoothTabView:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.content.Context context -> context
    android.widget.LinearLayout mTabLayout -> mTabLayout
    com.ab.view.sample.AbHorizontalScrollView mTabScrollView -> mTabScrollView
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    java.util.ArrayList tabItemList -> tabItemList
    java.util.ArrayList pagerItemList -> pagerItemList
    java.util.List tabItemTextList -> tabItemTextList
    android.widget.LinearLayout$LayoutParams layoutParamsFF -> layoutParamsFF
    android.widget.LinearLayout$LayoutParams layoutParamsFW -> layoutParamsFW
    android.widget.LinearLayout$LayoutParams layoutParamsWW -> layoutParamsWW
    android.widget.ImageView mTabImg -> mTabImg
    int mSelectedTabIndex -> mSelectedTabIndex
    com.ab.adapter.AbFragmentPagerAdapter mFragmentPagerAdapter -> mFragmentPagerAdapter
    int tabTextSize -> tabTextSize
    int tabColor -> tabColor
    int tabSelectColor -> tabSelectColor
    int tabSlidingHeight -> tabSlidingHeight
    int startX -> startX
    int scrollX -> scrollX
    void imageSlide(android.view.View,int,int,int,int) -> imageSlide
    void computeTabImg(int) -> computeTabImg
    void addItemViews(java.util.List,java.util.List) -> addItemViews
    void addItemView(java.lang.String,android.support.v4.app.Fragment) -> addItemView
    void removeItemView(int) -> removeItemView
    void removeAllItemView(int) -> removeAllItemView
    android.support.v4.view.ViewPager getViewPager() -> getViewPager
    android.widget.LinearLayout getTabLayout() -> getTabLayout
    void setTabLayoutBackgroundResource(int) -> setTabLayoutBackgroundResource
    int getTabColor() -> getTabColor
    void setTabColor(int) -> setTabColor
    void setTabSelectColor(int) -> setTabSelectColor
    int getTabTextSize() -> getTabTextSize
    void setTabTextSize(int) -> setTabTextSize
    void setTabPadding(int,int,int,int) -> setTabPadding
    int getTabSlidingHeight() -> getTabSlidingHeight
    void setTabSlidingHeight(int) -> setTabSlidingHeight
    void onMeasure(int,int) -> onMeasure
    boolean access$0() -> access$0
    java.lang.String access$1() -> access$1
    void access$2(com.ab.view.sliding.AbSlidingSmoothTabView,int) -> access$2
    android.widget.LinearLayout access$3(com.ab.view.sliding.AbSlidingSmoothTabView) -> access$3
    int access$4(com.ab.view.sliding.AbSlidingSmoothTabView) -> access$4
    int access$5(com.ab.view.sliding.AbSlidingSmoothTabView) -> access$5
    int access$6(com.ab.view.sliding.AbSlidingSmoothTabView) -> access$6
    android.widget.ImageView access$7(com.ab.view.sliding.AbSlidingSmoothTabView) -> access$7
    void access$8(com.ab.view.sliding.AbSlidingSmoothTabView,int) -> access$8
    android.support.v4.view.ViewPager access$9(com.ab.view.sliding.AbSlidingSmoothTabView) -> access$9
com.ab.view.sliding.AbSlidingSmoothTabView$1 -> com.ab.view.sliding.AbSlidingSmoothTabView$1:
    com.ab.view.sliding.AbSlidingSmoothTabView this$0 -> this$0
    void onScrollToRight() -> onScrollToRight
    void onScrollToLeft() -> onScrollToLeft
    void onScrollStoped() -> onScrollStoped
    void onScroll(int) -> onScroll
com.ab.view.sliding.AbSlidingSmoothTabView$2 -> com.ab.view.sliding.AbSlidingSmoothTabView$2:
    com.ab.view.sliding.AbSlidingSmoothTabView this$0 -> this$0
    int val$index -> val$index
    void onClick(android.view.View) -> onClick
com.ab.view.sliding.AbSlidingSmoothTabView$3 -> com.ab.view.sliding.AbSlidingSmoothTabView$3:
    com.ab.view.sliding.AbSlidingSmoothTabView this$0 -> this$0
    int val$index -> val$index
    void onClick(android.view.View) -> onClick
com.ab.view.sliding.AbSlidingSmoothTabView$MyOnPageChangeListener -> com.ab.view.sliding.AbSlidingSmoothTabView$MyOnPageChangeListener:
    com.ab.view.sliding.AbSlidingSmoothTabView this$0 -> this$0
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.ab.view.sliding.AbSlidingTabView -> com.ab.view.sliding.AbSlidingTabView:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.content.Context context -> context
    java.lang.Runnable mTabSelector -> mTabSelector
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mMaxTabWidth -> mMaxTabWidth
    int mSelectedTabIndex -> mSelectedTabIndex
    int tabBackgroundResource -> tabBackgroundResource
    int tabTextSize -> tabTextSize
    int tabTextColor -> tabTextColor
    int tabSelectColor -> tabSelectColor
    android.widget.LinearLayout mTabLayout -> mTabLayout
    android.widget.HorizontalScrollView mTabScrollView -> mTabScrollView
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    java.util.List tabItemTextList -> tabItemTextList
    java.util.List tabItemDrawableList -> tabItemDrawableList
    java.util.ArrayList pagerItemList -> pagerItemList
    java.util.ArrayList tabItemList -> tabItemList
    com.ab.adapter.AbFragmentPagerAdapter mFragmentPagerAdapter -> mFragmentPagerAdapter
    android.view.View$OnClickListener mTabClickListener -> mTabClickListener
    void onMeasure(int,int) -> onMeasure
    void animateToTab(int) -> animateToTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addTab(java.lang.String,int) -> addTab
    void addTab(java.lang.String,int,android.graphics.drawable.Drawable) -> addTab
    void notifyTabDataSetChanged() -> notifyTabDataSetChanged
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setTabTextColor(int) -> setTabTextColor
    void setTabSelectColor(int) -> setTabSelectColor
    void setTabTextSize(int) -> setTabTextSize
    void setTabBackgroundResource(int) -> setTabBackgroundResource
    void setTabLayoutBackgroundResource(int) -> setTabLayoutBackgroundResource
    void addItemViews(java.util.List,java.util.List) -> addItemViews
    void addItemViews(java.util.List,java.util.List,java.util.List) -> addItemViews
    void addItemView(java.lang.String,android.support.v4.app.Fragment) -> addItemView
    void addItemView(java.lang.String,android.support.v4.app.Fragment,android.graphics.drawable.Drawable) -> addItemView
    void removeItemView(int) -> removeItemView
    void removeAllItemViews() -> removeAllItemViews
    android.support.v4.view.ViewPager getViewPager() -> getViewPager
    void setTabPadding(int,int,int,int) -> setTabPadding
    android.support.v4.view.ViewPager access$0(com.ab.view.sliding.AbSlidingTabView) -> access$0
    android.support.v4.view.ViewPager$OnPageChangeListener access$1(com.ab.view.sliding.AbSlidingTabView) -> access$1
    android.widget.HorizontalScrollView access$2(com.ab.view.sliding.AbSlidingTabView) -> access$2
    void access$3(com.ab.view.sliding.AbSlidingTabView,java.lang.Runnable) -> access$3
com.ab.view.sliding.AbSlidingTabView$1 -> com.ab.view.sliding.AbSlidingTabView$1:
    com.ab.view.sliding.AbSlidingTabView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.ab.view.sliding.AbSlidingTabView$2 -> com.ab.view.sliding.AbSlidingTabView$2:
    com.ab.view.sliding.AbSlidingTabView this$0 -> this$0
    android.view.View val$tabView -> val$tabView
    void run() -> run
com.ab.view.sliding.AbSlidingTabView$MyOnPageChangeListener -> com.ab.view.sliding.AbSlidingTabView$MyOnPageChangeListener:
    com.ab.view.sliding.AbSlidingTabView this$0 -> this$0
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.ab.view.sliding.AbTabItemView -> com.ab.view.sliding.AbTabItemView:
    android.content.Context mContext -> mContext
    int mIndex -> mIndex
    android.widget.TextView mTextView -> mTextView
    void init(int,java.lang.String) -> init
    int getIndex() -> getIndex
    android.widget.TextView getTextView() -> getTextView
    void setTabTextSize(int) -> setTabTextSize
    void setTabTextColor(int) -> setTabTextColor
    void setTabCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setTabCompoundDrawables
    void setTabBackgroundResource(int) -> setTabBackgroundResource
    void setTabBackgroundDrawable(android.graphics.drawable.Drawable) -> setTabBackgroundDrawable
com.ab.view.slidingmenu.CanvasTransformerBuilder -> com.ab.view.slidingmenu.CanvasTransformerBuilder:
    com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer mTrans -> mTrans
    android.view.animation.Interpolator lin -> lin
    void initTransformer() -> initTransformer
    com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int) -> zoom
    com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int,android.view.animation.Interpolator) -> zoom
    com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer rotate(int,int,int,int) -> rotate
    com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer rotate(int,int,int,int,android.view.animation.Interpolator) -> rotate
    com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer translate(int,int,int,int) -> translate
    com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer translate(int,int,int,int,android.view.animation.Interpolator) -> translate
    com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer concatTransformer(com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer) -> concatTransformer
    com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer access$0(com.ab.view.slidingmenu.CanvasTransformerBuilder) -> access$0
com.ab.view.slidingmenu.CanvasTransformerBuilder$1 -> com.ab.view.slidingmenu.CanvasTransformerBuilder$1:
    float getInterpolation(float) -> getInterpolation
com.ab.view.slidingmenu.CanvasTransformerBuilder$2 -> com.ab.view.slidingmenu.CanvasTransformerBuilder$2:
    com.ab.view.slidingmenu.CanvasTransformerBuilder this$0 -> this$0
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.ab.view.slidingmenu.CanvasTransformerBuilder$3 -> com.ab.view.slidingmenu.CanvasTransformerBuilder$3:
    com.ab.view.slidingmenu.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedX -> val$openedX
    int val$closedX -> val$closedX
    int val$openedY -> val$openedY
    int val$closedY -> val$closedY
    int val$px -> val$px
    int val$py -> val$py
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.ab.view.slidingmenu.CanvasTransformerBuilder$4 -> com.ab.view.slidingmenu.CanvasTransformerBuilder$4:
    com.ab.view.slidingmenu.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedDeg -> val$openedDeg
    int val$closedDeg -> val$closedDeg
    int val$px -> val$px
    int val$py -> val$py
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.ab.view.slidingmenu.CanvasTransformerBuilder$5 -> com.ab.view.slidingmenu.CanvasTransformerBuilder$5:
    com.ab.view.slidingmenu.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedX -> val$openedX
    int val$closedX -> val$closedX
    int val$openedY -> val$openedY
    int val$closedY -> val$closedY
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.ab.view.slidingmenu.CanvasTransformerBuilder$6 -> com.ab.view.slidingmenu.CanvasTransformerBuilder$6:
    com.ab.view.slidingmenu.CanvasTransformerBuilder this$0 -> this$0
    com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer val$t -> val$t
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.ab.view.slidingmenu.CustomViewAbove -> com.ab.view.slidingmenu.CustomViewAbove:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    android.view.View mContent -> mContent
    int mCurItem -> mCurItem
    android.widget.Scroller mScroller -> mScroller
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mScrolling -> mScrolling
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mTouchSlop -> mTouchSlop
    float mInitialMotionX -> mInitialMotionX
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    com.ab.view.slidingmenu.CustomViewBehind mViewBehind -> mViewBehind
    boolean mEnabled -> mEnabled
    com.ab.view.slidingmenu.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    com.ab.view.slidingmenu.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    com.ab.view.slidingmenu.SlidingMenu$OnClosedListener mClosedListener -> mClosedListener
    com.ab.view.slidingmenu.SlidingMenu$OnOpenedListener mOpenedListener -> mOpenedListener
    java.util.List mIgnoredViews -> mIgnoredViews
    int mTouchMode -> mTouchMode
    boolean mQuickReturn -> mQuickReturn
    float mScrollX -> mScrollX
    void initCustomViewAbove() -> initCustomViewAbove
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void setOnPageChangeListener(com.ab.view.slidingmenu.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener(com.ab.view.slidingmenu.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.ab.view.slidingmenu.SlidingMenu$OnClosedListener) -> setOnClosedListener
    com.ab.view.slidingmenu.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(com.ab.view.slidingmenu.CustomViewAbove$OnPageChangeListener) -> setInternalPageChangeListener
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    int getDestScrollX(int) -> getDestScrollX
    int getLeftBound() -> getLeftBound
    int getRightBound() -> getRightBound
    int getContentLeft() -> getContentLeft
    boolean isMenuOpen() -> isMenuOpen
    boolean isInIgnoredView(android.view.MotionEvent) -> isInIgnoredView
    int getBehindWidth() -> getBehindWidth
    int getChildWidth(int) -> getChildWidth
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setCustomViewBehind(com.ab.view.slidingmenu.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setAboveOffset(int) -> setAboveOffset
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll() -> completeScroll
    void setTouchMode(int) -> setTouchMode
    int getTouchMode() -> getTouchMode
    boolean thisTouchAllowed(android.view.MotionEvent) -> thisTouchAllowed
    boolean thisSlideAllowed(float) -> thisSlideAllowed
    int getPointerIndex(android.view.MotionEvent,int) -> getPointerIndex
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void determineDrag(android.view.MotionEvent) -> determineDrag
    void scrollTo(int,int) -> scrollTo
    int determineTargetPage(float,int,int) -> determineTargetPage
    float getPercentOpen() -> getPercentOpen
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void startDrag() -> startDrag
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    com.ab.view.slidingmenu.CustomViewBehind access$0(com.ab.view.slidingmenu.CustomViewAbove) -> access$0
com.ab.view.slidingmenu.CustomViewAbove$1 -> com.ab.view.slidingmenu.CustomViewAbove$1:
    float getInterpolation(float) -> getInterpolation
com.ab.view.slidingmenu.CustomViewAbove$2 -> com.ab.view.slidingmenu.CustomViewAbove$2:
    com.ab.view.slidingmenu.CustomViewAbove this$0 -> this$0
    void onPageSelected(int) -> onPageSelected
com.ab.view.slidingmenu.CustomViewAbove$OnPageChangeListener -> com.ab.view.slidingmenu.CustomViewAbove$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.ab.view.slidingmenu.CustomViewAbove$SimpleOnPageChangeListener -> com.ab.view.slidingmenu.CustomViewAbove$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.ab.view.slidingmenu.CustomViewBehind -> com.ab.view.slidingmenu.CustomViewBehind:
    java.lang.String TAG -> TAG
    int MARGIN_THRESHOLD -> MARGIN_THRESHOLD
    int mTouchMode -> mTouchMode
    com.ab.view.slidingmenu.CustomViewAbove mViewAbove -> mViewAbove
    android.view.View mContent -> mContent
    android.view.View mSecondaryContent -> mSecondaryContent
    int mMarginThreshold -> mMarginThreshold
    int mWidthOffset -> mWidthOffset
    com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer mTransformer -> mTransformer
    boolean mChildrenEnabled -> mChildrenEnabled
    int selectedViewId -> selectedViewId
    int mMode -> mMode
    boolean mFadeEnabled -> mFadeEnabled
    android.graphics.Paint mFadePaint -> mFadePaint
    float mScrollScale -> mScrollScale
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    android.graphics.drawable.Drawable mSecondaryShadowDrawable -> mSecondaryShadowDrawable
    int mShadowWidth -> mShadowWidth
    float mFadeDegree -> mFadeDegree
    boolean mSelectorEnabled -> mSelectorEnabled
    android.graphics.Bitmap mSelectorDrawable -> mSelectorDrawable
    android.view.View mSelectedView -> mSelectedView
    void setCustomViewAbove(com.ab.view.slidingmenu.CustomViewAbove) -> setCustomViewAbove
    void setCanvasTransformer(com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer) -> setCanvasTransformer
    void setWidthOffset(int) -> setWidthOffset
    void setMarginThreshold(int) -> setMarginThreshold
    int getMarginThreshold() -> getMarginThreshold
    int getBehindWidth() -> getBehindWidth
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setSecondaryContent(android.view.View) -> setSecondaryContent
    android.view.View getSecondaryContent() -> getSecondaryContent
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setScrollScale(float) -> setScrollScale
    float getScrollScale() -> getScrollScale
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    int getMenuPage(int) -> getMenuPage
    void scrollBehindTo(android.view.View,int,int) -> scrollBehindTo
    int getMenuLeft(android.view.View,int) -> getMenuLeft
    int getAbsLeftBound(android.view.View) -> getAbsLeftBound
    int getAbsRightBound(android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int) -> marginTouchAllowed
    void setTouchMode(int) -> setTouchMode
    boolean menuOpenTouchAllowed(android.view.View,int,float) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,float) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(float) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(float) -> menuOpenSlideAllowed
    void drawShadow(android.view.View,android.graphics.Canvas) -> drawShadow
    void drawFade(android.view.View,android.graphics.Canvas,float) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectorTop() -> getSelectorTop
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
com.ab.view.slidingmenu.MenuInterface -> com.ab.view.slidingmenu.MenuInterface:
    void scrollBehindTo(int,int,com.ab.view.slidingmenu.CustomViewBehind,float) -> scrollBehindTo
    int getMenuLeft(com.ab.view.slidingmenu.CustomViewBehind,android.view.View) -> getMenuLeft
    int getAbsLeftBound(com.ab.view.slidingmenu.CustomViewBehind,android.view.View) -> getAbsLeftBound
    int getAbsRightBound(com.ab.view.slidingmenu.CustomViewBehind,android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int,int) -> marginTouchAllowed
    boolean menuOpenTouchAllowed(android.view.View,int,int) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,int) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(int) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(int) -> menuOpenSlideAllowed
    void drawShadow(android.graphics.Canvas,android.graphics.drawable.Drawable,int) -> drawShadow
    void drawFade(android.graphics.Canvas,int,com.ab.view.slidingmenu.CustomViewBehind,android.view.View) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
com.ab.view.slidingmenu.SlidingActivity -> com.ab.view.slidingmenu.SlidingActivity:
    com.ab.view.slidingmenu.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.ab.view.slidingmenu.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.ab.view.slidingmenu.SlidingActivityBase -> com.ab.view.slidingmenu.SlidingActivityBase:
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(int) -> setBehindContentView
    com.ab.view.slidingmenu.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
com.ab.view.slidingmenu.SlidingActivityHelper -> com.ab.view.slidingmenu.SlidingActivityHelper:
    android.app.Activity mActivity -> mActivity
    com.ab.view.slidingmenu.SlidingMenu mSlidingMenu -> mSlidingMenu
    android.view.View mViewAbove -> mViewAbove
    android.view.View mViewBehind -> mViewBehind
    boolean mBroadcasting -> mBroadcasting
    boolean mOnPostCreateCalled -> mOnPostCreateCalled
    boolean mEnableSlide -> mEnableSlide
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void registerAboveContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> registerAboveContentView
    void setContentView(android.view.View) -> setContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.ab.view.slidingmenu.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    com.ab.view.slidingmenu.SlidingMenu access$0(com.ab.view.slidingmenu.SlidingActivityHelper) -> access$0
com.ab.view.slidingmenu.SlidingActivityHelper$1 -> com.ab.view.slidingmenu.SlidingActivityHelper$1:
    com.ab.view.slidingmenu.SlidingActivityHelper this$0 -> this$0
    boolean val$open -> val$open
    boolean val$secondary -> val$secondary
    void run() -> run
com.ab.view.slidingmenu.SlidingFragmentActivity -> com.ab.view.slidingmenu.SlidingFragmentActivity:
    com.ab.view.slidingmenu.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.ab.view.slidingmenu.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.ab.view.slidingmenu.SlidingListActivity -> com.ab.view.slidingmenu.SlidingListActivity:
    com.ab.view.slidingmenu.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.ab.view.slidingmenu.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.ab.view.slidingmenu.SlidingMenu -> com.ab.view.slidingmenu.SlidingMenu:
    java.lang.String TAG -> TAG
    int SLIDING_WINDOW -> SLIDING_WINDOW
    int SLIDING_CONTENT -> SLIDING_CONTENT
    boolean mActionbarOverlay -> mActionbarOverlay
    int TOUCHMODE_MARGIN -> TOUCHMODE_MARGIN
    int TOUCHMODE_FULLSCREEN -> TOUCHMODE_FULLSCREEN
    int TOUCHMODE_NONE -> TOUCHMODE_NONE
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int LEFT_RIGHT -> LEFT_RIGHT
    com.ab.view.slidingmenu.CustomViewAbove mViewAbove -> mViewAbove
    com.ab.view.slidingmenu.CustomViewBehind mViewBehind -> mViewBehind
    com.ab.view.slidingmenu.SlidingMenu$OnOpenListener mOpenListener -> mOpenListener
    com.ab.view.slidingmenu.SlidingMenu$OnOpenListener mSecondaryOpenListner -> mSecondaryOpenListner
    com.ab.view.slidingmenu.SlidingMenu$OnCloseListener mCloseListener -> mCloseListener
    android.os.Handler mHandler -> mHandler
    void attachToActivity(android.app.Activity,int) -> attachToActivity
    void attachToActivity(android.app.Activity,int,boolean) -> attachToActivity
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    android.view.View getMenu() -> getMenu
    void setSecondaryMenu(int) -> setSecondaryMenu
    void setSecondaryMenu(android.view.View) -> setSecondaryMenu
    android.view.View getSecondaryMenu() -> getSecondaryMenu
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setStatic(boolean) -> setStatic
    void showMenu() -> showMenu
    void showMenu(boolean) -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void showSecondaryMenu(boolean) -> showSecondaryMenu
    void showContent() -> showContent
    void showContent(boolean) -> showContent
    void toggle() -> toggle
    void toggle(boolean) -> toggle
    boolean isMenuShowing() -> isMenuShowing
    boolean isSecondaryMenuShowing() -> isSecondaryMenuShowing
    int getBehindOffset() -> getBehindOffset
    void setBehindOffset(int) -> setBehindOffset
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    void setAboveOffset(int) -> setAboveOffset
    void setAboveOffsetRes(int) -> setAboveOffsetRes
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    float getBehindScrollScale() -> getBehindScrollScale
    int getTouchmodeMarginThreshold() -> getTouchmodeMarginThreshold
    void setTouchmodeMarginThreshold(int) -> setTouchmodeMarginThreshold
    void setBehindScrollScale(float) -> setBehindScrollScale
    void setBehindCanvasTransformer(com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer) -> setBehindCanvasTransformer
    int getTouchModeAbove() -> getTouchModeAbove
    void setTouchModeAbove(int) -> setTouchModeAbove
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(int) -> setSecondaryShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    void setOnOpenListener(com.ab.view.slidingmenu.SlidingMenu$OnOpenListener) -> setOnOpenListener
    void setSecondaryOnOpenListner(com.ab.view.slidingmenu.SlidingMenu$OnOpenListener) -> setSecondaryOnOpenListner
    void setOnCloseListener(com.ab.view.slidingmenu.SlidingMenu$OnCloseListener) -> setOnCloseListener
    void setOnOpenedListener(com.ab.view.slidingmenu.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.ab.view.slidingmenu.SlidingMenu$OnClosedListener) -> setOnClosedListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    com.ab.view.slidingmenu.SlidingMenu$OnOpenListener access$0(com.ab.view.slidingmenu.SlidingMenu) -> access$0
    com.ab.view.slidingmenu.SlidingMenu$OnCloseListener access$1(com.ab.view.slidingmenu.SlidingMenu) -> access$1
    com.ab.view.slidingmenu.SlidingMenu$OnOpenListener access$2(com.ab.view.slidingmenu.SlidingMenu) -> access$2
com.ab.view.slidingmenu.SlidingMenu$1 -> com.ab.view.slidingmenu.SlidingMenu$1:
    int POSITION_OPEN -> POSITION_OPEN
    int POSITION_CLOSE -> POSITION_CLOSE
    int POSITION_SECONDARY_OPEN -> POSITION_SECONDARY_OPEN
    com.ab.view.slidingmenu.SlidingMenu this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer -> com.ab.view.slidingmenu.SlidingMenu$CanvasTransformer:
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.ab.view.slidingmenu.SlidingMenu$OnCloseListener -> com.ab.view.slidingmenu.SlidingMenu$OnCloseListener:
    void onClose() -> onClose
com.ab.view.slidingmenu.SlidingMenu$OnClosedListener -> com.ab.view.slidingmenu.SlidingMenu$OnClosedListener:
    void onClosed() -> onClosed
com.ab.view.slidingmenu.SlidingMenu$OnOpenListener -> com.ab.view.slidingmenu.SlidingMenu$OnOpenListener:
    void onOpen() -> onOpen
com.ab.view.slidingmenu.SlidingMenu$OnOpenedListener -> com.ab.view.slidingmenu.SlidingMenu$OnOpenedListener:
    void onOpened() -> onOpened
com.ab.view.slidingmenu.SlidingMenu$SavedState -> com.ab.view.slidingmenu.SlidingMenu$SavedState:
    int mItem -> mItem
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getItem() -> getItem
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.ab.view.slidingmenu.SlidingMenu$SavedState$1 -> com.ab.view.slidingmenu.SlidingMenu$SavedState$1:
    com.ab.view.slidingmenu.SlidingMenu$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.ab.view.slidingmenu.SlidingMenu$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.ab.view.slidingmenu.SlidingPreferenceActivity -> com.ab.view.slidingmenu.SlidingPreferenceActivity:
    com.ab.view.slidingmenu.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.ab.view.slidingmenu.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.ab.view.table.AbCellType -> com.ab.view.table.AbCellType:
    int STRING -> STRING
    int IMAGE -> IMAGE
    int BUTTON -> BUTTON
    int CHECKBOX -> CHECKBOX
com.ab.view.table.AbTable -> com.ab.view.table.AbTable:
    com.ab.view.table.AbTable mAbTable -> mAbTable
    int mScreenWidth -> mScreenWidth
    int mScreenHeight -> mScreenHeight
    java.lang.String[] titles -> titles
    java.util.List contents -> contents
    int[] cellTypes -> cellTypes
    int[] cellWidth -> cellWidth
    int[] rowHeight -> rowHeight
    int[] rowTextSize -> rowTextSize
    int[] rowTextColor -> rowTextColor
    int[] tableResource -> tableResource
    com.ab.view.listener.AbOnItemClickListener itemCellTouchListener -> itemCellTouchListener
    com.ab.view.listener.AbOnItemClickListener itemCellCheckListener -> itemCellCheckListener
    com.ab.view.table.AbTable newAbTable(android.content.Context,int) -> newAbTable
    java.lang.String[] getTitles() -> getTitles
    void setTitles(java.lang.String[]) -> setTitles
    java.util.List getContents() -> getContents
    void setContents(java.util.List) -> setContents
    int[] getCellTypes() -> getCellTypes
    void setCellTypes(int[]) -> setCellTypes
    int[] getCellWidth() -> getCellWidth
    void setCellWidth(int[]) -> setCellWidth
    int[] getRowHeight() -> getRowHeight
    void setRowHeight(int[]) -> setRowHeight
    int[] getRowTextSize() -> getRowTextSize
    void setRowTextSize(int[]) -> setRowTextSize
    int[] getRowTextColor() -> getRowTextColor
    void setRowTextColor(int[]) -> setRowTextColor
    int[] getTableResource() -> getTableResource
    void setTableResource(int[]) -> setTableResource
    com.ab.view.listener.AbOnItemClickListener getItemCellTouchListener() -> getItemCellTouchListener
    void setItemCellTouchListener(com.ab.view.listener.AbOnItemClickListener) -> setItemCellTouchListener
    com.ab.view.listener.AbOnItemClickListener getItemCellCheckListener() -> getItemCellCheckListener
    void setItemCellCheckListener(com.ab.view.listener.AbOnItemClickListener) -> setItemCellCheckListener
com.ab.view.table.AbTableArrayAdapter -> com.ab.view.table.AbTableArrayAdapter:
    android.content.Context context -> context
    java.util.ArrayList tableView -> tableView
    java.lang.String[] titles -> titles
    java.util.List contents -> contents
    int columns -> columns
    int[] cellWidth -> cellWidth
    int[] cellTypes -> cellTypes
    int[] tableResource -> tableResource
    int[] rowHeight -> rowHeight
    int[] rowTextSize -> rowTextSize
    int[] rowTextColor -> rowTextColor
    com.ab.view.table.AbTable table -> table
    void setTable(com.ab.view.table.AbTable) -> setTable
    int getCount() -> getCount
    long getItemId(int) -> getItemId
    com.ab.view.table.AbTableItemView getItem(int) -> getItem
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void addItem(java.lang.String[]) -> addItem
    java.lang.Object getItem(int) -> getItem
com.ab.view.table.AbTableCell -> com.ab.view.table.AbTableCell:
    java.lang.Object value -> value
    int width -> width
    int type -> type
com.ab.view.table.AbTableItemView -> com.ab.view.table.AbTableItemView:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.content.Context mContext -> mContext
    int cellCount -> cellCount
    android.view.View[] rowCell -> rowCell
    int mPosition -> mPosition
    com.ab.view.table.AbTable mTable -> mTable
    com.ab.view.table.AbTableArrayAdapter mAdapter -> mAdapter
    void setTableRowView(int,com.ab.view.table.AbTableRow) -> setTableRowView
    com.ab.view.table.AbTable access$0(com.ab.view.table.AbTableItemView) -> access$0
    int access$1(com.ab.view.table.AbTableItemView) -> access$1
    com.ab.view.table.AbTableArrayAdapter access$2(com.ab.view.table.AbTableItemView) -> access$2
com.ab.view.table.AbTableItemView$1 -> com.ab.view.table.AbTableItemView$1:
    com.ab.view.table.AbTableItemView this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ab.view.table.AbTableItemView$2 -> com.ab.view.table.AbTableItemView$2:
    com.ab.view.table.AbTableItemView this$0 -> this$0
    int val$index -> val$index
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.ab.view.table.AbTableItemView$3 -> com.ab.view.table.AbTableItemView$3:
    com.ab.view.table.AbTableItemView this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ab.view.table.AbTableItemView$4 -> com.ab.view.table.AbTableItemView$4:
    com.ab.view.table.AbTableItemView this$0 -> this$0
    int val$index -> val$index
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.ab.view.table.AbTableRow -> com.ab.view.table.AbTableRow:
    com.ab.view.table.AbTableCell[] cells -> cells
    int height -> height
    int backgroundResource -> backgroundResource
    int textSize -> textSize
    int textColor -> textColor
    int getCellSize() -> getCellSize
    com.ab.view.table.AbTableCell getCellValue(int) -> getCellValue
com.ab.view.titlebar.AbBottomBar -> com.ab.view.titlebar.AbBottomBar:
    android.app.Activity mActivity -> mActivity
    int mBottomBarID -> mBottomBarID
    android.view.LayoutInflater mInflater -> mInflater
    android.widget.PopupWindow popupWindow -> popupWindow
    android.view.WindowManager mWindowManager -> mWindowManager
    int diaplayWidth -> diaplayWidth
    void ininBottomBar(android.content.Context) -> ininBottomBar
    void setBottomBarBackground(int) -> setBottomBarBackground
    void setBottomBarBackgroundColor(int) -> setBottomBarBackgroundColor
    void setBottomBarBackgroundDrawable(android.graphics.drawable.Drawable) -> setBottomBarBackgroundDrawable
    void showWindow(android.view.View,android.view.View,boolean) -> showWindow
    void setDropDown(android.view.View,android.view.View) -> setDropDown
    void setBottomView(android.view.View) -> setBottomView
    void setBottomView(int) -> setBottomView
    void access$0(com.ab.view.titlebar.AbBottomBar,android.view.View,android.view.View,boolean) -> access$0
com.ab.view.titlebar.AbBottomBar$1 -> com.ab.view.titlebar.AbBottomBar$1:
    com.ab.view.titlebar.AbBottomBar this$0 -> this$0
    android.view.View val$parent -> val$parent
    android.view.View val$view -> val$view
    void onClick(android.view.View) -> onClick
com.ab.view.titlebar.AbTitleBar -> com.ab.view.titlebar.AbTitleBar:
    android.app.Activity mActivity -> mActivity
    android.widget.LinearLayout titleTextLayout -> titleTextLayout
    android.widget.Button titleTextBtn -> titleTextBtn
    android.widget.Button titleSmallTextBtn -> titleSmallTextBtn
    android.widget.ImageView logoView -> logoView
    android.widget.ImageView logoView2 -> logoView2
    android.widget.ImageView logoLineView -> logoLineView
    android.widget.LinearLayout$LayoutParams titleTextLayoutParams -> titleTextLayoutParams
    android.widget.LinearLayout$LayoutParams rightViewLayoutParams -> rightViewLayoutParams
    android.widget.LinearLayout$LayoutParams centerViewLayoutparams -> centerViewLayoutparams
    android.widget.LinearLayout rightLayout -> rightLayout
    android.widget.LinearLayout centerLayout -> centerLayout
    int mAbTitleBarID -> mAbTitleBarID
    android.view.LayoutInflater mInflater -> mInflater
    android.widget.LinearLayout$LayoutParams layoutParamsFF -> layoutParamsFF
    android.widget.LinearLayout$LayoutParams layoutParamsFW -> layoutParamsFW
    android.widget.LinearLayout$LayoutParams layoutParamsWF -> layoutParamsWF
    android.widget.LinearLayout$LayoutParams layoutParamsWW -> layoutParamsWW
    android.widget.PopupWindow popupWindow -> popupWindow
    void ininTitleBar(android.content.Context) -> ininTitleBar
    void setTitleBarBackground(int) -> setTitleBarBackground
    void setTitleBarBackgroundDrawable(android.graphics.drawable.Drawable) -> setTitleBarBackgroundDrawable
    void setTitleBarBackgroundColor(int) -> setTitleBarBackgroundColor
    void setTitleTextMargin(int,int,int,int) -> setTitleTextMargin
    void setTitleTextSize(int) -> setTitleTextSize
    void setTitleBarGravity(int,int) -> setTitleBarGravity
    android.widget.Button getTitleTextButton() -> getTitleTextButton
    android.widget.Button getTitleSmallTextButton() -> getTitleSmallTextButton
    android.widget.ImageView getLogoView() -> getLogoView
    android.widget.ImageView getLogoView2() -> getLogoView2
    void setTitleTextBold(boolean) -> setTitleTextBold
    void setTitleTextBackgroundResource(int) -> setTitleTextBackgroundResource
    void setTitleTextBackgroundDrawable(android.graphics.drawable.Drawable) -> setTitleTextBackgroundDrawable
    void setTitleText(java.lang.String) -> setTitleText
    void setTitleText(int) -> setTitleText
    void setTitleSmallText(java.lang.String) -> setTitleSmallText
    void setTitleSmallText(int) -> setTitleSmallText
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setLogo2(android.graphics.drawable.Drawable) -> setLogo2
    void setLogo2(int) -> setLogo2
    void setLogoLine(int) -> setLogoLine
    void setLogoLine(android.graphics.drawable.Drawable) -> setLogoLine
    void addRightView(android.view.View) -> addRightView
    void addRightView(int) -> addRightView
    void clearRightView() -> clearRightView
    android.widget.LinearLayout getRightLayout() -> getRightLayout
    void addCenterView(android.view.View) -> addCenterView
    void clearCenterView() -> clearCenterView
    void setLogoOnClickListener(android.view.View$OnClickListener) -> setLogoOnClickListener
    void setLogo2OnClickListener(android.view.View$OnClickListener) -> setLogo2OnClickListener
    void setTitleTextOnClickListener(android.view.View$OnClickListener) -> setTitleTextOnClickListener
    void showWindow(android.view.View,android.view.View,boolean) -> showWindow
    void hideWindow() -> hideWindow
    void setTitleTextDropDown(android.view.View) -> setTitleTextDropDown
    android.widget.LinearLayout getTitleTextLayout() -> getTitleTextLayout
    void setChildViewFillParent(boolean) -> setChildViewFillParent
    android.app.Activity access$0(com.ab.view.titlebar.AbTitleBar) -> access$0
com.ab.view.titlebar.AbTitleBar$1 -> com.ab.view.titlebar.AbTitleBar$1:
    com.ab.view.titlebar.AbTitleBar this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.ab.view.titlebar.AbTitleBar$2 -> com.ab.view.titlebar.AbTitleBar$2:
    com.ab.view.titlebar.AbTitleBar this$0 -> this$0
    android.view.View val$view -> val$view
    void onClick(android.view.View) -> onClick
com.ab.view.wheel.AbNumericWheelAdapter -> com.ab.view.wheel.AbNumericWheelAdapter:
    int DEFAULT_MAX_VALUE -> DEFAULT_MAX_VALUE
    int DEFAULT_MIN_VALUE -> DEFAULT_MIN_VALUE
    int minValue -> minValue
    int maxValue -> maxValue
    java.lang.String format -> format
    java.lang.String getItem(int) -> getItem
    int getItemsCount() -> getItemsCount
    int getMaximumLength() -> getMaximumLength
com.ab.view.wheel.AbObjectWheelAdapter -> com.ab.view.wheel.AbObjectWheelAdapter:
    int DEFAULT_LENGTH -> DEFAULT_LENGTH
    java.lang.Object[] items -> items
    int length -> length
    java.lang.String getItem(int) -> getItem
    int getItemsCount() -> getItemsCount
    int getMaximumLength() -> getMaximumLength
com.ab.view.wheel.AbOnWheelChangedListener -> com.ab.view.wheel.AbOnWheelChangedListener:
    void onChanged(com.ab.view.wheel.AbWheelView,int,int) -> onChanged
com.ab.view.wheel.AbOnWheelScrollListener -> com.ab.view.wheel.AbOnWheelScrollListener:
    void onScrollingStarted(com.ab.view.wheel.AbWheelView) -> onScrollingStarted
    void onScrollingFinished(com.ab.view.wheel.AbWheelView) -> onScrollingFinished
com.ab.view.wheel.AbSample -> com.ab.view.wheel.AbSample:
com.ab.view.wheel.AbStringWheelAdapter -> com.ab.view.wheel.AbStringWheelAdapter:
    int DEFAULT_LENGTH -> DEFAULT_LENGTH
    java.util.List items -> items
    int length -> length
    java.lang.String getItem(int) -> getItem
    int getItemsCount() -> getItemsCount
    int getMaximumLength() -> getMaximumLength
com.ab.view.wheel.AbWheelAdapter -> com.ab.view.wheel.AbWheelAdapter:
    int getItemsCount() -> getItemsCount
    java.lang.String getItem(int) -> getItem
    int getMaximumLength() -> getMaximumLength
com.ab.view.wheel.AbWheelUtil -> com.ab.view.wheel.AbWheelUtil:
    void initWheelDatePicker(com.ab.activity.AbActivity,android.widget.TextView,com.ab.view.wheel.AbWheelView,com.ab.view.wheel.AbWheelView,com.ab.view.wheel.AbWheelView,android.widget.Button,android.widget.Button,int,int,int,int,int,boolean) -> initWheelDatePicker
    void initWheelTimePicker(com.ab.activity.AbActivity,android.widget.TextView,com.ab.view.wheel.AbWheelView,com.ab.view.wheel.AbWheelView,com.ab.view.wheel.AbWheelView,android.widget.Button,android.widget.Button,int,int,int,int,int,boolean) -> initWheelTimePicker
    void initWheelTimePicker2(com.ab.activity.AbActivity,android.widget.TextView,com.ab.view.wheel.AbWheelView,com.ab.view.wheel.AbWheelView,android.widget.Button,android.widget.Button,int,int,boolean) -> initWheelTimePicker2
com.ab.view.wheel.AbWheelUtil$1 -> com.ab.view.wheel.AbWheelUtil$1:
    int val$startYear -> val$startYear
    com.ab.view.wheel.AbWheelView val$mWheelViewM -> val$mWheelViewM
    java.util.List val$list_big -> val$list_big
    com.ab.view.wheel.AbWheelView val$mWheelViewD -> val$mWheelViewD
    java.util.List val$list_little -> val$list_little
    void onChanged(com.ab.view.wheel.AbWheelView,int,int) -> onChanged
com.ab.view.wheel.AbWheelUtil$2 -> com.ab.view.wheel.AbWheelUtil$2:
    java.util.List val$list_big -> val$list_big
    com.ab.view.wheel.AbWheelView val$mWheelViewD -> val$mWheelViewD
    java.util.List val$list_little -> val$list_little
    com.ab.view.wheel.AbWheelView val$mWheelViewY -> val$mWheelViewY
    int val$startYear -> val$startYear
    void onChanged(com.ab.view.wheel.AbWheelView,int,int) -> onChanged
com.ab.view.wheel.AbWheelUtil$3 -> com.ab.view.wheel.AbWheelUtil$3:
    com.ab.activity.AbActivity val$activity -> val$activity
    com.ab.view.wheel.AbWheelView val$mWheelViewY -> val$mWheelViewY
    com.ab.view.wheel.AbWheelView val$mWheelViewM -> val$mWheelViewM
    com.ab.view.wheel.AbWheelView val$mWheelViewD -> val$mWheelViewD
    android.widget.TextView val$mText -> val$mText
    void onClick(android.view.View) -> onClick
com.ab.view.wheel.AbWheelUtil$4 -> com.ab.view.wheel.AbWheelUtil$4:
    com.ab.activity.AbActivity val$activity -> val$activity
    void onClick(android.view.View) -> onClick
com.ab.view.wheel.AbWheelUtil$5 -> com.ab.view.wheel.AbWheelUtil$5:
    com.ab.activity.AbActivity val$activity -> val$activity
    com.ab.view.wheel.AbWheelView val$mWheelViewMD -> val$mWheelViewMD
    com.ab.view.wheel.AbWheelView val$mWheelViewHH -> val$mWheelViewHH
    com.ab.view.wheel.AbWheelView val$mWheelViewMM -> val$mWheelViewMM
    java.util.List val$textDMDateList -> val$textDMDateList
    android.widget.TextView val$mText -> val$mText
    void onClick(android.view.View) -> onClick
com.ab.view.wheel.AbWheelUtil$6 -> com.ab.view.wheel.AbWheelUtil$6:
    com.ab.activity.AbActivity val$activity -> val$activity
    void onClick(android.view.View) -> onClick
com.ab.view.wheel.AbWheelUtil$7 -> com.ab.view.wheel.AbWheelUtil$7:
    com.ab.activity.AbActivity val$activity -> val$activity
    com.ab.view.wheel.AbWheelView val$mWheelViewHH -> val$mWheelViewHH
    com.ab.view.wheel.AbWheelView val$mWheelViewMM -> val$mWheelViewMM
    android.widget.TextView val$mText -> val$mText
    void onClick(android.view.View) -> onClick
com.ab.view.wheel.AbWheelUtil$8 -> com.ab.view.wheel.AbWheelUtil$8:
    com.ab.activity.AbActivity val$activity -> val$activity
    void onClick(android.view.View) -> onClick
com.ab.view.wheel.AbWheelView -> com.ab.view.wheel.AbWheelView:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.content.Context mContext -> mContext
    int SCROLLING_DURATION -> SCROLLING_DURATION
    int MIN_DELTA_FOR_SCROLLING -> MIN_DELTA_FOR_SCROLLING
    int ITEMS_TEXT_COLOR -> ITEMS_TEXT_COLOR
    int[] SHADOWS_COLORS -> SHADOWS_COLORS
    int LABEL_OFFSET -> LABEL_OFFSET
    int PADDING -> PADDING
    int DEF_VISIBLE_ITEMS -> DEF_VISIBLE_ITEMS
    com.ab.view.wheel.AbWheelAdapter adapter -> adapter
    int currentItem -> currentItem
    int itemsWidth -> itemsWidth
    int labelWidth -> labelWidth
    int visibleItems -> visibleItems
    int itemHeight -> itemHeight
    android.text.TextPaint itemsPaint -> itemsPaint
    android.text.TextPaint valuePaint -> valuePaint
    android.text.TextPaint labelPaint -> labelPaint
    android.text.StaticLayout itemsLayout -> itemsLayout
    android.text.StaticLayout labelLayout -> labelLayout
    android.text.StaticLayout valueLayout -> valueLayout
    java.lang.String label -> label
    boolean isScrollingPerformed -> isScrollingPerformed
    int scrollingOffset -> scrollingOffset
    android.view.GestureDetector gestureDetector -> gestureDetector
    android.widget.Scroller scroller -> scroller
    int lastScrollY -> lastScrollY
    boolean isCyclic -> isCyclic
    java.util.List changingListeners -> changingListeners
    java.util.List scrollingListeners -> scrollingListeners
    android.graphics.drawable.Drawable centerSelectDrawable -> centerSelectDrawable
    int[] centerSelectGradientColors -> centerSelectGradientColors
    int centerSelectStrokeWidth -> centerSelectStrokeWidth
    int centerSelectStrokeColor -> centerSelectStrokeColor
    android.graphics.drawable.GradientDrawable topShadow -> topShadow
    android.graphics.drawable.GradientDrawable bottomShadow -> bottomShadow
    int valueTextColor -> valueTextColor
    int labelTextColor -> labelTextColor
    int[] bottomGradientColors -> bottomGradientColors
    int[] topGradientColors -> topGradientColors
    int topStrokeWidth -> topStrokeWidth
    int topStrokeColor -> topStrokeColor
    int valueTextSize -> valueTextSize
    int labelTextSize -> labelTextSize
    int itemOffset -> itemOffset
    int additionalItemHeight -> additionalItemHeight
    int screenWidth -> screenWidth
    int screenHeight -> screenHeight
    android.view.GestureDetector$SimpleOnGestureListener gestureListener -> gestureListener
    int MESSAGE_SCROLL -> MESSAGE_SCROLL
    int MESSAGE_JUSTIFY -> MESSAGE_JUSTIFY
    android.os.Handler animationHandler -> animationHandler
    void initData(android.content.Context) -> initData
    com.ab.view.wheel.AbWheelAdapter getAdapter() -> getAdapter
    void setAdapter(com.ab.view.wheel.AbWheelAdapter) -> setAdapter
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    int getVisibleItems() -> getVisibleItems
    void setVisibleItems(int) -> setVisibleItems
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    void addChangingListener(com.ab.view.wheel.AbOnWheelChangedListener) -> addChangingListener
    void removeChangingListener(com.ab.view.wheel.AbOnWheelChangedListener) -> removeChangingListener
    void notifyChangingListeners(int,int) -> notifyChangingListeners
    void addScrollingListener(com.ab.view.wheel.AbOnWheelScrollListener) -> addScrollingListener
    void removeScrollingListener(com.ab.view.wheel.AbOnWheelScrollListener) -> removeScrollingListener
    void notifyScrollingListenersAboutStart() -> notifyScrollingListenersAboutStart
    void notifyScrollingListenersAboutEnd() -> notifyScrollingListenersAboutEnd
    int getCurrentItem() -> getCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    void setCurrentItem(int) -> setCurrentItem
    boolean isCyclic() -> isCyclic
    void setCyclic(boolean) -> setCyclic
    void invalidateLayouts() -> invalidateLayouts
    void initResourcesIfNecessary() -> initResourcesIfNecessary
    int getDesiredHeight(android.text.Layout) -> getDesiredHeight
    java.lang.String getTextItem(int) -> getTextItem
    java.lang.String buildText(boolean) -> buildText
    int getMaxTextLength() -> getMaxTextLength
    int getItemHeight() -> getItemHeight
    int calculateLayoutWidth(int,int) -> calculateLayoutWidth
    void createLayouts(int,int) -> createLayouts
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawShadows(android.graphics.Canvas) -> drawShadows
    void drawValue(android.graphics.Canvas) -> drawValue
    void drawItems(android.graphics.Canvas) -> drawItems
    void drawCenterRect(android.graphics.Canvas) -> drawCenterRect
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void doScroll(int) -> doScroll
    void setNextMessage(int) -> setNextMessage
    void clearMessages() -> clearMessages
    void justify() -> justify
    void startScrolling() -> startScrolling
    void finishScrolling() -> finishScrolling
    void scroll(int,int) -> scroll
    void setValueTextSize(int) -> setValueTextSize
    int[] getCenterSelectGradientColors() -> getCenterSelectGradientColors
    void setCenterSelectGradientColors(int[]) -> setCenterSelectGradientColors
    int getCenterSelectStrokeWidth() -> getCenterSelectStrokeWidth
    void setCenterSelectStrokeWidth(int) -> setCenterSelectStrokeWidth
    int getCenterSelectStrokeColor() -> getCenterSelectStrokeColor
    void setCenterSelectStrokeColor(int) -> setCenterSelectStrokeColor
    void setCenterSelectDrawable(android.graphics.drawable.Drawable) -> setCenterSelectDrawable
    void setValueTextColor(int) -> setValueTextColor
    void setLabelTextColor(int) -> setLabelTextColor
    void setLabelTextSize(int) -> setLabelTextSize
    void setAdditionalItemHeight(int) -> setAdditionalItemHeight
    boolean access$0(com.ab.view.wheel.AbWheelView) -> access$0
    android.widget.Scroller access$1(com.ab.view.wheel.AbWheelView) -> access$1
    void access$2(com.ab.view.wheel.AbWheelView) -> access$2
    void access$3(com.ab.view.wheel.AbWheelView) -> access$3
    void access$4(com.ab.view.wheel.AbWheelView,int) -> access$4
    int access$5(com.ab.view.wheel.AbWheelView) -> access$5
    int access$6(com.ab.view.wheel.AbWheelView) -> access$6
    int access$7(com.ab.view.wheel.AbWheelView) -> access$7
    void access$8(com.ab.view.wheel.AbWheelView,int) -> access$8
    com.ab.view.wheel.AbWheelAdapter access$9(com.ab.view.wheel.AbWheelView) -> access$9
    int access$10(com.ab.view.wheel.AbWheelView) -> access$10
    void access$11(com.ab.view.wheel.AbWheelView,int) -> access$11
    android.os.Handler access$12(com.ab.view.wheel.AbWheelView) -> access$12
    void access$13(com.ab.view.wheel.AbWheelView) -> access$13
com.ab.view.wheel.AbWheelView$1 -> com.ab.view.wheel.AbWheelView$1:
    com.ab.view.wheel.AbWheelView this$0 -> this$0
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.ab.view.wheel.AbWheelView$2 -> com.ab.view.wheel.AbWheelView$2:
    com.ab.view.wheel.AbWheelView this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.artifex.mupdfdemo.Annotation -> com.artifex.mupdfdemo.Annotation:
    com.artifex.mupdfdemo.Annotation$Type type -> type
com.artifex.mupdfdemo.Annotation$Type -> com.artifex.mupdfdemo.Annotation$Type:
    com.artifex.mupdfdemo.Annotation$Type TEXT -> TEXT
    com.artifex.mupdfdemo.Annotation$Type LINK -> LINK
    com.artifex.mupdfdemo.Annotation$Type FREETEXT -> FREETEXT
    com.artifex.mupdfdemo.Annotation$Type LINE -> LINE
    com.artifex.mupdfdemo.Annotation$Type SQUARE -> SQUARE
    com.artifex.mupdfdemo.Annotation$Type CIRCLE -> CIRCLE
    com.artifex.mupdfdemo.Annotation$Type POLYGON -> POLYGON
    com.artifex.mupdfdemo.Annotation$Type POLYLINE -> POLYLINE
    com.artifex.mupdfdemo.Annotation$Type HIGHLIGHT -> HIGHLIGHT
    com.artifex.mupdfdemo.Annotation$Type UNDERLINE -> UNDERLINE
    com.artifex.mupdfdemo.Annotation$Type SQUIGGLY -> SQUIGGLY
    com.artifex.mupdfdemo.Annotation$Type STRIKEOUT -> STRIKEOUT
    com.artifex.mupdfdemo.Annotation$Type STAMP -> STAMP
    com.artifex.mupdfdemo.Annotation$Type CARET -> CARET
    com.artifex.mupdfdemo.Annotation$Type INK -> INK
    com.artifex.mupdfdemo.Annotation$Type POPUP -> POPUP
    com.artifex.mupdfdemo.Annotation$Type FILEATTACHMENT -> FILEATTACHMENT
    com.artifex.mupdfdemo.Annotation$Type SOUND -> SOUND
    com.artifex.mupdfdemo.Annotation$Type MOVIE -> MOVIE
    com.artifex.mupdfdemo.Annotation$Type WIDGET -> WIDGET
    com.artifex.mupdfdemo.Annotation$Type SCREEN -> SCREEN
    com.artifex.mupdfdemo.Annotation$Type PRINTERMARK -> PRINTERMARK
    com.artifex.mupdfdemo.Annotation$Type TRAPNET -> TRAPNET
    com.artifex.mupdfdemo.Annotation$Type WATERMARK -> WATERMARK
    com.artifex.mupdfdemo.Annotation$Type A3D -> A3D
    com.artifex.mupdfdemo.Annotation$Type UNKNOWN -> UNKNOWN
    com.artifex.mupdfdemo.Annotation$Type[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.Annotation$Type[] values() -> values
    com.artifex.mupdfdemo.Annotation$Type valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.ArrayDeque -> com.artifex.mupdfdemo.ArrayDeque:
    java.lang.Object[] elements -> elements
    int head -> head
    int tail -> tail
    int MIN_INITIAL_CAPACITY -> MIN_INITIAL_CAPACITY
    long serialVersionUID -> serialVersionUID
    void allocateElements(int) -> allocateElements
    void doubleCapacity() -> doubleCapacity
    java.lang.Object[] copyElements(java.lang.Object[]) -> copyElements
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    void checkInvariants() -> checkInvariants
    boolean delete(int) -> delete
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    com.artifex.mupdfdemo.ArrayDeque clone() -> clone
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object clone() -> clone
    int access$1(com.artifex.mupdfdemo.ArrayDeque) -> access$1
    int access$2(com.artifex.mupdfdemo.ArrayDeque) -> access$2
    java.lang.Object[] access$3(com.artifex.mupdfdemo.ArrayDeque) -> access$3
    boolean access$4(com.artifex.mupdfdemo.ArrayDeque,int) -> access$4
com.artifex.mupdfdemo.ArrayDeque$DeqIterator -> com.artifex.mupdfdemo.ArrayDeque$DeqIterator:
    int cursor -> cursor
    int fence -> fence
    int lastRet -> lastRet
    com.artifex.mupdfdemo.ArrayDeque this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.artifex.mupdfdemo.ArrayDeque$DescendingIterator -> com.artifex.mupdfdemo.ArrayDeque$DescendingIterator:
    int cursor -> cursor
    int fence -> fence
    int lastRet -> lastRet
    com.artifex.mupdfdemo.ArrayDeque this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.artifex.mupdfdemo.AsyncTask -> com.artifex.mupdfdemo.AsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    java.util.concurrent.Executor SERIAL_EXECUTOR -> SERIAL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    com.artifex.mupdfdemo.AsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    com.artifex.mupdfdemo.AsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    com.artifex.mupdfdemo.AsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> mCancelled
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$AsyncTask$Status -> $SWITCH_TABLE$com$artifex$mupdfdemo$AsyncTask$Status
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    com.artifex.mupdfdemo.AsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    com.artifex.mupdfdemo.AsyncTask execute(java.lang.Object[]) -> execute
    com.artifex.mupdfdemo.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    void access$0(com.artifex.mupdfdemo.AsyncTask,java.lang.Object) -> access$0
    java.util.concurrent.atomic.AtomicBoolean access$1(com.artifex.mupdfdemo.AsyncTask) -> access$1
    java.lang.Object access$2(com.artifex.mupdfdemo.AsyncTask,java.lang.Object) -> access$2
    void access$3(com.artifex.mupdfdemo.AsyncTask,java.lang.Object) -> access$3
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$AsyncTask$Status() -> $SWITCH_TABLE$com$artifex$mupdfdemo$AsyncTask$Status
com.artifex.mupdfdemo.AsyncTask$1 -> com.artifex.mupdfdemo.AsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.artifex.mupdfdemo.AsyncTask$2 -> com.artifex.mupdfdemo.AsyncTask$2:
    com.artifex.mupdfdemo.AsyncTask this$0 -> this$0
    java.lang.Object call() -> call
com.artifex.mupdfdemo.AsyncTask$3 -> com.artifex.mupdfdemo.AsyncTask$3:
    com.artifex.mupdfdemo.AsyncTask this$0 -> this$0
    void done() -> done
com.artifex.mupdfdemo.AsyncTask$AsyncTaskResult -> com.artifex.mupdfdemo.AsyncTask$AsyncTaskResult:
    com.artifex.mupdfdemo.AsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
com.artifex.mupdfdemo.AsyncTask$InternalHandler -> com.artifex.mupdfdemo.AsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.artifex.mupdfdemo.AsyncTask$SerialExecutor -> com.artifex.mupdfdemo.AsyncTask$SerialExecutor:
    com.artifex.mupdfdemo.ArrayDeque mTasks -> mTasks
    java.lang.Runnable mActive -> mActive
    void execute(java.lang.Runnable) -> execute
    void scheduleNext() -> scheduleNext
com.artifex.mupdfdemo.AsyncTask$SerialExecutor$1 -> com.artifex.mupdfdemo.AsyncTask$SerialExecutor$1:
    com.artifex.mupdfdemo.AsyncTask$SerialExecutor this$1 -> this$1
    java.lang.Runnable val$r -> val$r
    void run() -> run
com.artifex.mupdfdemo.AsyncTask$Status -> com.artifex.mupdfdemo.AsyncTask$Status:
    com.artifex.mupdfdemo.AsyncTask$Status PENDING -> PENDING
    com.artifex.mupdfdemo.AsyncTask$Status RUNNING -> RUNNING
    com.artifex.mupdfdemo.AsyncTask$Status FINISHED -> FINISHED
    com.artifex.mupdfdemo.AsyncTask$Status[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.AsyncTask$Status[] values() -> values
    com.artifex.mupdfdemo.AsyncTask$Status valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.AsyncTask$WorkerRunnable -> com.artifex.mupdfdemo.AsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
com.artifex.mupdfdemo.BitmapHolder -> com.artifex.mupdfdemo.BitmapHolder:
    android.graphics.Bitmap bm -> bm
    void setBm(android.graphics.Bitmap) -> setBm
    void drop() -> drop
    android.graphics.Bitmap getBm() -> getBm
com.artifex.mupdfdemo.ChoosePDFActivity -> com.artifex.mupdfdemo.ChoosePDFActivity:
    java.io.File mDirectory -> mDirectory
    java.util.Map mPositions -> mPositions
    java.io.File mParent -> mParent
    java.io.File[] mDirs -> mDirs
    java.io.File[] mFiles -> mFiles
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mUpdateFiles -> mUpdateFiles
    com.artifex.mupdfdemo.ChoosePDFAdapter adapter -> adapter
    void onCreate(android.os.Bundle) -> onCreate
    void lastPosition() -> lastPosition
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void onPause() -> onPause
    java.io.File access$0() -> access$0
    void access$1(com.artifex.mupdfdemo.ChoosePDFActivity,java.io.File) -> access$1
    void access$2(com.artifex.mupdfdemo.ChoosePDFActivity,java.io.File[]) -> access$2
    java.io.File[] access$3(com.artifex.mupdfdemo.ChoosePDFActivity) -> access$3
    void access$4(com.artifex.mupdfdemo.ChoosePDFActivity,java.io.File[]) -> access$4
    java.io.File[] access$5(com.artifex.mupdfdemo.ChoosePDFActivity) -> access$5
    com.artifex.mupdfdemo.ChoosePDFAdapter access$6(com.artifex.mupdfdemo.ChoosePDFActivity) -> access$6
    java.io.File access$7(com.artifex.mupdfdemo.ChoosePDFActivity) -> access$7
    void access$8(com.artifex.mupdfdemo.ChoosePDFActivity) -> access$8
    android.os.Handler access$9(com.artifex.mupdfdemo.ChoosePDFActivity) -> access$9
    java.lang.Runnable access$10(com.artifex.mupdfdemo.ChoosePDFActivity) -> access$10
com.artifex.mupdfdemo.ChoosePDFActivity$1 -> com.artifex.mupdfdemo.ChoosePDFActivity$1:
    com.artifex.mupdfdemo.ChoosePDFActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdfdemo.ChoosePDFActivity$2 -> com.artifex.mupdfdemo.ChoosePDFActivity$2:
    com.artifex.mupdfdemo.ChoosePDFActivity this$0 -> this$0
    void run() -> run
com.artifex.mupdfdemo.ChoosePDFActivity$2$1 -> com.artifex.mupdfdemo.ChoosePDFActivity$2$1:
    com.artifex.mupdfdemo.ChoosePDFActivity$2 this$1 -> this$1
    boolean accept(java.io.File) -> accept
com.artifex.mupdfdemo.ChoosePDFActivity$2$2 -> com.artifex.mupdfdemo.ChoosePDFActivity$2$2:
    com.artifex.mupdfdemo.ChoosePDFActivity$2 this$1 -> this$1
    boolean accept(java.io.File) -> accept
com.artifex.mupdfdemo.ChoosePDFActivity$2$3 -> com.artifex.mupdfdemo.ChoosePDFActivity$2$3:
    com.artifex.mupdfdemo.ChoosePDFActivity$2 this$1 -> this$1
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.artifex.mupdfdemo.ChoosePDFActivity$2$4 -> com.artifex.mupdfdemo.ChoosePDFActivity$2$4:
    com.artifex.mupdfdemo.ChoosePDFActivity$2 this$1 -> this$1
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.artifex.mupdfdemo.ChoosePDFActivity$3 -> com.artifex.mupdfdemo.ChoosePDFActivity$3:
    com.artifex.mupdfdemo.ChoosePDFActivity this$0 -> this$0
    void onEvent(int,java.lang.String) -> onEvent
com.artifex.mupdfdemo.ChoosePDFAdapter -> com.artifex.mupdfdemo.ChoosePDFAdapter:
    java.util.LinkedList mItems -> mItems
    android.view.LayoutInflater mInflater -> mInflater
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$ChoosePDFItem$Type -> $SWITCH_TABLE$com$artifex$mupdfdemo$ChoosePDFItem$Type
    void clear() -> clear
    void add(com.artifex.mupdfdemo.ChoosePDFItem) -> add
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int iconForType(com.artifex.mupdfdemo.ChoosePDFItem$Type) -> iconForType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$ChoosePDFItem$Type() -> $SWITCH_TABLE$com$artifex$mupdfdemo$ChoosePDFItem$Type
com.artifex.mupdfdemo.ChoosePDFItem -> com.artifex.mupdfdemo.ChoosePDFItem:
    com.artifex.mupdfdemo.ChoosePDFItem$Type type -> type
    java.lang.String name -> name
com.artifex.mupdfdemo.ChoosePDFItem$Type -> com.artifex.mupdfdemo.ChoosePDFItem$Type:
    com.artifex.mupdfdemo.ChoosePDFItem$Type PARENT -> PARENT
    com.artifex.mupdfdemo.ChoosePDFItem$Type DIR -> DIR
    com.artifex.mupdfdemo.ChoosePDFItem$Type DOC -> DOC
    com.artifex.mupdfdemo.ChoosePDFItem$Type[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.ChoosePDFItem$Type[] values() -> values
    com.artifex.mupdfdemo.ChoosePDFItem$Type valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.Deque -> com.artifex.mupdfdemo.Deque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
com.artifex.mupdfdemo.Hit -> com.artifex.mupdfdemo.Hit:
    com.artifex.mupdfdemo.Hit Nothing -> Nothing
    com.artifex.mupdfdemo.Hit Widget -> Widget
    com.artifex.mupdfdemo.Hit Annotation -> Annotation
    com.artifex.mupdfdemo.Hit[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.Hit[] values() -> values
    com.artifex.mupdfdemo.Hit valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.LinkInfo -> com.artifex.mupdfdemo.LinkInfo:
    android.graphics.RectF rect -> rect
    void acceptVisitor(com.artifex.mupdfdemo.LinkInfoVisitor) -> acceptVisitor
com.artifex.mupdfdemo.LinkInfoExternal -> com.artifex.mupdfdemo.LinkInfoExternal:
    java.lang.String url -> url
    void acceptVisitor(com.artifex.mupdfdemo.LinkInfoVisitor) -> acceptVisitor
com.artifex.mupdfdemo.LinkInfoInternal -> com.artifex.mupdfdemo.LinkInfoInternal:
    int pageNumber -> pageNumber
    void acceptVisitor(com.artifex.mupdfdemo.LinkInfoVisitor) -> acceptVisitor
com.artifex.mupdfdemo.LinkInfoRemote -> com.artifex.mupdfdemo.LinkInfoRemote:
    java.lang.String fileSpec -> fileSpec
    int pageNumber -> pageNumber
    boolean newWindow -> newWindow
    void acceptVisitor(com.artifex.mupdfdemo.LinkInfoVisitor) -> acceptVisitor
com.artifex.mupdfdemo.LinkInfoVisitor -> com.artifex.mupdfdemo.LinkInfoVisitor:
    void visitInternal(com.artifex.mupdfdemo.LinkInfoInternal) -> visitInternal
    void visitExternal(com.artifex.mupdfdemo.LinkInfoExternal) -> visitExternal
    void visitRemote(com.artifex.mupdfdemo.LinkInfoRemote) -> visitRemote
com.artifex.mupdfdemo.MuPDFActivity -> com.artifex.mupdfdemo.MuPDFActivity:
    int OUTLINE_REQUEST -> OUTLINE_REQUEST
    int PRINT_REQUEST -> PRINT_REQUEST
    com.artifex.mupdfdemo.MuPDFCore core -> core
    java.lang.String mFileName -> mFileName
    com.artifex.mupdfdemo.MuPDFReaderView mDocView -> mDocView
    android.view.View mButtonsView -> mButtonsView
    boolean mButtonsVisible -> mButtonsVisible
    android.widget.EditText mPasswordView -> mPasswordView
    android.widget.TextView mFilenameView -> mFilenameView
    android.widget.SeekBar mPageSlider -> mPageSlider
    int mPageSliderRes -> mPageSliderRes
    android.widget.TextView mPageNumberView -> mPageNumberView
    android.widget.TextView mInfoView -> mInfoView
    android.widget.ImageButton mSearchButton -> mSearchButton
    android.widget.ImageButton mReflowButton -> mReflowButton
    android.widget.ImageButton mOutlineButton -> mOutlineButton
    android.widget.TextView mAnnotTypeText -> mAnnotTypeText
    android.widget.ImageButton mAnnotButton -> mAnnotButton
    android.widget.ViewAnimator mTopBarSwitcher -> mTopBarSwitcher
    android.widget.ImageButton mLinkButton -> mLinkButton
    com.artifex.mupdfdemo.MuPDFActivity$TopBarMode mTopBarMode -> mTopBarMode
    com.artifex.mupdfdemo.MuPDFActivity$AcceptMode mAcceptMode -> mAcceptMode
    android.widget.ImageButton mSearchBack -> mSearchBack
    android.widget.ImageButton mSearchFwd -> mSearchFwd
    android.widget.EditText mSearchText -> mSearchText
    com.artifex.mupdfdemo.SearchTask mSearchTask -> mSearchTask
    android.app.AlertDialog$Builder mAlertBuilder -> mAlertBuilder
    boolean mLinkHighlight -> mLinkHighlight
    android.os.Handler mHandler -> mHandler
    boolean mAlertsActive -> mAlertsActive
    boolean mReflow -> mReflow
    com.artifex.mupdfdemo.AsyncTask mAlertTask -> mAlertTask
    android.app.AlertDialog mAlertDialog -> mAlertDialog
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFActivity$AcceptMode -> $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFActivity$AcceptMode
    void createAlertWaiter() -> createAlertWaiter
    void destroyAlertWaiter() -> destroyAlertWaiter
    com.artifex.mupdfdemo.MuPDFCore openFile(java.lang.String) -> openFile
    com.artifex.mupdfdemo.MuPDFCore openBuffer(byte[]) -> openBuffer
    void onCreate(android.os.Bundle) -> onCreate
    void requestPassword(android.os.Bundle) -> requestPassword
    void createUI(android.os.Bundle) -> createUI
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void reflowModeSet(boolean) -> reflowModeSet
    void toggleReflow() -> toggleReflow
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void delete(java.io.File) -> delete
    void onDestroy() -> onDestroy
    void setButtonEnabled(android.widget.ImageButton,boolean) -> setButtonEnabled
    void setLinkHighlight(boolean) -> setLinkHighlight
    void showButtons() -> showButtons
    void hideButtons() -> hideButtons
    void searchModeOn() -> searchModeOn
    void searchModeOff() -> searchModeOff
    void updatePageNumView(int) -> updatePageNumView
    void printDoc() -> printDoc
    void showInfo(java.lang.String) -> showInfo
    void makeButtonsView() -> makeButtonsView
    void OnMoreButtonClick(android.view.View) -> OnMoreButtonClick
    void OnCancelMoreButtonClick(android.view.View) -> OnCancelMoreButtonClick
    void OnPrintButtonClick(android.view.View) -> OnPrintButtonClick
    void OnCopyTextButtonClick(android.view.View) -> OnCopyTextButtonClick
    void OnEditAnnotButtonClick(android.view.View) -> OnEditAnnotButtonClick
    void OnCancelAnnotButtonClick(android.view.View) -> OnCancelAnnotButtonClick
    void OnHighlightButtonClick(android.view.View) -> OnHighlightButtonClick
    void OnUnderlineButtonClick(android.view.View) -> OnUnderlineButtonClick
    void OnStrikeOutButtonClick(android.view.View) -> OnStrikeOutButtonClick
    void OnInkButtonClick(android.view.View) -> OnInkButtonClick
    void OnCancelAcceptButtonClick(android.view.View) -> OnCancelAcceptButtonClick
    void OnAcceptButtonClick(android.view.View) -> OnAcceptButtonClick
    void OnCancelSearchButtonClick(android.view.View) -> OnCancelSearchButtonClick
    void OnDeleteButtonClick(android.view.View) -> OnDeleteButtonClick
    void OnCancelDeleteButtonClick(android.view.View) -> OnCancelDeleteButtonClick
    void showKeyboard() -> showKeyboard
    void hideKeyboard() -> hideKeyboard
    void search(int) -> search
    boolean onSearchRequested() -> onSearchRequested
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onStart() -> onStart
    void onStop() -> onStop
    void onBackPressed() -> onBackPressed
    boolean access$0(com.artifex.mupdfdemo.MuPDFActivity) -> access$0
    com.artifex.mupdfdemo.MuPDFCore access$1(com.artifex.mupdfdemo.MuPDFActivity) -> access$1
    void access$2(com.artifex.mupdfdemo.MuPDFActivity,android.app.AlertDialog) -> access$2
    android.app.AlertDialog$Builder access$3(com.artifex.mupdfdemo.MuPDFActivity) -> access$3
    android.app.AlertDialog access$4(com.artifex.mupdfdemo.MuPDFActivity) -> access$4
    android.widget.EditText access$5(com.artifex.mupdfdemo.MuPDFActivity) -> access$5
    android.widget.TextView access$6(com.artifex.mupdfdemo.MuPDFActivity) -> access$6
    android.widget.SeekBar access$7(com.artifex.mupdfdemo.MuPDFActivity) -> access$7
    int access$8(com.artifex.mupdfdemo.MuPDFActivity) -> access$8
    boolean access$9(com.artifex.mupdfdemo.MuPDFActivity) -> access$9
    void access$10(com.artifex.mupdfdemo.MuPDFActivity) -> access$10
    com.artifex.mupdfdemo.MuPDFActivity$TopBarMode access$11(com.artifex.mupdfdemo.MuPDFActivity) -> access$11
    void access$12(com.artifex.mupdfdemo.MuPDFActivity) -> access$12
    void access$13(com.artifex.mupdfdemo.MuPDFActivity,com.artifex.mupdfdemo.MuPDFActivity$TopBarMode) -> access$13
    android.widget.ViewAnimator access$14(com.artifex.mupdfdemo.MuPDFActivity) -> access$14
    com.artifex.mupdfdemo.MuPDFReaderView access$15(com.artifex.mupdfdemo.MuPDFActivity) -> access$15
    void access$16(com.artifex.mupdfdemo.MuPDFActivity,int) -> access$16
    void access$17(com.artifex.mupdfdemo.MuPDFActivity) -> access$17
    void access$18(com.artifex.mupdfdemo.MuPDFActivity) -> access$18
    android.widget.ImageButton access$19(com.artifex.mupdfdemo.MuPDFActivity) -> access$19
    void access$20(com.artifex.mupdfdemo.MuPDFActivity,android.widget.ImageButton,boolean) -> access$20
    android.widget.ImageButton access$21(com.artifex.mupdfdemo.MuPDFActivity) -> access$21
    android.widget.EditText access$22(com.artifex.mupdfdemo.MuPDFActivity) -> access$22
    void access$23(com.artifex.mupdfdemo.MuPDFActivity,int) -> access$23
    boolean access$24(com.artifex.mupdfdemo.MuPDFActivity) -> access$24
    void access$25(com.artifex.mupdfdemo.MuPDFActivity,boolean) -> access$25
    android.widget.TextView access$26(com.artifex.mupdfdemo.MuPDFActivity) -> access$26
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFActivity$AcceptMode() -> $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFActivity$AcceptMode
com.artifex.mupdfdemo.MuPDFActivity$1 -> com.artifex.mupdfdemo.MuPDFActivity$1:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFAlert$IconType -> $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFAlert$IconType
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFAlert$ButtonGroupType -> $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFAlert$ButtonGroupType
    com.artifex.mupdfdemo.MuPDFAlert doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.artifex.mupdfdemo.MuPDFAlert) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFAlert$IconType() -> $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFAlert$IconType
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFAlert$ButtonGroupType() -> $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFAlert$ButtonGroupType
    com.artifex.mupdfdemo.MuPDFActivity access$4(com.artifex.mupdfdemo.MuPDFActivity$1) -> access$4
com.artifex.mupdfdemo.MuPDFActivity$1$1 -> com.artifex.mupdfdemo.MuPDFActivity$1$1:
    com.artifex.mupdfdemo.MuPDFActivity$1 this$1 -> this$1
    com.artifex.mupdfdemo.MuPDFAlert val$result -> val$result
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed[] val$pressed -> val$pressed
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdfdemo.MuPDFActivity$1$2 -> com.artifex.mupdfdemo.MuPDFActivity$1$2:
    com.artifex.mupdfdemo.MuPDFActivity$1 this$1 -> this$1
    com.artifex.mupdfdemo.MuPDFAlert val$result -> val$result
    void onCancel(android.content.DialogInterface) -> onCancel
com.artifex.mupdfdemo.MuPDFActivity$10 -> com.artifex.mupdfdemo.MuPDFActivity$10:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.artifex.mupdfdemo.MuPDFActivity$11 -> com.artifex.mupdfdemo.MuPDFActivity$11:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.artifex.mupdfdemo.MuPDFActivity$12 -> com.artifex.mupdfdemo.MuPDFActivity$12:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.artifex.mupdfdemo.MuPDFActivity$13 -> com.artifex.mupdfdemo.MuPDFActivity$13:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.artifex.mupdfdemo.MuPDFActivity$14 -> com.artifex.mupdfdemo.MuPDFActivity$14:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.artifex.mupdfdemo.MuPDFActivity$15 -> com.artifex.mupdfdemo.MuPDFActivity$15:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.artifex.mupdfdemo.MuPDFActivity$16 -> com.artifex.mupdfdemo.MuPDFActivity$16:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.artifex.mupdfdemo.MuPDFActivity$17 -> com.artifex.mupdfdemo.MuPDFActivity$17:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.artifex.mupdfdemo.MuPDFActivity$18 -> com.artifex.mupdfdemo.MuPDFActivity$18:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.artifex.mupdfdemo.MuPDFActivity$19 -> com.artifex.mupdfdemo.MuPDFActivity$19:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.artifex.mupdfdemo.MuPDFActivity$2 -> com.artifex.mupdfdemo.MuPDFActivity$2:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdfdemo.MuPDFActivity$20 -> com.artifex.mupdfdemo.MuPDFActivity$20:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.artifex.mupdfdemo.MuPDFActivity$21 -> com.artifex.mupdfdemo.MuPDFActivity$21:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.artifex.mupdfdemo.MuPDFActivity$22 -> com.artifex.mupdfdemo.MuPDFActivity$22:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.artifex.mupdfdemo.MuPDFActivity$23 -> com.artifex.mupdfdemo.MuPDFActivity$23:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void run() -> run
com.artifex.mupdfdemo.MuPDFActivity$24 -> com.artifex.mupdfdemo.MuPDFActivity$24:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdfdemo.MuPDFActivity$3 -> com.artifex.mupdfdemo.MuPDFActivity$3:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdfdemo.MuPDFActivity$4 -> com.artifex.mupdfdemo.MuPDFActivity$4:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    android.os.Bundle val$savedInstanceState -> val$savedInstanceState
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdfdemo.MuPDFActivity$5 -> com.artifex.mupdfdemo.MuPDFActivity$5:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdfdemo.MuPDFActivity$6 -> com.artifex.mupdfdemo.MuPDFActivity$6:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFActivity$TopBarMode -> $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFActivity$TopBarMode
    void onMoveToChild(int) -> onMoveToChild
    void onTapMainDocArea() -> onTapMainDocArea
    void onDocMotion() -> onDocMotion
    void onHit(com.artifex.mupdfdemo.Hit) -> onHit
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFActivity$TopBarMode() -> $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFActivity$TopBarMode
com.artifex.mupdfdemo.MuPDFActivity$7 -> com.artifex.mupdfdemo.MuPDFActivity$7:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onTextFound(com.artifex.mupdfdemo.SearchTaskResult) -> onTextFound
com.artifex.mupdfdemo.MuPDFActivity$8 -> com.artifex.mupdfdemo.MuPDFActivity$8:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.artifex.mupdfdemo.MuPDFActivity$9 -> com.artifex.mupdfdemo.MuPDFActivity$9:
    com.artifex.mupdfdemo.MuPDFActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.artifex.mupdfdemo.MuPDFActivity$AcceptMode -> com.artifex.mupdfdemo.MuPDFActivity$AcceptMode:
    com.artifex.mupdfdemo.MuPDFActivity$AcceptMode Highlight -> Highlight
    com.artifex.mupdfdemo.MuPDFActivity$AcceptMode Underline -> Underline
    com.artifex.mupdfdemo.MuPDFActivity$AcceptMode StrikeOut -> StrikeOut
    com.artifex.mupdfdemo.MuPDFActivity$AcceptMode Ink -> Ink
    com.artifex.mupdfdemo.MuPDFActivity$AcceptMode CopyText -> CopyText
    com.artifex.mupdfdemo.MuPDFActivity$AcceptMode[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.MuPDFActivity$AcceptMode[] values() -> values
    com.artifex.mupdfdemo.MuPDFActivity$AcceptMode valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.MuPDFActivity$TopBarMode -> com.artifex.mupdfdemo.MuPDFActivity$TopBarMode:
    com.artifex.mupdfdemo.MuPDFActivity$TopBarMode Main -> Main
    com.artifex.mupdfdemo.MuPDFActivity$TopBarMode Search -> Search
    com.artifex.mupdfdemo.MuPDFActivity$TopBarMode Annot -> Annot
    com.artifex.mupdfdemo.MuPDFActivity$TopBarMode Delete -> Delete
    com.artifex.mupdfdemo.MuPDFActivity$TopBarMode More -> More
    com.artifex.mupdfdemo.MuPDFActivity$TopBarMode Accept -> Accept
    com.artifex.mupdfdemo.MuPDFActivity$TopBarMode[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.MuPDFActivity$TopBarMode[] values() -> values
    com.artifex.mupdfdemo.MuPDFActivity$TopBarMode valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.MuPDFAlert -> com.artifex.mupdfdemo.MuPDFAlert:
    java.lang.String message -> message
    com.artifex.mupdfdemo.MuPDFAlert$IconType iconType -> iconType
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType buttonGroupType -> buttonGroupType
    java.lang.String title -> title
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed buttonPressed -> buttonPressed
com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType -> com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType:
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType Ok -> Ok
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType OkCancel -> OkCancel
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType YesNo -> YesNo
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType YesNoCancel -> YesNoCancel
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType[] values() -> values
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed -> com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed:
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed None -> None
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed Ok -> Ok
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed Cancel -> Cancel
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed No -> No
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed Yes -> Yes
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed[] values() -> values
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.MuPDFAlert$IconType -> com.artifex.mupdfdemo.MuPDFAlert$IconType:
    com.artifex.mupdfdemo.MuPDFAlert$IconType Error -> Error
    com.artifex.mupdfdemo.MuPDFAlert$IconType Warning -> Warning
    com.artifex.mupdfdemo.MuPDFAlert$IconType Question -> Question
    com.artifex.mupdfdemo.MuPDFAlert$IconType Status -> Status
    com.artifex.mupdfdemo.MuPDFAlert$IconType[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.MuPDFAlert$IconType[] values() -> values
    com.artifex.mupdfdemo.MuPDFAlert$IconType valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.MuPDFAlertInternal -> com.artifex.mupdfdemo.MuPDFAlertInternal:
    java.lang.String message -> message
    int iconType -> iconType
    int buttonGroupType -> buttonGroupType
    java.lang.String title -> title
    int buttonPressed -> buttonPressed
    com.artifex.mupdfdemo.MuPDFAlert toAlert() -> toAlert
com.artifex.mupdfdemo.MuPDFCore -> com.artifex.mupdfdemo.MuPDFCore:
    int numPages -> numPages
    float pageWidth -> pageWidth
    float pageHeight -> pageHeight
    long globals -> globals
    byte[] fileBuffer -> fileBuffer
    java.lang.String file_format -> file_format
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$WidgetType -> $SWITCH_TABLE$com$artifex$mupdfdemo$WidgetType
    long openFile(java.lang.String) -> openFile
    long openBuffer() -> openBuffer
    java.lang.String fileFormatInternal() -> fileFormatInternal
    int countPagesInternal() -> countPagesInternal
    void gotoPageInternal(int) -> gotoPageInternal
    float getPageWidth() -> getPageWidth
    float getPageHeight() -> getPageHeight
    void drawPage(android.graphics.Bitmap,int,int,int,int,int,int) -> drawPage
    void updatePageInternal(android.graphics.Bitmap,int,int,int,int,int,int,int) -> updatePageInternal
    android.graphics.RectF[] searchPage(java.lang.String) -> searchPage
    com.artifex.mupdfdemo.TextChar[][][][] text() -> text
    byte[] textAsHtml() -> textAsHtml
    void addMarkupAnnotationInternal(android.graphics.PointF[],int) -> addMarkupAnnotationInternal
    void addInkAnnotationInternal(android.graphics.PointF[][]) -> addInkAnnotationInternal
    void deleteAnnotationInternal(int) -> deleteAnnotationInternal
    int passClickEventInternal(int,float,float) -> passClickEventInternal
    void setFocusedWidgetChoiceSelectedInternal(java.lang.String[]) -> setFocusedWidgetChoiceSelectedInternal
    java.lang.String[] getFocusedWidgetChoiceSelected() -> getFocusedWidgetChoiceSelected
    java.lang.String[] getFocusedWidgetChoiceOptions() -> getFocusedWidgetChoiceOptions
    int setFocusedWidgetTextInternal(java.lang.String) -> setFocusedWidgetTextInternal
    java.lang.String getFocusedWidgetTextInternal() -> getFocusedWidgetTextInternal
    int getFocusedWidgetTypeInternal() -> getFocusedWidgetTypeInternal
    com.artifex.mupdfdemo.LinkInfo[] getPageLinksInternal(int) -> getPageLinksInternal
    android.graphics.RectF[] getWidgetAreasInternal(int) -> getWidgetAreasInternal
    com.artifex.mupdfdemo.Annotation[] getAnnotationsInternal(int) -> getAnnotationsInternal
    com.artifex.mupdfdemo.OutlineItem[] getOutlineInternal() -> getOutlineInternal
    boolean hasOutlineInternal() -> hasOutlineInternal
    boolean needsPasswordInternal() -> needsPasswordInternal
    boolean authenticatePasswordInternal(java.lang.String) -> authenticatePasswordInternal
    com.artifex.mupdfdemo.MuPDFAlertInternal waitForAlertInternal() -> waitForAlertInternal
    void replyToAlertInternal(com.artifex.mupdfdemo.MuPDFAlertInternal) -> replyToAlertInternal
    void startAlertsInternal() -> startAlertsInternal
    void stopAlertsInternal() -> stopAlertsInternal
    void destroying() -> destroying
    boolean hasChangesInternal() -> hasChangesInternal
    void saveInternal() -> saveInternal
    boolean javascriptSupported() -> javascriptSupported
    int countPages() -> countPages
    java.lang.String fileFormat() -> fileFormat
    int countPagesSynchronized() -> countPagesSynchronized
    void gotoPage(int) -> gotoPage
    android.graphics.PointF getPageSize(int) -> getPageSize
    com.artifex.mupdfdemo.MuPDFAlert waitForAlert() -> waitForAlert
    void replyToAlert(com.artifex.mupdfdemo.MuPDFAlert) -> replyToAlert
    void stopAlerts() -> stopAlerts
    void startAlerts() -> startAlerts
    void onDestroy() -> onDestroy
    android.graphics.Bitmap drawPage(int,int,int,int,int,int,int) -> drawPage
    android.graphics.Bitmap updatePage(com.artifex.mupdfdemo.BitmapHolder,int,int,int,int,int,int,int) -> updatePage
    com.artifex.mupdfdemo.PassClickResult passClickEvent(int,float,float) -> passClickEvent
    boolean setFocusedWidgetText(int,java.lang.String) -> setFocusedWidgetText
    void setFocusedWidgetChoiceSelected(java.lang.String[]) -> setFocusedWidgetChoiceSelected
    com.artifex.mupdfdemo.LinkInfo[] getPageLinks(int) -> getPageLinks
    android.graphics.RectF[] getWidgetAreas(int) -> getWidgetAreas
    com.artifex.mupdfdemo.Annotation[] getAnnoations(int) -> getAnnoations
    android.graphics.RectF[] searchPage(int,java.lang.String) -> searchPage
    byte[] html(int) -> html
    com.artifex.mupdfdemo.TextWord[][] textLines(int) -> textLines
    void addMarkupAnnotation(int,android.graphics.PointF[],com.artifex.mupdfdemo.Annotation$Type) -> addMarkupAnnotation
    void addInkAnnotation(int,android.graphics.PointF[][]) -> addInkAnnotation
    void deleteAnnotation(int,int) -> deleteAnnotation
    boolean hasOutline() -> hasOutline
    com.artifex.mupdfdemo.OutlineItem[] getOutline() -> getOutline
    boolean needsPassword() -> needsPassword
    boolean authenticatePassword(java.lang.String) -> authenticatePassword
    boolean hasChanges() -> hasChanges
    void save() -> save
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$WidgetType() -> $SWITCH_TABLE$com$artifex$mupdfdemo$WidgetType
com.artifex.mupdfdemo.MuPDFPageAdapter -> com.artifex.mupdfdemo.MuPDFPageAdapter:
    android.content.Context mContext -> mContext
    com.artifex.mupdfdemo.MuPDFCore mCore -> mCore
    android.util.SparseArray mPageSizes -> mPageSizes
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.artifex.mupdfdemo.MuPDFCore access$0(com.artifex.mupdfdemo.MuPDFPageAdapter) -> access$0
    android.util.SparseArray access$1(com.artifex.mupdfdemo.MuPDFPageAdapter) -> access$1
com.artifex.mupdfdemo.MuPDFPageAdapter$1 -> com.artifex.mupdfdemo.MuPDFPageAdapter$1:
    com.artifex.mupdfdemo.MuPDFPageAdapter this$0 -> this$0
    int val$position -> val$position
    com.artifex.mupdfdemo.MuPDFPageView val$pageView -> val$pageView
    android.graphics.PointF doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(android.graphics.PointF) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView -> com.artifex.mupdfdemo.MuPDFPageView:
    com.artifex.mupdfdemo.MuPDFCore mCore -> mCore
    com.artifex.mupdfdemo.AsyncTask mPassClick -> mPassClick
    android.graphics.RectF[] mWidgetAreas -> mWidgetAreas
    com.artifex.mupdfdemo.Annotation[] mAnnotations -> mAnnotations
    int mSelectedAnnotationIndex -> mSelectedAnnotationIndex
    com.artifex.mupdfdemo.AsyncTask mLoadWidgetAreas -> mLoadWidgetAreas
    com.artifex.mupdfdemo.AsyncTask mLoadAnnotations -> mLoadAnnotations
    android.app.AlertDialog$Builder mTextEntryBuilder -> mTextEntryBuilder
    android.app.AlertDialog$Builder mChoiceEntryBuilder -> mChoiceEntryBuilder
    android.app.AlertDialog mTextEntry -> mTextEntry
    android.widget.EditText mEditText -> mEditText
    com.artifex.mupdfdemo.AsyncTask mSetWidgetText -> mSetWidgetText
    com.artifex.mupdfdemo.AsyncTask mSetWidgetChoice -> mSetWidgetChoice
    com.artifex.mupdfdemo.AsyncTask mAddStrikeOut -> mAddStrikeOut
    com.artifex.mupdfdemo.AsyncTask mAddInk -> mAddInk
    com.artifex.mupdfdemo.AsyncTask mDeleteAnnotation -> mDeleteAnnotation
    java.lang.Runnable changeReporter -> changeReporter
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$Annotation$Type -> $SWITCH_TABLE$com$artifex$mupdfdemo$Annotation$Type
    com.artifex.mupdfdemo.LinkInfo hitLink(float,float) -> hitLink
    void invokeTextDialog(java.lang.String) -> invokeTextDialog
    void invokeChoiceDialog(java.lang.String[]) -> invokeChoiceDialog
    void setChangeReporter(java.lang.Runnable) -> setChangeReporter
    com.artifex.mupdfdemo.Hit passClickEvent(float,float) -> passClickEvent
    boolean copySelection() -> copySelection
    boolean markupSelection(com.artifex.mupdfdemo.Annotation$Type) -> markupSelection
    void deleteSelectedAnnotation() -> deleteSelectedAnnotation
    void deselectAnnotation() -> deselectAnnotation
    boolean saveDraw() -> saveDraw
    android.graphics.Bitmap drawPage(int,int,int,int,int,int) -> drawPage
    android.graphics.Bitmap updatePage(com.artifex.mupdfdemo.BitmapHolder,int,int,int,int,int,int) -> updatePage
    com.artifex.mupdfdemo.LinkInfo[] getLinkInfo() -> getLinkInfo
    com.artifex.mupdfdemo.TextWord[][] getText() -> getText
    void addMarkup(android.graphics.PointF[],com.artifex.mupdfdemo.Annotation$Type) -> addMarkup
    void loadAnnotations() -> loadAnnotations
    void setPage(int,android.graphics.PointF) -> setPage
    void setScale(float) -> setScale
    void releaseResources() -> releaseResources
    com.artifex.mupdfdemo.MuPDFCore access$0(com.artifex.mupdfdemo.MuPDFPageView) -> access$0
    java.lang.Runnable access$1(com.artifex.mupdfdemo.MuPDFPageView) -> access$1
    android.widget.EditText access$2(com.artifex.mupdfdemo.MuPDFPageView) -> access$2
    void access$3(com.artifex.mupdfdemo.MuPDFPageView,java.lang.String) -> access$3
    void access$4(com.artifex.mupdfdemo.MuPDFPageView,com.artifex.mupdfdemo.AsyncTask) -> access$4
    com.artifex.mupdfdemo.AsyncTask access$5(com.artifex.mupdfdemo.MuPDFPageView) -> access$5
    void access$6(com.artifex.mupdfdemo.MuPDFPageView,com.artifex.mupdfdemo.AsyncTask) -> access$6
    com.artifex.mupdfdemo.AsyncTask access$7(com.artifex.mupdfdemo.MuPDFPageView) -> access$7
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$Annotation$Type() -> $SWITCH_TABLE$com$artifex$mupdfdemo$Annotation$Type
    void access$9(com.artifex.mupdfdemo.MuPDFPageView,java.lang.String[]) -> access$9
    void access$10(com.artifex.mupdfdemo.MuPDFPageView) -> access$10
    void access$11(com.artifex.mupdfdemo.MuPDFPageView,com.artifex.mupdfdemo.Annotation[]) -> access$11
    void access$12(com.artifex.mupdfdemo.MuPDFPageView,android.graphics.RectF[]) -> access$12
com.artifex.mupdfdemo.MuPDFPageView$1 -> com.artifex.mupdfdemo.MuPDFPageView$1:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdfdemo.MuPDFPageView$10 -> com.artifex.mupdfdemo.MuPDFPageView$10:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    com.artifex.mupdfdemo.Annotation[] doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.artifex.mupdfdemo.Annotation[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$11 -> com.artifex.mupdfdemo.MuPDFPageView$11:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    int val$page -> val$page
    android.graphics.RectF[] doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(android.graphics.RectF[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$2 -> com.artifex.mupdfdemo.MuPDFPageView$2:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
    com.artifex.mupdfdemo.MuPDFPageView access$0(com.artifex.mupdfdemo.MuPDFPageView$2) -> access$0
com.artifex.mupdfdemo.MuPDFPageView$2$1 -> com.artifex.mupdfdemo.MuPDFPageView$2$1:
    com.artifex.mupdfdemo.MuPDFPageView$2 this$1 -> this$1
    java.lang.Boolean doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$3 -> com.artifex.mupdfdemo.MuPDFPageView$3:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    java.lang.String[] val$options -> val$options
    void onClick(android.content.DialogInterface,int) -> onClick
    com.artifex.mupdfdemo.MuPDFPageView access$0(com.artifex.mupdfdemo.MuPDFPageView$3) -> access$0
com.artifex.mupdfdemo.MuPDFPageView$3$1 -> com.artifex.mupdfdemo.MuPDFPageView$3$1:
    com.artifex.mupdfdemo.MuPDFPageView$3 this$1 -> this$1
    java.lang.Void doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$4 -> com.artifex.mupdfdemo.MuPDFPageView$4:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    float val$docRelX -> val$docRelX
    float val$docRelY -> val$docRelY
    com.artifex.mupdfdemo.PassClickResult doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.artifex.mupdfdemo.PassClickResult) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.artifex.mupdfdemo.MuPDFPageView access$2(com.artifex.mupdfdemo.MuPDFPageView$4) -> access$2
com.artifex.mupdfdemo.MuPDFPageView$4$1 -> com.artifex.mupdfdemo.MuPDFPageView$4$1:
    com.artifex.mupdfdemo.MuPDFPageView$4 this$1 -> this$1
    void visitText(com.artifex.mupdfdemo.PassClickResultText) -> visitText
    void visitChoice(com.artifex.mupdfdemo.PassClickResultChoice) -> visitChoice
com.artifex.mupdfdemo.MuPDFPageView$5 -> com.artifex.mupdfdemo.MuPDFPageView$5:
    java.lang.StringBuilder line -> line
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    java.lang.StringBuilder val$text -> val$text
    void onStartLine() -> onStartLine
    void onWord(com.artifex.mupdfdemo.TextWord) -> onWord
    void onEndLine() -> onEndLine
com.artifex.mupdfdemo.MuPDFPageView$6 -> com.artifex.mupdfdemo.MuPDFPageView$6:
    android.graphics.RectF rect -> rect
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    java.util.ArrayList val$quadPoints -> val$quadPoints
    void onStartLine() -> onStartLine
    void onWord(com.artifex.mupdfdemo.TextWord) -> onWord
    void onEndLine() -> onEndLine
com.artifex.mupdfdemo.MuPDFPageView$7 -> com.artifex.mupdfdemo.MuPDFPageView$7:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    com.artifex.mupdfdemo.Annotation$Type val$type -> val$type
    java.lang.Void doInBackground(android.graphics.PointF[][]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$8 -> com.artifex.mupdfdemo.MuPDFPageView$8:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    java.lang.Void doInBackground(java.lang.Integer[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$9 -> com.artifex.mupdfdemo.MuPDFPageView$9:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    java.lang.Void doInBackground(android.graphics.PointF[][][]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFReaderView -> com.artifex.mupdfdemo.MuPDFReaderView:
    android.content.Context mContext -> mContext
    boolean mLinksEnabled -> mLinksEnabled
    com.artifex.mupdfdemo.MuPDFReaderView$Mode mMode -> mMode
    boolean tapDisabled -> tapDisabled
    int tapPageMargin -> tapPageMargin
    float mX -> mX
    float mY -> mY
    float TOUCH_TOLERANCE -> TOUCH_TOLERANCE
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFReaderView$Mode -> $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFReaderView$Mode
    void onTapMainDocArea() -> onTapMainDocArea
    void onDocMotion() -> onDocMotion
    void onHit(com.artifex.mupdfdemo.Hit) -> onHit
    void setLinksEnabled(boolean) -> setLinksEnabled
    void setMode(com.artifex.mupdfdemo.MuPDFReaderView$Mode) -> setMode
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void touch_start(float,float) -> touch_start
    void touch_move(float,float) -> touch_move
    void touch_up() -> touch_up
    void onChildSetup(int,android.view.View) -> onChildSetup
    void onMoveToChild(int) -> onMoveToChild
    void onMoveOffChild(int) -> onMoveOffChild
    void onSettle(android.view.View) -> onSettle
    void onUnsettle(android.view.View) -> onUnsettle
    void onNotInUse(android.view.View) -> onNotInUse
    void onScaleChild(android.view.View,java.lang.Float) -> onScaleChild
    android.content.Context access$0(com.artifex.mupdfdemo.MuPDFReaderView) -> access$0
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFReaderView$Mode() -> $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFReaderView$Mode
com.artifex.mupdfdemo.MuPDFReaderView$1 -> com.artifex.mupdfdemo.MuPDFReaderView$1:
    com.artifex.mupdfdemo.MuPDFReaderView this$0 -> this$0
    void visitInternal(com.artifex.mupdfdemo.LinkInfoInternal) -> visitInternal
    void visitExternal(com.artifex.mupdfdemo.LinkInfoExternal) -> visitExternal
    void visitRemote(com.artifex.mupdfdemo.LinkInfoRemote) -> visitRemote
com.artifex.mupdfdemo.MuPDFReaderView$2 -> com.artifex.mupdfdemo.MuPDFReaderView$2:
    com.artifex.mupdfdemo.MuPDFReaderView this$0 -> this$0
    void run() -> run
com.artifex.mupdfdemo.MuPDFReaderView$2$1 -> com.artifex.mupdfdemo.MuPDFReaderView$2$1:
    com.artifex.mupdfdemo.MuPDFReaderView$2 this$1 -> this$1
    void applyToView(android.view.View) -> applyToView
com.artifex.mupdfdemo.MuPDFReaderView$Mode -> com.artifex.mupdfdemo.MuPDFReaderView$Mode:
    com.artifex.mupdfdemo.MuPDFReaderView$Mode Viewing -> Viewing
    com.artifex.mupdfdemo.MuPDFReaderView$Mode Selecting -> Selecting
    com.artifex.mupdfdemo.MuPDFReaderView$Mode Drawing -> Drawing
    com.artifex.mupdfdemo.MuPDFReaderView$Mode[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.MuPDFReaderView$Mode[] values() -> values
    com.artifex.mupdfdemo.MuPDFReaderView$Mode valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.MuPDFReflowAdapter -> com.artifex.mupdfdemo.MuPDFReflowAdapter:
    android.content.Context mContext -> mContext
    com.artifex.mupdfdemo.MuPDFCore mCore -> mCore
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.artifex.mupdfdemo.MuPDFReflowView -> com.artifex.mupdfdemo.MuPDFReflowView:
    com.artifex.mupdfdemo.MuPDFCore mCore -> mCore
    android.os.Handler mHandler -> mHandler
    android.graphics.Point mParentSize -> mParentSize
    int mPage -> mPage
    int mContentHeight -> mContentHeight
    com.artifex.mupdfdemo.AsyncTask mLoadHTML -> mLoadHTML
    void requestHeight() -> requestHeight
    void setPage(int,android.graphics.PointF) -> setPage
    int getPage() -> getPage
    void setScale(float) -> setScale
    void blank(int) -> blank
    com.artifex.mupdfdemo.Hit passClickEvent(float,float) -> passClickEvent
    com.artifex.mupdfdemo.LinkInfo hitLink(float,float) -> hitLink
    void selectText(float,float,float,float) -> selectText
    void deselectText() -> deselectText
    boolean copySelection() -> copySelection
    boolean markupSelection(com.artifex.mupdfdemo.Annotation$Type) -> markupSelection
    void startDraw(float,float) -> startDraw
    void continueDraw(float,float) -> continueDraw
    void cancelDraw() -> cancelDraw
    boolean saveDraw() -> saveDraw
    void setSearchBoxes(android.graphics.RectF[]) -> setSearchBoxes
    void setLinkHighlighting(boolean) -> setLinkHighlighting
    void deleteSelectedAnnotation() -> deleteSelectedAnnotation
    void deselectAnnotation() -> deselectAnnotation
    void setChangeReporter(java.lang.Runnable) -> setChangeReporter
    void update() -> update
    void addHq(boolean) -> addHq
    void removeHq() -> removeHq
    void releaseResources() -> releaseResources
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void access$0(com.artifex.mupdfdemo.MuPDFReflowView,int) -> access$0
    android.os.Handler access$1(com.artifex.mupdfdemo.MuPDFReflowView) -> access$1
    void access$2(com.artifex.mupdfdemo.MuPDFReflowView) -> access$2
    com.artifex.mupdfdemo.MuPDFCore access$3(com.artifex.mupdfdemo.MuPDFReflowView) -> access$3
    int access$4(com.artifex.mupdfdemo.MuPDFReflowView) -> access$4
com.artifex.mupdfdemo.MuPDFReflowView$1 -> com.artifex.mupdfdemo.MuPDFReflowView$1:
    com.artifex.mupdfdemo.MuPDFReflowView this$0 -> this$0
    void reportContentHeight(java.lang.String) -> reportContentHeight
    com.artifex.mupdfdemo.MuPDFReflowView access$0(com.artifex.mupdfdemo.MuPDFReflowView$1) -> access$0
com.artifex.mupdfdemo.MuPDFReflowView$1$1 -> com.artifex.mupdfdemo.MuPDFReflowView$1$1:
    com.artifex.mupdfdemo.MuPDFReflowView$1 this$1 -> this$1
    void run() -> run
com.artifex.mupdfdemo.MuPDFReflowView$2 -> com.artifex.mupdfdemo.MuPDFReflowView$2:
    com.artifex.mupdfdemo.MuPDFReflowView this$0 -> this$0
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.artifex.mupdfdemo.MuPDFReflowView$3 -> com.artifex.mupdfdemo.MuPDFReflowView$3:
    com.artifex.mupdfdemo.MuPDFReflowView this$0 -> this$0
    byte[] doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(byte[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFView -> com.artifex.mupdfdemo.MuPDFView:
    void setPage(int,android.graphics.PointF) -> setPage
    void setScale(float) -> setScale
    int getPage() -> getPage
    void blank(int) -> blank
    com.artifex.mupdfdemo.Hit passClickEvent(float,float) -> passClickEvent
    com.artifex.mupdfdemo.LinkInfo hitLink(float,float) -> hitLink
    void selectText(float,float,float,float) -> selectText
    void deselectText() -> deselectText
    boolean copySelection() -> copySelection
    boolean markupSelection(com.artifex.mupdfdemo.Annotation$Type) -> markupSelection
    void deleteSelectedAnnotation() -> deleteSelectedAnnotation
    void setSearchBoxes(android.graphics.RectF[]) -> setSearchBoxes
    void setLinkHighlighting(boolean) -> setLinkHighlighting
    void deselectAnnotation() -> deselectAnnotation
    void startDraw(float,float) -> startDraw
    void continueDraw(float,float) -> continueDraw
    void cancelDraw() -> cancelDraw
    boolean saveDraw() -> saveDraw
    void setChangeReporter(java.lang.Runnable) -> setChangeReporter
    void update() -> update
    void addHq(boolean) -> addHq
    void removeHq() -> removeHq
    void releaseResources() -> releaseResources
com.artifex.mupdfdemo.OpaqueImageView -> com.artifex.mupdfdemo.OpaqueImageView:
    boolean isOpaque() -> isOpaque
com.artifex.mupdfdemo.OutlineActivity -> com.artifex.mupdfdemo.OutlineActivity:
    com.artifex.mupdfdemo.OutlineItem[] mItems -> mItems
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
com.artifex.mupdfdemo.OutlineActivityData -> com.artifex.mupdfdemo.OutlineActivityData:
    com.artifex.mupdfdemo.OutlineItem[] items -> items
    int position -> position
    com.artifex.mupdfdemo.OutlineActivityData singleton -> singleton
    void set(com.artifex.mupdfdemo.OutlineActivityData) -> set
    com.artifex.mupdfdemo.OutlineActivityData get() -> get
com.artifex.mupdfdemo.OutlineAdapter -> com.artifex.mupdfdemo.OutlineAdapter:
    com.artifex.mupdfdemo.OutlineItem[] mItems -> mItems
    android.view.LayoutInflater mInflater -> mInflater
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.artifex.mupdfdemo.OutlineItem -> com.artifex.mupdfdemo.OutlineItem:
    int level -> level
    java.lang.String title -> title
    int page -> page
com.artifex.mupdfdemo.PageView -> com.artifex.mupdfdemo.PageView:
    int HIGHLIGHT_COLOR -> HIGHLIGHT_COLOR
    int LINK_COLOR -> LINK_COLOR
    int BOX_COLOR -> BOX_COLOR
    int INK_COLOR -> INK_COLOR
    float INK_THICKNESS -> INK_THICKNESS
    int BACKGROUND_COLOR -> BACKGROUND_COLOR
    int PROGRESS_DIALOG_DELAY -> PROGRESS_DIALOG_DELAY
    android.content.Context mContext -> mContext
    int mPageNumber -> mPageNumber
    android.graphics.Point mParentSize -> mParentSize
    android.graphics.Point mSize -> mSize
    float mSourceScale -> mSourceScale
    android.widget.ImageView mEntire -> mEntire
    com.artifex.mupdfdemo.BitmapHolder mEntireBmh -> mEntireBmh
    com.artifex.mupdfdemo.AsyncTask mGetText -> mGetText
    com.artifex.mupdfdemo.AsyncTask mGetLinkInfo -> mGetLinkInfo
    com.artifex.mupdfdemo.AsyncTask mDrawEntire -> mDrawEntire
    android.graphics.Point mPatchViewSize -> mPatchViewSize
    android.graphics.Rect mPatchArea -> mPatchArea
    android.widget.ImageView mPatch -> mPatch
    com.artifex.mupdfdemo.BitmapHolder mPatchBmh -> mPatchBmh
    com.artifex.mupdfdemo.AsyncTask mDrawPatch -> mDrawPatch
    android.graphics.RectF[] mSearchBoxes -> mSearchBoxes
    com.artifex.mupdfdemo.LinkInfo[] mLinks -> mLinks
    android.graphics.RectF mSelectBox -> mSelectBox
    com.artifex.mupdfdemo.TextWord[][] mText -> mText
    android.graphics.RectF mItemSelectBox -> mItemSelectBox
    java.util.ArrayList mDrawing -> mDrawing
    android.view.View mSearchView -> mSearchView
    boolean mIsBlank -> mIsBlank
    boolean mHighlightLinks -> mHighlightLinks
    android.widget.ProgressBar mBusyIndicator -> mBusyIndicator
    android.os.Handler mHandler -> mHandler
    android.graphics.Bitmap drawPage(int,int,int,int,int,int) -> drawPage
    android.graphics.Bitmap updatePage(com.artifex.mupdfdemo.BitmapHolder,int,int,int,int,int,int) -> updatePage
    com.artifex.mupdfdemo.LinkInfo[] getLinkInfo() -> getLinkInfo
    com.artifex.mupdfdemo.TextWord[][] getText() -> getText
    void addMarkup(android.graphics.PointF[],com.artifex.mupdfdemo.Annotation$Type) -> addMarkup
    void reinit() -> reinit
    void releaseResources() -> releaseResources
    void blank(int) -> blank
    void setPage(int,android.graphics.PointF) -> setPage
    void setSearchBoxes(android.graphics.RectF[]) -> setSearchBoxes
    void setLinkHighlighting(boolean) -> setLinkHighlighting
    void deselectText() -> deselectText
    void selectText(float,float,float,float) -> selectText
    void startDraw(float,float) -> startDraw
    void continueDraw(float,float) -> continueDraw
    void cancelDraw() -> cancelDraw
    android.graphics.PointF[][] getDraw() -> getDraw
    void processSelectedText(com.artifex.mupdfdemo.TextProcessor) -> processSelectedText
    void setItemSelectBox(android.graphics.RectF) -> setItemSelectBox
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void addHq(boolean) -> addHq
    void update() -> update
    void removeHq() -> removeHq
    int getPage() -> getPage
    boolean isOpaque() -> isOpaque
    android.widget.ImageView access$0(com.artifex.mupdfdemo.PageView) -> access$0
    com.artifex.mupdfdemo.BitmapHolder access$1(com.artifex.mupdfdemo.PageView) -> access$1
    android.widget.ProgressBar access$2(com.artifex.mupdfdemo.PageView) -> access$2
    void access$3(com.artifex.mupdfdemo.PageView,android.widget.ProgressBar) -> access$3
    android.os.Handler access$4(com.artifex.mupdfdemo.PageView) -> access$4
    boolean access$5(com.artifex.mupdfdemo.PageView) -> access$5
    android.graphics.RectF[] access$6(com.artifex.mupdfdemo.PageView) -> access$6
    boolean access$7(com.artifex.mupdfdemo.PageView) -> access$7
    android.graphics.RectF access$8(com.artifex.mupdfdemo.PageView) -> access$8
    com.artifex.mupdfdemo.TextWord[][] access$9(com.artifex.mupdfdemo.PageView) -> access$9
    android.graphics.RectF access$10(com.artifex.mupdfdemo.PageView) -> access$10
    void access$11(com.artifex.mupdfdemo.PageView,com.artifex.mupdfdemo.TextWord[][]) -> access$11
    android.view.View access$12(com.artifex.mupdfdemo.PageView) -> access$12
    com.artifex.mupdfdemo.BitmapHolder access$13(com.artifex.mupdfdemo.PageView) -> access$13
    void access$14(com.artifex.mupdfdemo.PageView,android.graphics.Point) -> access$14
    void access$15(com.artifex.mupdfdemo.PageView,android.graphics.Rect) -> access$15
    android.widget.ImageView access$16(com.artifex.mupdfdemo.PageView) -> access$16
    android.graphics.Rect access$17(com.artifex.mupdfdemo.PageView) -> access$17
com.artifex.mupdfdemo.PageView$1 -> com.artifex.mupdfdemo.PageView$1:
    com.artifex.mupdfdemo.PageView this$0 -> this$0
    com.artifex.mupdfdemo.LinkInfo[] doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.artifex.mupdfdemo.LinkInfo[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.PageView$2 -> com.artifex.mupdfdemo.PageView$2:
    com.artifex.mupdfdemo.PageView this$0 -> this$0
    android.graphics.Bitmap doInBackground(java.lang.Void[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.artifex.mupdfdemo.PageView access$2(com.artifex.mupdfdemo.PageView$2) -> access$2
com.artifex.mupdfdemo.PageView$2$1 -> com.artifex.mupdfdemo.PageView$2$1:
    com.artifex.mupdfdemo.PageView$2 this$1 -> this$1
    void run() -> run
com.artifex.mupdfdemo.PageView$3 -> com.artifex.mupdfdemo.PageView$3:
    com.artifex.mupdfdemo.PageView this$0 -> this$0
    void onDraw(android.graphics.Canvas) -> onDraw
com.artifex.mupdfdemo.PageView$3$1 -> com.artifex.mupdfdemo.PageView$3$1:
    android.graphics.RectF rect -> rect
    com.artifex.mupdfdemo.PageView$3 this$1 -> this$1
    android.graphics.Canvas val$canvas -> val$canvas
    float val$scale -> val$scale
    android.graphics.Paint val$paint -> val$paint
    void onStartLine() -> onStartLine
    void onWord(com.artifex.mupdfdemo.TextWord) -> onWord
    void onEndLine() -> onEndLine
com.artifex.mupdfdemo.PageView$4 -> com.artifex.mupdfdemo.PageView$4:
    com.artifex.mupdfdemo.PageView this$0 -> this$0
    com.artifex.mupdfdemo.TextWord[][] doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.artifex.mupdfdemo.TextWord[][]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.PageView$5 -> com.artifex.mupdfdemo.PageView$5:
    com.artifex.mupdfdemo.PageView this$0 -> this$0
    com.artifex.mupdfdemo.PatchInfo doInBackground(com.artifex.mupdfdemo.PatchInfo[]) -> doInBackground
    void onPostExecute(com.artifex.mupdfdemo.PatchInfo) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.PageView$6 -> com.artifex.mupdfdemo.PageView$6:
    com.artifex.mupdfdemo.PageView this$0 -> this$0
    android.graphics.Bitmap doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.PassClickResult -> com.artifex.mupdfdemo.PassClickResult:
    boolean changed -> changed
    void acceptVisitor(com.artifex.mupdfdemo.PassClickResultVisitor) -> acceptVisitor
com.artifex.mupdfdemo.PassClickResultChoice -> com.artifex.mupdfdemo.PassClickResultChoice:
    java.lang.String[] options -> options
    java.lang.String[] selected -> selected
    void acceptVisitor(com.artifex.mupdfdemo.PassClickResultVisitor) -> acceptVisitor
com.artifex.mupdfdemo.PassClickResultText -> com.artifex.mupdfdemo.PassClickResultText:
    java.lang.String text -> text
    void acceptVisitor(com.artifex.mupdfdemo.PassClickResultVisitor) -> acceptVisitor
com.artifex.mupdfdemo.PassClickResultVisitor -> com.artifex.mupdfdemo.PassClickResultVisitor:
    void visitText(com.artifex.mupdfdemo.PassClickResultText) -> visitText
    void visitChoice(com.artifex.mupdfdemo.PassClickResultChoice) -> visitChoice
com.artifex.mupdfdemo.PatchInfo -> com.artifex.mupdfdemo.PatchInfo:
    com.artifex.mupdfdemo.BitmapHolder bmh -> bmh
    android.graphics.Bitmap bm -> bm
    android.graphics.Point patchViewSize -> patchViewSize
    android.graphics.Rect patchArea -> patchArea
    boolean completeRedraw -> completeRedraw
com.artifex.mupdfdemo.PrintDialogActivity -> com.artifex.mupdfdemo.PrintDialogActivity:
    java.lang.String PRINT_DIALOG_URL -> PRINT_DIALOG_URL
    java.lang.String JS_INTERFACE -> JS_INTERFACE
    java.lang.String CONTENT_TRANSFER_ENCODING -> CONTENT_TRANSFER_ENCODING
    java.lang.String ZXING_URL -> ZXING_URL
    int ZXING_SCAN_REQUEST -> ZXING_SCAN_REQUEST
    java.lang.String CLOSE_POST_MESSAGE_NAME -> CLOSE_POST_MESSAGE_NAME
    android.webkit.WebView dialogWebView -> dialogWebView
    android.content.Intent cloudPrintIntent -> cloudPrintIntent
    int resultCode -> resultCode
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(com.artifex.mupdfdemo.PrintDialogActivity,int) -> access$0
    int access$1(com.artifex.mupdfdemo.PrintDialogActivity) -> access$1
com.artifex.mupdfdemo.PrintDialogActivity$PrintDialogJavaScriptInterface -> com.artifex.mupdfdemo.PrintDialogActivity$PrintDialogJavaScriptInterface:
    com.artifex.mupdfdemo.PrintDialogActivity this$0 -> this$0
    java.lang.String getType() -> getType
    java.lang.String getTitle() -> getTitle
    java.lang.String getContent() -> getContent
    java.lang.String getEncoding() -> getEncoding
    void onPostMessage(java.lang.String) -> onPostMessage
com.artifex.mupdfdemo.PrintDialogActivity$PrintDialogWebClient -> com.artifex.mupdfdemo.PrintDialogActivity$PrintDialogWebClient:
    com.artifex.mupdfdemo.PrintDialogActivity this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.artifex.mupdfdemo.ProgressDialogX -> com.artifex.mupdfdemo.ProgressDialogX:
    boolean mCancelled -> mCancelled
    boolean isCancelled() -> isCancelled
    void cancel() -> cancel
com.artifex.mupdfdemo.ReaderView -> com.artifex.mupdfdemo.ReaderView:
    int MOVING_DIAGONALLY -> MOVING_DIAGONALLY
    int MOVING_LEFT -> MOVING_LEFT
    int MOVING_RIGHT -> MOVING_RIGHT
    int MOVING_UP -> MOVING_UP
    int MOVING_DOWN -> MOVING_DOWN
    int FLING_MARGIN -> FLING_MARGIN
    int GAP -> GAP
    float MIN_SCALE -> MIN_SCALE
    float MAX_SCALE -> MAX_SCALE
    float REFLOW_SCALE_FACTOR -> REFLOW_SCALE_FACTOR
    android.widget.Adapter mAdapter -> mAdapter
    int mCurrent -> mCurrent
    boolean mResetLayout -> mResetLayout
    android.util.SparseArray mChildViews -> mChildViews
    java.util.LinkedList mViewCache -> mViewCache
    boolean mUserInteracting -> mUserInteracting
    boolean mScaling -> mScaling
    float mScale -> mScale
    int mXScroll -> mXScroll
    int mYScroll -> mYScroll
    boolean mReflow -> mReflow
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    android.view.ScaleGestureDetector mScaleGestureDetector -> mScaleGestureDetector
    android.widget.Scroller mScroller -> mScroller
    int mScrollerLastX -> mScrollerLastX
    int mScrollerLastY -> mScrollerLastY
    boolean mScrollDisabled -> mScrollDisabled
    int getDisplayedViewIndex() -> getDisplayedViewIndex
    void setDisplayedViewIndex(int) -> setDisplayedViewIndex
    void moveToNext() -> moveToNext
    void moveToPrevious() -> moveToPrevious
    int smartAdvanceAmount(int,int) -> smartAdvanceAmount
    void smartMoveForwards() -> smartMoveForwards
    void smartMoveBackwards() -> smartMoveBackwards
    void resetupChildren() -> resetupChildren
    void applyToChildren(com.artifex.mupdfdemo.ReaderView$ViewMapper) -> applyToChildren
    void refresh(boolean) -> refresh
    void onChildSetup(int,android.view.View) -> onChildSetup
    void onMoveToChild(int) -> onMoveToChild
    void onMoveOffChild(int) -> onMoveOffChild
    void onSettle(android.view.View) -> onSettle
    void onUnsettle(android.view.View) -> onUnsettle
    void onNotInUse(android.view.View) -> onNotInUse
    void onScaleChild(android.view.View,java.lang.Float) -> onScaleChild
    android.view.View getView(int) -> getView
    android.view.View getDisplayedView() -> getDisplayedView
    void run() -> run
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.widget.Adapter getAdapter() -> getAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.Adapter) -> setAdapter
    void setSelection(int) -> setSelection
    android.view.View getCached() -> getCached
    android.view.View getOrCreateChild(int) -> getOrCreateChild
    void addAndMeasureChild(int,android.view.View) -> addAndMeasureChild
    void measureView(android.view.View) -> measureView
    android.graphics.Rect getScrollBounds(int,int,int,int) -> getScrollBounds
    android.graphics.Rect getScrollBounds(android.view.View) -> getScrollBounds
    android.graphics.Point getCorrection(android.graphics.Rect) -> getCorrection
    void postSettle(android.view.View) -> postSettle
    void postUnsettle(android.view.View) -> postUnsettle
    void slideViewOntoScreen(android.view.View) -> slideViewOntoScreen
    android.graphics.Point subScreenSizeOffset(android.view.View) -> subScreenSizeOffset
    int directionOfTravel(float,float) -> directionOfTravel
    boolean withinBoundsInDirectionOfTravel(android.graphics.Rect,float,float) -> withinBoundsInDirectionOfTravel
    float access$0(com.artifex.mupdfdemo.ReaderView) -> access$0
com.artifex.mupdfdemo.ReaderView$1 -> com.artifex.mupdfdemo.ReaderView$1:
    com.artifex.mupdfdemo.ReaderView this$0 -> this$0
    void applyToView(android.view.View) -> applyToView
com.artifex.mupdfdemo.ReaderView$2 -> com.artifex.mupdfdemo.ReaderView$2:
    com.artifex.mupdfdemo.ReaderView this$0 -> this$0
    android.view.View val$v -> val$v
    void run() -> run
com.artifex.mupdfdemo.ReaderView$3 -> com.artifex.mupdfdemo.ReaderView$3:
    com.artifex.mupdfdemo.ReaderView this$0 -> this$0
    android.view.View val$v -> val$v
    void run() -> run
com.artifex.mupdfdemo.ReaderView$ViewMapper -> com.artifex.mupdfdemo.ReaderView$ViewMapper:
    void applyToView(android.view.View) -> applyToView
com.artifex.mupdfdemo.SafeAnimatorInflater -> com.artifex.mupdfdemo.SafeAnimatorInflater:
    android.view.View mView -> mView
    android.view.View access$0(com.artifex.mupdfdemo.SafeAnimatorInflater) -> access$0
com.artifex.mupdfdemo.SafeAnimatorInflater$1 -> com.artifex.mupdfdemo.SafeAnimatorInflater$1:
    com.artifex.mupdfdemo.SafeAnimatorInflater this$0 -> this$0
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.artifex.mupdfdemo.SearchTask -> com.artifex.mupdfdemo.SearchTask:
    int SEARCH_PROGRESS_DELAY -> SEARCH_PROGRESS_DELAY
    android.content.Context mContext -> mContext
    com.artifex.mupdfdemo.MuPDFCore mCore -> mCore
    android.os.Handler mHandler -> mHandler
    android.app.AlertDialog$Builder mAlertBuilder -> mAlertBuilder
    com.artifex.mupdfdemo.AsyncTask mSearchTask -> mSearchTask
    void onTextFound(com.artifex.mupdfdemo.SearchTaskResult) -> onTextFound
    void stop() -> stop
    void go(java.lang.String,int,int,int) -> go
    com.artifex.mupdfdemo.MuPDFCore access$0(com.artifex.mupdfdemo.SearchTask) -> access$0
    android.app.AlertDialog$Builder access$1(com.artifex.mupdfdemo.SearchTask) -> access$1
    android.content.Context access$2(com.artifex.mupdfdemo.SearchTask) -> access$2
    android.os.Handler access$3(com.artifex.mupdfdemo.SearchTask) -> access$3
com.artifex.mupdfdemo.SearchTask$1 -> com.artifex.mupdfdemo.SearchTask$1:
    com.artifex.mupdfdemo.SearchTask this$0 -> this$0
    void onCancel(android.content.DialogInterface) -> onCancel
com.artifex.mupdfdemo.SearchTask$2 -> com.artifex.mupdfdemo.SearchTask$2:
    com.artifex.mupdfdemo.SearchTask this$0 -> this$0
    int val$startIndex -> val$startIndex
    java.lang.String val$text -> val$text
    int val$increment -> val$increment
    com.artifex.mupdfdemo.ProgressDialogX val$progressDialog -> val$progressDialog
    com.artifex.mupdfdemo.SearchTaskResult doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.artifex.mupdfdemo.SearchTaskResult) -> onPostExecute
    void onCancelled() -> onCancelled
    void onProgressUpdate(java.lang.Integer[]) -> onProgressUpdate
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.artifex.mupdfdemo.SearchTask$2$1 -> com.artifex.mupdfdemo.SearchTask$2$1:
    com.artifex.mupdfdemo.SearchTask$2 this$1 -> this$1
    com.artifex.mupdfdemo.ProgressDialogX val$progressDialog -> val$progressDialog
    int val$startIndex -> val$startIndex
    void run() -> run
com.artifex.mupdfdemo.SearchTaskResult -> com.artifex.mupdfdemo.SearchTaskResult:
    java.lang.String txt -> txt
    int pageNumber -> pageNumber
    android.graphics.RectF[] searchBoxes -> searchBoxes
    com.artifex.mupdfdemo.SearchTaskResult singleton -> singleton
    com.artifex.mupdfdemo.SearchTaskResult get() -> get
    void set(com.artifex.mupdfdemo.SearchTaskResult) -> set
com.artifex.mupdfdemo.TextChar -> com.artifex.mupdfdemo.TextChar:
    char c -> c
com.artifex.mupdfdemo.TextProcessor -> com.artifex.mupdfdemo.TextProcessor:
    void onStartLine() -> onStartLine
    void onWord(com.artifex.mupdfdemo.TextWord) -> onWord
    void onEndLine() -> onEndLine
com.artifex.mupdfdemo.TextSelector -> com.artifex.mupdfdemo.TextSelector:
    com.artifex.mupdfdemo.TextWord[][] mText -> mText
    android.graphics.RectF mSelectBox -> mSelectBox
    void select(com.artifex.mupdfdemo.TextProcessor) -> select
com.artifex.mupdfdemo.TextWord -> com.artifex.mupdfdemo.TextWord:
    java.lang.String w -> w
    void Add(com.artifex.mupdfdemo.TextChar) -> Add
com.artifex.mupdfdemo.ThreadPerTaskExecutor -> com.artifex.mupdfdemo.ThreadPerTaskExecutor:
    void execute(java.lang.Runnable) -> execute
com.artifex.mupdfdemo.WidgetType -> com.artifex.mupdfdemo.WidgetType:
    com.artifex.mupdfdemo.WidgetType NONE -> NONE
    com.artifex.mupdfdemo.WidgetType TEXT -> TEXT
    com.artifex.mupdfdemo.WidgetType LISTBOX -> LISTBOX
    com.artifex.mupdfdemo.WidgetType COMBOBOX -> COMBOBOX
    com.artifex.mupdfdemo.WidgetType[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.WidgetType[] values() -> values
    com.artifex.mupdfdemo.WidgetType valueOf(java.lang.String) -> valueOf
com.baidu.android.bbalbs.common.a.a -> com.baidu.android.bbalbs.common.a.a:
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.android.bbalbs.common.a.b -> com.baidu.android.bbalbs.common.a.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.android.bbalbs.common.a.c -> com.baidu.android.bbalbs.common.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.android.bbalbs.common.util.CommonParam -> com.baidu.android.bbalbs.common.util.CommonParam:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.baidu.android.bbalbs.common.util.a -> com.baidu.android.bbalbs.common.util.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.android.bbalbs.common.util.a$a -> com.baidu.android.bbalbs.common.util.a$a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.android.bbalbs.common.util.a$a a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
com.baidu.lbsapi.auth.ErrorMessage -> com.baidu.lbsapi.auth.ErrorMessage:
    java.lang.String a(java.lang.String) -> a
com.baidu.lbsapi.auth.a -> com.baidu.lbsapi.auth.a:
    boolean a -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
com.baidu.lbsapi.auth.b -> com.baidu.lbsapi.auth.b:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean b(android.content.Context,java.lang.String) -> b
com.baidu.lbsapi.auth.b$a -> com.baidu.lbsapi.auth.b$a:
    java.lang.String a(byte[]) -> a
com.baidu.lbsapi.auth.c -> com.baidu.lbsapi.auth.c:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.HashMap e -> e
    com.baidu.lbsapi.auth.c$a f -> f
    void a(java.util.HashMap,com.baidu.lbsapi.auth.c$a) -> a
    void a(java.lang.String) -> a
    boolean a(org.apache.http.client.HttpClient) -> a
    void b(org.apache.http.client.HttpClient) -> b
    void a(org.apache.http.client.HttpClient,java.lang.String,java.util.HashMap) -> a
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String a(android.content.Context) -> a
    java.util.HashMap a(java.util.HashMap) -> a
    org.apache.http.client.HttpClient a() -> a
    java.lang.String a(com.baidu.lbsapi.auth.c) -> a
    java.util.HashMap b(com.baidu.lbsapi.auth.c) -> b
    void a(com.baidu.lbsapi.auth.c,java.lang.String,java.util.HashMap) -> a
com.baidu.lbsapi.auth.c$a -> com.baidu.lbsapi.auth.c$a:
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.c$b -> com.baidu.lbsapi.auth.c$b:
    javax.net.ssl.SSLContext a -> a
    javax.net.ssl.X509TrustManager b -> b
    com.baidu.lbsapi.auth.c c -> c
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.baidu.lbsapi.auth.d -> com.baidu.lbsapi.auth.d:
    com.baidu.lbsapi.auth.c a -> a
    void run() -> run
com.baidu.lbsapi.auth.e -> com.baidu.lbsapi.auth.e:
    boolean a -> a
    android.content.Context b -> b
    com.baidu.lbsapi.auth.c c -> c
    com.baidu.lbsapi.auth.j d -> d
    int e -> e
    java.util.Hashtable f -> f
    android.os.Handler g -> g
    void c() -> c
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    int a(java.lang.String) -> a
    int a(boolean,java.lang.String,java.util.Hashtable,com.baidu.lbsapi.auth.i) -> a
    boolean b(java.lang.String) -> b
    void a(boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> a
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    java.lang.String a(android.content.Context) -> a
    java.util.Hashtable a() -> a
    boolean a(com.baidu.lbsapi.auth.e,java.lang.String) -> a
    void a(com.baidu.lbsapi.auth.e,boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> a
    com.baidu.lbsapi.auth.j b() -> b
    void a(com.baidu.lbsapi.auth.e,java.lang.String,java.lang.String) -> a
com.baidu.lbsapi.auth.f -> com.baidu.lbsapi.auth.f:
    com.baidu.lbsapi.auth.e a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.lbsapi.auth.g -> com.baidu.lbsapi.auth.g:
    int a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.Hashtable e -> e
    com.baidu.lbsapi.auth.e f -> f
    void run() -> run
com.baidu.lbsapi.auth.h -> com.baidu.lbsapi.auth.h:
    java.lang.String a -> a
    com.baidu.lbsapi.auth.e b -> b
    void a(java.lang.String) -> a
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.i -> com.baidu.lbsapi.auth.i:
    void a(int,java.lang.String) -> a
com.baidu.lbsapi.auth.j -> com.baidu.lbsapi.auth.j:
    android.os.Handler a -> a
    java.lang.Object b -> b
    boolean c -> c
    boolean d -> d
    void run() -> run
    void a() -> a
    void b() -> b
    void c() -> c
com.baidu.location.BDErrorReport -> com.baidu.location.BDErrorReport:
    java.lang.String a -> a
    void onReportResult(boolean) -> onReportResult
    int setErrorInfo(boolean,double,double,boolean,java.lang.String,double,double,java.lang.String,java.lang.String) -> setErrorInfo
    android.os.Bundle getErrorInfo() -> getErrorInfo
com.baidu.location.BDGeofence -> com.baidu.location.BDGeofence:
    int GEOFENCE_TRANSITION_ENTER -> GEOFENCE_TRANSITION_ENTER
    java.lang.String COORD_TYPE_BD09 -> COORD_TYPE_BD09
    java.lang.String COORD_TYPE_BD09LL -> COORD_TYPE_BD09LL
    java.lang.String COORD_TYPE_GCJ -> COORD_TYPE_GCJ
    int RADIUS_TYPE_SMALL -> RADIUS_TYPE_SMALL
    int RADIUS_TYPE_MIDDELE -> RADIUS_TYPE_MIDDELE
    int RADIUS_TYPE_LARGE -> RADIUS_TYPE_LARGE
    java.lang.String getGeofenceId() -> getGeofenceId
com.baidu.location.BDGeofence$Builder -> com.baidu.location.BDGeofence$Builder:
    java.lang.String do -> do
    double for -> for
    double try -> try
    int a -> a
    boolean new -> new
    long if -> if
    java.lang.String int -> int
    com.baidu.location.BDGeofence$Builder setExpirationDruation(long) -> setExpirationDruation
    com.baidu.location.BDGeofence$Builder setCircularRegion(double,double,int) -> setCircularRegion
    com.baidu.location.BDGeofence$Builder setGeofenceId(java.lang.String) -> setGeofenceId
    com.baidu.location.BDGeofence$Builder setCoordType(java.lang.String) -> setCoordType
    com.baidu.location.BDGeofence build() -> build
com.baidu.location.BDLocation -> com.baidu.location.BDLocation:
    int TypeNone -> TypeNone
    int TypeGpsLocation -> TypeGpsLocation
    int TypeCriteriaException -> TypeCriteriaException
    int TypeNetWorkException -> TypeNetWorkException
    int TypeOffLineLocation -> TypeOffLineLocation
    int TypeOffLineLocationFail -> TypeOffLineLocationFail
    int TypeOffLineLocationNetworkFail -> TypeOffLineLocationNetworkFail
    int TypeNetWorkLocation -> TypeNetWorkLocation
    int TypeCacheLocation -> TypeCacheLocation
    int TypeServerError -> TypeServerError
    int h1 -> h1
    java.lang.String ii -> ii
    double ia -> ia
    double h3 -> h3
    boolean ih -> ih
    double ik -> ik
    boolean h4 -> h4
    float h5 -> h5
    boolean h6 -> h6
    float ic -> ic
    boolean ie -> ie
    int h2 -> h2
    float h9 -> h9
    java.lang.String ib -> ib
    java.lang.String h7 -> h7
    boolean id -> id
    boolean h8 -> h8
    java.lang.String h0 -> h0
    boolean ij -> ij
    com.baidu.location.BDLocation$a il -> il
    java.lang.String ig -> ig
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toJsonString() -> toJsonString
    void if(java.lang.Boolean) -> if
    boolean isCellChangeFlag() -> isCellChangeFlag
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getAltitude() -> getAltitude
    void setAltitude(double) -> setAltitude
    float getSpeed() -> getSpeed
    void setSpeed(float) -> setSpeed
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    void setAddrStr(java.lang.String) -> setAddrStr
    boolean hasAltitude() -> hasAltitude
    boolean hasSpeed() -> hasSpeed
    boolean hasRadius() -> hasRadius
    com.baidu.location.BDLocation toNewLocation(java.lang.String) -> toNewLocation
    void setLocType(int) -> setLocType
    int getLocType() -> getLocType
    void setSatelliteNumber(int) -> setSatelliteNumber
    int getSatelliteNumber() -> getSatelliteNumber
    void setDerect(float) -> setDerect
    float getDerect() -> getDerect
    boolean hasSateNumber() -> hasSateNumber
    boolean hasPoi() -> hasPoi
    java.lang.String getPoi() -> getPoi
    void setPoi(java.lang.String) -> setPoi
    boolean hasAddr() -> hasAddr
    java.lang.String getAddrStr() -> getAddrStr
    java.lang.String getProvince() -> getProvince
    java.lang.String getCity() -> getCity
    java.lang.String getCityCode() -> getCityCode
    java.lang.String getDistrict() -> getDistrict
    java.lang.String getStreet() -> getStreet
    java.lang.String getStreetNumber() -> getStreetNumber
    java.lang.String getFloor() -> getFloor
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.location.BDLocation$1 -> com.baidu.location.BDLocation$1:
    com.baidu.location.BDLocation a(android.os.Parcel) -> a
    com.baidu.location.BDLocation[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.location.BDLocation$a -> com.baidu.location.BDLocation$a:
    java.lang.String if -> if
    java.lang.String new -> new
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String do -> do
    java.lang.String for -> for
    java.lang.String try -> try
    com.baidu.location.BDLocation a -> a
com.baidu.location.BDLocationListener -> com.baidu.location.BDLocationListener:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    void onReceivePoi(com.baidu.location.BDLocation) -> onReceivePoi
com.baidu.location.BDLocationStatusCodes -> com.baidu.location.BDLocationStatusCodes:
    int SUCCESS -> SUCCESS
    int ERROR -> ERROR
    int GEOFENCE_NOT_AVAIABLE -> GEOFENCE_NOT_AVAIABLE
    int GEOFENCE_TOO_MANY_GEOFENCES -> GEOFENCE_TOO_MANY_GEOFENCES
    int GEOFENCE_SERVICE_NO_ALIVIABLE -> GEOFENCE_SERVICE_NO_ALIVIABLE
    int getStatusCode(int) -> getStatusCode
com.baidu.location.BDNotifyListener -> com.baidu.location.BDNotifyListener:
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    float mRadius -> mRadius
    float differDistance -> differDistance
    java.lang.String mCoorType -> mCoorType
    double mLatitudeC -> mLatitudeC
    double mLongitudeC -> mLongitudeC
    int Notified -> Notified
    boolean isAdded -> isAdded
    com.baidu.location.u mNotifyCache -> mNotifyCache
    void SetNotifyLocation(double,double,float,java.lang.String) -> SetNotifyLocation
    void onNotify(com.baidu.location.BDLocation,float) -> onNotify
com.baidu.location.GeofenceClient -> com.baidu.location.GeofenceClient:
    int ba -> ba
    java.lang.String BUNDLE_FOR_GEOFENCE_ID -> BUNDLE_FOR_GEOFENCE_ID
    android.content.Context a6 -> a6
    boolean bc -> bc
    android.os.Messenger bb -> bb
    com.baidu.location.GeofenceClient$a bd -> bd
    android.os.Messenger a9 -> a9
    com.baidu.location.GeofenceClient$OnGeofenceTriggerListener a7 -> a7
    android.content.ServiceConnection a8 -> a8
    void start() -> start
    void byte() -> byte
    boolean isStarted() -> isStarted
    void registerGeofenceTriggerListener(com.baidu.location.GeofenceClient$OnGeofenceTriggerListener) -> registerGeofenceTriggerListener
    void addBDGeofence(com.baidu.location.BDGeofence,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> addBDGeofence
    void removeBDGeofences(java.util.List,com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> removeBDGeofences
    void for(java.lang.String) -> for
    void startGeofenceScann() -> startGeofenceScann
    void stop() -> stop
    void case() -> case
    android.os.Messenger if(com.baidu.location.GeofenceClient,android.os.Messenger) -> if
    android.os.Messenger if(com.baidu.location.GeofenceClient) -> if
    boolean if(com.baidu.location.GeofenceClient,boolean) -> if
    void if(com.baidu.location.GeofenceClient,java.lang.String) -> if
    void do(com.baidu.location.GeofenceClient) -> do
com.baidu.location.GeofenceClient$1 -> com.baidu.location.GeofenceClient$1:
    com.baidu.location.GeofenceClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener -> com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener:
    void onAddBDGeofencesResult(int,java.lang.String) -> onAddBDGeofencesResult
com.baidu.location.GeofenceClient$OnGeofenceTriggerListener -> com.baidu.location.GeofenceClient$OnGeofenceTriggerListener:
    void onGeofenceTrigger(java.lang.String) -> onGeofenceTrigger
com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener -> com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener:
    void onRemoveBDGeofencesByRequestIdsResult(int,java.lang.String[]) -> onRemoveBDGeofencesByRequestIdsResult
com.baidu.location.GeofenceClient$a -> com.baidu.location.GeofenceClient$a:
    com.baidu.location.GeofenceClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.Jni -> com.baidu.location.Jni:
    int eu -> eu
    int es -> es
    int et -> et
    int ep -> ep
    int eq -> eq
    int en -> en
    int em -> em
    int eo -> eo
    boolean er -> er
    java.lang.String a(byte[],int) -> a
    java.lang.String b(double,double,int,int) -> b
    java.lang.String c(byte[],int) -> c
    java.lang.String e(java.lang.String) -> e
    java.lang.String f(java.lang.String) -> f
    double[] if(double,double,java.lang.String) -> if
com.baidu.location.LocationClient -> com.baidu.location.LocationClient:
    java.lang.String hi -> hi
    java.lang.String hy -> hy
    java.lang.String hv -> hv
    int hl -> hl
    int hL -> hL
    int hu -> hu
    int hY -> hY
    int hI -> hI
    int hK -> hK
    int hC -> hC
    int hw -> hw
    int hA -> hA
    int hg -> hg
    int hV -> hV
    int hJ -> hJ
    int hq -> hq
    int hO -> hO
    long hN -> hN
    long ho -> ho
    java.lang.String hX -> hX
    com.baidu.location.LocationClientOption hH -> hH
    boolean hM -> hM
    android.content.Context hE -> hE
    android.os.Messenger hF -> hF
    com.baidu.location.LocationClient$a hh -> hh
    android.os.Messenger hD -> hD
    java.util.ArrayList hZ -> hZ
    com.baidu.location.BDLocation hU -> hU
    boolean hz -> hz
    boolean hS -> hS
    boolean hB -> hB
    com.baidu.location.LocationClient$b hm -> hm
    boolean hf -> hf
    java.lang.Object hj -> hj
    long hG -> hG
    long hP -> hP
    com.baidu.location.u hp -> hp
    boolean hT -> hT
    com.baidu.location.BDLocationListener hx -> hx
    java.lang.String hW -> hW
    java.lang.String hR -> hR
    boolean ht -> ht
    java.lang.Boolean hs -> hs
    java.lang.Boolean hn -> hn
    java.lang.String PREF_FILE_NAME -> PREF_FILE_NAME
    java.lang.String PREF_KEY_NAME -> PREF_KEY_NAME
    android.content.ServiceConnection hQ -> hQ
    long hr -> hr
    com.baidu.location.BDErrorReport hk -> hk
    com.baidu.location.LocationClientOption getLocOption() -> getLocOption
    void setLocOption(com.baidu.location.LocationClientOption) -> setLocOption
    boolean updateLocation(android.location.Location) -> updateLocation
    void requestNotifyLocation() -> requestNotifyLocation
    int requestOfflineLocation() -> requestOfflineLocation
    void bL() -> bL
    int requestLocation() -> requestLocation
    int requestPoi() -> requestPoi
    boolean isStarted() -> isStarted
    com.baidu.location.BDLocation getLastKnownLocation() -> getLastKnownLocation
    java.lang.String getVersion() -> getVersion
    void start() -> start
    void bI() -> bI
    void stop() -> stop
    void bJ() -> bJ
    void registerNotify(com.baidu.location.BDNotifyListener) -> registerNotify
    void i(android.os.Message) -> i
    void removeNotifyEvent(com.baidu.location.BDNotifyListener) -> removeNotifyEvent
    void m(android.os.Message) -> m
    void k(android.os.Message) -> k
    android.os.Bundle bG() -> bG
    android.os.Bundle bF() -> bF
    void registerNotifyLocationListener(com.baidu.location.BDLocationListener) -> registerNotifyLocationListener
    void o(android.os.Message) -> o
    void registerLocationListener(com.baidu.location.BDLocationListener) -> registerLocationListener
    void n(android.os.Message) -> n
    void unRegisterLocationListener(com.baidu.location.BDLocationListener) -> unRegisterLocationListener
    void j(android.os.Message) -> j
    void bK() -> bK
    void bM() -> bM
    void bH() -> bH
    void if(android.os.Message,int) -> if
    void l(android.os.Message) -> l
    void byte(int) -> byte
    void setForBaiduMap(boolean) -> setForBaiduMap
    boolean notifyError() -> notifyError
    int reportErrorWithInfo(com.baidu.location.BDErrorReport) -> reportErrorWithInfo
    void cancleError() -> cancleError
    void byte(boolean) -> byte
    boolean case(int) -> case
    void setAK(java.lang.String) -> setAK
    android.os.Messenger if(com.baidu.location.LocationClient,android.os.Messenger) -> if
    android.os.Messenger else(com.baidu.location.LocationClient) -> else
    boolean do(com.baidu.location.LocationClient,boolean) -> do
    android.os.Messenger try(com.baidu.location.LocationClient) -> try
    android.os.Bundle void(com.baidu.location.LocationClient) -> void
    com.baidu.location.LocationClientOption goto(com.baidu.location.LocationClient) -> goto
    com.baidu.location.LocationClient$a for(com.baidu.location.LocationClient) -> for
    java.lang.Object do(com.baidu.location.LocationClient) -> do
    boolean if(com.baidu.location.LocationClient,boolean) -> if
    java.util.ArrayList long(com.baidu.location.LocationClient) -> long
    void int(com.baidu.location.LocationClient,android.os.Message) -> int
    void for(com.baidu.location.LocationClient,android.os.Message) -> for
    void do(com.baidu.location.LocationClient,android.os.Message) -> do
    void if(com.baidu.location.LocationClient,android.os.Message) -> if
    void byte(com.baidu.location.LocationClient,android.os.Message) -> byte
    void try(com.baidu.location.LocationClient,android.os.Message) -> try
    void char(com.baidu.location.LocationClient) -> char
    void int(com.baidu.location.LocationClient) -> int
    void byte(com.baidu.location.LocationClient) -> byte
    void case(com.baidu.location.LocationClient) -> case
    void if(com.baidu.location.LocationClient) -> if
    void new(com.baidu.location.LocationClient) -> new
    boolean int(com.baidu.location.LocationClient,boolean) -> int
    void if(com.baidu.location.LocationClient,android.os.Message,int) -> if
    void new(com.baidu.location.LocationClient,android.os.Message) -> new
    void for(com.baidu.location.LocationClient,boolean) -> for
com.baidu.location.LocationClient$1 -> com.baidu.location.LocationClient$1:
    com.baidu.location.LocationClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.LocationClient$a -> com.baidu.location.LocationClient$a:
    com.baidu.location.LocationClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.LocationClient$b -> com.baidu.location.LocationClient$b:
    com.baidu.location.LocationClient a -> a
    void run() -> run
com.baidu.location.LocationClientOption -> com.baidu.location.LocationClientOption:
    int MIN_SCAN_SPAN -> MIN_SCAN_SPAN
    int GpsFirst -> GpsFirst
    int NetWorkFirst -> NetWorkFirst
    java.lang.String try -> try
    java.lang.String char -> char
    boolean case -> case
    int int -> int
    int long -> long
    java.lang.String new -> new
    int goto -> goto
    boolean void -> void
    boolean for -> for
    boolean else -> else
    boolean if -> if
    float do -> do
    int a -> a
    java.lang.String byte -> byte
    boolean equals(com.baidu.location.LocationClientOption) -> equals
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    java.lang.String getAddrType() -> getAddrType
    void setAddrType(java.lang.String) -> setAddrType
    boolean isOpenGps() -> isOpenGps
    void setOpenGps(boolean) -> setOpenGps
    boolean isLocationNotify() -> isLocationNotify
    void setLocationNotify(boolean) -> setLocationNotify
    int getScanSpan() -> getScanSpan
    void setScanSpan(int) -> setScanSpan
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    java.lang.String getProdName() -> getProdName
    void setProdName(java.lang.String) -> setProdName
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    java.lang.String getServiceName() -> getServiceName
    void setServiceName(java.lang.String) -> setServiceName
    void setPoiDistance(float) -> setPoiDistance
    float getPoiDistance() -> getPoiDistance
    void setPoiNumber(int) -> setPoiNumber
    int getPoiNumber() -> getPoiNumber
    void setPoiExtraInfo(boolean) -> setPoiExtraInfo
    boolean getPoiExtranInfo() -> getPoiExtranInfo
    void disableCache(boolean) -> disableCache
    boolean isDisableCache() -> isDisableCache
com.baidu.location.a -> com.baidu.location.a:
    boolean a -> a
com.baidu.location.a.a -> com.baidu.location.a.a:
    java.lang.String else -> else
    java.lang.String if -> if
    java.lang.String do -> do
    java.lang.String case -> case
    java.lang.String for -> for
    java.lang.String try -> try
    java.lang.String char -> char
    java.lang.String a -> a
    java.lang.String void -> void
    java.lang.String new -> new
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String long -> long
    java.lang.String goto -> goto
com.baidu.location.a.b -> com.baidu.location.a.b:
    java.lang.String a -> a
    java.lang.String if -> if
    java.lang.String new -> new
    java.lang.String for -> for
    java.lang.String int -> int
    java.lang.String do -> do
com.baidu.location.aa -> com.baidu.location.aa:
    android.hardware.SensorManager fX -> fX
    boolean fY -> fY
    int fN -> fN
    android.hardware.Sensor fO -> fO
    long fI -> fI
    int fR -> fR
    int fH -> fH
    float fV -> fV
    float fK -> fK
    float fU -> fU
    int fP -> fP
    float[] fJ -> fJ
    float[] fQ -> fQ
    int fS -> fS
    double[] fT -> fT
    int fW -> fW
    int fG -> fG
    java.util.Timer fM -> fM
    android.hardware.SensorEventListener fL -> fL
    void a2() -> a2
    void a3() -> a3
    void a1() -> a1
    float[] if(float,float,float) -> if
    double if(double[]) -> if
    void try(int) -> try
    int a0() -> a0
    void aZ() -> aZ
    float[] if(com.baidu.location.aa,float[]) -> if
    float[] if(com.baidu.location.aa,float,float,float) -> if
    int do(com.baidu.location.aa) -> do
    int for(com.baidu.location.aa) -> for
    int if(com.baidu.location.aa,int) -> if
    void if(com.baidu.location.aa) -> if
com.baidu.location.aa$1 -> com.baidu.location.aa$1:
    com.baidu.location.aa a -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.baidu.location.aa$2 -> com.baidu.location.aa$2:
    com.baidu.location.aa a -> a
    void run() -> run
com.baidu.location.ab -> com.baidu.location.ab:
    com.baidu.location.ab goto -> goto
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String else -> else
    java.lang.String new -> new
    boolean a -> a
    java.lang.String case -> case
    java.lang.String do -> do
    com.baidu.location.ab$a try -> try
    long char -> char
    long for -> for
    long if -> if
    com.baidu.location.ab a() -> a
    void do() -> do
    void if() -> if
    void a(android.os.Message) -> a
    void a(java.lang.String) -> a
    void if(java.lang.String) -> if
    java.lang.String a(com.baidu.location.ab) -> a
    java.lang.String if(com.baidu.location.ab,java.lang.String) -> if
    java.lang.String if(com.baidu.location.ab) -> if
    java.lang.String a(com.baidu.location.ab,java.lang.String) -> a
    long do(com.baidu.location.ab) -> do
    long for(com.baidu.location.ab) -> for
    long a(com.baidu.location.ab,long) -> a
com.baidu.location.ab$a -> com.baidu.location.ab$a:
    boolean da -> da
    java.lang.String c8 -> c8
    android.os.Messenger c9 -> c9
    com.baidu.location.ab c7 -> c7
    void V() -> V
    void if(boolean) -> if
    void try(android.os.Message) -> try
com.baidu.location.ac -> com.baidu.location.ac:
com.baidu.location.ad -> com.baidu.location.ad:
    java.lang.String io -> io
    double it -> it
    int is -> is
    java.lang.String ir -> ir
    java.lang.String ip -> ip
    java.lang.String[] in -> in
    java.lang.String[] iq -> iq
    com.baidu.location.ad im -> im
    com.baidu.location.ad bU() -> bU
    void try(com.baidu.location.BDLocation) -> try
    com.baidu.location.ad$a bR() -> bR
    void bS() -> bS
    double bT() -> bT
    double bO() -> bO
    double bN() -> bN
    long bP() -> bP
    boolean bQ() -> bQ
    int bV() -> bV
com.baidu.location.ad$a -> com.baidu.location.ad$a:
    double int -> int
    double try -> try
    double if -> if
    long new -> new
    boolean for -> for
    int do -> do
    com.baidu.location.ad a -> a
com.baidu.location.ae -> com.baidu.location.ae:
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object,java.lang.Object) -> a
    void a(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void if(boolean,java.lang.Object) -> if
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
    void if(boolean) -> if
com.baidu.location.af -> com.baidu.location.af:
    android.os.HandlerThread a -> a
    android.os.HandlerThread a() -> a
com.baidu.location.ag -> com.baidu.location.ag:
    com.baidu.location.ag do() -> do
    void if() -> if
    void a() -> a
com.baidu.location.ah -> com.baidu.location.ah:
    int d -> d
    long void -> void
    int int -> int
    int e -> e
    java.lang.String for -> for
    java.lang.String byte -> byte
    int else -> else
    int case -> case
    int h -> h
    java.lang.String do -> do
    double goto -> goto
    double try -> try
    int a -> a
    float b -> b
    long long -> long
    int c -> c
    java.lang.String new -> new
    boolean f -> f
    boolean char -> char
    boolean if -> if
    long g -> g
    java.lang.String getGeofenceId() -> getGeofenceId
    double byte() -> byte
    double a() -> a
    float do() -> do
    void a(float) -> a
    long else() -> else
    java.lang.String int() -> int
    boolean try() -> try
    void do(boolean) -> do
    boolean for() -> for
    void if(boolean) -> if
    boolean if() -> if
    void a(boolean) -> a
    long char() -> char
    void a(long) -> a
    int case() -> case
    int new() -> new
    void if(java.lang.String) -> if
    void if(int) -> if
    void a(double,double) -> a
    void a(java.lang.String) -> a
    void if(long) -> if
    java.lang.String a(int) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.location.ai -> com.baidu.location.ai:
    int f0 -> f0
    long fZ -> fZ
    long f4 -> f4
    long f6 -> f6
    com.baidu.location.ai f8 -> f8
    android.net.wifi.WifiManager f7 -> f7
    com.baidu.location.ai$a gc -> gc
    com.baidu.location.ai$b f2 -> f2
    long f5 -> f5
    long gb -> gb
    boolean ga -> ga
    java.lang.Object f3 -> f3
    java.lang.reflect.Method f9 -> f9
    boolean f1 -> f1
    com.baidu.location.ai bb() -> bb
    void a9() -> a9
    void bg() -> bg
    boolean a4() -> a4
    boolean a8() -> a8
    boolean bc() -> bc
    boolean bf() -> bf
    java.lang.String bd() -> bd
    com.baidu.location.ai$b a7() -> a7
    com.baidu.location.ai$b ba() -> ba
    com.baidu.location.ai$b be() -> be
    void a6() -> a6
    boolean a5() -> a5
    void if(com.baidu.location.ai) -> if
com.baidu.location.ai$1 -> com.baidu.location.ai$1:
com.baidu.location.ai$a -> com.baidu.location.ai$a:
    com.baidu.location.ai a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.ai$b -> com.baidu.location.ai$b:
    java.util.List for -> for
    long if -> if
    long int -> int
    boolean do -> do
    com.baidu.location.ai a -> a
    java.lang.String int() -> int
    int try() -> try
    java.lang.String char() -> char
    java.lang.String byte() -> byte
    java.lang.String a(int) -> a
    java.lang.String else() -> else
    void a() -> a
    java.lang.String if(int) -> if
    boolean if(com.baidu.location.ai$b) -> if
    boolean do(com.baidu.location.ai$b) -> do
    boolean a(com.baidu.location.ai$b) -> a
    boolean a(com.baidu.location.ai$b,com.baidu.location.ai$b,float) -> a
    int do() -> do
    boolean case() -> case
    boolean for() -> for
    boolean new() -> new
    boolean if() -> if
com.baidu.location.aj -> com.baidu.location.aj:
    java.util.List gg -> gg
    long gd -> gd
    java.util.Queue gf -> gf
    android.location.Location ge -> ge
    void bh() -> bh
    boolean do(com.baidu.location.ai$b) -> do
    int new(com.baidu.location.BDLocation) -> new
com.baidu.location.ak -> com.baidu.location.ak:
    boolean gr -> gr
    java.lang.String gp -> gp
    boolean gy -> gy
    java.lang.String gl -> gl
    int gs -> gs
    int gu -> gu
    java.lang.String gw -> gw
    char go -> go
    java.lang.String gx -> gx
    boolean gt -> gt
    int gi -> gi
    double gn -> gn
    double gk -> gk
    java.util.List gj -> gj
    boolean gm -> gm
    java.util.List gq -> gq
    int gv -> gv
    int gh -> gh
    void bl() -> bl
    boolean j(java.lang.String) -> j
    int bi() -> bi
    int if(boolean,boolean,boolean,boolean,boolean) -> if
    double[] if(java.util.List) -> if
    double[] do(double,double) -> do
    double[] if(double,double) -> if
    boolean bj() -> bj
    int bn() -> bn
    java.lang.String bm() -> bm
    double bo() -> bo
    double bk() -> bk
com.baidu.location.ak$a -> com.baidu.location.ak$a:
    int int -> int
    int if -> if
    int do -> do
    int for -> for
    com.baidu.location.ak a -> a
    int a() -> a
    int if() -> if
    int do() -> do
com.baidu.location.al -> com.baidu.location.al:
    int gC -> gC
    java.lang.String l -> l
    java.lang.String gA -> gA
    java.lang.String gD -> gD
    java.lang.String gF -> gF
    java.lang.String gH -> gH
    java.lang.String gE -> gE
    java.lang.String gO -> gO
    int gM -> gM
    int gL -> gL
    int gB -> gB
    int gK -> gK
    android.content.Context gz -> gz
    com.baidu.location.al$a gN -> gN
    android.os.HandlerThread gJ -> gJ
    java.lang.Object gG -> gG
    com.baidu.location.al gI -> gI
    java.lang.String bp() -> bp
    com.baidu.location.al for(android.content.Context) -> for
    void if(com.baidu.location.ah,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void if(com.baidu.location.ah) -> if
    void k(java.lang.String) -> k
    void if(java.util.List,com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    long bv() -> bv
    void if(int,java.lang.String,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void if(int,java.lang.String[],com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    void bt() -> bt
    void bq() -> bq
    void bu() -> bu
    int if(com.baidu.location.ah,java.lang.String) -> if
    int do(java.util.List) -> do
    void bs() -> bs
    void br() -> br
    void if(com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> if
    void int(android.content.Context) -> int
    int do(android.content.Context) -> do
    void int(com.baidu.location.al) -> int
    android.content.Context if(com.baidu.location.al) -> if
    java.lang.String do(com.baidu.location.al) -> do
    void if(com.baidu.location.al,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> if
    com.baidu.location.al$a for(com.baidu.location.al) -> for
    void if(com.baidu.location.al,int,java.lang.String,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void if(com.baidu.location.al,int,java.lang.String[],com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    int if(com.baidu.location.al,com.baidu.location.ah,java.lang.String) -> if
    int if(com.baidu.location.al,java.util.List) -> if
com.baidu.location.al$1 -> com.baidu.location.al$1:
    com.baidu.location.ah if -> if
    com.baidu.location.al a -> a
    void run() -> run
com.baidu.location.al$2 -> com.baidu.location.al$2:
    com.baidu.location.al a -> a
    void run() -> run
com.baidu.location.al$a -> com.baidu.location.al$a:
    int if -> if
    int do -> do
    int for -> for
    com.baidu.location.al a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.al$b -> com.baidu.location.al$b:
    java.lang.String dg -> dg
    java.lang.String de -> de
    java.lang.String dj -> dj
    java.lang.String df -> df
    java.lang.String dl -> dl
    java.lang.String dh -> dh
    java.lang.String dc -> dc
    int dd -> dd
    com.baidu.location.ah dm -> dm
    com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener db -> db
    int dk -> dk
    com.baidu.location.al di -> di
    void V() -> V
    void if(boolean) -> if
    void Z() -> Z
com.baidu.location.al$c -> com.baidu.location.al$c:
    com.baidu.location.ah do -> do
    java.lang.String if -> if
    com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener for -> for
    com.baidu.location.al a -> a
    void run() -> run
com.baidu.location.al$d -> com.baidu.location.al$d:
    java.util.List if -> if
    com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener do -> do
    com.baidu.location.al a -> a
    void run() -> run
com.baidu.location.am -> com.baidu.location.am:
    void if() -> if
    void a() -> a
com.baidu.location.an -> com.baidu.location.an:
    java.lang.String l -> l
    java.lang.String L -> L
    int I -> I
    int goto -> goto
    int byte -> byte
    int n -> n
    int u -> u
    int R -> R
    int g -> g
    int O -> O
    int T -> T
    int b -> b
    int H -> H
    int c -> c
    int t -> t
    int N -> N
    int J -> J
    int r -> r
    int e -> e
    int try -> try
    int void -> void
    int s -> s
    int q -> q
    int k -> k
    int A -> A
    int h -> h
    int long -> long
    int F -> F
    int i -> i
    int G -> G
    int D -> D
    int E -> E
    int C -> C
    int p -> p
    int P -> P
    int x -> x
    int v -> v
    int Q -> Q
    int K -> K
    int z -> z
    int B -> B
    int y -> y
    int else -> else
    int o -> o
    int j -> j
    int case -> case
    int w -> w
    int d -> d
    int new -> new
    int f -> f
    int S -> S
    int m -> m
    int M -> M
    int char -> char
com.baidu.location.ao -> com.baidu.location.ao:
    com.baidu.location.ao gW -> gW
    android.database.sqlite.SQLiteDatabase gX -> gX
    java.lang.String g4 -> g4
    java.lang.String gV -> gV
    boolean g6 -> g6
    boolean g2 -> g2
    java.lang.String g0 -> g0
    int g5 -> g5
    double g3 -> g3
    double g1 -> g1
    double gU -> gU
    long gY -> gY
    boolean gZ -> gZ
    com.baidu.location.ao bz() -> bz
    void h(android.os.Message) -> h
    void bB() -> bB
    void by() -> by
    void g(android.os.Message) -> g
    com.baidu.location.BDLocation new(boolean) -> new
    void l(java.lang.String) -> l
    void if(java.lang.String,com.baidu.location.n$a) -> if
    void bA() -> bA
    java.lang.String int(boolean) -> int
com.baidu.location.ap -> com.baidu.location.ap:
    com.baidu.location.ap he -> he
    java.lang.String hc -> hc
    java.lang.String ha -> ha
    java.lang.String hd -> hd
    java.lang.String hb -> hb
    java.lang.String g7 -> g7
    java.lang.String g8 -> g8
    java.lang.String g9 -> g9
    com.baidu.location.ap bD() -> bD
    void int(java.lang.String,java.lang.String) -> int
    java.lang.String bC() -> bC
    java.lang.String bE() -> bE
    java.lang.String try(boolean) -> try
com.baidu.location.aq -> com.baidu.location.aq:
    int iv -> iv
    int iL -> iL
    int iw -> iw
    int iN -> iN
    long iE -> iE
    int iy -> iy
    java.lang.String iS -> iS
    java.lang.String iK -> iK
    java.lang.String iV -> iV
    java.lang.String iF -> iF
    java.lang.String iR -> iR
    java.lang.String iu -> iu
    java.lang.String iB -> iB
    boolean iz -> iz
    java.util.List iW -> iW
    android.os.PowerManager$WakeLock iJ -> iJ
    android.os.HandlerThread iO -> iO
    com.baidu.location.aq$d iD -> iD
    com.baidu.location.aq$c iI -> iI
    boolean iA -> iA
    java.lang.String iC -> iC
    java.lang.String iH -> iH
    com.baidu.location.ai$b iX -> iX
    com.baidu.location.ai$b iU -> iU
    java.lang.String ix -> ix
    java.lang.String iT -> iT
    android.os.Messenger iQ -> iQ
    int iM -> iM
    com.baidu.location.aq iP -> iP
    android.os.Handler iG -> iG
    com.baidu.location.aq b2() -> b2
    void b0() -> b0
    void bZ() -> bZ
    void bY() -> bY
    void do(com.baidu.location.ah) -> do
    java.util.List b1() -> b1
    boolean bX() -> bX
    void new(android.content.Context) -> new
    void bW() -> bW
    void if(android.content.Context,android.os.Message) -> if
    void try(android.content.Context) -> try
    void byte(android.content.Context) -> byte
    void if(android.content.Context,int) -> if
    java.util.List m(java.lang.String) -> m
    java.util.List for(java.util.List) -> for
    boolean if(com.baidu.location.aq,boolean) -> if
    java.lang.String do(com.baidu.location.aq,java.lang.String) -> do
    com.baidu.location.ai$b if(com.baidu.location.aq,com.baidu.location.ai$b) -> if
    android.os.Messenger new(com.baidu.location.aq) -> new
    java.lang.String if(com.baidu.location.aq,java.lang.String) -> if
    java.util.List if(com.baidu.location.aq,java.util.List) -> if
    void int(com.baidu.location.aq) -> int
    void if(com.baidu.location.aq) -> if
    void if(com.baidu.location.aq,android.content.Context) -> if
    com.baidu.location.aq$d for(com.baidu.location.aq) -> for
    android.os.Handler do(com.baidu.location.aq) -> do
com.baidu.location.aq$1 -> com.baidu.location.aq$1:
com.baidu.location.aq$a -> com.baidu.location.aq$a:
    java.lang.String dp -> dp
    java.lang.String ds -> ds
    java.lang.String dr -> dr
    java.lang.String dt -> dt
    java.lang.String dv -> dv
    com.baidu.location.ah dq -> dq
    java.lang.String du -> du
    com.baidu.location.aq dn -> dn
    void V() -> V
    void if(boolean) -> if
    void aa() -> aa
com.baidu.location.aq$b -> com.baidu.location.aq$b:
    com.baidu.location.aq dR -> dR
    void byte(android.os.Message) -> byte
    void ab() -> ab
com.baidu.location.aq$c -> com.baidu.location.aq$c:
    com.baidu.location.aq a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.aq$d -> com.baidu.location.aq$d:
    com.baidu.location.aq iY -> iY
    void run() -> run
com.baidu.location.b -> com.baidu.location.b:
    boolean aV -> aV
    boolean ai -> ai
    boolean ae -> ae
    int ah -> ah
    java.lang.String aG -> aG
    java.lang.String W -> W
    java.lang.String aT -> aT
    boolean aA -> aA
    boolean av -> av
    boolean ax -> ax
    java.lang.String aE -> aE
    java.lang.Process aI -> aI
    java.lang.String ar -> ar
    java.lang.String a3 -> a3
    boolean aY -> aY
    int aF -> aF
    double a0 -> a0
    double aj -> aj
    double aB -> aB
    double aa -> aa
    int ag -> ag
    byte[] aw -> aw
    boolean am -> am
    int af -> af
    float ab -> ab
    float aK -> aK
    float ad -> ad
    float aM -> aM
    int aC -> aC
    int U -> U
    int aD -> aD
    int V -> V
    int Y -> Y
    int as -> as
    int aW -> aW
    float a5 -> a5
    float a2 -> a2
    float ak -> ak
    float aS -> aS
    int aQ -> aQ
    float Z -> Z
    int ao -> ao
    float aN -> aN
    float a4 -> a4
    float a1 -> a1
    int aZ -> aZ
    int aX -> aX
    boolean au -> au
    boolean aR -> aR
    int aq -> aq
    int an -> an
    int at -> at
    long aJ -> aJ
    long aL -> aL
    long ay -> ay
    int aO -> aO
    int aP -> aP
    int aH -> aH
    float aU -> aU
    float ac -> ac
    float X -> X
    int al -> al
    int az -> az
    int ap -> ap
    int do(java.lang.String,java.lang.String,java.lang.String) -> do
    float if(java.lang.String,java.lang.String,java.lang.String) -> if
    double for(java.lang.String,java.lang.String,java.lang.String) -> for
    java.lang.String if(java.lang.String,java.lang.String,java.lang.String,double) -> if
    java.lang.String if() -> if
    java.lang.String for() -> for
    java.lang.String if(com.baidu.location.n$a,com.baidu.location.ai$b,android.location.Location,java.lang.String,int) -> if
    void new() -> new
    void try() -> try
    void if(java.lang.String,java.lang.String) -> if
    void do(java.lang.String,java.lang.String) -> do
    void if(java.lang.String) -> if
    boolean if(com.baidu.location.BDLocation) -> if
    void do(java.lang.String) -> do
    java.lang.String int() -> int
    java.lang.String do() -> do
com.baidu.location.b.a.a -> com.baidu.location.b.a.a:
    boolean a -> a
    java.lang.String if -> if
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
com.baidu.location.b.a.b -> com.baidu.location.b.a.b:
    java.lang.String do -> do
    boolean a -> a
    java.lang.String int -> int
    java.lang.String for -> for
    java.lang.String if -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String do(android.content.Context) -> do
    java.lang.String if(android.content.Context) -> if
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.location.b.a.b$a -> com.baidu.location.b.a.b$a:
    java.lang.String do -> do
    java.lang.String if -> if
    boolean a -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.location.b.a.b$a a(android.content.Context) -> a
com.baidu.location.b.a.c -> com.baidu.location.b.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.location.b.b.a -> com.baidu.location.b.b.a:
    java.lang.String if -> if
    java.lang.String a -> a
    byte[] if(java.lang.String,java.lang.String,byte[]) -> if
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.location.b.b.b -> com.baidu.location.b.b.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.location.c -> com.baidu.location.c:
    boolean bi -> bi
    long bf -> bf
    long be -> be
    long bg -> bg
    com.baidu.location.c bh -> bh
    com.baidu.location.c char() -> char
    void else() -> else
    void new(java.lang.String) -> new
    long int(java.lang.String) -> int
com.baidu.location.d -> com.baidu.location.d:
    com.baidu.location.d a -> a
    com.baidu.location.d$a try -> try
    boolean int -> int
    boolean for -> for
    boolean new -> new
    boolean if -> if
    android.os.Handler do -> do
    com.baidu.location.d new() -> new
    void do() -> do
    void int() -> int
    void for() -> for
    void try() -> try
    void if() -> if
    void a() -> a
    boolean do(com.baidu.location.d) -> do
    boolean if(com.baidu.location.d) -> if
    boolean a(com.baidu.location.d,boolean) -> a
    void a(com.baidu.location.d) -> a
com.baidu.location.d$1 -> com.baidu.location.d$1:
com.baidu.location.d$a -> com.baidu.location.d$a:
    com.baidu.location.d a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.d$b -> com.baidu.location.d$b:
    com.baidu.location.d a -> a
    void run() -> run
com.baidu.location.e -> com.baidu.location.e:
    void a(android.content.Context,android.app.PendingIntent,int) -> a
    void a(android.content.Context,android.app.PendingIntent) -> a
com.baidu.location.f -> com.baidu.location.f:
    com.baidu.location.f$a gR -> gR
    android.os.Messenger gS -> gS
    android.content.Context gQ -> gQ
    boolean isServing -> isServing
    android.os.Looper gT -> gT
    android.os.HandlerThread gP -> gP
    void onCreate() -> onCreate
    void bx() -> bx
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void bw() -> bw
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.content.Context getServiceContext() -> getServiceContext
    android.os.Handler getHandler() -> getHandler
    void e(android.os.Message) -> e
    void d(android.os.Message) -> d
    void f(android.os.Message) -> f
    void void(android.os.Message) -> void
    void for(com.baidu.location.f,android.os.Message) -> for
    void do(com.baidu.location.f,android.os.Message) -> do
    void if(com.baidu.location.f,android.os.Message) -> if
    void int(com.baidu.location.f,android.os.Message) -> int
    void if(com.baidu.location.f) -> if
    void do(com.baidu.location.f) -> do
com.baidu.location.f$a -> com.baidu.location.f$a:
    com.baidu.location.f a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.g -> com.baidu.location.g:
    com.baidu.location.g bl -> bl
    java.util.ArrayList bk -> bk
    boolean bm -> bm
    boolean bj -> bj
    com.baidu.location.g g() -> g
    boolean void() -> void
    void new(android.os.Message) -> new
    void do(android.os.Message) -> do
    boolean int(android.os.Message) -> int
    java.lang.String if(android.os.Message) -> if
    void if(com.baidu.location.BDLocation,int) -> if
    void do(com.baidu.location.BDLocation) -> do
    void try(java.lang.String) -> try
    void if(com.baidu.location.BDLocation,android.os.Message) -> if
    void goto() -> goto
    java.lang.String f() -> f
    int for(android.os.Message) -> for
    com.baidu.location.g$a if(android.os.Messenger) -> if
    void if(com.baidu.location.g$a) -> if
    void long() -> long
    void d() -> d
    void e() -> e
com.baidu.location.g$a -> com.baidu.location.g$a:
    java.lang.String int -> int
    android.os.Messenger for -> for
    com.baidu.location.LocationClientOption do -> do
    int if -> if
    com.baidu.location.g a -> a
    void a(com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.BDLocation,int) -> a
    void if(com.baidu.location.BDLocation) -> if
    void a() -> a
    void if() -> if
    void a(int) -> a
    void a(int,java.lang.String,com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.g$a,int) -> a
com.baidu.location.h -> com.baidu.location.h:
    java.lang.String bM -> bM
    java.lang.String bB -> bB
    java.io.File bI -> bI
    java.io.File bE -> bE
    int bK -> bK
    int bL -> bL
    int bD -> bD
    long bt -> bt
    int bx -> bx
    android.app.AlarmManager bu -> bu
    com.baidu.location.h$a bw -> bw
    android.app.PendingIntent bJ -> bJ
    android.content.Context bA -> bA
    long bF -> bF
    long[] bn -> bn
    int bs -> bs
    com.baidu.location.n$a bG -> bG
    java.lang.String br -> br
    java.lang.String bC -> bC
    int bv -> bv
    boolean bp -> bp
    boolean bo -> bo
    boolean bz -> bz
    java.lang.String bH -> bH
    android.os.Handler by -> by
    int bq -> bq
    void q() -> q
    void m() -> m
    void n() -> n
    void o() -> o
    void h() -> h
    void i() -> i
    void s() -> s
    void p() -> p
    void r() -> r
    void j() -> j
    java.lang.String l() -> l
    boolean k() -> k
    android.os.Handler if(com.baidu.location.h) -> if
    java.lang.String if(com.baidu.location.h,java.lang.String) -> if
com.baidu.location.h$1 -> com.baidu.location.h$1:
    com.baidu.location.h a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.h$a -> com.baidu.location.h$a:
    com.baidu.location.h a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.i -> com.baidu.location.i:
    java.lang.String do -> do
    int if -> if
    com.baidu.location.i a -> a
    com.baidu.location.i a(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void a(android.database.sqlite.SQLiteDatabase) -> a
com.baidu.location.j -> com.baidu.location.j:
    float int -> int
    java.lang.String for -> for
com.baidu.location.k -> com.baidu.location.k:
    boolean do(com.baidu.location.ai$b) -> do
    int new(com.baidu.location.BDLocation) -> new
    void bh() -> bh
com.baidu.location.l -> com.baidu.location.l:
    java.util.ArrayList b6 -> b6
    java.util.ArrayList bY -> bY
    java.util.ArrayList cc -> cc
    java.util.ArrayList cn -> cn
    java.util.ArrayList b8 -> b8
    java.util.ArrayList ch -> ch
    java.lang.String cp -> cp
    java.lang.String ck -> ck
    java.lang.String cj -> cj
    java.lang.String b9 -> b9
    java.lang.String cf -> cf
    int bO -> bO
    int bP -> bP
    int ci -> ci
    int b2 -> b2
    int b4 -> b4
    int bX -> bX
    java.io.File bW -> bW
    int bU -> bU
    int cm -> cm
    int bT -> bT
    int b7 -> b7
    int b0 -> b0
    int bS -> bS
    int ce -> ce
    int ca -> ca
    double bR -> bR
    double cd -> cd
    double bZ -> bZ
    double bQ -> bQ
    int b1 -> b1
    int bV -> bV
    int cl -> cl
    android.location.Location b3 -> b3
    android.location.Location cg -> cg
    android.location.Location bN -> bN
    com.baidu.location.ai$b b5 -> b5
    com.baidu.location.l$a cb -> cb
    com.baidu.location.l co -> co
    com.baidu.location.l u() -> u
    java.lang.String w() -> w
    void if(com.baidu.location.n$a,com.baidu.location.ai$b,android.location.Location,java.lang.String) -> if
    void if(double,double,double,double) -> if
    boolean if(android.location.Location,boolean) -> if
    boolean if(android.location.Location) -> if
    boolean if(android.location.Location,com.baidu.location.ai$b) -> if
    void z() -> z
    void else(java.lang.String) -> else
    void char(java.lang.String) -> char
    void goto(java.lang.String) -> goto
    int if(java.util.List,int) -> if
    boolean if(int,int,int,int,long) -> if
    void byte(java.lang.String) -> byte
    void case(java.lang.String) -> case
    void if(int,boolean) -> if
    boolean if(java.lang.String,java.util.List) -> if
    java.lang.String y() -> y
    void t() -> t
    java.lang.String if(int) -> if
    java.lang.String v() -> v
    void if(java.lang.String,int) -> if
    void if(java.lang.String,int,boolean) -> if
    void if(int,int) -> if
    void if(int,int,boolean) -> if
    void x() -> x
    void A() -> A
com.baidu.location.l$a -> com.baidu.location.l$a:
    boolean cS -> cS
    int cU -> cU
    java.util.ArrayList cT -> cT
    com.baidu.location.l cR -> cR
    void V() -> V
    void if(boolean) -> if
    void W() -> W
com.baidu.location.m -> com.baidu.location.m:
    com.baidu.location.m cr -> cr
    com.baidu.location.h cq -> cq
    android.os.Handler cs -> cs
    com.baidu.location.m D() -> D
    void G() -> G
    void C() -> C
    void B() -> B
    android.os.Handler E() -> E
    void F() -> F
    void if(com.baidu.location.m) -> if
com.baidu.location.m$a -> com.baidu.location.m$a:
    com.baidu.location.m a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.n -> com.baidu.location.n:
    com.baidu.location.n cy -> cy
    android.telephony.TelephonyManager cz -> cz
    com.baidu.location.n$a ct -> ct
    java.util.List cx -> cx
    java.lang.String cA -> cA
    com.baidu.location.n$b cw -> cw
    boolean cG -> cG
    java.lang.reflect.Method cE -> cE
    java.lang.reflect.Method cB -> cB
    java.lang.reflect.Method cv -> cv
    java.lang.Class cI -> cI
    long cF -> cF
    int cH -> cH
    boolean cC -> cC
    int cD -> cD
    int cu -> cu
    com.baidu.location.n K() -> K
    void J() -> J
    void O() -> O
    int M() -> M
    java.lang.String L() -> L
    boolean I() -> I
    com.baidu.location.n$a H() -> H
    void if(android.telephony.CellLocation) -> if
    long N() -> N
    com.baidu.location.n$a for(com.baidu.location.n) -> for
    java.util.List do(com.baidu.location.n) -> do
    int new(com.baidu.location.n) -> new
    int if(com.baidu.location.n,int) -> if
    int if(com.baidu.location.n) -> if
    android.telephony.TelephonyManager int(com.baidu.location.n) -> int
    void if(com.baidu.location.n,android.telephony.CellLocation) -> if
com.baidu.location.n$a -> com.baidu.location.n$a:
    int for -> for
    int try -> try
    int do -> do
    int if -> if
    long byte -> byte
    int int -> int
    char new -> new
    com.baidu.location.n a -> a
    boolean a(com.baidu.location.n$a) -> a
    boolean do() -> do
    boolean for() -> for
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    java.lang.String if() -> if
    java.lang.String int() -> int
com.baidu.location.n$b -> com.baidu.location.n$b:
    com.baidu.location.n a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.baidu.location.o -> com.baidu.location.o:
    boolean cN -> cN
    int cK -> cK
    java.lang.String cJ -> cJ
    int cQ -> cQ
    java.lang.String cL -> cL
    int cO -> cO
    org.apache.http.HttpEntity cM -> cM
    java.util.List cP -> cP
    void V() -> V
    void if(boolean) -> if
    void R() -> R
    void P() -> P
    int T() -> T
    int if(android.content.Context,android.net.NetworkInfo) -> if
    boolean if(android.content.Context) -> if
    void if(com.baidu.location.o) -> if
    int Q() -> Q
    java.lang.String S() -> S
    int U() -> U
    boolean if(com.baidu.location.o,boolean) -> if
com.baidu.location.o$1 -> com.baidu.location.o$1:
    com.baidu.location.o a -> a
    void run() -> run
com.baidu.location.p -> com.baidu.location.p:
    com.baidu.location.p dS -> dS
    int dT -> dT
    com.baidu.location.BDLocation dV -> dV
    long dU -> dU
    com.baidu.location.z$a dW -> dW
    com.baidu.location.p an() -> an
    void else(android.os.Message) -> else
    void goto(android.os.Message) -> goto
    void am() -> am
    void byte(android.os.Message) -> byte
    void ab() -> ab
com.baidu.location.q -> com.baidu.location.q:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.location.q$a -> com.baidu.location.q$a:
    java.lang.String a(byte[]) -> a
com.baidu.location.r -> com.baidu.location.r:
    com.baidu.location.r ek -> ek
    java.lang.String ea -> ea
    java.io.File d0 -> d0
    int dX -> dX
    int d6 -> d6
    int ee -> ee
    int eh -> eh
    int ed -> ed
    int ef -> ef
    int dZ -> dZ
    int d1 -> d1
    java.lang.StringBuffer dY -> dY
    boolean d5 -> d5
    int eb -> eb
    int ej -> ej
    long d4 -> d4
    long d3 -> d3
    long el -> el
    double d8 -> d8
    double d9 -> d9
    int d2 -> d2
    int d7 -> d7
    int ec -> ec
    java.lang.String eg -> eg
    boolean ei -> ei
    com.baidu.location.r ar() -> ar
    void as() -> as
    void av() -> av
    boolean do(android.location.Location) -> do
    boolean if(android.location.Location,int,int) -> if
    boolean au() -> au
    boolean d(java.lang.String) -> d
    java.lang.String do(int) -> do
    void ap() -> ap
    void aq() -> aq
    java.lang.String at() -> at
    boolean ao() -> ao
    boolean if(int,int,int) -> if
com.baidu.location.s -> com.baidu.location.s:
    int eF -> eF
    long eX -> eX
    int eG -> eG
    int eA -> eA
    int eE -> eE
    double eR -> eR
    com.baidu.location.s eM -> eM
    android.content.Context eS -> eS
    android.location.LocationManager eY -> eY
    android.location.Location eW -> eW
    com.baidu.location.s$b eV -> eV
    com.baidu.location.s$c eP -> eP
    android.location.GpsStatus eH -> eH
    com.baidu.location.s$a eJ -> eJ
    int eU -> eU
    long eK -> eK
    long ex -> ex
    boolean ev -> ev
    boolean eC -> eC
    java.lang.String ey -> ey
    boolean eT -> eT
    long eO -> eO
    long eZ -> eZ
    java.lang.String eL -> eL
    java.lang.String eI -> eI
    java.io.File ez -> ez
    android.os.Handler eQ -> eQ
    int eN -> eN
    int ew -> ew
    int eD -> eD
    int eB -> eB
    com.baidu.location.s aH() -> aH
    void aB() -> aB
    void if(java.lang.String,android.location.Location) -> if
    void aF() -> aF
    void aG() -> aG
    void aD() -> aD
    java.lang.String aC() -> aC
    void do(boolean) -> do
    java.lang.String aE() -> aE
    java.lang.String byte(android.location.Location) -> byte
    java.lang.String aw() -> aw
    android.location.Location az() -> az
    boolean aA() -> aA
    boolean ay() -> ay
    boolean ax() -> ax
    boolean if(android.location.Location,android.location.Location,boolean) -> if
    void int(android.location.Location) -> int
    void for(android.location.Location) -> for
    void if(double,double,float) -> if
    void for(boolean) -> for
    java.lang.String try(android.location.Location) -> try
    java.lang.String new(android.location.Location) -> new
    void do(com.baidu.location.s,android.location.Location) -> do
    com.baidu.location.s$a for(com.baidu.location.s) -> for
    void if(com.baidu.location.s,java.lang.String,android.location.Location) -> if
    boolean new(com.baidu.location.s) -> new
    long for(com.baidu.location.s,long) -> for
    android.os.Handler int(com.baidu.location.s) -> int
    long do(com.baidu.location.s,long) -> do
    void if(com.baidu.location.s,boolean) -> if
    void if(com.baidu.location.s,android.location.Location) -> if
    boolean do(com.baidu.location.s,boolean) -> do
    long if(com.baidu.location.s,long) -> if
    android.location.LocationManager if(com.baidu.location.s) -> if
    android.location.GpsStatus do(com.baidu.location.s) -> do
    android.location.GpsStatus if(com.baidu.location.s,android.location.GpsStatus) -> if
    int for(int) -> for
    long try(com.baidu.location.s) -> try
    java.lang.String g(java.lang.String) -> g
com.baidu.location.s$1 -> com.baidu.location.s$1:
    com.baidu.location.s a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.s$a -> com.baidu.location.s$a:
    long if -> if
    long a -> a
    int char -> char
    boolean try -> try
    boolean byte -> byte
    java.util.List case -> case
    java.lang.String for -> for
    java.lang.String new -> new
    java.lang.String do -> do
    com.baidu.location.s int -> int
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.baidu.location.s$b -> com.baidu.location.s$b:
    com.baidu.location.s a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.s$c -> com.baidu.location.s$c:
    long if -> if
    com.baidu.location.s a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.t -> com.baidu.location.t:
    com.baidu.location.t fa -> fa
    com.baidu.location.t$a e3 -> e3
    boolean e7 -> e7
    boolean e6 -> e6
    boolean e9 -> e9
    boolean fb -> fb
    boolean e0 -> e0
    boolean e1 -> e1
    boolean e5 -> e5
    int e8 -> e8
    java.lang.String e2 -> e2
    int fc -> fc
    int e4 -> e4
    int fd -> fd
    com.baidu.location.t aK() -> aK
    void aM() -> aM
    boolean i(java.lang.String) -> i
    void aI() -> aI
    void aN() -> aN
    void aL() -> aL
    void h(java.lang.String) -> h
    void if(org.apache.http.HttpEntity) -> if
    void do(org.apache.http.HttpEntity) -> do
    void new(int) -> new
    void aJ() -> aJ
    void aO() -> aO
    void int(int) -> int
    void if(com.baidu.location.t,org.apache.http.HttpEntity) -> if
    void do(com.baidu.location.t,org.apache.http.HttpEntity) -> do
com.baidu.location.t$a -> com.baidu.location.t$a:
    java.lang.String cX -> cX
    boolean cW -> cW
    boolean cY -> cY
    com.baidu.location.t cV -> cV
    void V() -> V
    void if(boolean) -> if
    void if(java.lang.String,boolean) -> if
com.baidu.location.u -> com.baidu.location.u:
    java.util.ArrayList fk -> fk
    float fo -> fo
    com.baidu.location.BDLocation fl -> fl
    long fr -> fr
    com.baidu.location.LocationClient ft -> ft
    android.content.Context ff -> ff
    int fe -> fe
    long fm -> fm
    boolean fq -> fq
    boolean fp -> fp
    android.app.PendingIntent fj -> fj
    android.app.AlarmManager fg -> fg
    com.baidu.location.u$b fn -> fn
    java.lang.String fi -> fi
    com.baidu.location.u$a fh -> fh
    boolean fs -> fs
    void aQ() -> aQ
    int do(com.baidu.location.BDNotifyListener) -> do
    void if(com.baidu.location.BDNotifyListener) -> if
    int for(com.baidu.location.BDNotifyListener) -> for
    boolean aR() -> aR
    void aP() -> aP
    void if(long) -> if
    void int(com.baidu.location.BDLocation) -> int
    void if(com.baidu.location.u,com.baidu.location.BDLocation) -> if
    java.util.ArrayList do(com.baidu.location.u) -> do
    com.baidu.location.LocationClient if(com.baidu.location.u) -> if
com.baidu.location.u$a -> com.baidu.location.u$a:
    com.baidu.location.u a -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    void onReceivePoi(com.baidu.location.BDLocation) -> onReceivePoi
com.baidu.location.u$b -> com.baidu.location.u$b:
    com.baidu.location.u a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.v -> com.baidu.location.v:
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void if(java.io.File,java.lang.String,java.lang.String) -> if
    void aS() -> aS
    java.lang.String if(java.lang.Throwable) -> if
    boolean for(java.lang.String,java.lang.String) -> for
com.baidu.location.w -> com.baidu.location.w:
    boolean if -> if
    boolean do -> do
com.baidu.location.x -> com.baidu.location.x:
    com.baidu.location.x fu -> fu
    long fA -> fA
    boolean fC -> fC
    com.baidu.location.x$c fF -> fF
    com.baidu.location.aa fB -> fB
    com.baidu.location.x$a fy -> fy
    com.baidu.location.x$b fx -> fx
    long fw -> fw
    boolean fz -> fz
    boolean fv -> fv
    long fE -> fE
    int fD -> fD
    com.baidu.location.x aU() -> aU
    void aV() -> aV
    void aX() -> aX
    boolean aY() -> aY
    boolean aW() -> aW
    void aT() -> aT
    void long(android.os.Message) -> long
    void new(com.baidu.location.x) -> new
    void if(com.baidu.location.x,android.os.Message) -> if
    com.baidu.location.aa for(com.baidu.location.x) -> for
    boolean int(com.baidu.location.x) -> int
    long do(com.baidu.location.x) -> do
    boolean if(com.baidu.location.x,boolean) -> if
    long if(com.baidu.location.x) -> if
com.baidu.location.x$a -> com.baidu.location.x$a:
    boolean do -> do
    long if -> if
    com.baidu.location.x a -> a
    void run() -> run
    boolean a(com.baidu.location.x$a,boolean) -> a
com.baidu.location.x$b -> com.baidu.location.x$b:
    boolean c2 -> c2
    boolean c1 -> c1
    java.lang.String c0 -> c0
    java.lang.String c3 -> c3
    com.baidu.location.x cZ -> cZ
    void V() -> V
    void if(boolean) -> if
    void Y() -> Y
    void X() -> X
com.baidu.location.x$c -> com.baidu.location.x$c:
    com.baidu.location.x a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.y -> com.baidu.location.y:
    com.baidu.location.y dE -> dE
    int dD -> dD
    int dM -> dM
    boolean dJ -> dJ
    com.baidu.location.aj dF -> dF
    com.baidu.location.z$a dI -> dI
    java.lang.String dK -> dK
    com.baidu.location.BDLocation dH -> dH
    com.baidu.location.ai$b dQ -> dQ
    com.baidu.location.n$a dN -> dN
    boolean dG -> dG
    boolean dP -> dP
    boolean dO -> dO
    long dL -> dL
    android.os.Handler dy -> dy
    com.baidu.location.y ag() -> ag
    void case(android.os.Message) -> case
    void aj() -> aj
    void af() -> af
    void char(android.os.Message) -> char
    boolean if(com.baidu.location.ai$b) -> if
    boolean ac() -> ac
    boolean ai() -> ai
    boolean if(com.baidu.location.n$a) -> if
    void al() -> al
    void ae() -> ae
    void byte(android.os.Message) -> byte
    void ab() -> ab
    void ah() -> ah
    void for(com.baidu.location.BDLocation) -> for
    void ad() -> ad
    void ak() -> ak
    boolean do(com.baidu.location.y) -> do
    boolean if(com.baidu.location.y,boolean) -> if
    void if(com.baidu.location.y) -> if
com.baidu.location.y$1 -> com.baidu.location.y$1:
com.baidu.location.y$a -> com.baidu.location.y$a:
    com.baidu.location.y a -> a
    void run() -> run
com.baidu.location.z -> com.baidu.location.z:
    com.baidu.location.ai$b dC -> dC
    com.baidu.location.n$a dz -> dz
    boolean dx -> dx
    boolean dB -> dB
    boolean dA -> dA
    java.lang.String dw -> dw
    android.os.Handler dy -> dy
    void byte(android.os.Message) -> byte
    void ab() -> ab
    java.lang.String void(java.lang.String) -> void
com.baidu.location.z$a -> com.baidu.location.z$a:
    java.lang.String c6 -> c6
    java.lang.String c5 -> c5
    com.baidu.location.z c4 -> c4
    void V() -> V
    void if(boolean) -> if
    void long(java.lang.String) -> long
com.baidu.location.z$b -> com.baidu.location.z$b:
    com.baidu.location.z a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.SDKInitializer -> com.baidu.mapapi.SDKInitializer:
    java.lang.String SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR -> SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR
    java.lang.String SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR -> SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR
    java.lang.String SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE -> SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE
    boolean a -> a
    void initialize(java.lang.String,android.content.Context) -> initialize
    void initialize(android.content.Context) -> initialize
com.baidu.mapapi.VersionInfo -> com.baidu.mapapi.VersionInfo:
    java.lang.String VERSION_INFO -> VERSION_INFO
    java.lang.String VERSION_DESC -> VERSION_DESC
    java.lang.String getApiVersion() -> getApiVersion
    java.lang.String getVersionDesc() -> getVersionDesc
com.baidu.mapapi.a -> com.baidu.mapapi.a:
    java.lang.String a -> a
    android.content.Context b -> b
    android.os.Handler c -> c
    com.baidu.platform.comapi.a d -> d
    int e -> e
    com.baidu.mapapi.a f -> f
    com.baidu.mapapi.a a() -> a
    void a(android.content.Context) -> a
    void b() -> b
    void c() -> c
    android.content.Context d() -> d
    void e() -> e
    void f() -> f
    void a(android.os.Message) -> a
    void a(com.baidu.mapapi.utils.PermissionCheck$b) -> a
com.baidu.mapapi.b -> com.baidu.mapapi.b:
    com.baidu.mapapi.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.cloud.BaseCloudSearchInfo -> com.baidu.mapapi.cloud.BaseCloudSearchInfo:
    java.lang.String q -> q
    java.lang.String tags -> tags
    java.lang.String sortby -> sortby
    java.lang.String filter -> filter
    int pageIndex -> pageIndex
    int pageSize -> pageSize
    java.lang.String a() -> a
com.baidu.mapapi.cloud.BaseSearchInfo -> com.baidu.mapapi.cloud.BaseSearchInfo:
    java.lang.String a -> a
    java.lang.String ak -> ak
    int geoTableId -> geoTableId
    java.lang.String sn -> sn
    java.lang.String a() -> a
com.baidu.mapapi.cloud.BaseSearchResult -> com.baidu.mapapi.cloud.BaseSearchResult:
    int STATUS_CODE_SUCCEED -> STATUS_CODE_SUCCEED
    int STATUS_CODE_SERVER_ERROR -> STATUS_CODE_SERVER_ERROR
    int STATUS_CODE_PARAM_ERROR -> STATUS_CODE_PARAM_ERROR
    int STATUS_CODE_PERMISSION_ERROR -> STATUS_CODE_PERMISSION_ERROR
    int STATUS_CODE_QUOTA_ERROR -> STATUS_CODE_QUOTA_ERROR
    int STATUS_CODE_AK_ERROR -> STATUS_CODE_AK_ERROR
    int STATUS_CODE_SERVICE_DISABLED -> STATUS_CODE_SERVICE_DISABLED
    int STATUS_CODE_SECURITY_CODE_ERROR -> STATUS_CODE_SECURITY_CODE_ERROR
    int STATUS_CODE_PERMISSION_AND_QUOTA_ERROR -> STATUS_CODE_PERMISSION_AND_QUOTA_ERROR
    int status -> status
    int size -> size
    int total -> total
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.BoundSearchInfo -> com.baidu.mapapi.cloud.BoundSearchInfo:
    java.lang.String bound -> bound
    java.lang.String a() -> a
com.baidu.mapapi.cloud.CloudListener -> com.baidu.mapapi.cloud.CloudListener:
    void onGetSearchResult(com.baidu.mapapi.cloud.CloudSearchResult,int) -> onGetSearchResult
    void onGetDetailSearchResult(com.baidu.mapapi.cloud.DetailSearchResult,int) -> onGetDetailSearchResult
com.baidu.mapapi.cloud.CloudManager -> com.baidu.mapapi.cloud.CloudManager:
    java.lang.String a -> a
    android.os.Bundle b -> b
    com.baidu.mapapi.cloud.CloudManager c -> c
    com.baidu.platform.comjni.map.cloud.a d -> d
    android.os.Handler e -> e
    com.baidu.mapapi.cloud.CloudListener f -> f
    com.baidu.mapapi.cloud.CloudManager getInstance() -> getInstance
    void init(com.baidu.mapapi.cloud.CloudListener) -> init
    void destroy() -> destroy
    boolean localSearch(com.baidu.mapapi.cloud.LocalSearchInfo) -> localSearch
    boolean nearbySearch(com.baidu.mapapi.cloud.NearbySearchInfo) -> nearbySearch
    boolean boundSearch(com.baidu.mapapi.cloud.BoundSearchInfo) -> boundSearch
    boolean a(com.baidu.mapapi.cloud.BaseCloudSearchInfo) -> a
    boolean detailSearch(com.baidu.mapapi.cloud.DetailSearchInfo) -> detailSearch
    java.lang.String a(int) -> a
    com.baidu.platform.comjni.map.cloud.a a(com.baidu.mapapi.cloud.CloudManager) -> a
    com.baidu.mapapi.cloud.CloudListener b(com.baidu.mapapi.cloud.CloudManager) -> b
    java.lang.String a(com.baidu.mapapi.cloud.CloudManager,int) -> a
com.baidu.mapapi.cloud.CloudPoiInfo -> com.baidu.mapapi.cloud.CloudPoiInfo:
    int uid -> uid
    int geotableId -> geotableId
    java.lang.String title -> title
    java.lang.String address -> address
    java.lang.String province -> province
    java.lang.String city -> city
    java.lang.String district -> district
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String tags -> tags
    int distance -> distance
    int weight -> weight
    java.util.Map extras -> extras
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.CloudSearchResult -> com.baidu.mapapi.cloud.CloudSearchResult:
    java.util.List poiList -> poiList
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.DetailSearchInfo -> com.baidu.mapapi.cloud.DetailSearchInfo:
    int uid -> uid
    java.lang.String a() -> a
com.baidu.mapapi.cloud.DetailSearchResult -> com.baidu.mapapi.cloud.DetailSearchResult:
    com.baidu.mapapi.cloud.CloudPoiInfo poiInfo -> poiInfo
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.LocalSearchInfo -> com.baidu.mapapi.cloud.LocalSearchInfo:
    java.lang.String region -> region
    java.lang.String a() -> a
com.baidu.mapapi.cloud.NearbySearchInfo -> com.baidu.mapapi.cloud.NearbySearchInfo:
    java.lang.String location -> location
    int radius -> radius
    java.lang.String a() -> a
com.baidu.mapapi.cloud.a -> com.baidu.mapapi.cloud.a:
    com.baidu.mapapi.cloud.CloudManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.map.Arc -> com.baidu.mapapi.map.Arc:
    java.lang.String f -> f
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setPoints(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> setPoints
    void setWidth(int) -> setWidth
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.ArcOptions -> com.baidu.mapapi.map.ArcOptions:
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.model.LatLng g -> g
    com.baidu.mapapi.model.LatLng h -> h
    com.baidu.mapapi.model.LatLng i -> i
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    com.baidu.mapapi.map.ArcOptions color(int) -> color
    com.baidu.mapapi.map.ArcOptions points(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> points
    com.baidu.mapapi.map.ArcOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.ArcOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.ArcOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.ArcOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.BaiduMap -> com.baidu.mapapi.map.BaiduMap:
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    java.lang.String a -> a
    com.baidu.mapapi.map.Projection b -> b
    com.baidu.mapapi.map.UiSettings c -> c
    com.baidu.platform.comapi.map.e d -> d
    java.util.List e -> e
    com.baidu.mapapi.map.Overlay$a f -> f
    com.baidu.platform.comapi.map.g g -> g
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener h -> h
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener i -> i
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback j -> j
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener k -> k
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener l -> l
    com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener m -> m
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener n -> n
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback o -> o
    com.baidu.mapapi.map.InfoWindow p -> p
    com.baidu.mapapi.map.Marker q -> q
    com.baidu.mapapi.map.MyLocationData r -> r
    com.baidu.mapapi.map.MyLocationConfigeration s -> s
    com.baidu.mapapi.map.Overlay addOverlay(com.baidu.mapapi.map.OverlayOptions) -> addOverlay
    void clear() -> clear
    void setMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> setMapStatus
    com.baidu.mapapi.map.MapStatus getMapStatus() -> getMapStatus
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate,int) -> animateMapStatus
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> animateMapStatus
    com.baidu.platform.comapi.map.u a(com.baidu.mapapi.map.MapStatusUpdate) -> a
    void setMapType(int) -> setMapType
    int getMapType() -> getMapType
    float getMaxZoomLevel() -> getMaxZoomLevel
    void setMaxAndMinZoomLevel(float,float) -> setMaxAndMinZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    com.baidu.mapapi.map.Projection getProjection() -> getProjection
    com.baidu.mapapi.map.UiSettings getUiSettings() -> getUiSettings
    void setBuildingsEnabled(boolean) -> setBuildingsEnabled
    boolean isBuildingsEnabled() -> isBuildingsEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationData(com.baidu.mapapi.map.MyLocationData) -> setMyLocationData
    com.baidu.mapapi.map.MyLocationData getLocationData() -> getLocationData
    void setMyLocationConfigeration(com.baidu.mapapi.map.MyLocationConfigeration) -> setMyLocationConfigeration
    com.baidu.mapapi.map.MyLocationConfigeration getLocationConfigeration() -> getLocationConfigeration
    void a(com.baidu.mapapi.map.MyLocationData,com.baidu.mapapi.map.MyLocationConfigeration) -> a
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    boolean isTrafficEnabled() -> isTrafficEnabled
    void snapshot(com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback) -> snapshot
    void showInfoWindow(com.baidu.mapapi.map.InfoWindow) -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    void setOnMapStatusChangeListener(com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener) -> setOnMapStatusChangeListener
    void setOnMapClickListener(com.baidu.mapapi.map.BaiduMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMapLoadedCallback(com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback) -> setOnMapLoadedCallback
    void setOnMapDoubleClickListener(com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener) -> setOnMapDoubleClickListener
    void setOnMapLongClickListener(com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnMyLocationClickListener(com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener) -> setOnMyLocationClickListener
    java.util.List a(com.baidu.mapapi.map.BaiduMap) -> a
    com.baidu.platform.comapi.map.e b(com.baidu.mapapi.map.BaiduMap) -> b
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener c(com.baidu.mapapi.map.BaiduMap) -> c
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener d(com.baidu.mapapi.map.BaiduMap) -> d
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener e(com.baidu.mapapi.map.BaiduMap) -> e
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener f(com.baidu.mapapi.map.BaiduMap) -> f
    com.baidu.mapapi.map.Projection a(com.baidu.mapapi.map.BaiduMap,com.baidu.mapapi.map.Projection) -> a
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback g(com.baidu.mapapi.map.BaiduMap) -> g
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback h(com.baidu.mapapi.map.BaiduMap) -> h
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener i(com.baidu.mapapi.map.BaiduMap) -> i
    com.baidu.mapapi.map.InfoWindow j(com.baidu.mapapi.map.BaiduMap) -> j
    com.baidu.mapapi.map.Marker k(com.baidu.mapapi.map.BaiduMap) -> k
    com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener l(com.baidu.mapapi.map.BaiduMap) -> l
com.baidu.mapapi.map.BaiduMap$1 -> com.baidu.mapapi.map.BaiduMap$1:
    int[] a -> a
com.baidu.mapapi.map.BaiduMap$OnMapClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapClickListener:
    void onMapClick(com.baidu.mapapi.model.LatLng) -> onMapClick
    boolean onMapPoiClick(com.baidu.mapapi.map.MapPoi) -> onMapPoiClick
com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener:
    void onMapDoubleClick(com.baidu.mapapi.model.LatLng) -> onMapDoubleClick
com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback -> com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback:
    void onMapLoaded() -> onMapLoaded
com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener:
    void onMapLongClick(com.baidu.mapapi.model.LatLng) -> onMapLongClick
com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener -> com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener:
    void onMapStatusChangeStart(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeStart
    void onMapStatusChange(com.baidu.mapapi.map.MapStatus) -> onMapStatusChange
    void onMapStatusChangeFinish(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeFinish
com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener -> com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener:
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener -> com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener:
    boolean onMyLocationClick() -> onMyLocationClick
com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback -> com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback:
    void onSnapshotReady(android.graphics.Bitmap) -> onSnapshotReady
com.baidu.mapapi.map.BaiduMapOptions -> com.baidu.mapapi.map.BaiduMapOptions:
    com.baidu.mapapi.map.MapStatus a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.baidu.mapapi.map.BaiduMapOptions mapStatus(com.baidu.mapapi.map.MapStatus) -> mapStatus
    com.baidu.mapapi.map.BaiduMapOptions compassEnabled(boolean) -> compassEnabled
    com.baidu.mapapi.map.BaiduMapOptions mapType(int) -> mapType
    com.baidu.mapapi.map.BaiduMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions overlookingGesturesEnabled(boolean) -> overlookingGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scaleControlEnabled(boolean) -> scaleControlEnabled
    com.baidu.platform.comapi.map.t a() -> a
com.baidu.mapapi.map.BitmapDescriptor -> com.baidu.mapapi.map.BitmapDescriptor:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    byte[] a() -> a
    android.os.Bundle b() -> b
    void recycle() -> recycle
com.baidu.mapapi.map.BitmapDescriptorFactory -> com.baidu.mapapi.map.BitmapDescriptorFactory:
    com.baidu.mapapi.map.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.baidu.mapapi.map.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
    com.baidu.mapapi.map.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.baidu.mapapi.map.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.baidu.mapapi.map.BitmapDescriptor fromResource(int) -> fromResource
    com.baidu.mapapi.map.BitmapDescriptor fromView(android.view.View) -> fromView
com.baidu.mapapi.map.Circle -> com.baidu.mapapi.map.Circle:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.map.Stroke d -> d
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setFillColor(int) -> setFillColor
    void setRadius(int) -> setRadius
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.CircleOptions -> com.baidu.mapapi.map.CircleOptions:
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    com.baidu.mapapi.map.Stroke h -> h
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.CircleOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.CircleOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.CircleOptions radius(int) -> radius
    com.baidu.mapapi.map.CircleOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.CircleOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.CircleOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.CircleOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Dot -> com.baidu.mapapi.map.Dot:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setColor(int) -> setColor
    void setRadius(int) -> setRadius
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.DotOptions -> com.baidu.mapapi.map.DotOptions:
    com.baidu.mapapi.model.LatLng d -> d
    int e -> e
    int f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.DotOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.DotOptions color(int) -> color
    com.baidu.mapapi.map.DotOptions radius(int) -> radius
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.DotOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.DotOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.DotOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.GroundOverlay -> com.baidu.mapapi.map.GroundOverlay:
    java.lang.String o -> o
    int a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    com.baidu.mapapi.model.LatLng c -> c
    int d -> d
    int e -> e
    float f -> f
    float g -> g
    com.baidu.mapapi.model.LatLngBounds h -> h
    float i -> i
    void setImage(com.baidu.mapapi.map.BitmapDescriptor) -> setImage
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setDimensions(int) -> setDimensions
    void setDimensions(int,int) -> setDimensions
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setPositionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> setPositionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.GroundOverlayOptions -> com.baidu.mapapi.map.GroundOverlayOptions:
    com.baidu.mapapi.map.BitmapDescriptor d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    float h -> h
    float i -> i
    com.baidu.mapapi.model.LatLngBounds j -> j
    float k -> k
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.GroundOverlayOptions image(com.baidu.mapapi.map.BitmapDescriptor) -> image
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    com.baidu.mapapi.map.GroundOverlayOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int) -> dimensions
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int,int) -> dimensions
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.baidu.mapapi.map.GroundOverlayOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.GroundOverlayOptions positionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> positionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    com.baidu.mapapi.map.GroundOverlayOptions transparency(float) -> transparency
    float getTransparency() -> getTransparency
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.GroundOverlayOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.GroundOverlayOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.GroundOverlayOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.InfoWindow -> com.baidu.mapapi.map.InfoWindow:
    com.baidu.mapapi.map.BitmapDescriptor a -> a
    android.view.View b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener d -> d
com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener -> com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener:
    void onInfoWindowClick() -> onInfoWindowClick
com.baidu.mapapi.map.MapFragment -> com.baidu.mapapi.map.MapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.MapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.MapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.MapPoi -> com.baidu.mapapi.map.MapPoi:
    java.lang.String c -> c
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String getName() -> getName
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.map.MapStatus -> com.baidu.mapapi.map.MapStatus:
    float rotate -> rotate
    com.baidu.mapapi.model.LatLng target -> target
    float overlook -> overlook
    float zoom -> zoom
    android.graphics.Point targetScreen -> targetScreen
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.u) -> a
    com.baidu.platform.comapi.map.u a() -> a
    com.baidu.platform.comapi.map.u b(com.baidu.platform.comapi.map.u) -> b
    java.lang.String toString() -> toString
com.baidu.mapapi.map.MapStatus$Builder -> com.baidu.mapapi.map.MapStatus$Builder:
    float a -> a
    com.baidu.mapapi.model.LatLng b -> b
    float c -> c
    float d -> d
    android.graphics.Point e -> e
    com.baidu.mapapi.map.MapStatus$Builder rotate(float) -> rotate
    com.baidu.mapapi.map.MapStatus$Builder target(com.baidu.mapapi.model.LatLng) -> target
    com.baidu.mapapi.map.MapStatus$Builder overlook(float) -> overlook
    com.baidu.mapapi.map.MapStatus$Builder zoom(float) -> zoom
    com.baidu.mapapi.map.MapStatus$Builder targetScreen(android.graphics.Point) -> targetScreen
    com.baidu.mapapi.map.MapStatus build() -> build
com.baidu.mapapi.map.MapStatusUpdate -> com.baidu.mapapi.map.MapStatusUpdate:
    java.lang.String l -> l
    int a -> a
    com.baidu.mapapi.map.MapStatus b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLngBounds d -> d
    int e -> e
    int f -> f
    float g -> g
    int h -> h
    int i -> i
    float j -> j
    android.graphics.Point k -> k
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.e,com.baidu.mapapi.map.MapStatus) -> a
com.baidu.mapapi.map.MapStatusUpdateFactory -> com.baidu.mapapi.map.MapStatusUpdateFactory:
    com.baidu.mapapi.map.MapStatusUpdate newMapStatus(com.baidu.mapapi.map.MapStatus) -> newMapStatus
    com.baidu.mapapi.map.MapStatusUpdate newLatLng(com.baidu.mapapi.model.LatLng) -> newLatLng
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds,int,int) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngZoom(com.baidu.mapapi.model.LatLng,float) -> newLatLngZoom
    com.baidu.mapapi.map.MapStatusUpdate scrollBy(int,int) -> scrollBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomIn() -> zoomIn
    com.baidu.mapapi.map.MapStatusUpdate zoomOut() -> zoomOut
    com.baidu.mapapi.map.MapStatusUpdate zoomTo(float) -> zoomTo
com.baidu.mapapi.map.MapView -> com.baidu.mapapi.map.MapView:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.e b -> b
    com.baidu.mapapi.map.BaiduMap c -> c
    android.widget.ImageView d -> d
    android.graphics.Bitmap e -> e
    android.widget.ZoomControls f -> f
    android.widget.RelativeLayout g -> g
    android.widget.TextView h -> h
    android.widget.TextView i -> i
    android.widget.ImageView j -> j
    android.util.SparseArray k -> k
    float l -> l
    com.baidu.platform.comapi.map.g m -> m
    void a(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> a
    void b(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void b() -> b
    void c(android.content.Context) -> c
    com.baidu.mapapi.map.BaiduMap getMap() -> getMap
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a(android.view.View) -> a
    com.baidu.platform.comapi.map.e a(com.baidu.mapapi.map.MapView) -> a
    float b(com.baidu.mapapi.map.MapView) -> b
    android.util.SparseArray a() -> a
    android.widget.ImageView c(com.baidu.mapapi.map.MapView) -> c
    android.widget.TextView d(com.baidu.mapapi.map.MapView) -> d
    android.widget.TextView e(com.baidu.mapapi.map.MapView) -> e
    float a(com.baidu.mapapi.map.MapView,float) -> a
    void f(com.baidu.mapapi.map.MapView) -> f
com.baidu.mapapi.map.MapViewLayoutParams -> com.baidu.mapapi.map.MapViewLayoutParams:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    com.baidu.mapapi.model.LatLng a -> a
    android.graphics.Point b -> b
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode c -> c
    float d -> d
    float e -> e
com.baidu.mapapi.map.MapViewLayoutParams$Builder -> com.baidu.mapapi.map.MapViewLayoutParams$Builder:
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    android.graphics.Point d -> d
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode e -> e
    int f -> f
    int g -> g
    com.baidu.mapapi.map.MapViewLayoutParams build() -> build
    com.baidu.mapapi.map.MapViewLayoutParams$Builder width(int) -> width
    com.baidu.mapapi.map.MapViewLayoutParams$Builder height(int) -> height
    com.baidu.mapapi.map.MapViewLayoutParams$Builder align(int,int) -> align
    com.baidu.mapapi.map.MapViewLayoutParams$Builder position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.MapViewLayoutParams$Builder point(android.graphics.Point) -> point
    com.baidu.mapapi.map.MapViewLayoutParams$Builder layoutMode(com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode) -> layoutMode
com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode -> com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode:
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode mapMode -> mapMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode absoluteMode -> absoluteMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] $VALUES -> $VALUES
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] values() -> values
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.Marker -> com.baidu.mapapi.map.Marker:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    float c -> c
    float d -> d
    boolean e -> e
    float f -> f
    java.lang.String g -> g
    void setIcon(com.baidu.mapapi.map.BitmapDescriptor) -> setIcon
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setPerspective(boolean) -> setPerspective
    boolean isPerspective() -> isPerspective
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setRotate(float) -> setRotate
    float getRotate() -> getRotate
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.MarkerOptions -> com.baidu.mapapi.map.MarkerOptions:
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.map.BitmapDescriptor e -> e
    float f -> f
    float g -> g
    boolean h -> h
    float i -> i
    java.lang.String j -> j
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.MarkerOptions icon(com.baidu.mapapi.map.BitmapDescriptor) -> icon
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    com.baidu.mapapi.map.MarkerOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.MarkerOptions perspective(boolean) -> perspective
    boolean isPerspective() -> isPerspective
    com.baidu.mapapi.map.MarkerOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.MarkerOptions rotate(float) -> rotate
    float getRotate() -> getRotate
    com.baidu.mapapi.map.MarkerOptions title(java.lang.String) -> title
    java.lang.String getTitle() -> getTitle
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.MarkerOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.MarkerOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.MarkerOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.MyLocationConfigeration -> com.baidu.mapapi.map.MyLocationConfigeration:
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode locationMode -> locationMode
    boolean enableDirection -> enableDirection
    com.baidu.mapapi.map.BitmapDescriptor customMarker -> customMarker
com.baidu.mapapi.map.MyLocationConfigeration$LocationMode -> com.baidu.mapapi.map.MyLocationConfigeration$LocationMode:
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode NORMAL -> NORMAL
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode FOLLOWING -> FOLLOWING
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode COMPASS -> COMPASS
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode[] a -> a
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode[] values() -> values
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.MyLocationData -> com.baidu.mapapi.map.MyLocationData:
    double latitude -> latitude
    double longitude -> longitude
    float speed -> speed
    float direction -> direction
    float accuracy -> accuracy
    int satellitesNum -> satellitesNum
com.baidu.mapapi.map.MyLocationData$Builder -> com.baidu.mapapi.map.MyLocationData$Builder:
    double a -> a
    double b -> b
    float c -> c
    float d -> d
    float e -> e
    int f -> f
    com.baidu.mapapi.map.MyLocationData$Builder latitude(double) -> latitude
    com.baidu.mapapi.map.MyLocationData$Builder longitude(double) -> longitude
    com.baidu.mapapi.map.MyLocationData$Builder speed(float) -> speed
    com.baidu.mapapi.map.MyLocationData$Builder direction(float) -> direction
    com.baidu.mapapi.map.MyLocationData$Builder accuracy(float) -> accuracy
    com.baidu.mapapi.map.MyLocationData$Builder satellitesNum(int) -> satellitesNum
    com.baidu.mapapi.map.MyLocationData build() -> build
com.baidu.mapapi.map.Overlay -> com.baidu.mapapi.map.Overlay:
    java.lang.String j -> j
    com.baidu.platform.comapi.map.d k -> k
    int l -> l
    boolean m -> m
    android.os.Bundle n -> n
    com.baidu.mapapi.map.Overlay$a listener -> listener
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    int getZIndex() -> getZIndex
    void setZIndex(int) -> setZIndex
    android.os.Bundle getExtraInfo() -> getExtraInfo
    void setExtraInfo(android.os.Bundle) -> setExtraInfo
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
    void remove() -> remove
    void a(int,android.os.Bundle) -> a
    void a(java.util.List,android.os.Bundle) -> a
com.baidu.mapapi.map.Overlay$a -> com.baidu.mapapi.map.Overlay$a:
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.OverlayOptions -> com.baidu.mapapi.map.OverlayOptions:
    com.baidu.mapapi.map.Overlay a() -> a
com.baidu.mapapi.map.Polygon -> com.baidu.mapapi.map.Polygon:
    com.baidu.mapapi.map.Stroke a -> a
    int b -> b
    java.util.List c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setFillColor(int) -> setFillColor
    void setPoints(java.util.List) -> setPoints
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.PolygonOptions -> com.baidu.mapapi.map.PolygonOptions:
    com.baidu.mapapi.map.Stroke d -> d
    int e -> e
    java.util.List f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.PolygonOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.PolygonOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolygonOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolygonOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.PolygonOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolygonOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Polyline -> com.baidu.mapapi.map.Polyline:
    int a -> a
    java.util.List b -> b
    int c -> c
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setPoints(java.util.List) -> setPoints
    void setWidth(int) -> setWidth
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.PolylineOptions -> com.baidu.mapapi.map.PolylineOptions:
    int d -> d
    java.util.List e -> e
    int f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    int getWidth() -> getWidth
    com.baidu.mapapi.map.PolylineOptions color(int) -> color
    com.baidu.mapapi.map.PolylineOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolylineOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolylineOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.PolylineOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolylineOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Projection -> com.baidu.mapapi.map.Projection:
    com.baidu.platform.comapi.map.e a -> a
    com.baidu.mapapi.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.baidu.mapapi.model.LatLng) -> toScreenLocation
com.baidu.mapapi.map.Stroke -> com.baidu.mapapi.map.Stroke:
    int strokeWidth -> strokeWidth
    int color -> color
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.SupportMapFragment -> com.baidu.mapapi.map.SupportMapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.SupportMapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.SupportMapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.Text -> com.baidu.mapapi.map.Text:
    java.lang.String o -> o
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    int c -> c
    int d -> d
    int e -> e
    android.graphics.Typeface f -> f
    int g -> g
    int h -> h
    float i -> i
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    void setText(java.lang.String) -> setText
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    void setBgColor(int) -> setBgColor
    void setFontColor(int) -> setFontColor
    void setFontSize(int) -> setFontSize
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void setAlign(int,int) -> setAlign
    void setRotate(float) -> setRotate
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
com.baidu.mapapi.map.TextOptions -> com.baidu.mapapi.map.TextOptions:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    int h -> h
    android.graphics.Typeface i -> i
    int j -> j
    int k -> k
    float l -> l
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    com.baidu.mapapi.map.TextOptions text(java.lang.String) -> text
    com.baidu.mapapi.map.TextOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.TextOptions bgColor(int) -> bgColor
    com.baidu.mapapi.map.TextOptions fontColor(int) -> fontColor
    com.baidu.mapapi.map.TextOptions fontSize(int) -> fontSize
    com.baidu.mapapi.map.TextOptions typeface(android.graphics.Typeface) -> typeface
    com.baidu.mapapi.map.TextOptions align(int,int) -> align
    com.baidu.mapapi.map.TextOptions rotate(float) -> rotate
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.TextOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.TextOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.TextOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.UiSettings -> com.baidu.mapapi.map.UiSettings:
    com.baidu.platform.comapi.map.e a -> a
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isOverlookingGesturesEnabled() -> isOverlookingGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setOverlookingGesturesEnabled(boolean) -> setOverlookingGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
com.baidu.mapapi.map.a -> com.baidu.mapapi.map.a:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.b -> com.baidu.mapapi.map.b:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a() -> a
    void a(com.baidu.platform.comapi.map.u) -> a
    void b(com.baidu.platform.comapi.map.u) -> b
    void c(com.baidu.platform.comapi.map.u) -> c
    void a(com.baidu.platform.comapi.a.b) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
com.baidu.mapapi.map.c -> com.baidu.mapapi.map.c:
    com.baidu.mapapi.map.MapView a -> a
    void a() -> a
    void a(com.baidu.platform.comapi.a.b) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(com.baidu.platform.comapi.map.u) -> a
    void b(com.baidu.platform.comapi.map.u) -> b
    void c(com.baidu.platform.comapi.map.u) -> c
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
com.baidu.mapapi.map.d -> com.baidu.mapapi.map.d:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.e -> com.baidu.mapapi.map.e:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.offline.MKOLSearchRecord -> com.baidu.mapapi.map.offline.MKOLSearchRecord:
    int cityID -> cityID
    int size -> size
    java.lang.String cityName -> cityName
    int cityType -> cityType
    java.util.ArrayList childCities -> childCities
com.baidu.mapapi.map.offline.MKOLUpdateElement -> com.baidu.mapapi.map.offline.MKOLUpdateElement:
    int UNDEFINED -> UNDEFINED
    int DOWNLOADING -> DOWNLOADING
    int WAITING -> WAITING
    int SUSPENDED -> SUSPENDED
    int FINISHED -> FINISHED
    int eOLDSMd5Error -> eOLDSMd5Error
    int eOLDSNetError -> eOLDSNetError
    int eOLDSIOError -> eOLDSIOError
    int eOLDSWifiError -> eOLDSWifiError
    int eOLDSMissData -> eOLDSMissData
    int cityID -> cityID
    java.lang.String cityName -> cityName
    int ratio -> ratio
    int status -> status
    com.baidu.mapapi.model.LatLng geoPt -> geoPt
    int size -> size
    int serversize -> serversize
    int level -> level
    boolean update -> update
com.baidu.mapapi.map.offline.MKOfflineMap -> com.baidu.mapapi.map.offline.MKOfflineMap:
    java.lang.String a -> a
    int TYPE_NEW_OFFLINE -> TYPE_NEW_OFFLINE
    int TYPE_DOWNLOAD_UPDATE -> TYPE_DOWNLOAD_UPDATE
    int TYPE_VER_UPDATE -> TYPE_VER_UPDATE
    com.baidu.platform.comapi.map.l b -> b
    com.baidu.mapapi.map.offline.MKOfflineMapListener c -> c
    boolean init(com.baidu.mapapi.map.offline.MKOfflineMapListener) -> init
    boolean start(int) -> start
    boolean pause(int) -> pause
    void destroy() -> destroy
    boolean remove(int) -> remove
    java.util.ArrayList getHotCityList() -> getHotCityList
    java.util.ArrayList getOfflineCityList() -> getOfflineCityList
    java.util.ArrayList searchCity(java.lang.String) -> searchCity
    java.util.ArrayList getAllUpdateInfo() -> getAllUpdateInfo
    com.baidu.mapapi.map.offline.MKOLUpdateElement getUpdateInfo(int) -> getUpdateInfo
    int importOfflineData() -> importOfflineData
    int importOfflineData(boolean) -> importOfflineData
    java.lang.String a() -> a
    com.baidu.mapapi.map.offline.MKOfflineMapListener a(com.baidu.mapapi.map.offline.MKOfflineMap) -> a
com.baidu.mapapi.map.offline.MKOfflineMapListener -> com.baidu.mapapi.map.offline.MKOfflineMapListener:
    void onGetOfflineMapState(int,int) -> onGetOfflineMapState
com.baidu.mapapi.map.offline.a -> com.baidu.mapapi.map.offline.a:
    com.baidu.mapapi.map.offline.MKOfflineMap a -> a
    void a(int,int) -> a
com.baidu.mapapi.model.LatLng -> com.baidu.mapapi.model.LatLng:
    java.lang.String a -> a
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String toString() -> toString
com.baidu.mapapi.model.LatLngBounds -> com.baidu.mapapi.model.LatLngBounds:
    com.baidu.mapapi.model.LatLng northeast -> northeast
    com.baidu.mapapi.model.LatLng southwest -> southwest
    boolean contains(com.baidu.mapapi.model.LatLng) -> contains
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    java.lang.String toString() -> toString
com.baidu.mapapi.model.LatLngBounds$Builder -> com.baidu.mapapi.model.LatLngBounds$Builder:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    boolean e -> e
    com.baidu.mapapi.model.LatLngBounds build() -> build
    com.baidu.mapapi.model.LatLngBounds$Builder include(com.baidu.mapapi.model.LatLng) -> include
com.baidu.mapapi.model.a -> com.baidu.mapapi.model.a:
    android.os.Bundle a -> a
    double[] b -> b
    double[] c -> c
    double[][] d -> d
    double[][] e -> e
    com.baidu.mapapi.model.a$a a(com.baidu.mapapi.model.a$a,double[]) -> a
    com.baidu.mapapi.model.LatLng a(com.baidu.platform.comapi.a.b) -> a
    com.baidu.platform.comapi.a.b a(com.baidu.mapapi.model.LatLng) -> a
    com.baidu.platform.comapi.a.d b(com.baidu.mapapi.model.LatLng) -> b
    int a(com.baidu.mapapi.model.LatLng,int) -> a
    com.baidu.mapapi.model.LatLng a(java.lang.String) -> a
    com.baidu.mapapi.model.LatLng b(java.lang.String) -> b
    java.util.List c(java.lang.String) -> c
    com.baidu.platform.comapi.a.d a(float,float,java.lang.String) -> a
    java.util.List d(java.lang.String) -> d
com.baidu.mapapi.model.a$a -> com.baidu.mapapi.model.a$a:
    double a -> a
    double b -> b
com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException -> com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException:
com.baidu.mapapi.navi.BaiduMapNavigation -> com.baidu.mapapi.navi.BaiduMapNavigation:
    int a(android.content.Context) -> a
    void openBaiduMapNavi(com.baidu.mapapi.navi.NaviPara,android.content.Context) -> openBaiduMapNavi
    void openWebBaiduMapNavi(com.baidu.mapapi.navi.NaviPara,android.content.Context) -> openWebBaiduMapNavi
    java.lang.String a(com.baidu.mapapi.navi.NaviPara) -> a
    void getLatestBaiduMapApp(android.content.Context) -> getLatestBaiduMapApp
    java.lang.String b(android.content.Context) -> b
com.baidu.mapapi.navi.IllegalNaviArgumentException -> com.baidu.mapapi.navi.IllegalNaviArgumentException:
com.baidu.mapapi.navi.NaviPara -> com.baidu.mapapi.navi.NaviPara:
    com.baidu.mapapi.model.LatLng startPoint -> startPoint
    java.lang.String startName -> startName
    com.baidu.mapapi.model.LatLng endPoint -> endPoint
    java.lang.String endName -> endName
com.baidu.mapapi.overlayutil.BusLineOverlay -> com.baidu.mapapi.overlayutil.BusLineOverlay:
    com.baidu.mapapi.search.busline.BusLineResult c -> c
    void setData(com.baidu.mapapi.search.busline.BusLineResult) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    boolean onBusStationClick(int) -> onBusStationClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.DrivingRouteOvelray -> com.baidu.mapapi.overlayutil.DrivingRouteOvelray:
    com.baidu.mapapi.search.route.DrivingRouteLine c -> c
    java.util.List getOverlayOptions() -> getOverlayOptions
    void setData(com.baidu.mapapi.search.route.DrivingRouteLine) -> setData
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.OverlayManager -> com.baidu.mapapi.overlayutil.OverlayManager:
    com.baidu.mapapi.map.BaiduMap a -> a
    java.util.List c -> c
    java.util.List b -> b
    java.util.List getOverlayOptions() -> getOverlayOptions
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void zoomToSpan() -> zoomToSpan
com.baidu.mapapi.overlayutil.PoiOverlay -> com.baidu.mapapi.overlayutil.PoiOverlay:
    com.baidu.mapapi.search.poi.PoiResult c -> c
    void setData(com.baidu.mapapi.search.poi.PoiResult) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.search.poi.PoiResult getPoiResult() -> getPoiResult
    boolean onPoiClick(int) -> onPoiClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.TransitRouteOverlay -> com.baidu.mapapi.overlayutil.TransitRouteOverlay:
    com.baidu.mapapi.search.route.TransitRouteLine c -> c
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.map.BitmapDescriptor a(com.baidu.mapapi.search.route.TransitRouteLine$TransitStep) -> a
    void setData(com.baidu.mapapi.search.route.TransitRouteLine) -> setData
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.TransitRouteOverlay$1 -> com.baidu.mapapi.overlayutil.TransitRouteOverlay$1:
    int[] a -> a
com.baidu.mapapi.overlayutil.WalkingRouteOverlay -> com.baidu.mapapi.overlayutil.WalkingRouteOverlay:
    com.baidu.mapapi.search.route.WalkingRouteLine c -> c
    void setData(com.baidu.mapapi.search.route.WalkingRouteLine) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.search.a.a -> com.baidu.mapapi.search.a.a:
    java.lang.String a(java.lang.String) -> a
com.baidu.mapapi.search.busline.BusLineResult -> com.baidu.mapapi.search.busline.BusLineResult:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    java.util.Date d -> d
    java.util.Date e -> e
    java.lang.String f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.lang.String getBusCompany() -> getBusCompany
    java.lang.String getBusLineName() -> getBusLineName
    void a(java.lang.String) -> a
    boolean isMonthTicket() -> isMonthTicket
    void a(boolean) -> a
    java.util.Date getStartTime() -> getStartTime
    void a(java.util.Date) -> a
    java.util.Date getEndTime() -> getEndTime
    void b(java.util.Date) -> b
    java.util.List getStations() -> getStations
    void a(java.util.List) -> a
    java.util.List getSteps() -> getSteps
    void b(java.util.List) -> b
    java.lang.String getUid() -> getUid
    void b(java.lang.String) -> b
com.baidu.mapapi.search.busline.BusLineResult$BusStation -> com.baidu.mapapi.search.busline.BusLineResult$BusStation:
com.baidu.mapapi.search.busline.BusLineResult$BusStep -> com.baidu.mapapi.search.busline.BusLineResult$BusStep:
com.baidu.mapapi.search.busline.BusLineSearch -> com.baidu.mapapi.search.busline.BusLineSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener b -> b
    boolean c -> c
    com.baidu.mapapi.search.busline.BusLineSearch newInstance() -> newInstance
    boolean searchBusLine(com.baidu.mapapi.search.busline.BusLineSearchOption) -> searchBusLine
    void setOnGetBusLineSearchResultListener(com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener) -> setOnGetBusLineSearchResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.busline.BusLineSearch) -> a
    com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener b(com.baidu.mapapi.search.busline.BusLineSearch) -> b
com.baidu.mapapi.search.busline.BusLineSearch$1 -> com.baidu.mapapi.search.busline.BusLineSearch$1:
com.baidu.mapapi.search.busline.BusLineSearch$a -> com.baidu.mapapi.search.busline.BusLineSearch$a:
    com.baidu.mapapi.search.busline.BusLineSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.busline.BusLineSearchOption -> com.baidu.mapapi.search.busline.BusLineSearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.busline.BusLineSearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.busline.BusLineSearchOption uid(java.lang.String) -> uid
com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener -> com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener:
    void onGetBusLineResult(com.baidu.mapapi.search.busline.BusLineResult) -> onGetBusLineResult
com.baidu.mapapi.search.busline.a -> com.baidu.mapapi.search.busline.a:
    com.baidu.mapapi.search.busline.BusLineResult a(java.lang.String) -> a
com.baidu.mapapi.search.core.CityInfo -> com.baidu.mapapi.search.core.CityInfo:
    java.lang.String city -> city
    int num -> num
com.baidu.mapapi.search.core.PoiInfo -> com.baidu.mapapi.search.core.PoiInfo:
    java.lang.String name -> name
    java.lang.String uid -> uid
    java.lang.String address -> address
    java.lang.String city -> city
    java.lang.String phoneNum -> phoneNum
    java.lang.String postCode -> postCode
    com.baidu.mapapi.search.core.PoiInfo$POITYPE type -> type
    com.baidu.mapapi.model.LatLng location -> location
    boolean hasCaterDetails -> hasCaterDetails
    boolean isPano -> isPano
com.baidu.mapapi.search.core.PoiInfo$POITYPE -> com.baidu.mapapi.search.core.PoiInfo$POITYPE:
    com.baidu.mapapi.search.core.PoiInfo$POITYPE POINT -> POINT
    com.baidu.mapapi.search.core.PoiInfo$POITYPE BUS_STATION -> BUS_STATION
    com.baidu.mapapi.search.core.PoiInfo$POITYPE BUS_LINE -> BUS_LINE
    com.baidu.mapapi.search.core.PoiInfo$POITYPE SUBWAY_STATION -> SUBWAY_STATION
    com.baidu.mapapi.search.core.PoiInfo$POITYPE SUBWAY_LINE -> SUBWAY_LINE
    int a -> a
    com.baidu.mapapi.search.core.PoiInfo$POITYPE[] $VALUES -> $VALUES
    com.baidu.mapapi.search.core.PoiInfo$POITYPE[] values() -> values
    com.baidu.mapapi.search.core.PoiInfo$POITYPE valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
    com.baidu.mapapi.search.core.PoiInfo$POITYPE fromInt(int) -> fromInt
com.baidu.mapapi.search.core.RouteLine -> com.baidu.mapapi.search.core.RouteLine:
    com.baidu.mapapi.search.core.RouteNode a -> a
    com.baidu.mapapi.search.core.RouteNode b -> b
    java.lang.String c -> c
    java.util.List d -> d
    int e -> e
    int f -> f
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    com.baidu.mapapi.search.core.RouteNode getStarting() -> getStarting
    void setStarting(com.baidu.mapapi.search.core.RouteNode) -> setStarting
    com.baidu.mapapi.search.core.RouteNode getTerminal() -> getTerminal
    void setTerminal(com.baidu.mapapi.search.core.RouteNode) -> setTerminal
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void setSteps(java.util.List) -> setSteps
    java.util.List getAllStep() -> getAllStep
com.baidu.mapapi.search.core.RouteNode -> com.baidu.mapapi.search.core.RouteNode:
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.core.RouteNode titleAndLocation(java.lang.String,com.baidu.mapapi.model.LatLng) -> titleAndLocation
    com.baidu.mapapi.search.core.RouteNode location(com.baidu.mapapi.model.LatLng) -> location
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void setLocation(com.baidu.mapapi.model.LatLng) -> setLocation
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
com.baidu.mapapi.search.core.RouteStep -> com.baidu.mapapi.search.core.RouteStep:
    int a -> a
    int b -> b
    java.util.List mWayPoints -> mWayPoints
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    java.util.List getWayPoints() -> getWayPoints
    void setWayPoints(java.util.List) -> setWayPoints
com.baidu.mapapi.search.core.SearchResult -> com.baidu.mapapi.search.core.SearchResult:
    com.baidu.mapapi.search.core.SearchResult$ERRORNO error -> error
com.baidu.mapapi.search.core.SearchResult$ERRORNO -> com.baidu.mapapi.search.core.SearchResult$ERRORNO:
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NO_ERROR -> NO_ERROR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO RESULT_NOT_FOUND -> RESULT_NOT_FOUND
    com.baidu.mapapi.search.core.SearchResult$ERRORNO AMBIGUOUS_KEYWORD -> AMBIGUOUS_KEYWORD
    com.baidu.mapapi.search.core.SearchResult$ERRORNO AMBIGUOUS_ROURE_ADDR -> AMBIGUOUS_ROURE_ADDR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NOT_SUPPORT_BUS -> NOT_SUPPORT_BUS
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NOT_SUPPORT_BUS_2CITY -> NOT_SUPPORT_BUS_2CITY
    com.baidu.mapapi.search.core.SearchResult$ERRORNO ST_EN_TOO_NEAR -> ST_EN_TOO_NEAR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO[] $VALUES -> $VALUES
    com.baidu.mapapi.search.core.SearchResult$ERRORNO[] values() -> values
    com.baidu.mapapi.search.core.SearchResult$ERRORNO valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.core.TaxiInfo -> com.baidu.mapapi.search.core.TaxiInfo:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    int e -> e
    int getTotalPrice() -> getTotalPrice
    void setTotalPrice(int) -> setTotalPrice
    java.lang.String getDesc() -> getDesc
    void setDesc(java.lang.String) -> setDesc
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    int getPerKMPrice() -> getPerKMPrice
    void setPerKMPrice(int) -> setPerKMPrice
com.baidu.mapapi.search.core.VehicleInfo -> com.baidu.mapapi.search.core.VehicleInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    int getPassStationNum() -> getPassStationNum
    void setPassStationNum(int) -> setPassStationNum
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    int getZonePrice() -> getZonePrice
    void setZonePrice(int) -> setZonePrice
    int getTotalPrice() -> getTotalPrice
    void setTotalPrice(int) -> setTotalPrice
com.baidu.mapapi.search.geocode.GeoCodeOption -> com.baidu.mapapi.search.geocode.GeoCodeOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.geocode.GeoCodeOption city(java.lang.String) -> city
    com.baidu.mapapi.search.geocode.GeoCodeOption address(java.lang.String) -> address
com.baidu.mapapi.search.geocode.GeoCodeResult -> com.baidu.mapapi.search.geocode.GeoCodeResult:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void a(com.baidu.mapapi.model.LatLng) -> a
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
com.baidu.mapapi.search.geocode.GeoCoder -> com.baidu.mapapi.search.geocode.GeoCoder:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.geocode.GeoCoder newInstance() -> newInstance
    boolean geocode(com.baidu.mapapi.search.geocode.GeoCodeOption) -> geocode
    boolean reverseGeoCode(com.baidu.mapapi.search.geocode.ReverseGeoCodeOption) -> reverseGeoCode
    void setOnGetGeoCodeResultListener(com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener) -> setOnGetGeoCodeResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.geocode.GeoCoder) -> a
    com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener b(com.baidu.mapapi.search.geocode.GeoCoder) -> b
    int c(com.baidu.mapapi.search.geocode.GeoCoder) -> c
com.baidu.mapapi.search.geocode.GeoCoder$1 -> com.baidu.mapapi.search.geocode.GeoCoder$1:
com.baidu.mapapi.search.geocode.GeoCoder$a -> com.baidu.mapapi.search.geocode.GeoCoder$a:
    com.baidu.mapapi.search.geocode.GeoCoder a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener -> com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener:
    void onGetGeoCodeResult(com.baidu.mapapi.search.geocode.GeoCodeResult) -> onGetGeoCodeResult
    void onGetReverseGeoCodeResult(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult) -> onGetReverseGeoCodeResult
com.baidu.mapapi.search.geocode.ReverseGeoCodeOption -> com.baidu.mapapi.search.geocode.ReverseGeoCodeOption:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.search.geocode.ReverseGeoCodeOption location(com.baidu.mapapi.model.LatLng) -> location
com.baidu.mapapi.search.geocode.ReverseGeoCodeResult -> com.baidu.mapapi.search.geocode.ReverseGeoCodeResult:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent c -> c
    com.baidu.mapapi.model.LatLng d -> d
    java.util.List e -> e
    java.lang.String getBusinessCircle() -> getBusinessCircle
    void a(java.lang.String) -> a
    java.lang.String getAddress() -> getAddress
    void b(java.lang.String) -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent getAddressDetail() -> getAddressDetail
    void a(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent) -> a
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void a(com.baidu.mapapi.model.LatLng) -> a
    java.util.List getPoiList() -> getPoiList
    void a(java.util.List) -> a
com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent -> com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent:
    java.lang.String streetNumber -> streetNumber
    java.lang.String street -> street
    java.lang.String district -> district
    java.lang.String city -> city
    java.lang.String province -> province
com.baidu.mapapi.search.geocode.a -> com.baidu.mapapi.search.geocode.a:
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult a(java.lang.String) -> a
    com.baidu.mapapi.search.geocode.GeoCodeResult b(java.lang.String) -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent a(org.json.JSONObject,java.lang.String) -> a
    com.baidu.mapapi.model.LatLng b(org.json.JSONObject,java.lang.String) -> b
    java.util.List c(org.json.JSONObject,java.lang.String) -> c
com.baidu.mapapi.search.poi.ImageUtil -> com.baidu.mapapi.search.poi.ImageUtil:
    android.content.Context a -> a
    java.util.HashMap b -> b
    boolean c -> c
    int d -> d
    boolean e -> e
    byte f -> f
    java.lang.String g -> g
    int h -> h
    void a(android.content.Context) -> a
    void a(int,int,java.lang.String,com.baidu.mapapi.search.poi.ImageUtil$ImageListener) -> a
    java.net.HttpURLConnection a(java.lang.String) -> a
    void a() -> a
    void a(android.net.NetworkInfo,boolean) -> a
com.baidu.mapapi.search.poi.ImageUtil$ImageListener -> com.baidu.mapapi.search.poi.ImageUtil$ImageListener:
    void onOk(int,int,java.lang.String,java.lang.Object) -> onOk
    void onError(int,int,java.lang.String,java.lang.Object) -> onError
com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener -> com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener:
    void onGetPoiResult(com.baidu.mapapi.search.poi.PoiResult) -> onGetPoiResult
    void onGetPoiDetailResult(com.baidu.mapapi.search.poi.PoiDetailResult) -> onGetPoiDetailResult
com.baidu.mapapi.search.poi.PlaceCaterActivity -> com.baidu.mapapi.search.poi.PlaceCaterActivity:
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    android.widget.TextView a -> a
    android.widget.TextView b -> b
    android.widget.ImageView c -> c
    boolean d -> d
    android.widget.LinearLayout e -> e
    android.widget.TextView f -> f
    android.widget.TextView g -> g
    android.widget.TextView h -> h
    android.widget.TextView i -> i
    android.widget.TextView j -> j
    android.widget.TextView k -> k
    android.widget.TextView l -> l
    android.widget.TextView m -> m
    android.widget.LinearLayout n -> n
    android.util.DisplayMetrics o -> o
    com.baidu.mapapi.search.poi.g p -> p
    java.util.Hashtable q -> q
    android.os.Handler r -> r
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void a(com.baidu.mapapi.search.poi.g) -> a
    void a(float) -> a
    void a(android.util.DisplayMetrics) -> a
    android.graphics.Bitmap a(java.lang.String) -> a
    void a(android.widget.LinearLayout,java.util.List) -> a
    boolean isShow() -> isShow
    void onError(int,int,java.lang.String,java.lang.Object) -> onError
    void onOk(int,int,java.lang.String,java.lang.Object) -> onOk
com.baidu.mapapi.search.poi.PoiBoundSearchOption -> com.baidu.mapapi.search.poi.PoiBoundSearchOption:
    com.baidu.mapapi.model.LatLngBounds a -> a
    java.lang.String b -> b
    float c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.poi.PoiBoundSearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiBoundSearchOption bound(com.baidu.mapapi.model.LatLngBounds) -> bound
    com.baidu.mapapi.search.poi.PoiBoundSearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiBoundSearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiCitySearchOption -> com.baidu.mapapi.search.poi.PoiCitySearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    float c -> c
    com.baidu.mapapi.model.LatLng d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiCitySearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.poi.PoiCitySearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiCitySearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiCitySearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiDetailResult -> com.baidu.mapapi.search.poi.PoiDetailResult:
com.baidu.mapapi.search.poi.PoiDetailSearchOption -> com.baidu.mapapi.search.poi.PoiDetailSearchOption:
    java.lang.String a -> a
    com.baidu.mapapi.search.poi.PoiDetailSearchOption poiUid(java.lang.String) -> poiUid
com.baidu.mapapi.search.poi.PoiNearbySearchOption -> com.baidu.mapapi.search.poi.PoiNearbySearchOption:
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    int c -> c
    float d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiNearbySearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiNearbySearchOption location(com.baidu.mapapi.model.LatLng) -> location
    com.baidu.mapapi.search.poi.PoiNearbySearchOption radius(int) -> radius
    com.baidu.mapapi.search.poi.PoiNearbySearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiNearbySearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiResult -> com.baidu.mapapi.search.poi.PoiResult:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    java.util.List e -> e
    java.util.List f -> f
    int getCurrentPageNum() -> getCurrentPageNum
    void a(int) -> a
    int getTotalPageNum() -> getTotalPageNum
    void b(int) -> b
    int getCurrentPageCapacity() -> getCurrentPageCapacity
    void c(int) -> c
    int getTotalPoiNum() -> getTotalPoiNum
    void d(int) -> d
    java.util.List getAllPoi() -> getAllPoi
    void a(java.util.List) -> a
    java.util.List getSuggestCityList() -> getSuggestCityList
    void b(java.util.List) -> b
com.baidu.mapapi.search.poi.PoiSearch -> com.baidu.mapapi.search.poi.PoiSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiSearch newInstance() -> newInstance
    void setOnGetPoiSearchResultListener(com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener) -> setOnGetPoiSearchResultListener
    boolean searchInCity(com.baidu.mapapi.search.poi.PoiCitySearchOption) -> searchInCity
    boolean searchNearby(com.baidu.mapapi.search.poi.PoiNearbySearchOption) -> searchNearby
    boolean searchInBound(com.baidu.mapapi.search.poi.PoiBoundSearchOption) -> searchInBound
    boolean searchPoiDetail(com.baidu.mapapi.search.poi.PoiDetailSearchOption) -> searchPoiDetail
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.poi.PoiSearch) -> a
    com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener b(com.baidu.mapapi.search.poi.PoiSearch) -> b
    int c(com.baidu.mapapi.search.poi.PoiSearch) -> c
    int d(com.baidu.mapapi.search.poi.PoiSearch) -> d
com.baidu.mapapi.search.poi.PoiSearch$1 -> com.baidu.mapapi.search.poi.PoiSearch$1:
com.baidu.mapapi.search.poi.PoiSearch$a -> com.baidu.mapapi.search.poi.PoiSearch$a:
    com.baidu.mapapi.search.poi.PoiSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.poi.a -> com.baidu.mapapi.search.poi.a:
    java.lang.String a -> a
    com.baidu.mapapi.search.poi.ImageUtil$ImageListener b -> b
    int c -> c
    int d -> d
    void run() -> run
com.baidu.mapapi.search.poi.b -> com.baidu.mapapi.search.poi.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
com.baidu.mapapi.search.poi.c -> com.baidu.mapapi.search.poi.c:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.search.poi.d -> com.baidu.mapapi.search.poi.d:
    com.baidu.mapapi.search.poi.PlaceCaterActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.search.poi.e -> com.baidu.mapapi.search.poi.e:
    com.baidu.mapapi.search.poi.PlaceCaterActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.search.poi.f -> com.baidu.mapapi.search.poi.f:
    com.baidu.mapapi.search.poi.PlaceCaterActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.search.poi.g -> com.baidu.mapapi.search.poi.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.util.List o -> o
com.baidu.mapapi.search.poi.h -> com.baidu.mapapi.search.poi.h:
    com.baidu.mapapi.search.poi.PoiResult a(java.lang.String,int) -> a
    com.baidu.mapapi.search.poi.PoiResult a(java.lang.String) -> a
    boolean a(java.lang.String,com.baidu.mapapi.search.poi.g) -> a
com.baidu.mapapi.search.poi.i -> com.baidu.mapapi.search.poi.i:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap a() -> a
com.baidu.mapapi.search.route.DrivingRouteLine -> com.baidu.mapapi.search.route.DrivingRouteLine:
    boolean a -> a
    java.util.List b -> b
    boolean isSupportTraffic() -> isSupportTraffic
    void a(boolean) -> a
    java.util.List getWayPoints() -> getWayPoints
    void a(java.util.List) -> a
com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep -> com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep:
    int c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    java.util.List getWayPoints() -> getWayPoints
    int getDirection() -> getDirection
    void a(int) -> a
    com.baidu.mapapi.search.core.RouteNode getEntrace() -> getEntrace
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    void a(java.lang.String) -> a
    java.lang.String getEntraceInstructions() -> getEntraceInstructions
    void b(java.lang.String) -> b
    java.lang.String getExitInstructions() -> getExitInstructions
    void c(java.lang.String) -> c
    java.lang.String getInstructions() -> getInstructions
    void d(java.lang.String) -> d
    int getNumTurns() -> getNumTurns
    void b(int) -> b
com.baidu.mapapi.search.route.DrivingRoutePlanOption -> com.baidu.mapapi.search.route.DrivingRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy c -> c
    java.util.List d -> d
    com.baidu.mapapi.search.route.DrivingRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.DrivingRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
    com.baidu.mapapi.search.route.DrivingRoutePlanOption passBy(java.util.List) -> passBy
    com.baidu.mapapi.search.route.DrivingRoutePlanOption policy(com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy) -> policy
com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy -> com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy:
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_AVOID_JAM -> ECAR_AVOID_JAM
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_TIME_FIRST -> ECAR_TIME_FIRST
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_DIS_FIRST -> ECAR_DIS_FIRST
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_FEE_FIRST -> ECAR_FEE_FIRST
    int a -> a
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy[] b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy[] values() -> values
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.DrivingRouteResult -> com.baidu.mapapi.search.route.DrivingRouteResult:
    java.util.List a -> a
    com.baidu.mapapi.search.core.TaxiInfo b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    void a(java.util.List) -> a
    java.util.List getRouteLines() -> getRouteLines
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.OnGetRoutePlanResultListener -> com.baidu.mapapi.search.route.OnGetRoutePlanResultListener:
    void onGetWalkingRouteResult(com.baidu.mapapi.search.route.WalkingRouteResult) -> onGetWalkingRouteResult
    void onGetTransitRouteResult(com.baidu.mapapi.search.route.TransitRouteResult) -> onGetTransitRouteResult
    void onGetDrivingRouteResult(com.baidu.mapapi.search.route.DrivingRouteResult) -> onGetDrivingRouteResult
com.baidu.mapapi.search.route.PlanNode -> com.baidu.mapapi.search.route.PlanNode:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.model.LatLng a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    com.baidu.mapapi.search.route.PlanNode withLocation(com.baidu.mapapi.model.LatLng) -> withLocation
    com.baidu.mapapi.search.route.PlanNode withCityNameAndPlaceName(java.lang.String,java.lang.String) -> withCityNameAndPlaceName
com.baidu.mapapi.search.route.RoutePlanSearch -> com.baidu.mapapi.search.route.RoutePlanSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.route.OnGetRoutePlanResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.route.RoutePlanSearch newInstance() -> newInstance
    void setOnGetRoutePlanResultListener(com.baidu.mapapi.search.route.OnGetRoutePlanResultListener) -> setOnGetRoutePlanResultListener
    boolean transitSearch(com.baidu.mapapi.search.route.TransitRoutePlanOption) -> transitSearch
    boolean walkingSearch(com.baidu.mapapi.search.route.WalkingRoutePlanOption) -> walkingSearch
    boolean drivingSearch(com.baidu.mapapi.search.route.DrivingRoutePlanOption) -> drivingSearch
    java.util.ArrayList a(com.baidu.mapapi.search.route.DrivingRoutePlanOption) -> a
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.route.RoutePlanSearch) -> a
    com.baidu.mapapi.search.route.OnGetRoutePlanResultListener b(com.baidu.mapapi.search.route.RoutePlanSearch) -> b
    int c(com.baidu.mapapi.search.route.RoutePlanSearch) -> c
com.baidu.mapapi.search.route.RoutePlanSearch$1 -> com.baidu.mapapi.search.route.RoutePlanSearch$1:
com.baidu.mapapi.search.route.RoutePlanSearch$a -> com.baidu.mapapi.search.route.RoutePlanSearch$a:
    com.baidu.mapapi.search.route.RoutePlanSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.route.SuggestAddrInfo -> com.baidu.mapapi.search.route.SuggestAddrInfo:
    java.util.List a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.util.List getSuggestStartNode() -> getSuggestStartNode
    void a(java.util.List) -> a
    java.util.List getSuggestEndNode() -> getSuggestEndNode
    void b(java.util.List) -> b
    java.util.List getSuggestWpNode() -> getSuggestWpNode
    void c(java.util.List) -> c
    java.util.List getSuggestStartCity() -> getSuggestStartCity
    void d(java.util.List) -> d
    java.util.List getSuggestEndCity() -> getSuggestEndCity
    void e(java.util.List) -> e
    java.util.List getSuggestWpCity() -> getSuggestWpCity
    void f(java.util.List) -> f
com.baidu.mapapi.search.route.TransitRouteLine -> com.baidu.mapapi.search.route.TransitRouteLine:
    com.baidu.mapapi.search.core.TaxiInfo a -> a
    com.baidu.mapapi.search.core.TaxiInfo getTaxitInfo() -> getTaxitInfo
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep -> com.baidu.mapapi.search.route.TransitRouteLine$TransitStep:
    com.baidu.mapapi.search.core.VehicleInfo c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String getInstructions() -> getInstructions
    void a(com.baidu.mapapi.search.core.VehicleInfo) -> a
    void a(java.lang.String) -> a
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType getStepType() -> getStepType
    void a(com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType) -> a
    void b(java.lang.String) -> b
    java.util.List getWayPoints() -> getWayPoints
    com.baidu.mapapi.search.core.RouteNode getEntrace() -> getEntrace
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    com.baidu.mapapi.search.core.VehicleInfo getVehicleInfo() -> getVehicleInfo
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType -> com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType:
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType BUSLINE -> BUSLINE
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType SUBWAY -> SUBWAY
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType WAKLING -> WAKLING
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType[] $VALUES -> $VALUES
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType[] values() -> values
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.route.TransitRoutePlanOption -> com.baidu.mapapi.search.route.TransitRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy d -> d
    com.baidu.mapapi.search.route.TransitRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.TransitRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
    com.baidu.mapapi.search.route.TransitRoutePlanOption city(java.lang.String) -> city
    com.baidu.mapapi.search.route.TransitRoutePlanOption policy(com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy) -> policy
com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy -> com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy:
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_TIME_FIRST -> EBUS_TIME_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_TRANSFER_FIRST -> EBUS_TRANSFER_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_WALK_FIRST -> EBUS_WALK_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_NO_SUBWAY -> EBUS_NO_SUBWAY
    int a -> a
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy[] b -> b
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy[] values() -> values
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.TransitRouteResult -> com.baidu.mapapi.search.route.TransitRouteResult:
    com.baidu.mapapi.search.core.TaxiInfo a -> a
    java.util.List b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    void a(java.util.List) -> a
    java.util.List getRouteLines() -> getRouteLines
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.WalkingRouteLine -> com.baidu.mapapi.search.route.WalkingRouteLine:
    java.util.List getAllStep() -> getAllStep
com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep -> com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep:
    int c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.util.List getWayPoints() -> getWayPoints
    int getDirection() -> getDirection
    void a(int) -> a
    com.baidu.mapapi.search.core.RouteNode getEntrace() -> getEntrace
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    void a(java.lang.String) -> a
    java.lang.String getEntraceInstructions() -> getEntraceInstructions
    void b(java.lang.String) -> b
    java.lang.String getExitInstructions() -> getExitInstructions
    void c(java.lang.String) -> c
    java.lang.String getInstructions() -> getInstructions
    void d(java.lang.String) -> d
com.baidu.mapapi.search.route.WalkingRoutePlanOption -> com.baidu.mapapi.search.route.WalkingRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    com.baidu.mapapi.search.route.WalkingRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.WalkingRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
com.baidu.mapapi.search.route.WalkingRouteResult -> com.baidu.mapapi.search.route.WalkingRouteResult:
    java.util.List a -> a
    com.baidu.mapapi.search.core.TaxiInfo b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    java.util.List getRouteLines() -> getRouteLines
    void a(java.util.List) -> a
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.a -> com.baidu.mapapi.search.route.a:
    com.baidu.mapapi.search.route.TransitRouteResult a(java.lang.String) -> a
    com.baidu.mapapi.search.route.DrivingRouteResult b(java.lang.String) -> b
    com.baidu.mapapi.search.route.WalkingRouteResult c(java.lang.String) -> c
    com.baidu.mapapi.search.core.TaxiInfo d(java.lang.String) -> d
    com.baidu.mapapi.search.core.VehicleInfo e(java.lang.String) -> e
    com.baidu.mapapi.search.core.RouteNode b(org.json.JSONObject,java.lang.String) -> b
    java.util.List c(org.json.JSONObject,java.lang.String) -> c
    com.baidu.mapapi.search.route.SuggestAddrInfo f(java.lang.String) -> f
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
    java.util.List a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
com.baidu.mapapi.search.share.LocationShareURLOption -> com.baidu.mapapi.search.share.LocationShareURLOption:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.share.LocationShareURLOption location(com.baidu.mapapi.model.LatLng) -> location
    com.baidu.mapapi.search.share.LocationShareURLOption name(java.lang.String) -> name
    com.baidu.mapapi.search.share.LocationShareURLOption snippet(java.lang.String) -> snippet
com.baidu.mapapi.search.share.OnGetShareUrlResultListener -> com.baidu.mapapi.search.share.OnGetShareUrlResultListener:
    void onGetPoiDetailShareUrlResult(com.baidu.mapapi.search.share.ShareUrlResult) -> onGetPoiDetailShareUrlResult
    void onGetLocationShareUrlResult(com.baidu.mapapi.search.share.ShareUrlResult) -> onGetLocationShareUrlResult
com.baidu.mapapi.search.share.PoiDetailShareURLOption -> com.baidu.mapapi.search.share.PoiDetailShareURLOption:
    java.lang.String a -> a
    com.baidu.mapapi.search.share.PoiDetailShareURLOption poiUid(java.lang.String) -> poiUid
com.baidu.mapapi.search.share.ShareUrlResult -> com.baidu.mapapi.search.share.ShareUrlResult:
    java.lang.String a -> a
    int b -> b
    java.lang.String getUrl() -> getUrl
    void a(java.lang.String) -> a
    void a(int) -> a
com.baidu.mapapi.search.share.ShareUrlSearch -> com.baidu.mapapi.search.share.ShareUrlSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.share.OnGetShareUrlResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.share.ShareUrlSearch newInstance() -> newInstance
    boolean requestPoiDetailShareUrl(com.baidu.mapapi.search.share.PoiDetailShareURLOption) -> requestPoiDetailShareUrl
    boolean requestLocationShareUrl(com.baidu.mapapi.search.share.LocationShareURLOption) -> requestLocationShareUrl
    void setOnGetShareUrlResultListener(com.baidu.mapapi.search.share.OnGetShareUrlResultListener) -> setOnGetShareUrlResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.share.ShareUrlSearch) -> a
    com.baidu.mapapi.search.share.OnGetShareUrlResultListener b(com.baidu.mapapi.search.share.ShareUrlSearch) -> b
    int c(com.baidu.mapapi.search.share.ShareUrlSearch) -> c
com.baidu.mapapi.search.share.ShareUrlSearch$1 -> com.baidu.mapapi.search.share.ShareUrlSearch$1:
com.baidu.mapapi.search.share.ShareUrlSearch$a -> com.baidu.mapapi.search.share.ShareUrlSearch$a:
    com.baidu.mapapi.search.share.ShareUrlSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.share.a -> com.baidu.mapapi.search.share.a:
    com.baidu.mapapi.search.share.ShareUrlResult a(java.lang.String) -> a
com.baidu.mapapi.search.sug.OnGetSuggestionResultListener -> com.baidu.mapapi.search.sug.OnGetSuggestionResultListener:
    void onGetSuggestionResult(com.baidu.mapapi.search.sug.SuggestionResult) -> onGetSuggestionResult
com.baidu.mapapi.search.sug.SuggestionResult -> com.baidu.mapapi.search.sug.SuggestionResult:
    java.util.ArrayList a -> a
    java.util.List getAllSuggestions() -> getAllSuggestions
    void a(java.util.ArrayList) -> a
com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo -> com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo:
    java.lang.String key -> key
    java.lang.String city -> city
    java.lang.String district -> district
com.baidu.mapapi.search.sug.SuggestionSearch -> com.baidu.mapapi.search.sug.SuggestionSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.sug.OnGetSuggestionResultListener b -> b
    boolean c -> c
    com.baidu.mapapi.search.sug.SuggestionSearch newInstance() -> newInstance
    boolean requestSuggestion(com.baidu.mapapi.search.sug.SuggestionSearchOption) -> requestSuggestion
    void setOnGetSuggestionResultListener(com.baidu.mapapi.search.sug.OnGetSuggestionResultListener) -> setOnGetSuggestionResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.sug.SuggestionSearch) -> a
    com.baidu.mapapi.search.sug.OnGetSuggestionResultListener b(com.baidu.mapapi.search.sug.SuggestionSearch) -> b
com.baidu.mapapi.search.sug.SuggestionSearch$1 -> com.baidu.mapapi.search.sug.SuggestionSearch$1:
com.baidu.mapapi.search.sug.SuggestionSearch$a -> com.baidu.mapapi.search.sug.SuggestionSearch$a:
    com.baidu.mapapi.search.sug.SuggestionSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.sug.SuggestionSearchOption -> com.baidu.mapapi.search.sug.SuggestionSearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.search.sug.SuggestionSearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.sug.SuggestionSearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.sug.SuggestionSearchOption location(com.baidu.mapapi.model.LatLng) -> location
com.baidu.mapapi.search.sug.a -> com.baidu.mapapi.search.sug.a:
    com.baidu.mapapi.search.sug.SuggestionResult a(java.lang.String) -> a
com.baidu.mapapi.utils.CoordinateConverter -> com.baidu.mapapi.utils.CoordinateConverter:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.utils.CoordinateConverter$CoordType b -> b
    com.baidu.mapapi.utils.CoordinateConverter coord(com.baidu.mapapi.model.LatLng) -> coord
    com.baidu.mapapi.utils.CoordinateConverter from(com.baidu.mapapi.utils.CoordinateConverter$CoordType) -> from
    com.baidu.mapapi.model.LatLng convert() -> convert
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.LatLng) -> a
    com.baidu.mapapi.model.LatLng b(com.baidu.mapapi.model.LatLng) -> b
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.LatLng,java.lang.String) -> a
com.baidu.mapapi.utils.CoordinateConverter$1 -> com.baidu.mapapi.utils.CoordinateConverter$1:
    int[] a -> a
com.baidu.mapapi.utils.CoordinateConverter$CoordType -> com.baidu.mapapi.utils.CoordinateConverter$CoordType:
    com.baidu.mapapi.utils.CoordinateConverter$CoordType GPS -> GPS
    com.baidu.mapapi.utils.CoordinateConverter$CoordType COMMON -> COMMON
    com.baidu.mapapi.utils.CoordinateConverter$CoordType[] $VALUES -> $VALUES
    com.baidu.mapapi.utils.CoordinateConverter$CoordType[] values() -> values
    com.baidu.mapapi.utils.CoordinateConverter$CoordType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.utils.DistanceUtil -> com.baidu.mapapi.utils.DistanceUtil:
    double getDistance(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> getDistance
com.baidu.mapapi.utils.PermissionCheck -> com.baidu.mapapi.utils.PermissionCheck:
    java.lang.String a -> a
    android.content.Context b -> b
    java.util.Hashtable c -> c
    com.baidu.lbsapi.auth.e d -> d
    com.baidu.lbsapi.auth.i e -> e
    com.baidu.mapapi.utils.PermissionCheck$c f -> f
    void setPermissionCheckResultListener(com.baidu.mapapi.utils.PermissionCheck$c) -> setPermissionCheckResultListener
    void init(android.content.Context) -> init
    int permissionCheck() -> permissionCheck
    void destory() -> destory
    com.baidu.mapapi.utils.PermissionCheck$c a() -> a
com.baidu.mapapi.utils.PermissionCheck$1 -> com.baidu.mapapi.utils.PermissionCheck$1:
com.baidu.mapapi.utils.PermissionCheck$a -> com.baidu.mapapi.utils.PermissionCheck$a:
    void a(int,java.lang.String) -> a
com.baidu.mapapi.utils.PermissionCheck$b -> com.baidu.mapapi.utils.PermissionCheck$b:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String toString() -> toString
com.baidu.mapapi.utils.PermissionCheck$c -> com.baidu.mapapi.utils.PermissionCheck$c:
    void a(com.baidu.mapapi.utils.PermissionCheck$b) -> a
com.baidu.mapapi.utils.a -> com.baidu.mapapi.utils.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.mapapi.utils.a$a -> com.baidu.mapapi.utils.a$a:
    java.lang.String a(byte[]) -> a
com.baidu.mapapi.utils.b -> com.baidu.mapapi.utils.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.utils.e g -> g
    void a(android.content.Context) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
    int e() -> e
    int f() -> f
com.baidu.mapapi.utils.c -> com.baidu.mapapi.utils.c:
    com.baidu.mapapi.map.offline.MKOLSearchRecord a(com.baidu.platform.comapi.map.k) -> a
    com.baidu.mapapi.map.offline.MKOLUpdateElement a(com.baidu.platform.comapi.map.n) -> a
com.baidu.mapapi.utils.d -> com.baidu.mapapi.utils.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean equals(java.lang.Object) -> equals
com.baidu.mapapi.utils.e -> com.baidu.mapapi.utils.e:
    com.baidu.mapapi.utils.e a -> a
    boolean b -> b
    boolean c -> c
    java.util.List d -> d
    com.baidu.mapapi.utils.d e -> e
    java.lang.String f -> f
    com.baidu.mapapi.utils.e a() -> a
    void a(android.content.Context) -> a
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    com.baidu.mapapi.utils.d b() -> b
    com.baidu.mapapi.utils.d b(android.content.Context) -> b
    boolean a(android.content.Context,com.baidu.mapapi.utils.d) -> a
    boolean a(java.lang.String) -> a
com.baidu.platform.comapi.a -> com.baidu.platform.comapi.a:
    java.lang.String a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
com.baidu.platform.comapi.a.a -> com.baidu.platform.comapi.a.a:
    int a -> a
    com.baidu.platform.comapi.a.d b -> b
    com.baidu.platform.comapi.a.d c -> c
    java.util.ArrayList d -> d
com.baidu.platform.comapi.a.b -> com.baidu.platform.comapi.a.b:
    int a -> a
    int b -> b
    int a() -> a
    int b() -> b
    void a(int) -> a
    void b(int) -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.a.c -> com.baidu.platform.comapi.a.c:
    com.baidu.platform.comapi.a.d a -> a
    com.baidu.platform.comapi.a.d b -> b
    void a(com.baidu.platform.comapi.a.d) -> a
    void b(com.baidu.platform.comapi.a.d) -> b
com.baidu.platform.comapi.a.d -> com.baidu.platform.comapi.a.d:
    int a -> a
    int b -> b
    int a() -> a
    void a(int) -> a
    int b() -> b
    void b(int) -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.b.a -> com.baidu.platform.comapi.b.a:
    int a -> a
    com.baidu.platform.comapi.a.d b -> b
    java.lang.String c -> c
    java.lang.String d -> d
com.baidu.platform.comapi.b.b -> com.baidu.platform.comapi.b.b:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.platform.comapi.b.c -> com.baidu.platform.comapi.b.c:
    java.lang.String a -> a
    com.baidu.platform.comapi.b.b b -> b
    com.baidu.platform.comapi.b.d c -> c
    void a(com.baidu.platform.comapi.b.b) -> a
    void a() -> a
    void a(com.baidu.platform.comapi.b.d) -> a
    void a(android.os.Message) -> a
com.baidu.platform.comapi.b.d -> com.baidu.platform.comapi.b.d:
    java.lang.String a -> a
    com.baidu.platform.comjni.map.search.a b -> b
    int c -> c
    com.baidu.platform.comapi.b.c d -> d
    android.os.Handler e -> e
    int f -> f
    android.os.Bundle g -> g
    void a(com.baidu.platform.comapi.b.b) -> a
    void a() -> a
    void a(int) -> a
    boolean a(java.lang.String,java.lang.String,int,com.baidu.platform.comapi.a.c,int,java.util.Map) -> a
    boolean a(java.lang.String,int,int,int,com.baidu.platform.comapi.a.c,com.baidu.platform.comapi.a.c,java.util.Map) -> a
    boolean a(java.lang.String,int,int,com.baidu.platform.comapi.a.c,int,com.baidu.platform.comapi.a.d,java.util.Map) -> a
    android.os.Bundle a(com.baidu.platform.comapi.b.a) -> a
    boolean a(com.baidu.platform.comapi.b.a,com.baidu.platform.comapi.b.a,java.lang.String,com.baidu.platform.comapi.a.c,int,int,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.b.a,com.baidu.platform.comapi.b.a,java.lang.String,java.lang.String,java.lang.String,com.baidu.platform.comapi.a.c,int,int,int,java.util.ArrayList,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.b.a,com.baidu.platform.comapi.b.a,java.lang.String,java.lang.String,java.lang.String,com.baidu.platform.comapi.a.c,int,java.util.Map) -> a
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,int,java.lang.String,com.baidu.platform.comapi.a.c,int,com.baidu.platform.comapi.a.d) -> a
    boolean a(com.baidu.platform.comapi.a.d) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(com.baidu.platform.comapi.a.d,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    java.lang.String b(int) -> b
    android.os.Bundle b() -> b
    int a(com.baidu.platform.comapi.b.d) -> a
    com.baidu.platform.comapi.b.c b(com.baidu.platform.comapi.b.d) -> b
com.baidu.platform.comapi.b.e -> com.baidu.platform.comapi.b.e:
    com.baidu.platform.comapi.b.d a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.b.f -> com.baidu.platform.comapi.b.f:
    com.baidu.platform.comapi.a.d a -> a
    java.lang.String b -> b
    java.lang.String c -> c
com.baidu.platform.comapi.c.a -> com.baidu.platform.comapi.c.a:
    org.json.JSONObject b -> b
    com.baidu.platform.comjni.base.userdatacollect.a c -> c
    com.baidu.platform.comapi.c.a a -> a
    com.baidu.platform.comapi.c.a a() -> a
    boolean e() -> e
    void a(java.lang.String,java.lang.String) -> a
    void b() -> b
    boolean c() -> c
    android.os.Bundle f() -> f
    void a(java.lang.String) -> a
    void d() -> d
com.baidu.platform.comapi.d.a -> com.baidu.platform.comapi.d.a:
    void a(java.lang.String,java.lang.String) -> a
com.baidu.platform.comapi.d.b -> com.baidu.platform.comapi.d.b:
    boolean a -> a
    java.lang.String b -> b
    int c -> c
    void a(android.content.Context) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean a(android.net.NetworkInfo) -> a
com.baidu.platform.comapi.d.c -> com.baidu.platform.comapi.d.c:
    java.lang.String G -> G
    com.baidu.platform.comjni.map.commonmemcache.a a -> a
    com.baidu.platform.comjni.base.networkdetect.a b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    android.content.Context C -> C
    int D -> D
    float E -> E
    boolean H -> H
    int I -> I
    int J -> J
    java.lang.String F -> F
    void e(android.content.Context) -> e
    void f(android.content.Context) -> f
    void g(android.content.Context) -> g
    void h(android.content.Context) -> h
    void i(android.content.Context) -> i
    java.lang.String a(android.content.Context) -> a
    byte[] b(android.content.Context) -> b
    java.lang.String j(android.content.Context) -> j
    java.lang.String a() -> a
    java.lang.String k(android.content.Context) -> k
    void l(android.content.Context) -> l
    void c(android.content.Context) -> c
    void b() -> b
    void d(android.content.Context) -> d
    android.os.Bundle c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void a(java.lang.String) -> a
    java.lang.String g() -> g
    void h() -> h
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String i() -> i
    int j() -> j
    java.lang.String k() -> k
    int l() -> l
    java.lang.String m() -> m
    int n() -> n
    int o() -> o
    int p() -> p
    java.lang.String q() -> q
    java.lang.String r() -> r
    java.lang.String s() -> s
    java.lang.String t() -> t
    java.lang.String u() -> u
com.baidu.platform.comapi.map.MapRenderer -> com.baidu.platform.comapi.map.MapRenderer:
    java.lang.String d -> d
    int e -> e
    com.baidu.platform.comapi.map.MapRenderer$a f -> f
    java.lang.ref.WeakReference g -> g
    int a -> a
    int b -> b
    int c -> c
    void nativeInit(int) -> nativeInit
    void nativeResize(int,int,int) -> nativeResize
    int nativeRender(int) -> nativeRender
    void a(int) -> a
    boolean a() -> a
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void a(javax.microedition.khronos.opengles.GL10) -> a
com.baidu.platform.comapi.map.MapRenderer$a -> com.baidu.platform.comapi.map.MapRenderer$a:
    void n() -> n
com.baidu.platform.comapi.map.a -> com.baidu.platform.comapi.map.a:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
com.baidu.platform.comapi.map.b -> com.baidu.platform.comapi.map.b:
com.baidu.platform.comapi.map.c -> com.baidu.platform.comapi.map.c:
com.baidu.platform.comapi.map.d -> com.baidu.platform.comapi.map.d:
    com.baidu.platform.comapi.map.d a -> a
    com.baidu.platform.comapi.map.d b -> b
    com.baidu.platform.comapi.map.d c -> c
    com.baidu.platform.comapi.map.d d -> d
    com.baidu.platform.comapi.map.d e -> e
    com.baidu.platform.comapi.map.d f -> f
    com.baidu.platform.comapi.map.d g -> g
    com.baidu.platform.comapi.map.d h -> h
    com.baidu.platform.comapi.map.d i -> i
    com.baidu.platform.comapi.map.d j -> j
    com.baidu.platform.comapi.map.d[] k -> k
    com.baidu.platform.comapi.map.d[] values() -> values
    com.baidu.platform.comapi.map.d valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.e -> com.baidu.platform.comapi.map.e:
    java.lang.String c -> c
    float a -> a
    float b -> b
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    android.content.Context l -> l
    com.baidu.platform.comapi.map.MapRenderer m -> m
    java.util.List n -> n
    com.baidu.platform.comjni.map.basemap.a o -> o
    int p -> p
    android.os.Handler q -> q
    java.util.List r -> r
    com.baidu.platform.comapi.map.r s -> s
    com.baidu.platform.comapi.map.c t -> t
    com.baidu.platform.comapi.map.h u -> u
    com.baidu.platform.comapi.map.y v -> v
    com.baidu.platform.comapi.map.w w -> w
    boolean x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    com.baidu.platform.comapi.map.e$a C -> C
    android.view.VelocityTracker D -> D
    android.view.GestureDetector E -> E
    long F -> F
    long G -> G
    long H -> H
    long I -> I
    int J -> J
    float K -> K
    float L -> L
    boolean M -> M
    long N -> N
    long O -> O
    boolean P -> P
    boolean Q -> Q
    void o() -> o
    void p() -> p
    void q() -> q
    void a(com.baidu.platform.comapi.map.t) -> a
    void r() -> r
    void s() -> s
    void a() -> a
    void a(com.baidu.platform.comapi.map.a) -> a
    void t() -> t
    boolean b() -> b
    void a(boolean) -> a
    boolean c() -> c
    void b(boolean) -> b
    void c(boolean) -> c
    boolean d() -> d
    void d(boolean) -> d
    boolean e() -> e
    void e(boolean) -> e
    boolean f() -> f
    void a(java.lang.String,android.os.Bundle) -> a
    boolean g() -> g
    void f(boolean) -> f
    void g(boolean) -> g
    boolean h() -> h
    void h(boolean) -> h
    boolean i() -> i
    void i(boolean) -> i
    boolean j() -> j
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void k() -> k
    void a(com.baidu.platform.comapi.map.g) -> a
    void a(com.baidu.platform.comapi.map.u) -> a
    void a(com.baidu.platform.comapi.map.u,int) -> a
    com.baidu.platform.comapi.map.u l() -> l
    void a(java.lang.String) -> a
    float a(int,int,int,int) -> a
    float a(int,int,int,int,int,int) -> a
    com.baidu.platform.comapi.a.b a(int,int) -> a
    android.graphics.Point a(com.baidu.platform.comapi.a.b) -> a
    void m() -> m
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
    void c(android.os.Bundle) -> c
    void d(android.os.Bundle) -> d
    int a(int,int,int) -> a
    void n() -> n
    int a(android.os.Bundle,int,int) -> a
    boolean a(int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean a(android.view.MotionEvent) -> a
    void b(android.view.MotionEvent) -> b
    boolean c(android.view.MotionEvent) -> c
    boolean d(android.view.MotionEvent) -> d
    void u() -> u
    boolean b(int,int) -> b
    void v() -> v
    void w() -> w
    void x() -> x
    void y() -> y
    com.baidu.platform.comjni.map.basemap.a a(com.baidu.platform.comapi.map.e) -> a
    int b(com.baidu.platform.comapi.map.e) -> b
    java.util.List c(com.baidu.platform.comapi.map.e) -> c
    int d(com.baidu.platform.comapi.map.e) -> d
    int e(com.baidu.platform.comapi.map.e) -> e
    void f(com.baidu.platform.comapi.map.e) -> f
    void g(com.baidu.platform.comapi.map.e) -> g
    boolean h(com.baidu.platform.comapi.map.e) -> h
    boolean a(com.baidu.platform.comapi.map.e,boolean) -> a
    boolean i(com.baidu.platform.comapi.map.e) -> i
    boolean j(com.baidu.platform.comapi.map.e) -> j
com.baidu.platform.comapi.map.e$a -> com.baidu.platform.comapi.map.e$a:
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean e -> e
    float f -> f
    float g -> g
    double h -> h
com.baidu.platform.comapi.map.f -> com.baidu.platform.comapi.map.f:
    com.baidu.platform.comapi.map.e a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.g -> com.baidu.platform.comapi.map.g:
    void a() -> a
    void a(com.baidu.platform.comapi.map.u) -> a
    void b(com.baidu.platform.comapi.map.u) -> b
    void c(com.baidu.platform.comapi.map.u) -> c
    void a(com.baidu.platform.comapi.a.b) -> a
    void a(java.lang.String) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
com.baidu.platform.comapi.map.h -> com.baidu.platform.comapi.map.h:
com.baidu.platform.comapi.map.i -> com.baidu.platform.comapi.map.i:
com.baidu.platform.comapi.map.j -> com.baidu.platform.comapi.map.j:
com.baidu.platform.comapi.map.k -> com.baidu.platform.comapi.map.k:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    java.util.ArrayList e -> e
    void a(java.util.ArrayList) -> a
    java.util.ArrayList a() -> a
com.baidu.platform.comapi.map.l -> com.baidu.platform.comapi.map.l:
    java.lang.String a -> a
    com.baidu.platform.comjni.map.basemap.a b -> b
    com.baidu.platform.comapi.map.l c -> c
    com.baidu.platform.comapi.map.q d -> d
    android.os.Handler e -> e
    com.baidu.platform.comapi.map.l a() -> a
    void g() -> g
    void h() -> h
    void b() -> b
    void a(com.baidu.platform.comapi.map.p) -> a
    void b(com.baidu.platform.comapi.map.p) -> b
    boolean a(int) -> a
    boolean b(int) -> b
    boolean c(int) -> c
    boolean d(int) -> d
    boolean e(int) -> e
    boolean a(boolean) -> a
    java.util.ArrayList c() -> c
    java.util.ArrayList d() -> d
    java.util.ArrayList a(java.lang.String) -> a
    com.baidu.platform.comapi.map.o f(int) -> f
    java.util.ArrayList e() -> e
    com.baidu.platform.comapi.map.l f() -> f
    com.baidu.platform.comapi.map.q a(com.baidu.platform.comapi.map.l) -> a
com.baidu.platform.comapi.map.m -> com.baidu.platform.comapi.map.m:
    com.baidu.platform.comapi.map.l a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.n -> com.baidu.platform.comapi.map.n:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.platform.comapi.a.d g -> g
    int h -> h
    int i -> i
    boolean j -> j
    int k -> k
    int l -> l
com.baidu.platform.comapi.map.o -> com.baidu.platform.comapi.map.o:
    com.baidu.platform.comapi.map.n a -> a
    void a(com.baidu.platform.comapi.map.n) -> a
    com.baidu.platform.comapi.map.n a() -> a
com.baidu.platform.comapi.map.p -> com.baidu.platform.comapi.map.p:
    void a(int,int) -> a
com.baidu.platform.comapi.map.q -> com.baidu.platform.comapi.map.q:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.p b -> b
    void a(com.baidu.platform.comapi.map.p) -> a
    void b(com.baidu.platform.comapi.map.p) -> b
    void a(android.os.Message) -> a
com.baidu.platform.comapi.map.r -> com.baidu.platform.comapi.map.r:
com.baidu.platform.comapi.map.s -> com.baidu.platform.comapi.map.s:
    com.baidu.platform.comapi.map.s a -> a
    com.baidu.platform.comapi.map.s b -> b
    com.baidu.platform.comapi.map.s c -> c
    int d -> d
    com.baidu.platform.comapi.map.s[] e -> e
    com.baidu.platform.comapi.map.s[] values() -> values
    com.baidu.platform.comapi.map.s valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.t -> com.baidu.platform.comapi.map.t:
    com.baidu.platform.comapi.map.u a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.baidu.platform.comapi.map.t a(com.baidu.platform.comapi.map.u) -> a
    com.baidu.platform.comapi.map.t a(boolean) -> a
    com.baidu.platform.comapi.map.t a(int) -> a
    com.baidu.platform.comapi.map.t b(boolean) -> b
    com.baidu.platform.comapi.map.t c(boolean) -> c
    com.baidu.platform.comapi.map.t d(boolean) -> d
    com.baidu.platform.comapi.map.t e(boolean) -> e
com.baidu.platform.comapi.map.u -> com.baidu.platform.comapi.map.u:
    float a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    long h -> h
    long i -> i
    com.baidu.platform.comapi.map.u$b j -> j
    com.baidu.platform.comapi.map.u$a k -> k
    boolean l -> l
    double m -> m
    int n -> n
    java.lang.String o -> o
    float p -> p
    boolean q -> q
    int r -> r
    void a(android.os.Bundle) -> a
    android.os.Bundle a(com.baidu.platform.comapi.map.e) -> a
com.baidu.platform.comapi.map.u$a -> com.baidu.platform.comapi.map.u$a:
    long a -> a
    long b -> b
    long c -> c
    long d -> d
    com.baidu.platform.comapi.a.d e -> e
    com.baidu.platform.comapi.a.d f -> f
    com.baidu.platform.comapi.a.d g -> g
    com.baidu.platform.comapi.a.d h -> h
    com.baidu.platform.comapi.map.u i -> i
com.baidu.platform.comapi.map.u$b -> com.baidu.platform.comapi.map.u$b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    com.baidu.platform.comapi.map.u e -> e
com.baidu.platform.comapi.map.v -> com.baidu.platform.comapi.map.v:
com.baidu.platform.comapi.map.w -> com.baidu.platform.comapi.map.w:
    com.baidu.platform.comjni.map.basemap.a a -> a
    com.baidu.platform.comapi.a.b a(int,int) -> a
    android.graphics.Point a(com.baidu.platform.comapi.a.b) -> a
com.baidu.platform.comapi.map.x -> com.baidu.platform.comapi.map.x:
    java.lang.String h -> h
    android.os.Bundle e -> e
    java.lang.String f -> f
    int g -> g
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    android.os.Bundle b() -> b
    void a(android.os.Bundle) -> a
com.baidu.platform.comapi.map.y -> com.baidu.platform.comapi.map.y:
com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect -> com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect:
    int Create() -> Create
com.baidu.platform.comjni.base.networkdetect.a -> com.baidu.platform.comjni.base.networkdetect.a:
    int a -> a
    com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect b -> b
    int a() -> a
com.baidu.platform.comjni.base.userdatacollect.JNIUserdataCollect -> com.baidu.platform.comjni.base.userdatacollect.JNIUserdataCollect:
    int Create() -> Create
    int Release(int) -> Release
    boolean CreateUDC(int,java.lang.String,android.os.Bundle) -> CreateUDC
    void AppendRecord(int,java.lang.String,java.lang.String) -> AppendRecord
    void Save(int) -> Save
com.baidu.platform.comjni.base.userdatacollect.a -> com.baidu.platform.comjni.base.userdatacollect.a:
    int a -> a
    com.baidu.platform.comjni.base.userdatacollect.JNIUserdataCollect b -> b
    int a() -> a
    int b() -> b
    boolean a(java.lang.String,android.os.Bundle) -> a
    void a(java.lang.String,java.lang.String) -> a
    void c() -> c
com.baidu.platform.comjni.engine.AppEngine -> com.baidu.platform.comjni.engine.AppEngine:
    void despatchMessage(int,int,int,int) -> despatchMessage
    void InitClass() -> InitClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.JNIEngine -> com.baidu.platform.comjni.engine.JNIEngine:
    int initClass(java.lang.Object,int) -> initClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.a -> com.baidu.platform.comjni.engine.a:
    java.lang.String a -> a
    android.util.SparseArray b -> b
    void a(int,android.os.Handler) -> a
    void b(int,android.os.Handler) -> b
    void a(int,int,int,int) -> a
    void a() -> a
com.baidu.platform.comjni.map.basemap.BaseMapCallback -> com.baidu.platform.comjni.map.basemap.BaseMapCallback:
    android.util.SparseArray a -> a
    void addLayerDataInterface(int,com.baidu.platform.comjni.map.basemap.b) -> addLayerDataInterface
    void removeLayerDataInterface(int) -> removeLayerDataInterface
    int ReqLayerData(android.os.Bundle,int,int) -> ReqLayerData
com.baidu.platform.comjni.map.basemap.JNIBaseMap -> com.baidu.platform.comjni.map.basemap.JNIBaseMap:
    int a -> a
    int Create() -> Create
    int SetCallback(int,com.baidu.platform.comjni.map.basemap.BaseMapCallback) -> SetCallback
    int Release(int) -> Release
    boolean Init(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> Init
    void OnPause(int) -> OnPause
    void OnResume(int) -> OnResume
    void ResetImageRes(int) -> ResetImageRes
    void SetMapStatus(int,android.os.Bundle) -> SetMapStatus
    int SetMapControlMode(int,int) -> SetMapControlMode
    android.os.Bundle GetMapStatus(int) -> GetMapStatus
    float GetZoomToBound(int,android.os.Bundle) -> GetZoomToBound
    void ShowSatelliteMap(int,boolean) -> ShowSatelliteMap
    void ShowTrafficMap(int,boolean) -> ShowTrafficMap
    void ShowLayers(int,int,boolean) -> ShowLayers
    int AddLayer(int,int,int,java.lang.String) -> AddLayer
    void ClearLayer(int,int) -> ClearLayer
    java.lang.String GetNearlyObjID(int,int,int,int,int) -> GetNearlyObjID
    java.lang.String ScrPtToGeoPoint(int,int,int) -> ScrPtToGeoPoint
    java.lang.String GeoPtToScrPoint(int,int,int) -> GeoPtToScrPoint
    void SaveScreenToLocal(int,java.lang.String) -> SaveScreenToLocal
    boolean OnRecordAdd(int,int) -> OnRecordAdd
    boolean OnRecordStart(int,int,boolean,int) -> OnRecordStart
    boolean OnRecordSuspend(int,int,boolean,int) -> OnRecordSuspend
    boolean OnRecordRemove(int,int,boolean) -> OnRecordRemove
    java.lang.String OnRecordGetAll(int) -> OnRecordGetAll
    java.lang.String OnRecordGetAt(int,int) -> OnRecordGetAt
    boolean OnRecordImport(int,boolean) -> OnRecordImport
    java.lang.String OnHotcityGet(int) -> OnHotcityGet
    java.lang.String OnSchcityGet(int,java.lang.String) -> OnSchcityGet
    void addOneOverlayItem(int,android.os.Bundle) -> addOneOverlayItem
    void updateOneOverlayItem(int,android.os.Bundle) -> updateOneOverlayItem
    void removeOneOverlayItem(int,android.os.Bundle) -> removeOneOverlayItem
    void PostStatInfo(int) -> PostStatInfo
    int MapProc(int,int,int,int) -> MapProc
    int CreateDuplicate(int) -> CreateDuplicate
    int[] GetScreenBuf(int,int[]) -> GetScreenBuf
    void enableDrawHouseHeight(int,boolean) -> enableDrawHouseHeight
    boolean isDrawHouseHeightEnable(int) -> isDrawHouseHeightEnable
com.baidu.platform.comjni.map.basemap.a -> com.baidu.platform.comjni.map.basemap.a:
    java.lang.String a -> a
    int b -> b
    com.baidu.platform.comjni.map.basemap.JNIBaseMap c -> c
    java.util.List d -> d
    boolean a() -> a
    boolean b() -> b
    int c() -> c
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> a
    void d() -> d
    void e() -> e
    void f() -> f
    void a(android.os.Bundle) -> a
    int a(int) -> a
    android.os.Bundle g() -> g
    float b(android.os.Bundle) -> b
    void a(boolean) -> a
    void b(boolean) -> b
    void a(int,boolean) -> a
    int a(int,int,java.lang.String) -> a
    void b(int) -> b
    java.lang.String a(int,int,int,int) -> a
    java.lang.String a(int,int) -> a
    java.lang.String b(int,int) -> b
    void a(java.lang.String) -> a
    boolean c(int) -> c
    boolean a(int,boolean,int) -> a
    boolean b(int,boolean,int) -> b
    boolean b(int,boolean) -> b
    java.lang.String h() -> h
    java.lang.String d(int) -> d
    boolean c(boolean) -> c
    java.lang.String i() -> i
    java.lang.String b(java.lang.String) -> b
    void c(android.os.Bundle) -> c
    void d(android.os.Bundle) -> d
    void e(android.os.Bundle) -> e
    void j() -> j
    int b(int,int,int,int) -> b
    int[] a(int[]) -> a
    void d(boolean) -> d
    boolean k() -> k
com.baidu.platform.comjni.map.basemap.b -> com.baidu.platform.comjni.map.basemap.b:
    int a(android.os.Bundle,int,int) -> a
    boolean a(int) -> a
com.baidu.platform.comjni.map.cloud.JniCloud -> com.baidu.platform.comjni.map.cloud.JniCloud:
    int create() -> create
    int release(int) -> release
    java.lang.String getSearchResult(int,int) -> getSearchResult
    void cloudSearch(int,android.os.Bundle) -> cloudSearch
    void cloudDetailSearch(int,android.os.Bundle) -> cloudDetailSearch
com.baidu.platform.comjni.map.cloud.a -> com.baidu.platform.comjni.map.cloud.a:
    java.lang.String a -> a
    int b -> b
    com.baidu.platform.comjni.map.cloud.JniCloud c -> c
    int a() -> a
    int b() -> b
    java.lang.String a(int) -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache -> com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache:
    int Create() -> Create
    int Release(int) -> Release
    void Init(int,android.os.Bundle) -> Init
com.baidu.platform.comjni.map.commonmemcache.a -> com.baidu.platform.comjni.map.commonmemcache.a:
    int a -> a
    com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache b -> b
    int a() -> a
    int b() -> b
    void a(android.os.Bundle) -> a
com.baidu.platform.comjni.map.search.JNISearch -> com.baidu.platform.comjni.map.search.JNISearch:
    int Create() -> Create
    int Release(int) -> Release
    java.lang.String GetSearchResult(int,int) -> GetSearchResult
    boolean ForceSearchByCityName(int,android.os.Bundle) -> ForceSearchByCityName
    boolean AreaSearch(int,android.os.Bundle) -> AreaSearch
    boolean RoutePlanByBus(int,android.os.Bundle) -> RoutePlanByBus
    boolean RoutePlanByCar(int,android.os.Bundle) -> RoutePlanByCar
    boolean RoutePlanByFoot(int,android.os.Bundle) -> RoutePlanByFoot
    boolean POIDetailSearchPlace(int,java.lang.String) -> POIDetailSearchPlace
    boolean BusLineDetailSearch(int,java.lang.String,java.lang.String) -> BusLineDetailSearch
    boolean SuggestionSearch(int,android.os.Bundle) -> SuggestionSearch
    boolean ReverseGeocodeSearch(int,int,int) -> ReverseGeocodeSearch
    boolean geocode(int,java.lang.String,java.lang.String) -> geocode
    boolean PoiRGCShareUrlSearch(int,int,int,java.lang.String,java.lang.String) -> PoiRGCShareUrlSearch
    boolean PoiDetailShareUrlSearch(int,java.lang.String) -> PoiDetailShareUrlSearch
    boolean MapBoundSearch(int,android.os.Bundle) -> MapBoundSearch
com.baidu.platform.comjni.map.search.a -> com.baidu.platform.comjni.map.search.a:
    java.lang.String a -> a
    int b -> b
    com.baidu.platform.comjni.map.search.JNISearch c -> c
    int a() -> a
    int b() -> b
    java.lang.String a(int) -> a
    boolean a(android.os.Bundle) -> a
    boolean b(android.os.Bundle) -> b
    boolean c(android.os.Bundle) -> c
    boolean d(android.os.Bundle) -> d
    boolean e(android.os.Bundle) -> e
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean f(android.os.Bundle) -> f
    boolean a(int,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(int,int,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean g(android.os.Bundle) -> g
com.baidu.platform.comjni.tools.BundleKeySet -> com.baidu.platform.comjni.tools.BundleKeySet:
    java.lang.String[] getBundleKeys(android.os.Bundle) -> getBundleKeys
com.baidu.platform.comjni.tools.JNITools -> com.baidu.platform.comjni.tools.JNITools:
    boolean TransGeoStr2Pt(java.lang.Object) -> TransGeoStr2Pt
    void TransNodeStr2Pt(java.lang.Object) -> TransNodeStr2Pt
    boolean TransGeoStr2ComplexPt(java.lang.Object) -> TransGeoStr2ComplexPt
    void GetDistanceByMC(java.lang.Object) -> GetDistanceByMC
    boolean CoordinateEncryptEx(float,float,java.lang.String,java.lang.Object) -> CoordinateEncryptEx
com.baidu.platform.comjni.tools.ParcelItem -> com.baidu.platform.comjni.tools.ParcelItem:
    android.os.Bundle b -> b
    android.os.Parcelable$Creator a -> a
    void setBundle(android.os.Bundle) -> setBundle
    android.os.Bundle getBundle() -> getBundle
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.baidu.platform.comjni.tools.a -> com.baidu.platform.comjni.tools.a:
    com.baidu.platform.comapi.a.a a(java.lang.String) -> a
    double a(com.baidu.platform.comapi.a.d,com.baidu.platform.comapi.a.d) -> a
com.baidu.platform.comjni.tools.b -> com.baidu.platform.comjni.tools.b:
    com.baidu.platform.comjni.tools.ParcelItem a(android.os.Parcel) -> a
    com.baidu.platform.comjni.tools.ParcelItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.vi.VDeviceAPI -> com.baidu.vi.VDeviceAPI:
    android.os.PowerManager$WakeLock a -> a
    android.content.BroadcastReceiver b -> b
    long getTotalSpace() -> getTotalSpace
    long getFreeSpace() -> getFreeSpace
    long getSdcardTotalSpace() -> getSdcardTotalSpace
    long getSdcardFreeSpace() -> getSdcardFreeSpace
    long getTotalMemory() -> getTotalMemory
    long getAvailableMemory() -> getAvailableMemory
    java.lang.String getOsVersion() -> getOsVersion
    void setupSoftware(java.lang.String) -> setupSoftware
    java.lang.String getModuleFileName() -> getModuleFileName
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getCachePath() -> getCachePath
    java.lang.String getAppVersion() -> getAppVersion
    int getCurrentNetworkType() -> getCurrentNetworkType
    boolean isWifiConnected() -> isWifiConnected
    com.baidu.vi.c getNetworkInfo(int) -> getNetworkInfo
    void setNetworkChangedCallback() -> setNetworkChangedCallback
    void unsetNetworkChangedCallback() -> unsetNetworkChangedCallback
    void onNetworkStateChanged() -> onNetworkStateChanged
    android.net.wifi.ScanResult[] getWifiHotpot() -> getWifiHotpot
    float getSystemMetricsX() -> getSystemMetricsX
    float getSystemMetricsY() -> getSystemMetricsY
    float getScreenDensity() -> getScreenDensity
    int getScreenDensityDpi() -> getScreenDensityDpi
    void setScreenAlwaysOn(boolean) -> setScreenAlwaysOn
    int getScreenBrightness() -> getScreenBrightness
    void makeCall(java.lang.String) -> makeCall
    void sendSMS(java.lang.String,java.lang.String) -> sendSMS
    int sendMMS(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMMS
    void openUrl(java.lang.String) -> openUrl
    java.lang.String getCellId() -> getCellId
    java.lang.String getLac() -> getLac
    java.lang.String getImei() -> getImei
    java.lang.String getImsi() -> getImsi
com.baidu.vi.VMsg -> com.baidu.vi.VMsg:
    java.lang.String a -> a
    android.os.Handler b -> b
    android.os.HandlerThread c -> c
    void init() -> init
    void destroy() -> destroy
    void postMessage(int,int,int,int) -> postMessage
    void OnUserCommand1(int,int,int,int) -> OnUserCommand1
    void a(int,int,int,int) -> a
com.baidu.vi.VMsg$a -> com.baidu.vi.VMsg$a:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.vi.a -> com.baidu.vi.a:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.vi.b -> com.baidu.vi.b:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    android.content.Context a() -> a
com.baidu.vi.c -> com.baidu.vi.c:
    java.lang.String a -> a
    int b -> b
    int c -> c
com.baidu.vi.c$1 -> com.baidu.vi.c$1:
    int[] a -> a
com.charon.pulltorefreshlistview.LoadMoreListView -> com.charon.pulltorefreshlistview.LoadMoreListView:
    java.lang.String TAG -> TAG
    android.view.View mFooterView -> mFooterView
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> mOnScrollListener
    com.charon.pulltorefreshlistview.LoadMoreListView$OnLoadMoreListener mOnLoadMoreListener -> mOnLoadMoreListener
    boolean mIsLoading -> mIsLoading
    int mCurrentScrollState -> mCurrentScrollState
    android.widget.AbsListView$OnScrollListener superOnScrollListener -> superOnScrollListener
    void init(android.content.Context) -> init
    void hideFooterView() -> hideFooterView
    void showFooterView() -> showFooterView
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setOnLoadMoreListener(com.charon.pulltorefreshlistview.LoadMoreListView$OnLoadMoreListener) -> setOnLoadMoreListener
    void onLoadMoreComplete() -> onLoadMoreComplete
    void access$0(com.charon.pulltorefreshlistview.LoadMoreListView,int) -> access$0
    android.widget.AbsListView$OnScrollListener access$1(com.charon.pulltorefreshlistview.LoadMoreListView) -> access$1
    void access$2(com.charon.pulltorefreshlistview.LoadMoreListView) -> access$2
    boolean access$3(com.charon.pulltorefreshlistview.LoadMoreListView) -> access$3
    int access$4(com.charon.pulltorefreshlistview.LoadMoreListView) -> access$4
    void access$5(com.charon.pulltorefreshlistview.LoadMoreListView) -> access$5
    void access$6(com.charon.pulltorefreshlistview.LoadMoreListView,boolean) -> access$6
    com.charon.pulltorefreshlistview.LoadMoreListView$OnLoadMoreListener access$7(com.charon.pulltorefreshlistview.LoadMoreListView) -> access$7
com.charon.pulltorefreshlistview.LoadMoreListView$1 -> com.charon.pulltorefreshlistview.LoadMoreListView$1:
    com.charon.pulltorefreshlistview.LoadMoreListView this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.charon.pulltorefreshlistview.LoadMoreListView$OnLoadMoreListener -> com.charon.pulltorefreshlistview.LoadMoreListView$OnLoadMoreListener:
    void onLoadMore() -> onLoadMore
com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView -> com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView:
    java.lang.String TAG -> TAG
    android.view.View mFooterView -> mFooterView
    android.view.View mLoadView -> mLoadView
    android.widget.Button load_more_btn -> load_more_btn
    android.widget.ProgressBar load_more_pb -> load_more_pb
    android.widget.TextView load_more_tv -> load_more_tv
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> mOnScrollListener
    com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView$OnLoadMoreListener mOnLoadMoreListener -> mOnLoadMoreListener
    boolean mIsLoading -> mIsLoading
    boolean hasMore -> hasMore
    int mCurrentScrollState -> mCurrentScrollState
    android.widget.AbsListView$OnScrollListener superOnScrollListener -> superOnScrollListener
    void init(android.content.Context) -> init
    void hideFooterView() -> hideFooterView
    void showFooterView() -> showFooterView
    void showLoadMoreView() -> showLoadMoreView
    void hideLoadMoreView() -> hideLoadMoreView
    void hideLoadMoreBtn() -> hideLoadMoreBtn
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setOnLoadMoreListener(com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView$OnLoadMoreListener) -> setOnLoadMoreListener
    void onLoadMoreComplete() -> onLoadMoreComplete
    void setHasMore(boolean) -> setHasMore
    void access$0(com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView,int) -> access$0
    android.widget.AbsListView$OnScrollListener access$1(com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView) -> access$1
    void access$2(com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView) -> access$2
    boolean access$3(com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView) -> access$3
    int access$4(com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView) -> access$4
    boolean access$5(com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView) -> access$5
    void access$6(com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView) -> access$6
    void access$7(com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView,boolean) -> access$7
    void access$8(com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView) -> access$8
    com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView$OnLoadMoreListener access$9(com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView) -> access$9
com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView$1 -> com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView$1:
    com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView$LoadMoreListener -> com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView$LoadMoreListener:
    com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView$OnLoadMoreListener -> com.charon.pulltorefreshlistview.PullRefreshAndLoadMoreListView$OnLoadMoreListener:
    void onLoadMore() -> onLoadMore
com.charon.pulltorefreshlistview.PullToRefreshListView -> com.charon.pulltorefreshlistview.PullToRefreshListView:
    int RATIO -> RATIO
    android.view.View mHeader -> mHeader
    android.widget.ImageView iv_arrow -> iv_arrow
    android.widget.ProgressBar pb_refresh -> pb_refresh
    android.widget.TextView tv_title -> tv_title
    android.widget.TextView tv_time -> tv_time
    int mHeaderHeight -> mHeaderHeight
    int downPositionY -> downPositionY
    int currentPositionY -> currentPositionY
    int pullDistance -> pullDistance
    com.charon.pulltorefreshlistview.PullToRefreshListView$State mState -> mState
    android.view.animation.Animation animation -> animation
    android.view.animation.Animation reverseAnimation -> reverseAnimation
    boolean isCanPullToRefresh -> isCanPullToRefresh
    com.charon.pulltorefreshlistview.PullToRefreshListView$OnRefreshListener mOnRefreshListener -> mOnRefreshListener
    boolean isBack -> isBack
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> mOnScrollListener
    void initView(android.content.Context) -> initView
    void measureHeaderView(android.view.View) -> measureHeaderView
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void changeState() -> changeState
    void onRefreshComplete() -> onRefreshComplete
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setOnRefreshListener(com.charon.pulltorefreshlistview.PullToRefreshListView$OnRefreshListener) -> setOnRefreshListener
    android.widget.AbsListView$OnScrollListener access$0(com.charon.pulltorefreshlistview.PullToRefreshListView) -> access$0
    void access$1(com.charon.pulltorefreshlistview.PullToRefreshListView,boolean) -> access$1
com.charon.pulltorefreshlistview.PullToRefreshListView$1 -> com.charon.pulltorefreshlistview.PullToRefreshListView$1:
    com.charon.pulltorefreshlistview.PullToRefreshListView this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.charon.pulltorefreshlistview.PullToRefreshListView$OnRefreshListener -> com.charon.pulltorefreshlistview.PullToRefreshListView$OnRefreshListener:
    void onRefresh() -> onRefresh
com.charon.pulltorefreshlistview.PullToRefreshListView$State -> com.charon.pulltorefreshlistview.PullToRefreshListView$State:
    com.charon.pulltorefreshlistview.PullToRefreshListView$State ORIGNAL -> ORIGNAL
    com.charon.pulltorefreshlistview.PullToRefreshListView$State PULL_TO_REFRESH -> PULL_TO_REFRESH
    com.charon.pulltorefreshlistview.PullToRefreshListView$State REFRESHING -> REFRESHING
    com.charon.pulltorefreshlistview.PullToRefreshListView$State RELEASE_TO_REFRESH -> RELEASE_TO_REFRESH
    com.charon.pulltorefreshlistview.PullToRefreshListView$State[] ENUM$VALUES -> ENUM$VALUES
    com.charon.pulltorefreshlistview.PullToRefreshListView$State[] values() -> values
    com.charon.pulltorefreshlistview.PullToRefreshListView$State valueOf(java.lang.String) -> valueOf
com.charon.pulltorefreshlistview.R -> com.charon.pulltorefreshlistview.R:
com.charon.pulltorefreshlistview.R$drawable -> com.charon.pulltorefreshlistview.R$drawable:
    int about_item_module_bg_n -> about_item_module_bg_n
    int about_item_module_bg_p -> about_item_module_bg_p
    int common_strip_setting_middle2 -> common_strip_setting_middle2
    int ic_launcher -> ic_launcher
    int indicator_arrow -> indicator_arrow
    int loading_logo -> loading_logo
com.charon.pulltorefreshlistview.R$id -> com.charon.pulltorefreshlistview.R$id:
    int iv_arrow -> iv_arrow
    int load_more_btn -> load_more_btn
    int load_more_pb -> load_more_pb
    int load_more_tv -> load_more_tv
    int pb_refresh -> pb_refresh
    int rl_description -> rl_description
    int tv_time -> tv_time
    int tv_title -> tv_title
com.charon.pulltorefreshlistview.R$layout -> com.charon.pulltorefreshlistview.R$layout:
    int load_more -> load_more
    int load_more_footer -> load_more_footer
    int pull_to_refresh_header -> pull_to_refresh_header
com.charon.pulltorefreshlistview.R$string -> com.charon.pulltorefreshlistview.R$string:
    int action_settings -> action_settings
    int app_name -> app_name
    int both -> both
    int hello_world -> hello_world
    int load_more -> load_more
    int pull_refresh -> pull_refresh
    int refreshing -> refreshing
    int release_to_refresh -> release_to_refresh
    int update_time -> update_time
com.charon.pulltorefreshlistview.R$style -> com.charon.pulltorefreshlistview.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
com.foxconn.app.App -> com.foxconn.app.App:
    com.foxconn.app.App mInstance -> mInstance
    com.foxconn.emm.lock.LockPatternUtils mLockPatternUtils -> mLockPatternUtils
    int SHOWREQID -> SHOWREQID
    com.baidu.location.LocationClient mLocClient -> mLocClient
    com.foxconn.lib.download.DownFileDao mDownFileDao -> mDownFileDao
    com.foxconn.app.App$EMMLocationListenner myListener -> myListener
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    com.foxconn.app.App$onLocationReceiveListener locationReceiveListener -> locationReceiveListener
    android.app.ActivityManager activitymgr -> activitymgr
    java.util.List mList -> mList
    android.app.Notification mNotification -> mNotification
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    com.baidu.location.BDLocation bdLocation -> bdLocation
    void onCreate() -> onCreate
    com.foxconn.emm.lock.LockPatternUtils getLockPatternUtils() -> getLockPatternUtils
    com.foxconn.app.App getInstance() -> getInstance
    void addActivity(android.app.Activity) -> addActivity
    void exit() -> exit
    void resetIsCurrentProcessPause() -> resetIsCurrentProcessPause
    boolean isCurrentProcessPause() -> isCurrentProcessPause
    void onLowMemory() -> onLowMemory
    void showNotification(com.foxconn.emm.bean.UpdateInfo) -> showNotification
    void startLoc() -> startLoc
    void stopLoc() -> stopLoc
    com.baidu.location.BDLocation getCurrentLocation() -> getCurrentLocation
    com.foxconn.app.App$onLocationReceiveListener getLocationReceiveListener() -> getLocationReceiveListener
    void setLocationReceiveListener(com.foxconn.app.App$onLocationReceiveListener) -> setLocationReceiveListener
    com.foxconn.lib.download.DownFileDao getmDownFileDao() -> getmDownFileDao
    void setmDownFileDao(com.foxconn.lib.download.DownFileDao) -> setmDownFileDao
    void onNetChange() -> onNetChange
    com.foxconn.app.App$onLocationReceiveListener access$0(com.foxconn.app.App) -> access$0
com.foxconn.app.App$EMMLocationListenner -> com.foxconn.app.a:
    com.foxconn.app.App this$0 -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    void onReceivePoi(com.baidu.location.BDLocation) -> onReceivePoi
com.foxconn.app.App$onLocationReceiveListener -> com.foxconn.app.b:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.foxconn.app.IConnectionStatusCallback -> com.foxconn.app.c:
    void connectionStatusChanged(int,java.lang.String) -> connectionStatusChanged
com.foxconn.app.IMessageReceiveCallback -> com.foxconn.app.d:
    void onMessageReceived(java.lang.String) -> onMessageReceived
com.foxconn.app.R -> com.foxconn.app.e:
com.foxconn.app.R$styleable -> com.foxconn.app.f:
    int[] CirclePageIndicator -> CirclePageIndicator
    int CirclePageIndicator_android_background -> CirclePageIndicator_android_background
    int CirclePageIndicator_android_orientation -> CirclePageIndicator_android_orientation
    int CirclePageIndicator_centered -> CirclePageIndicator_centered
    int CirclePageIndicator_fillColor -> CirclePageIndicator_fillColor
    int CirclePageIndicator_pageColor -> CirclePageIndicator_pageColor
    int CirclePageIndicator_radius -> CirclePageIndicator_radius
    int CirclePageIndicator_snap -> CirclePageIndicator_snap
    int CirclePageIndicator_strokeColor -> CirclePageIndicator_strokeColor
    int CirclePageIndicator_strokeWidth -> CirclePageIndicator_strokeWidth
    int[] LinePageIndicator -> LinePageIndicator
    int LinePageIndicator_android_background -> LinePageIndicator_android_background
    int LinePageIndicator_centered -> LinePageIndicator_centered
    int LinePageIndicator_gapWidth -> LinePageIndicator_gapWidth
    int LinePageIndicator_lineWidth -> LinePageIndicator_lineWidth
    int LinePageIndicator_selectedColor -> LinePageIndicator_selectedColor
    int LinePageIndicator_strokeWidth -> LinePageIndicator_strokeWidth
    int LinePageIndicator_unselectedColor -> LinePageIndicator_unselectedColor
    int[] LockPatternView -> LockPatternView
    int LockPatternView_arrowGreenUp -> LockPatternView_arrowGreenUp
    int LockPatternView_arrowRedUp -> LockPatternView_arrowRedUp
    int LockPatternView_aspect -> LockPatternView_aspect
    int LockPatternView_btnNormal -> LockPatternView_btnNormal
    int LockPatternView_btnTouched -> LockPatternView_btnTouched
    int LockPatternView_circleGreen -> LockPatternView_circleGreen
    int LockPatternView_circleNormal -> LockPatternView_circleNormal
    int LockPatternView_circleRed -> LockPatternView_circleRed
    int LockPatternView_line -> LockPatternView_line
    int[] TitlePageIndicator -> TitlePageIndicator
    int TitlePageIndicator_android_background -> TitlePageIndicator_android_background
    int TitlePageIndicator_android_textColor -> TitlePageIndicator_android_textColor
    int TitlePageIndicator_android_textSize -> TitlePageIndicator_android_textSize
    int TitlePageIndicator_clipPadding -> TitlePageIndicator_clipPadding
    int TitlePageIndicator_footerColor -> TitlePageIndicator_footerColor
    int TitlePageIndicator_footerIndicatorHeight -> TitlePageIndicator_footerIndicatorHeight
    int TitlePageIndicator_footerIndicatorStyle -> TitlePageIndicator_footerIndicatorStyle
    int TitlePageIndicator_footerIndicatorUnderlinePadding -> TitlePageIndicator_footerIndicatorUnderlinePadding
    int TitlePageIndicator_footerLineHeight -> TitlePageIndicator_footerLineHeight
    int TitlePageIndicator_footerPadding -> TitlePageIndicator_footerPadding
    int TitlePageIndicator_linePosition -> TitlePageIndicator_linePosition
    int TitlePageIndicator_selectedBold -> TitlePageIndicator_selectedBold
    int TitlePageIndicator_selectedColor -> TitlePageIndicator_selectedColor
    int TitlePageIndicator_titlePadding -> TitlePageIndicator_titlePadding
    int TitlePageIndicator_topPadding -> TitlePageIndicator_topPadding
    int[] UnderlinePageIndicator -> UnderlinePageIndicator
    int UnderlinePageIndicator_android_background -> UnderlinePageIndicator_android_background
    int UnderlinePageIndicator_fadeDelay -> UnderlinePageIndicator_fadeDelay
    int UnderlinePageIndicator_fadeLength -> UnderlinePageIndicator_fadeLength
    int UnderlinePageIndicator_fades -> UnderlinePageIndicator_fades
    int UnderlinePageIndicator_selectedColor -> UnderlinePageIndicator_selectedColor
    int[] ViewPagerIndicator -> ViewPagerIndicator
    int ViewPagerIndicator_vpiCirclePageIndicatorStyle -> ViewPagerIndicator_vpiCirclePageIndicatorStyle
    int ViewPagerIndicator_vpiIconPageIndicatorStyle -> ViewPagerIndicator_vpiIconPageIndicatorStyle
    int ViewPagerIndicator_vpiLinePageIndicatorStyle -> ViewPagerIndicator_vpiLinePageIndicatorStyle
    int ViewPagerIndicator_vpiTabPageIndicatorStyle -> ViewPagerIndicator_vpiTabPageIndicatorStyle
    int ViewPagerIndicator_vpiTitlePageIndicatorStyle -> ViewPagerIndicator_vpiTitlePageIndicatorStyle
    int ViewPagerIndicator_vpiUnderlinePageIndicatorStyle -> ViewPagerIndicator_vpiUnderlinePageIndicatorStyle
com.foxconn.app.aty.AtyAbout -> com.foxconn.app.aty.AtyAbout:
    java.util.concurrent.ExecutorService updateAppthreads -> updateAppthreads
    com.foxconn.emm.bean.UpdateInfo updatedInfo -> updatedInfo
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void onClick(android.view.View) -> onClick
    void checkUpdate() -> checkUpdate
    void setCheckUpdateTime() -> setCheckUpdateTime
com.foxconn.app.aty.AtyAbout$CheckUpdateVersion -> com.foxconn.app.aty.a:
    com.foxconn.emm.view.UpdateProgress pd -> a
    com.foxconn.emm.bean.UpdateInfo info -> b
    com.foxconn.app.aty.AtyAbout this$0 -> c
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(android.content.Context[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void dismissProgress() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.foxconn.app.aty.AtyAbout$CheckUpdateVersion$1 -> com.foxconn.app.aty.b:
    com.foxconn.app.aty.AtyAbout$CheckUpdateVersion this$1 -> a
    void run() -> run
com.foxconn.app.aty.AtyAboutus -> com.foxconn.app.aty.AtyAboutus:
    void onCreate(android.os.Bundle) -> onCreate
com.foxconn.app.aty.AtyAppLimitMgr -> com.foxconn.app.aty.AtyAppLimitMgr:
    int FLIP_DISTANCE -> FLIP_DISTANCE
    android.view.GestureDetector detector -> detector
    android.widget.FrameLayout lay_black_app -> lay_black_app
    android.widget.FrameLayout lay_white_app -> lay_white_app
    android.widget.FrameLayout lay_limit_app -> lay_limit_app
    android.widget.ImageView img_black_app -> img_black_app
    android.widget.ImageView img_white_app -> img_white_app
    android.widget.ImageView img_limit_app -> img_limit_app
    android.support.v4.app.Fragment black_app_frg -> black_app_frg
    android.support.v4.app.Fragment white_app_frg -> white_app_frg
    android.support.v4.app.Fragment limit_app_frg -> limit_app_frg
    java.util.List messageReceiveListeners -> messageReceiveListeners
    android.content.BroadcastReceiver messageAppMgrrecevier -> messageAppMgrrecevier
    void onCreate(android.os.Bundle) -> onCreate
    void registerOnMessageAppMgrReceiver() -> registerOnMessageAppMgrReceiver
    void unregisterOnMessageAppMgrReceiver() -> unregisterOnMessageAppMgrReceiver
    void initView() -> initView
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void onMessageReceived(java.lang.String) -> onMessageReceived
    android.view.GestureDetector access$0(com.foxconn.app.aty.AtyAppLimitMgr) -> access$0
com.foxconn.app.aty.AtyAppLimitMgr$1 -> com.foxconn.app.aty.c:
    com.foxconn.app.aty.AtyAppLimitMgr this$0 -> a
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onDown(android.view.MotionEvent) -> onDown
com.foxconn.app.aty.AtyAppLimitMgr$2 -> com.foxconn.app.aty.d:
    com.foxconn.app.aty.AtyAppLimitMgr this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.foxconn.app.aty.AtyDLQueue -> com.foxconn.app.aty.AtyDLQueue:
    int FLIP_DISTANCE -> FLIP_DISTANCE
    android.view.GestureDetector detector -> detector
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.foxconn.app.App app -> app
    com.foxconn.lib.download.DownFileDao downFileDao -> downFileDao
    java.util.ArrayList mDownFileList1 -> mDownFileList1
    java.util.ArrayList mDownFileList2 -> mDownFileList2
    java.util.ArrayList mGroupDownFileList -> mGroupDownFileList
    com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter mExpandableListAdapter -> mExpandableListAdapter
    void onCreate(android.os.Bundle) -> onCreate
    void open(com.foxconn.lib.download.DownFile) -> open
    void initDownList() -> initDownList
    void onLowMemory() -> onLowMemory
    void finish() -> finish
    void initView() -> initView
    android.view.GestureDetector access$0(com.foxconn.app.aty.AtyDLQueue) -> access$0
com.foxconn.app.aty.AtyDLQueue$1 -> com.foxconn.app.aty.e:
    com.foxconn.app.aty.AtyDLQueue this$0 -> a
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onDown(android.view.MotionEvent) -> onDown
com.foxconn.app.aty.AtyDLQueue$2 -> com.foxconn.app.aty.f:
    com.foxconn.app.aty.AtyDLQueue this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.foxconn.app.aty.AtyEnroll -> com.foxconn.app.aty.AtyEnroll:
    android.widget.Button button_login -> button_login
    android.widget.Button button_register -> button_register
    android.widget.AutoCompleteTextView edittext_account -> edittext_account
    android.widget.EditText edittext_password -> edittext_password
    android.widget.ImageView button_pwd_clear -> button_pwd_clear
    android.widget.ImageView button_account_clear -> button_account_clear
    int LOGIN_OUT_TIME -> LOGIN_OUT_TIME
    android.widget.AutoCompleteTextView username_et -> username_et
    android.widget.EditText password_et -> password_et
    android.app.Dialog mLoginDialog -> mLoginDialog
    com.foxconn.app.aty.AtyEnroll$ConnectionOutTimeProcess mLoginOutTimeProcess -> mLoginOutTimeProcess
    com.foxconn.emm.service.EMMService mEMMService -> mEMMService
    java.lang.String muserId -> muserId
    java.lang.String mpassword -> mpassword
    android.os.Handler mHandler -> mHandler
    android.content.ServiceConnection mServiceConnection -> mServiceConnection
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onRestart() -> onRestart
    void initView() -> initView
    android.app.Dialog getLoginDialog(android.app.Activity) -> getLoginDialog
    int getScreenWidth(android.app.Activity) -> getScreenWidth
    void onClick(android.view.View) -> onClick
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void bindEMMService() -> bindEMMService
    void unbindEMMService() -> unbindEMMService
    void onLoginClick() -> onLoginClick
    void connectionStatusChanged(int,java.lang.String) -> connectionStatusChanged
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    com.foxconn.app.aty.AtyEnroll$ConnectionOutTimeProcess access$0(com.foxconn.app.aty.AtyEnroll) -> access$0
    android.app.Dialog access$1(com.foxconn.app.aty.AtyEnroll) -> access$1
    void access$2(com.foxconn.app.aty.AtyEnroll,com.foxconn.emm.service.EMMService) -> access$2
    com.foxconn.emm.service.EMMService access$3(com.foxconn.app.aty.AtyEnroll) -> access$3
    android.os.Handler access$4(com.foxconn.app.aty.AtyEnroll) -> access$4
com.foxconn.app.aty.AtyEnroll$1 -> com.foxconn.app.aty.g:
    com.foxconn.app.aty.AtyEnroll this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.foxconn.app.aty.AtyEnroll$2 -> com.foxconn.app.aty.h:
    com.foxconn.app.aty.AtyEnroll this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.foxconn.app.aty.AtyEnroll$ConnectionOutTimeProcess -> com.foxconn.app.aty.i:
    boolean running -> a
    long startTime -> c
    java.lang.Thread thread -> d
    com.foxconn.app.aty.AtyEnroll this$0 -> b
    void run() -> run
    void start() -> a
    void stop() -> b
com.foxconn.app.aty.AtyInfoCenter -> com.foxconn.app.aty.AtyInfoCenter:
    android.widget.FrameLayout lay_notification -> lay_notification
    android.widget.FrameLayout lay_file -> lay_file
    android.widget.FrameLayout lay_pic_web -> lay_pic_web
    android.widget.FrameLayout lay_app -> lay_app
    android.widget.ImageView img_notification -> img_notification
    android.widget.ImageView img_file -> img_file
    android.widget.ImageView img_pic_web -> img_pic_web
    android.widget.ImageView img_app -> img_app
    android.support.v4.app.Fragment notifi_frg -> notifi_frg
    android.support.v4.app.Fragment notifi_calendar_frg -> notifi_calendar_frg
    android.support.v4.app.Fragment file_frg -> file_frg
    android.support.v4.app.Fragment pic_frg -> pic_frg
    android.support.v4.app.Fragment web_frg -> web_frg
    android.support.v4.app.Fragment app_frg -> app_frg
    com.ab.view.titlebar.AbTitleBar mAbTitleBar -> mAbTitleBar
    android.widget.Button notification_btn -> notification_btn
    android.widget.Button calendar_btn -> calendar_btn
    int current_frg -> current_frg
    java.util.List messageReceiveListeners -> messageReceiveListeners
    android.content.BroadcastReceiver messageReceiver -> messageReceiver
    void onCreate(android.os.Bundle) -> onCreate
    void registerOnMessageReceiver() -> registerOnMessageReceiver
    void unregisterOnMessageReceiver() -> unregisterOnMessageReceiver
    void onNewIntent(android.content.Intent) -> onNewIntent
    void initView() -> initView
    void addCenterView(int) -> addCenterView
    void turn(int[]) -> turn
    int[] getCurrentFrgFlag(java.lang.String) -> getCurrentFrgFlag
    void onClick(android.view.View) -> onClick
    void changeFrg(int) -> changeFrg
    void onDestroy() -> onDestroy
    void onMessageReceived(java.lang.String) -> onMessageReceived
com.foxconn.app.aty.AtyLimitApps -> com.foxconn.app.aty.AtyLimitApps:
    android.widget.ImageView iv_app_lock_pwd_icon -> iv_app_lock_pwd_icon
    android.widget.TextView tv_app_lock_pwd_name -> tv_app_lock_pwd_name
    android.widget.TextView et_app_lock_pwd -> et_app_lock_pwd
    java.lang.String packname -> packname
    android.app.ActivityManager manager -> manager
    android.widget.Button forbidden_confirm_btn -> forbidden_confirm_btn
    com.foxconn.emm.bean.LimitListInfo limitListInfo -> limitListInfo
    android.widget.EditText emm_forbidden_limitcontent_type_pwd_et -> emm_forbidden_limitcontent_type_pwd_et
    com.foxconn.app.aty.AtyLimitApps$LimitListConnection limitListConnection -> limitListConnection
    com.foxconn.emm.service.IMonitorService iMonitorService -> iMonitorService
    int errorCount -> errorCount
    com.foxconn.app.aty.AtyLimitApps$HomeWatcherReceiver mHomeKeyReceiver -> mHomeKeyReceiver
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onHomeOrLock() -> onHomeOrLock
    void noconfirm(android.view.View) -> noconfirm
    void registerHomeKeyReceiver(android.content.Context) -> registerHomeKeyReceiver
    void unregisterHomeKeyReceiver(android.content.Context) -> unregisterHomeKeyReceiver
    void onResume() -> onResume
    void onPause() -> onPause
    void killSpecificProcessByPackageName() -> killSpecificProcessByPackageName
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void launchApp(android.content.Context,java.lang.String) -> launchApp
    void access$0(com.foxconn.app.aty.AtyLimitApps,com.foxconn.emm.service.IMonitorService) -> access$0
com.foxconn.app.aty.AtyLimitApps$HomeWatcherReceiver -> com.foxconn.app.aty.j:
    com.foxconn.app.aty.AtyLimitApps this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.foxconn.app.aty.AtyLimitApps$LimitListConnection -> com.foxconn.app.aty.k:
    com.foxconn.app.aty.AtyLimitApps this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.foxconn.app.aty.AtyMain -> com.foxconn.app.aty.AtyMain:
    com.foxconn.lib.residemenu.ResideMenu resideMenu -> resideMenu
    com.foxconn.lib.residemenu.ResideMenuItem menu_safepolicy -> menu_safepolicy
    com.foxconn.lib.residemenu.ResideMenuItem menu_appmgr -> menu_appmgr
    com.foxconn.lib.residemenu.ResideMenuItem menu_trafficmgr -> menu_trafficmgr
    com.foxconn.lib.residemenu.ResideMenuItem menu_infocenter -> menu_infocenter
    com.foxconn.lib.residemenu.ResideMenuItem menu_downloadqueue -> menu_downloadqueue
    com.foxconn.lib.residemenu.ResideMenuInfo info -> info
    boolean is_closed -> is_closed
    long mExitTime -> mExitTime
    android.widget.Button leftMenu -> leftMenu
    android.widget.TextView sys_common_residemenu_locaddress_tv -> sys_common_residemenu_locaddress_tv
    android.widget.TextView sys_common_residemenu_setting_tv -> sys_common_residemenu_setting_tv
    android.widget.ImageView sys_common_residemenu_setting_iv -> sys_common_residemenu_setting_iv
    android.widget.TextView home_userinfo_synctime_tv -> home_userinfo_synctime_tv
    android.widget.TextView home_userinfo_userid_tv -> home_userinfo_userid_tv
    android.widget.TextView home_userinfo_username_tv -> home_userinfo_username_tv
    android.widget.TextView home_detail_userinfo_bg_content_tv -> home_detail_userinfo_bg_content_tv
    android.widget.TextView home_detail_userinfo_phoneno_content_tv -> home_detail_userinfo_phoneno_content_tv
    android.widget.ImageView home_userinfo_headicon_iv -> home_userinfo_headicon_iv
    android.widget.Button title_bar_right_menu_refresh -> title_bar_right_menu_refresh
    com.foxconn.app.App app -> app
    com.foxconn.emm.dao.DBUserInfoHelper dbUserInfoHelper -> dbUserInfoHelper
    com.foxconn.emm.bean.UserInfo userInfo -> userInfo
    com.foxconn.emm.service.ServiceManager serviceManager -> serviceManager
    com.foxconn.lib.residemenu.ResideMenu$OnMenuListener menuListener -> menuListener
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void setUpMenu() -> setUpMenu
    void setListener() -> setListener
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onClick(android.view.View) -> onClick
    com.foxconn.lib.residemenu.ResideMenu getResideMenu() -> getResideMenu
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    android.widget.TextView getSys_common_residemenu_setting_tv() -> getSys_common_residemenu_setting_tv
    void setSys_common_residemenu_setting_tv(android.widget.TextView) -> setSys_common_residemenu_setting_tv
    void access$0(com.foxconn.app.aty.AtyMain,boolean) -> access$0
    android.widget.Button access$1(com.foxconn.app.aty.AtyMain) -> access$1
    android.widget.ImageView access$2(com.foxconn.app.aty.AtyMain) -> access$2
    android.widget.TextView access$3(com.foxconn.app.aty.AtyMain) -> access$3
    com.foxconn.emm.bean.UserInfo access$4(com.foxconn.app.aty.AtyMain) -> access$4
    void access$5(com.foxconn.app.aty.AtyMain,com.foxconn.emm.bean.UserInfo) -> access$5
    com.foxconn.emm.dao.DBUserInfoHelper access$6(com.foxconn.app.aty.AtyMain) -> access$6
    void access$7(com.foxconn.app.aty.AtyMain) -> access$7
    com.foxconn.lib.residemenu.ResideMenu access$8(com.foxconn.app.aty.AtyMain) -> access$8
com.foxconn.app.aty.AtyMain$1 -> com.foxconn.app.aty.l:
    com.foxconn.app.aty.AtyMain this$0 -> a
    void openMenu() -> openMenu
    void closeMenu() -> closeMenu
com.foxconn.app.aty.AtyMain$2 -> com.foxconn.app.aty.m:
    com.foxconn.app.aty.AtyMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.foxconn.app.aty.AtyMain$DownloadHeadIconTask -> com.foxconn.app.aty.n:
    com.foxconn.app.aty.AtyMain this$0 -> a
    android.graphics.Bitmap doInBackground(com.foxconn.emm.bean.UserInfo[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.foxconn.app.aty.AtyMain$SYNCUserinfoTask -> com.foxconn.app.aty.o:
    com.foxconn.app.aty.AtyMain this$0 -> a
    void onPreExecute() -> onPreExecute
    com.foxconn.emm.bean.UserInfo doInBackground(java.lang.String[]) -> a
    void onPostExecute(com.foxconn.emm.bean.UserInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.foxconn.app.aty.AtyMainCamera -> com.foxconn.app.aty.AtyMainCamera:
    java.lang.String KEY_PHOTO_PATH -> KEY_PHOTO_PATH
    int FLAG_TACK_PHOTO -> FLAG_TACK_PHOTO
    int FLAG_RETAKE_PHOTO -> FLAG_RETAKE_PHOTO
    int FLAG_PROCESS_OK -> FLAG_PROCESS_OK
    boolean isSaved -> isSaved
    android.app.admin.DevicePolicyManager mDPM -> mDPM
    android.content.ComponentName mDeviceAdminSample -> mDeviceAdminSample
    android.net.Uri photoUri -> photoUri
    android.widget.Button sys_takephoto_main_take_btn -> sys_takephoto_main_take_btn
    android.widget.Button sys_takephoto_main_process_btn -> sys_takephoto_main_process_btn
    android.widget.Button sys_takephoto_main_confirm_btn -> sys_takephoto_main_confirm_btn
    android.widget.ImageView sys_takephoto_main_pic_iv -> sys_takephoto_main_pic_iv
    java.lang.String finalIconPath -> finalIconPath
    java.lang.String tmpPicpath -> tmpPicpath
    java.lang.Runnable runnable -> runnable
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void onClick(android.view.View) -> onClick
    void checkCamera(boolean) -> checkCamera
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void takePhoto() -> takePhoto
    java.lang.String getPhotoPath(int,android.content.Intent) -> getPhotoPath
    boolean access$0(com.foxconn.app.aty.AtyMainCamera) -> access$0
com.foxconn.app.aty.AtyMainCamera$1 -> com.foxconn.app.aty.p:
    com.foxconn.app.aty.AtyMainCamera this$0 -> a
    void run() -> run
com.foxconn.app.aty.AtySafePolicy -> com.foxconn.app.aty.AtySafePolicy:
    com.foxconn.emm.tools.PolicyControl policyControl -> policyControl
    com.foxconn.emm.bean.PolicyInfo policyInfo -> policyInfo
    java.lang.String policycontent -> policycontent
    android.content.BroadcastReceiver broadcastReceiver -> broadcastReceiver
    android.widget.TextView policy_content_content -> policy_content_content
    android.widget.TextView update_date_content -> update_date_content
    android.widget.TextView bt_status_content -> bt_status_content
    android.widget.TextView wifi_status_content -> wifi_status_content
    android.widget.TextView camara_status_content -> camara_status_content
    android.widget.TextView is_lock_content -> is_lock_content
    android.widget.TextView policy_qrcode -> policy_qrcode
    android.widget.ImageView policy_qrcode_img -> policy_qrcode_img
    void onCreate(android.os.Bundle) -> onCreate
    void rebuildView() -> rebuildView
    void registerOnPolicyMessageReceiver() -> registerOnPolicyMessageReceiver
    void unregisterOnPolicyMessageReceiver() -> unregisterOnPolicyMessageReceiver
    void onDestroy() -> onDestroy
    void initView() -> initView
    void initData() -> initData
    com.foxconn.emm.bean.PolicyInfo getPolicyInfoFromJson(java.lang.String) -> getPolicyInfoFromJson
    void onClick(android.view.View) -> onClick
    void onMessageReceived(java.lang.String) -> onMessageReceived
com.foxconn.app.aty.AtySettings -> com.foxconn.app.aty.AtySettings:
    com.ab.view.sliding.AbSlidingButton sys_seting_device_safe_content_tbtn -> sys_seting_device_safe_content_tbtn
    android.widget.LinearLayout location_code_dialog -> location_code_dialog
    android.widget.EditText code -> code
    android.widget.TextView sys_seting_device_serialno_title_tv -> sys_seting_device_serialno_title_tv
    android.widget.Button sys_seting_device_serialno_content_btn -> sys_seting_device_serialno_content_btn
    android.widget.Button sys_delete_device_serialno_content_btn -> sys_delete_device_serialno_content_btn
    android.widget.Button sys_seting_aboutus_btn -> sys_seting_aboutus_btn
    java.lang.String num -> num
    int RESET_SECURITY_ID -> RESET_SECURITY_ID
    int CLOSE_SECURITY_ID -> CLOSE_SECURITY_ID
    int SET_SECURITY_ID -> SET_SECURITY_ID
    int UNlOCK_OFFEN -> UNlOCK_OFFEN
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void onResume() -> onResume
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void openLocationCodeChange() -> openLocationCodeChange
    void deleteLocationCode() -> deleteLocationCode
    void openAtyAbout() -> openAtyAbout
    void parseAsyncTaskResult(java.lang.String) -> parseAsyncTaskResult
    void deleteDialog() -> deleteDialog
    void onClick(android.view.View) -> onClick
    void access$0(com.foxconn.app.aty.AtySettings,java.lang.String) -> access$0
    void access$1(com.foxconn.app.aty.AtySettings) -> access$1
    android.widget.EditText access$2(com.foxconn.app.aty.AtySettings) -> access$2
    void access$3(com.foxconn.app.aty.AtySettings,java.lang.String) -> access$3
    java.lang.String access$4(com.foxconn.app.aty.AtySettings) -> access$4
    void access$5(com.foxconn.app.aty.AtySettings) -> access$5
com.foxconn.app.aty.AtySettings$1 -> com.foxconn.app.aty.q:
    com.foxconn.app.aty.AtySettings this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.foxconn.app.aty.AtySettings$2 -> com.foxconn.app.aty.r:
    com.foxconn.app.aty.AtySettings this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.foxconn.app.aty.AtySettings$AtySettingDialog -> com.foxconn.app.aty.s:
    com.foxconn.app.aty.AtySettings this$0 -> a
    void deleteInfo() -> deleteInfo
com.foxconn.app.aty.AtySettings$SaveDeviceNum -> com.foxconn.app.aty.t:
    com.foxconn.app.aty.AtySettings this$0 -> a
    void onPostExecute(java.lang.String) -> a
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.foxconn.app.aty.AtySpecification -> com.foxconn.app.aty.AtySpecification:
    android.webkit.WebView about_us -> about_us
    int mDensity -> mDensity
    void onCreate(android.os.Bundle) -> onCreate
com.foxconn.app.aty.AtySpecification$1 -> com.foxconn.app.aty.u:
    com.foxconn.app.aty.AtySpecification this$0 -> a
    android.app.Activity val$activity -> b
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.foxconn.app.aty.AtySpecification$2 -> com.foxconn.app.aty.v:
    com.foxconn.app.aty.AtySpecification this$0 -> a
    android.app.Activity val$activity -> b
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.foxconn.app.aty.AtyTempPhoto -> com.foxconn.app.aty.AtyTempPhoto:
    java.lang.String FLAG_PIC_TMP_PATH -> FLAG_PIC_TMP_PATH
    int PHOTO_CROP -> PHOTO_CROP
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.widget.Button sys_takephoto_main_cut_btn -> sys_takephoto_main_cut_btn
    android.widget.Button sys_takephoto_main_rotate_btn -> sys_takephoto_main_rotate_btn
    android.widget.Button sys_takephoto_main_turn_btn -> sys_takephoto_main_turn_btn
    android.widget.Button sys_takephoto_main_retake_btn -> sys_takephoto_main_retake_btn
    android.widget.Button sys_takephoto_main_confirm_btn -> sys_takephoto_main_confirm_btn
    android.widget.ImageView sys_takephoto_main_pic_iv -> sys_takephoto_main_pic_iv
    android.graphics.Bitmap tmpBmp -> tmpBmp
    java.lang.String tmpPicPath -> tmpPicPath
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> initData
    void initView() -> initView
    android.content.Intent getCropImageIntent(android.net.Uri) -> getCropImageIntent
    void doCropPhoto(java.io.File) -> doCropPhoto
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
com.foxconn.app.aty.AtyTrafficApps -> com.foxconn.app.aty.AtyTrafficApps:
    int SUCCESS -> SUCCESS
    int ERROR -> ERROR
    int EMPTY -> EMPTY
    android.widget.ListView lv_traffic_content -> lv_traffic_content
    com.foxconn.emm.adapter.TrafficAdapter adapter -> adapter
    java.util.Timer timer -> timer
    java.util.TimerTask timerTask -> timerTask
    java.util.List trafficAppsByDay -> trafficAppsByDay
    java.util.List hasTrafficAppsByDay -> hasTrafficAppsByDay
    android.os.Handler handler -> handler
    void onCreate(android.os.Bundle) -> onCreate
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void loadData() -> loadData
    void onStart() -> onStart
    void onStop() -> onStop
    void access$0(com.foxconn.app.aty.AtyTrafficApps,java.util.List) -> access$0
    java.util.List access$1(com.foxconn.app.aty.AtyTrafficApps) -> access$1
    void access$2(com.foxconn.app.aty.AtyTrafficApps,com.foxconn.emm.adapter.TrafficAdapter) -> access$2
    android.widget.ListView access$3(com.foxconn.app.aty.AtyTrafficApps) -> access$3
    com.foxconn.emm.adapter.TrafficAdapter access$4(com.foxconn.app.aty.AtyTrafficApps) -> access$4
    void access$5(com.foxconn.app.aty.AtyTrafficApps) -> access$5
    void access$6(com.foxconn.app.aty.AtyTrafficApps,java.util.List) -> access$6
    java.util.List access$7(com.foxconn.app.aty.AtyTrafficApps) -> access$7
    android.os.Handler access$8(com.foxconn.app.aty.AtyTrafficApps) -> access$8
com.foxconn.app.aty.AtyTrafficApps$1 -> com.foxconn.app.aty.w:
    com.foxconn.app.aty.AtyTrafficApps this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.foxconn.app.aty.AtyTrafficApps$2 -> com.foxconn.app.aty.x:
    com.foxconn.app.aty.AtyTrafficApps this$0 -> a
    void run() -> run
com.foxconn.app.aty.AtyTrafficApps$3 -> com.foxconn.app.aty.y:
    com.foxconn.app.aty.AtyTrafficApps this$0 -> a
    void run() -> run
com.foxconn.app.aty.AtyTrafficMgr -> com.foxconn.app.aty.AtyTrafficMgr:
    int max -> max
    int progress -> progress
    int step -> step
    android.widget.TextView numberText -> numberText
    android.widget.TextView maxText -> maxText
    android.widget.ImageView tv_traffic_paihang -> tv_traffic_paihang
    android.widget.ImageView traffic_mgr_iv -> traffic_mgr_iv
    android.widget.TextView trafficmgr_rl_time_tv -> trafficmgr_rl_time_tv
    com.ab.view.progress.AbCircleProgressBar mAbProgressBar -> mAbProgressBar
    com.foxconn.emm.bean.DeviceTrafficLimitInfo deviceTrafficLimitInfo -> deviceTrafficLimitInfo
    android.widget.TextView trafficmgr_rl_limit_desc -> trafficmgr_rl_limit_desc
    android.widget.TextView trafficmgr_rl_limit_tv -> trafficmgr_rl_limit_tv
    android.widget.Button sys_aty_trafficmar_check_btn -> sys_aty_trafficmar_check_btn
    void onCreate(android.os.Bundle) -> onCreate
    void initTrafficData() -> initTrafficData
    void initView() -> initView
    boolean isWarning(int,int) -> isWarning
    void onClick(android.view.View) -> onClick
com.foxconn.app.aty.AtyTrafficMgr$1 -> com.foxconn.app.aty.z:
    com.foxconn.app.aty.AtyTrafficMgr this$0 -> a
    void onProgress(int) -> onProgress
    void onComplete(int) -> onComplete
com.foxconn.app.aty.AtyTrafficMgrInfo -> com.foxconn.app.aty.AtyTrafficMgrInfo:
    android.widget.TextView traffic_mgr_info_type_tv -> traffic_mgr_info_type_tv
    android.widget.TextView traffic_mgr_info_num_tv -> traffic_mgr_info_num_tv
    android.widget.TextView traffic_mgr_info_time_tv -> traffic_mgr_info_time_tv
    android.widget.TextView traffic_mgr_info_desc_tv -> traffic_mgr_info_desc_tv
    com.foxconn.emm.bean.DeviceTrafficLimitInfo deviceTrafficLimitInfo -> deviceTrafficLimitInfo
    android.widget.TableLayout traffic_mgr_info_tl -> traffic_mgr_info_tl
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> initData
    void initView() -> initView
    java.lang.String getUpdateTime(java.lang.String) -> getUpdateTime
com.foxconn.app.aty.AtyUpdate -> com.foxconn.app.aty.AtyUpdate:
    com.foxconn.emm.bean.UpdateInfo updateInfo -> a
    void onCreate(android.os.Bundle) -> onCreate
com.foxconn.app.aty.AtyUserInfoDetails -> com.foxconn.app.aty.AtyUserInfoDetails:
    int FLIP_DISTANCE -> FLIP_DISTANCE
    android.view.GestureDetector detector -> detector
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    android.view.GestureDetector access$0(com.foxconn.app.aty.AtyUserInfoDetails) -> access$0
com.foxconn.app.aty.AtyUserInfoDetails$1 -> com.foxconn.app.aty.aa:
    com.foxconn.app.aty.AtyUserInfoDetails this$0 -> a
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onDown(android.view.MotionEvent) -> onDown
com.foxconn.app.aty.AtyUserInfoDetails$2 -> com.foxconn.app.aty.ab:
    com.foxconn.app.aty.AtyUserInfoDetails this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.foxconn.app.aty.AtyWelcome -> com.foxconn.app.aty.AtyWelcome:
    android.os.Handler mHandler -> a
    android.content.ComponentName emmmDeviceAdmin -> d
    android.app.admin.DevicePolicyManager devicePolicyManager -> e
    java.lang.Runnable entersys -> b
    java.lang.Runnable enrollsys -> c
    void onCreate(android.os.Bundle) -> onCreate
    void validateturn() -> a
    void initProcess() -> e
    void turn() -> b
    void onResume() -> onResume
    void launchDeviceAdmin() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void createShotCut() -> d
    boolean isActiveAdmin() -> f
    boolean hasInstallShortcut() -> g
    void addShortcut() -> h
com.foxconn.app.aty.AtyWelcome$1 -> com.foxconn.app.aty.ac:
    com.foxconn.app.aty.AtyWelcome this$0 -> a
    void run() -> run
com.foxconn.app.aty.AtyWelcome$2 -> com.foxconn.app.aty.ad:
    com.foxconn.app.aty.AtyWelcome this$0 -> a
    void run() -> run
com.foxconn.app.aty.AtyWelcome$ValidateLicenseTask -> com.foxconn.app.aty.ae:
    java.lang.String enterpriseName -> b
    java.lang.String licenseNo -> c
    android.os.CountDownTimer countDownTimer -> d
    com.foxconn.app.aty.AtyWelcome this$0 -> a
    void onPreExecute() -> onPreExecute
    com.foxconn.emm.bean.SysLicenseResult doInBackground(java.lang.String[]) -> a
    void onPostExecute(com.foxconn.emm.bean.SysLicenseResult) -> a
    void save2SP(com.foxconn.emm.bean.SysLicenseResult) -> b
    boolean canContinueUse(com.foxconn.emm.bean.SysLicenseResult) -> c
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.foxconn.app.aty.AtyWelcome access$2(com.foxconn.app.aty.AtyWelcome$ValidateLicenseTask) -> a
com.foxconn.app.aty.AtyWelcome$ValidateLicenseTask$1 -> com.foxconn.app.aty.af:
    com.foxconn.app.aty.AtyWelcome$ValidateLicenseTask this$1 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.foxconn.app.aty.BarChartSingleActivity -> com.foxconn.app.aty.BarChartSingleActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.foxconn.app.aty.CaptureActivity -> com.foxconn.app.aty.CaptureActivity:
    java.lang.String TAG -> a
    com.foxconn.lib.qrcode.camera.CameraManager cameraManager -> b
    com.foxconn.lib.qrcode.utils.CaptureActivityHandler handler -> c
    com.foxconn.lib.qrcode.utils.InactivityTimer inactivityTimer -> d
    com.foxconn.lib.qrcode.utils.BeepManager beepManager -> e
    android.view.SurfaceView scanPreview -> f
    android.widget.RelativeLayout scanContainer -> g
    android.widget.RelativeLayout scanCropView -> h
    android.widget.ImageView scanLine -> i
    android.graphics.Rect mCropRect -> j
    boolean isHasSurface -> k
    com.foxconn.emm.tools.PolicyControl policyControl -> l
    android.os.Handler getHandler() -> a
    com.foxconn.lib.qrcode.camera.CameraManager getCameraManager() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void handleDecode(com.google.zxing.Result,android.os.Bundle) -> a
    void initCamera(android.view.SurfaceHolder) -> a
    void displayFrameworkBugMessageAndExit() -> d
    android.graphics.Rect getCropRect() -> c
    void initCrop() -> e
    int getStatusBarHeight() -> f
com.foxconn.app.aty.CaptureActivity$1 -> com.foxconn.app.aty.ag:
    com.foxconn.app.aty.CaptureActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.foxconn.app.aty.CaptureActivity$2 -> com.foxconn.app.aty.ah:
    com.foxconn.app.aty.CaptureActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.foxconn.app.aty.EMMBaseActivity -> com.foxconn.app.aty.EMMBaseActivity:
    java.util.ArrayList mListeners -> mListeners
    com.foxconn.emm.service.EMMService mEMMService -> mEMMService
    android.app.ActivityManager activitymgr -> activitymgr
    android.content.ServiceConnection mServiceConnection -> mServiceConnection
    void onResume() -> onResume
    void onPause() -> onPause
    void resetIsCurrentProcessPause() -> resetIsCurrentProcessPause
    boolean isCurrentProcessPause() -> isCurrentProcessPause
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void bindEMMService() -> bindEMMService
    void unbindEMMService() -> unbindEMMService
com.foxconn.app.aty.EMMBaseActivity$1 -> com.foxconn.app.aty.ai:
    com.foxconn.app.aty.EMMBaseActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.foxconn.app.aty.EMMBaseActivity$BackPressHandler -> com.foxconn.app.aty.aj:
    void activityOnResume() -> activityOnResume
    void activityOnPause() -> activityOnPause
com.foxconn.app.aty.FrgApp -> com.foxconn.app.aty.FrgApp:
    java.util.List appInfoList -> b
    com.foxconn.emm.adapter.AppAdapter appAdapter -> c
    com.foxconn.emm.swipemenulistview.SwipeMenuListView mListView -> d
    com.foxconn.emm.dao.AppInfoDao appInfoDao -> e
    android.view.View parentView -> f
    android.os.Handler handler -> a
    com.charon.pulltorefreshlistview.PullToRefreshListView$OnRefreshListener refreshMore -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void initView() -> b
    void initData() -> c
    void rebuildView() -> a
    void onMessageReceived(java.lang.String) -> onMessageReceived
    int dp2px(int) -> a
    void open(int) -> open
    void delete(int) -> b
    boolean install(android.content.Context,java.lang.String) -> a
    void installApp(int) -> c
    java.util.List access$0(com.foxconn.app.aty.FrgApp) -> a
    void access$1(com.foxconn.app.aty.FrgApp,com.foxconn.emm.adapter.AppAdapter) -> a
    com.foxconn.emm.swipemenulistview.SwipeMenuListView access$2(com.foxconn.app.aty.FrgApp) -> b
    com.foxconn.emm.adapter.AppAdapter access$3(com.foxconn.app.aty.FrgApp) -> c
    void access$4(com.foxconn.app.aty.FrgApp) -> d
    void access$5(com.foxconn.app.aty.FrgApp,int) -> a
    void access$6(com.foxconn.app.aty.FrgApp,int) -> b
    int access$7(com.foxconn.app.aty.FrgApp,int) -> c
    void access$8(com.foxconn.app.aty.FrgApp,java.util.List) -> a
    void access$9(com.foxconn.app.aty.FrgApp,com.foxconn.emm.dao.AppInfoDao) -> a
    com.foxconn.emm.dao.AppInfoDao access$10(com.foxconn.app.aty.FrgApp) -> e
com.foxconn.app.aty.FrgApp$1 -> com.foxconn.app.aty.ak:
    com.foxconn.app.aty.FrgApp this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.foxconn.app.aty.FrgApp$2 -> com.foxconn.app.aty.al:
    com.foxconn.app.aty.FrgApp this$0 -> a
    void onRefresh() -> onRefresh
com.foxconn.app.aty.FrgApp$3 -> com.foxconn.app.aty.am:
    com.foxconn.app.aty.FrgApp this$0 -> a
    void create(com.foxconn.emm.swipemenulistview.SwipeMenu) -> a
com.foxconn.app.aty.FrgApp$4 -> com.foxconn.app.aty.an:
    com.foxconn.app.aty.FrgApp this$0 -> a
    void run() -> run
com.foxconn.app.aty.FrgApp$AppInfoDialog -> com.foxconn.app.aty.ao:
    int position -> b
    com.foxconn.app.aty.FrgApp this$0 -> a
    void showInfo() -> showInfo
    void deleteInfo() -> deleteInfo
com.foxconn.app.aty.FrgApp$ItemClickListener -> com.foxconn.app.aty.ap:
    com.foxconn.app.aty.FrgApp this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.foxconn.app.aty.FrgApp$ItemLongClickListener -> com.foxconn.app.aty.aq:
    com.foxconn.app.aty.FrgApp this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.foxconn.app.aty.FrgApp$ItemSwipeListener -> com.foxconn.app.aty.ar:
    com.foxconn.app.aty.FrgApp this$0 -> a
    void onSwipeStart(int) -> a
    void onSwipeEnd(int) -> b
com.foxconn.app.aty.FrgApp$MenuItemClickListener -> com.foxconn.app.aty.as:
    com.foxconn.app.aty.FrgApp this$0 -> a
    void onMenuItemClick(int,com.foxconn.emm.swipemenulistview.SwipeMenu,int) -> a
com.foxconn.app.aty.FrgBlackApp -> com.foxconn.app.aty.FrgBlackApp:
    android.widget.ListView frg_limit_app_black_lv -> b
    android.view.View rootView -> c
    android.os.Handler handler -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void initView() -> a
    void initData() -> b
    void rebuildView() -> c
    void loadData() -> d
    void onMessageReceived(java.lang.String) -> onMessageReceived
    android.widget.ListView access$0(com.foxconn.app.aty.FrgBlackApp) -> a
com.foxconn.app.aty.FrgBlackApp$1 -> com.foxconn.app.aty.at:
    java.util.List datas -> b
    com.foxconn.emm.adapter.LimitListAdapter adapter -> c
    com.foxconn.app.aty.FrgBlackApp this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.foxconn.app.aty.FrgBlackApp$2 -> com.foxconn.app.aty.au:
    com.foxconn.app.aty.FrgBlackApp this$0 -> a
    void run() -> run
com.foxconn.app.aty.FrgFile -> com.foxconn.app.aty.FrgFile:
    java.util.List fileInfoList -> b
    com.foxconn.emm.adapter.FileAdapter fileAdapter -> c
    com.foxconn.emm.swipemenulistview.SwipeMenuListView mListView -> d
    com.foxconn.emm.dao.FileInfoDao fileInfoDao -> e
    com.foxconn.lib.download.DownFileDao downFileDao -> f
    android.widget.EditText et_search_keyword -> g
    android.widget.Button btn_clear_text -> h
    android.view.View parentView -> i
    android.os.Handler handler -> a
    com.charon.pulltorefreshlistview.PullToRefreshListView$OnRefreshListener refreshMore -> j
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void initView() -> a
    void initData() -> b
    void rebuildView() -> c
    int dp2px(int) -> a
    void open(int) -> open
    boolean fileIsExists(int) -> b
    void delete(int) -> c
    void addDLQueue(int) -> d
    java.lang.String getSuffix(java.lang.String) -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void onClick(android.view.View) -> onClick
    void onMessageReceived(java.lang.String) -> onMessageReceived
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    java.util.List access$0(com.foxconn.app.aty.FrgFile) -> a
    void access$1(com.foxconn.app.aty.FrgFile,com.foxconn.emm.adapter.FileAdapter) -> a
    com.foxconn.emm.swipemenulistview.SwipeMenuListView access$2(com.foxconn.app.aty.FrgFile) -> b
    com.foxconn.emm.adapter.FileAdapter access$3(com.foxconn.app.aty.FrgFile) -> c
    void access$4(com.foxconn.app.aty.FrgFile) -> d
    void access$5(com.foxconn.app.aty.FrgFile,int) -> a
    void access$6(com.foxconn.app.aty.FrgFile,int) -> b
    void access$7(com.foxconn.app.aty.FrgFile,int) -> c
    android.widget.EditText access$8(com.foxconn.app.aty.FrgFile) -> e
    android.widget.Button access$9(com.foxconn.app.aty.FrgFile) -> f
    void access$10(com.foxconn.app.aty.FrgFile,com.foxconn.emm.dao.FileInfoDao) -> a
    com.foxconn.emm.dao.FileInfoDao access$11(com.foxconn.app.aty.FrgFile) -> g
    void access$12(com.foxconn.app.aty.FrgFile,java.util.List) -> a
    int access$13(com.foxconn.app.aty.FrgFile,int) -> d
com.foxconn.app.aty.FrgFile$1 -> com.foxconn.app.aty.av:
    com.foxconn.app.aty.FrgFile this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.foxconn.app.aty.FrgFile$2 -> com.foxconn.app.aty.aw:
    com.foxconn.app.aty.FrgFile this$0 -> a
    void onRefresh() -> onRefresh
com.foxconn.app.aty.FrgFile$3 -> com.foxconn.app.aty.ax:
    com.foxconn.app.aty.FrgFile this$0 -> a
    void create(com.foxconn.emm.swipemenulistview.SwipeMenu) -> a
com.foxconn.app.aty.FrgFile$4 -> com.foxconn.app.aty.ay:
    com.foxconn.app.aty.FrgFile this$0 -> a
    void run() -> run
com.foxconn.app.aty.FrgFile$AutoDownloadTask -> com.foxconn.app.aty.az:
    com.foxconn.app.aty.FrgFile this$0 -> a
    java.lang.Boolean doInBackground(com.foxconn.lib.download.DownFile[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.foxconn.app.aty.FrgFile$FileInfoDialog -> com.foxconn.app.aty.ba:
    int position -> b
    com.foxconn.app.aty.FrgFile this$0 -> a
    void showInfo() -> showInfo
    void deleteInfo() -> deleteInfo
com.foxconn.app.aty.FrgFile$ItemClickListener -> com.foxconn.app.aty.bb:
    com.foxconn.app.aty.FrgFile this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.foxconn.app.aty.FrgFile$ItemLongClickListener -> com.foxconn.app.aty.bc:
    com.foxconn.app.aty.FrgFile this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.foxconn.app.aty.FrgFile$ItemSwipeListener -> com.foxconn.app.aty.bd:
    com.foxconn.app.aty.FrgFile this$0 -> a
    void onSwipeStart(int) -> a
    void onSwipeEnd(int) -> b
com.foxconn.app.aty.FrgFile$MenuItemClickListener -> com.foxconn.app.aty.be:
    com.foxconn.app.aty.FrgFile this$0 -> a
    void onMenuItemClick(int,com.foxconn.emm.swipemenulistview.SwipeMenu,int) -> a
com.foxconn.app.aty.FrgFile$SearchTask -> com.foxconn.app.aty.bf:
    com.foxconn.app.aty.FrgFile this$0 -> a
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.foxconn.app.aty.FrgFile$TextChangedListener -> com.foxconn.app.aty.bg:
    com.foxconn.app.aty.FrgFile this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.foxconn.app.aty.FrgFile$TouchListener -> com.foxconn.app.aty.bh:
    com.foxconn.app.aty.FrgFile this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.foxconn.app.aty.FrgLimitApp -> com.foxconn.app.aty.FrgLimitApp:
    android.widget.ListView frg_limit_app_limit_lv -> b
    android.view.View rootView -> c
    android.os.Handler handler -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> a
    void onAttach(android.app.Activity) -> onAttach
    void initData() -> b
    void rebuildView() -> c
    void loadData() -> d
    void onMessageReceived(java.lang.String) -> onMessageReceived
    android.widget.ListView access$0(com.foxconn.app.aty.FrgLimitApp) -> a
com.foxconn.app.aty.FrgLimitApp$1 -> com.foxconn.app.aty.bi:
    java.util.List datas -> b
    com.foxconn.emm.adapter.LimitListAdapter adapter -> c
    com.foxconn.app.aty.FrgLimitApp this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.foxconn.app.aty.FrgLimitApp$2 -> com.foxconn.app.aty.bj:
    com.foxconn.app.aty.FrgLimitApp this$0 -> a
    void run() -> run
com.foxconn.app.aty.FrgNotifiCalendar -> com.foxconn.app.aty.FrgNotifiCalendar:
    java.util.List calendarInfoList -> b
    com.foxconn.emm.adapter.CalendarAdapter calendarAdapter -> c
    com.foxconn.emm.swipemenulistview.SwipeMenuListView mListView -> d
    com.foxconn.emm.dao.CalendarInfoDao calendarDao -> e
    android.view.View parentView -> f
    android.os.Handler handler -> a
    com.charon.pulltorefreshlistview.PullToRefreshListView$OnRefreshListener refreshMore -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void initView() -> a
    void initData() -> b
    void rebuildView() -> c
    int dp2px(int) -> a
    void open(int) -> open
    java.lang.String parseContent(com.foxconn.emm.bean.CalendarInfo) -> a
    void delete(int) -> b
    void setCalendar(com.foxconn.emm.bean.CalendarInfo) -> b
    void onMessageReceived(java.lang.String) -> onMessageReceived
    java.util.List access$0(com.foxconn.app.aty.FrgNotifiCalendar) -> a
    void access$1(com.foxconn.app.aty.FrgNotifiCalendar,com.foxconn.emm.adapter.CalendarAdapter) -> a
    com.foxconn.emm.swipemenulistview.SwipeMenuListView access$2(com.foxconn.app.aty.FrgNotifiCalendar) -> b
    com.foxconn.emm.adapter.CalendarAdapter access$3(com.foxconn.app.aty.FrgNotifiCalendar) -> c
    void access$4(com.foxconn.app.aty.FrgNotifiCalendar) -> d
    void access$5(com.foxconn.app.aty.FrgNotifiCalendar,com.foxconn.emm.bean.CalendarInfo) -> a
    void access$6(com.foxconn.app.aty.FrgNotifiCalendar,int) -> a
    void access$7(com.foxconn.app.aty.FrgNotifiCalendar,int) -> b
    int access$8(com.foxconn.app.aty.FrgNotifiCalendar,int) -> c
    void access$9(com.foxconn.app.aty.FrgNotifiCalendar,java.util.List) -> a
    void access$10(com.foxconn.app.aty.FrgNotifiCalendar,com.foxconn.emm.dao.CalendarInfoDao) -> a
    com.foxconn.emm.dao.CalendarInfoDao access$11(com.foxconn.app.aty.FrgNotifiCalendar) -> e
com.foxconn.app.aty.FrgNotifiCalendar$1 -> com.foxconn.app.aty.bk:
    com.foxconn.app.aty.FrgNotifiCalendar this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.foxconn.app.aty.FrgNotifiCalendar$2 -> com.foxconn.app.aty.bl:
    com.foxconn.app.aty.FrgNotifiCalendar this$0 -> a
    void onRefresh() -> onRefresh
com.foxconn.app.aty.FrgNotifiCalendar$3 -> com.foxconn.app.aty.bm:
    com.foxconn.app.aty.FrgNotifiCalendar this$0 -> a
    void create(com.foxconn.emm.swipemenulistview.SwipeMenu) -> a
com.foxconn.app.aty.FrgNotifiCalendar$4 -> com.foxconn.app.aty.bn:
    com.foxconn.app.aty.FrgNotifiCalendar this$0 -> a
    void run() -> run
com.foxconn.app.aty.FrgNotifiCalendar$CalendarInfoDialog -> com.foxconn.app.aty.bo:
    int position -> b
    int flag -> c
    com.foxconn.app.aty.FrgNotifiCalendar this$0 -> a
    void showInfo() -> showInfo
    void deleteInfo() -> deleteInfo
com.foxconn.app.aty.FrgNotifiCalendar$ItemClickListener -> com.foxconn.app.aty.bp:
    com.foxconn.app.aty.FrgNotifiCalendar this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.foxconn.app.aty.FrgNotifiCalendar$ItemLongClickListener -> com.foxconn.app.aty.bq:
    com.foxconn.app.aty.FrgNotifiCalendar this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.foxconn.app.aty.FrgNotifiCalendar$ItemSwipeListener -> com.foxconn.app.aty.br:
    com.foxconn.app.aty.FrgNotifiCalendar this$0 -> a
    void onSwipeStart(int) -> a
    void onSwipeEnd(int) -> b
com.foxconn.app.aty.FrgNotifiCalendar$MenuItemClickListener -> com.foxconn.app.aty.bs:
    com.foxconn.app.aty.FrgNotifiCalendar this$0 -> a
    void onMenuItemClick(int,com.foxconn.emm.swipemenulistview.SwipeMenu,int) -> a
com.foxconn.app.aty.FrgNotification -> com.foxconn.app.aty.FrgNotification:
    java.util.List notifiInfoList -> b
    com.foxconn.emm.adapter.NotificationAdapter mAdapter -> c
    com.foxconn.emm.swipemenulistview.SwipeMenuListView mListView -> d
    com.foxconn.emm.dao.NotificationInfoDao notifiDao -> e
    android.view.View parentView -> f
    android.os.Handler handler -> a
    com.charon.pulltorefreshlistview.PullToRefreshListView$OnRefreshListener notificationLoadMore -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void initView() -> a
    void initData() -> b
    void rebuildView() -> c
    int dp2px(int) -> a
    void open(int) -> open
    void delete(int) -> b
    void onMessageReceived(java.lang.String) -> onMessageReceived
    java.util.List access$0(com.foxconn.app.aty.FrgNotification) -> a
    void access$1(com.foxconn.app.aty.FrgNotification,com.foxconn.emm.adapter.NotificationAdapter) -> a
    com.foxconn.emm.swipemenulistview.SwipeMenuListView access$2(com.foxconn.app.aty.FrgNotification) -> b
    com.foxconn.emm.adapter.NotificationAdapter access$3(com.foxconn.app.aty.FrgNotification) -> c
    void access$4(com.foxconn.app.aty.FrgNotification) -> d
    void access$5(com.foxconn.app.aty.FrgNotification,int) -> a
    void access$6(com.foxconn.app.aty.FrgNotification,int) -> b
    int access$7(com.foxconn.app.aty.FrgNotification,int) -> c
    void access$8(com.foxconn.app.aty.FrgNotification,java.util.List) -> a
    void access$9(com.foxconn.app.aty.FrgNotification,com.foxconn.emm.dao.NotificationInfoDao) -> a
    com.foxconn.emm.dao.NotificationInfoDao access$10(com.foxconn.app.aty.FrgNotification) -> e
com.foxconn.app.aty.FrgNotification$1 -> com.foxconn.app.aty.bt:
    com.foxconn.app.aty.FrgNotification this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.foxconn.app.aty.FrgNotification$2 -> com.foxconn.app.aty.bu:
    com.foxconn.app.aty.FrgNotification this$0 -> a
    void onRefresh() -> onRefresh
com.foxconn.app.aty.FrgNotification$3 -> com.foxconn.app.aty.bv:
    com.foxconn.app.aty.FrgNotification this$0 -> a
    void create(com.foxconn.emm.swipemenulistview.SwipeMenu) -> a
com.foxconn.app.aty.FrgNotification$4 -> com.foxconn.app.aty.bw:
    com.foxconn.app.aty.FrgNotification this$0 -> a
    void run() -> run
com.foxconn.app.aty.FrgNotification$ItemClickListener -> com.foxconn.app.aty.bx:
    com.foxconn.app.aty.FrgNotification this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.foxconn.app.aty.FrgNotification$ItemLongClickListener -> com.foxconn.app.aty.by:
    com.foxconn.app.aty.FrgNotification this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.foxconn.app.aty.FrgNotification$ItemSwipeListener -> com.foxconn.app.aty.bz:
    com.foxconn.app.aty.FrgNotification this$0 -> a
    void onSwipeStart(int) -> a
    void onSwipeEnd(int) -> b
com.foxconn.app.aty.FrgNotification$MenuItemClickListener -> com.foxconn.app.aty.ca:
    com.foxconn.app.aty.FrgNotification this$0 -> a
    void onMenuItemClick(int,com.foxconn.emm.swipemenulistview.SwipeMenu,int) -> a
com.foxconn.app.aty.FrgNotification$NotifiInfoDialog -> com.foxconn.app.aty.cb:
    int position -> b
    com.foxconn.app.aty.FrgNotification this$0 -> a
    void deleteInfo() -> deleteInfo
com.foxconn.app.aty.FrgPic -> com.foxconn.app.aty.FrgPic:
    java.util.List picInfoList -> b
    com.foxconn.emm.adapter.PicAdapter picAdapter -> c
    com.foxconn.emm.swipemenulistview.SwipeMenuListView mListView -> d
    com.foxconn.emm.dao.PicInfoDao picInfoDao -> e
    com.foxconn.lib.download.DownFileDao downFileDao -> f
    android.view.View parentView -> g
    android.os.Handler handler -> a
    com.charon.pulltorefreshlistview.PullToRefreshListView$OnRefreshListener refreshMore -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void initView() -> a
    void initData() -> b
    void rebuildView() -> c
    int dp2px(int) -> b
    void open(int) -> open
    boolean picIsExists(int) -> c
    void addDLQueue(int) -> a
    java.lang.String getSuffix(java.lang.String) -> a
    void delete(int) -> d
    void delete(java.io.File) -> a
    void onMessageReceived(java.lang.String) -> onMessageReceived
    java.util.List access$0(com.foxconn.app.aty.FrgPic) -> a
    void access$1(com.foxconn.app.aty.FrgPic,com.foxconn.emm.adapter.PicAdapter) -> a
    com.foxconn.emm.swipemenulistview.SwipeMenuListView access$2(com.foxconn.app.aty.FrgPic) -> b
    com.foxconn.emm.adapter.PicAdapter access$3(com.foxconn.app.aty.FrgPic) -> c
    void access$4(com.foxconn.app.aty.FrgPic) -> d
    void access$5(com.foxconn.app.aty.FrgPic,int) -> a
    void access$6(com.foxconn.app.aty.FrgPic,int) -> b
    int access$7(com.foxconn.app.aty.FrgPic,int) -> c
    void access$8(com.foxconn.app.aty.FrgPic,java.util.List) -> a
    void access$9(com.foxconn.app.aty.FrgPic,com.foxconn.emm.dao.PicInfoDao) -> a
    com.foxconn.emm.dao.PicInfoDao access$10(com.foxconn.app.aty.FrgPic) -> e
com.foxconn.app.aty.FrgPic$1 -> com.foxconn.app.aty.cc:
    com.foxconn.app.aty.FrgPic this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.foxconn.app.aty.FrgPic$2 -> com.foxconn.app.aty.cd:
    com.foxconn.app.aty.FrgPic this$0 -> a
    void onRefresh() -> onRefresh
com.foxconn.app.aty.FrgPic$3 -> com.foxconn.app.aty.ce:
    com.foxconn.app.aty.FrgPic this$0 -> a
    void create(com.foxconn.emm.swipemenulistview.SwipeMenu) -> a
com.foxconn.app.aty.FrgPic$4 -> com.foxconn.app.aty.cf:
    com.foxconn.app.aty.FrgPic this$0 -> a
    void run() -> run
com.foxconn.app.aty.FrgPic$AutoDownloadTask -> com.foxconn.app.aty.cg:
    com.foxconn.app.aty.FrgPic this$0 -> a
    java.lang.Boolean doInBackground(java.util.List[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.foxconn.app.aty.FrgPic$ItemClickListener -> com.foxconn.app.aty.ch:
    com.foxconn.app.aty.FrgPic this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.foxconn.app.aty.FrgPic$ItemLongClickListener -> com.foxconn.app.aty.ci:
    com.foxconn.app.aty.FrgPic this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.foxconn.app.aty.FrgPic$ItemSwipeListener -> com.foxconn.app.aty.cj:
    com.foxconn.app.aty.FrgPic this$0 -> a
    void onSwipeStart(int) -> a
    void onSwipeEnd(int) -> b
com.foxconn.app.aty.FrgPic$MenuItemClickListener -> com.foxconn.app.aty.ck:
    com.foxconn.app.aty.FrgPic this$0 -> a
    void onMenuItemClick(int,com.foxconn.emm.swipemenulistview.SwipeMenu,int) -> a
com.foxconn.app.aty.FrgPic$PicInfoDialog -> com.foxconn.app.aty.cl:
    int position -> b
    int flag -> c
    com.foxconn.app.aty.FrgPic this$0 -> a
    void showInfo() -> showInfo
    void deleteInfo() -> deleteInfo
com.foxconn.app.aty.FrgWeb -> com.foxconn.app.aty.FrgWeb:
    java.util.List webPageInfoList -> b
    com.foxconn.emm.adapter.WebPageAdapter webPageAdapter -> c
    com.foxconn.emm.swipemenulistview.SwipeMenuListView mListView -> d
    com.foxconn.emm.dao.WebPageInfoDao webPageInfoDao -> e
    android.view.View parentView -> f
    android.os.Handler handler -> a
    com.charon.pulltorefreshlistview.PullToRefreshListView$OnRefreshListener refreshMore -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void initView() -> a
    void initData() -> b
    void rebuildView() -> c
    int dp2px(int) -> a
    void open(int) -> open
    void openWebPage(int) -> b
    void delete(int) -> c
    void onMessageReceived(java.lang.String) -> onMessageReceived
    java.util.List access$0(com.foxconn.app.aty.FrgWeb) -> a
    void access$1(com.foxconn.app.aty.FrgWeb,com.foxconn.emm.adapter.WebPageAdapter) -> a
    com.foxconn.emm.swipemenulistview.SwipeMenuListView access$2(com.foxconn.app.aty.FrgWeb) -> b
    com.foxconn.emm.adapter.WebPageAdapter access$3(com.foxconn.app.aty.FrgWeb) -> c
    void access$4(com.foxconn.app.aty.FrgWeb) -> d
    void access$5(com.foxconn.app.aty.FrgWeb,int) -> a
    void access$6(com.foxconn.app.aty.FrgWeb,int) -> b
    void access$7(com.foxconn.app.aty.FrgWeb,int) -> c
    int access$8(com.foxconn.app.aty.FrgWeb,int) -> d
    void access$9(com.foxconn.app.aty.FrgWeb,java.util.List) -> a
    void access$10(com.foxconn.app.aty.FrgWeb,com.foxconn.emm.dao.WebPageInfoDao) -> a
    com.foxconn.emm.dao.WebPageInfoDao access$11(com.foxconn.app.aty.FrgWeb) -> e
com.foxconn.app.aty.FrgWeb$1 -> com.foxconn.app.aty.cm:
    com.foxconn.app.aty.FrgWeb this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.foxconn.app.aty.FrgWeb$2 -> com.foxconn.app.aty.cn:
    com.foxconn.app.aty.FrgWeb this$0 -> a
    void onRefresh() -> onRefresh
com.foxconn.app.aty.FrgWeb$3 -> com.foxconn.app.aty.co:
    com.foxconn.app.aty.FrgWeb this$0 -> a
    void create(com.foxconn.emm.swipemenulistview.SwipeMenu) -> a
com.foxconn.app.aty.FrgWeb$4 -> com.foxconn.app.aty.cp:
    com.foxconn.app.aty.FrgWeb this$0 -> a
    void run() -> run
com.foxconn.app.aty.FrgWeb$ItemClickListener -> com.foxconn.app.aty.cq:
    com.foxconn.app.aty.FrgWeb this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.foxconn.app.aty.FrgWeb$ItemLongClickListener -> com.foxconn.app.aty.cr:
    com.foxconn.app.aty.FrgWeb this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.foxconn.app.aty.FrgWeb$ItemSwipeListener -> com.foxconn.app.aty.cs:
    com.foxconn.app.aty.FrgWeb this$0 -> a
    void onSwipeStart(int) -> a
    void onSwipeEnd(int) -> b
com.foxconn.app.aty.FrgWeb$MenuItemClickListener -> com.foxconn.app.aty.ct:
    com.foxconn.app.aty.FrgWeb this$0 -> a
    void onMenuItemClick(int,com.foxconn.emm.swipemenulistview.SwipeMenu,int) -> a
com.foxconn.app.aty.FrgWeb$WebInfoDailog -> com.foxconn.app.aty.cu:
    int position -> b
    com.foxconn.app.aty.FrgWeb this$0 -> a
    void showInfo() -> showInfo
    void deleteInfo() -> deleteInfo
com.foxconn.app.aty.FrgWhiteApp -> com.foxconn.app.aty.FrgWhiteApp:
    android.widget.ListView frg_limit_app_white_lv -> b
    android.view.View rootView -> c
    android.os.Handler handler -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void initView() -> a
    void initData() -> b
    void rebuildView() -> c
    void loadData() -> d
    void onMessageReceived(java.lang.String) -> onMessageReceived
    android.widget.ListView access$0(com.foxconn.app.aty.FrgWhiteApp) -> a
com.foxconn.app.aty.FrgWhiteApp$1 -> com.foxconn.app.aty.cv:
    java.util.List datas -> b
    com.foxconn.emm.adapter.LimitListAdapter adapter -> c
    com.foxconn.app.aty.FrgWhiteApp this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.foxconn.app.aty.FrgWhiteApp$2 -> com.foxconn.app.aty.cw:
    com.foxconn.app.aty.FrgWhiteApp this$0 -> a
    void run() -> run
com.foxconn.app.aty.ResultActivity -> com.foxconn.app.aty.ResultActivity:
    android.widget.ImageView mResultImage -> mResultImage
    android.widget.TextView mResultText -> mResultText
    com.foxconn.emm.tools.PolicyControl policyControl -> policyControl
    boolean qrPolicy_flag -> qrPolicy_flag
    void onCreate(android.os.Bundle) -> onCreate
    boolean access$0(com.foxconn.app.aty.ResultActivity) -> access$0
    android.widget.TextView access$1(com.foxconn.app.aty.ResultActivity) -> access$1
com.foxconn.app.aty.ResultActivity$1 -> com.foxconn.app.aty.cx:
    com.foxconn.app.aty.ResultActivity this$0 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.foxconn.app.aty.ShowWebpage -> com.foxconn.app.aty.ShowWebpage:
    android.widget.TextView textView1 -> a
    android.webkit.WebView webView1 -> b
    com.foxconn.emm.bean.WebPageInfo webPageInfo -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void loadData() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void Click(android.view.View) -> Click
com.foxconn.app.aty.ShowWebpage$MyWebChromeClient -> com.foxconn.app.aty.cy:
    com.foxconn.app.aty.ShowWebpage this$0 -> a
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
com.foxconn.app.aty.ShowWebpage$WebPageClient -> com.foxconn.app.aty.cz:
    com.foxconn.app.aty.ShowWebpage this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.foxconn.emm.adapter.AppAdapter -> com.foxconn.emm.adapter.AppAdapter:
    android.content.Context context -> context
    java.util.List appInfoList -> appInfoList
    int item -> item
    android.view.LayoutInflater inflater -> inflater
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String parseSendTime(java.lang.String) -> parseSendTime
    java.lang.String parseFileSize(java.lang.String) -> parseFileSize
com.foxconn.emm.adapter.AppAdapter$DataWrapper -> com.foxconn.emm.adapter.a:
    android.widget.TextView app_title -> a
    android.widget.TextView app_receive_date -> b
    android.widget.TextView app_size -> c
    com.foxconn.emm.adapter.AppAdapter this$0 -> d
com.foxconn.emm.adapter.CalendarAdapter -> com.foxconn.emm.adapter.CalendarAdapter:
    android.content.Context context -> context
    java.util.List calendarInfoList -> calendarInfoList
    int item -> item
    android.view.LayoutInflater inflater -> inflater
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String parseSendTime(java.lang.String) -> parseSendTime
com.foxconn.emm.adapter.CalendarAdapter$DataWrapper -> com.foxconn.emm.adapter.b:
    android.widget.TextView info_center_command -> a
    android.widget.TextView info_center_content -> b
    android.widget.TextView info_center_receive_date -> c
    com.foxconn.emm.adapter.CalendarAdapter this$0 -> d
com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter -> com.foxconn.emm.adapter.c:
    android.content.Context mContext -> c
    java.util.ArrayList mDownFileGroupList -> d
    java.lang.String[] mDownFileGroupTitle -> e
    java.util.HashMap mFileDownloaders -> a
    com.foxconn.lib.download.DownFileDao downFileDao -> f
    com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter$ViewHolder holder -> b
    com.foxconn.lib.download.DownFile getChild(int,int) -> a
    long getChildId(int,int) -> getChildId
    int getChildrenCount(int) -> getChildrenCount
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    void autoDownload(com.foxconn.lib.download.DownFile,com.foxconn.lib.download.AbDownloadProgressListener) -> a
    android.graphics.drawable.Drawable getIconDrawable(com.foxconn.lib.download.DownFile) -> a
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean isChildSelectable(int,int) -> isChildSelectable
    boolean hasStableIds() -> hasStableIds
    void releaseThread() -> a
    java.lang.Object getChild(int,int) -> getChild
    java.util.ArrayList access$1(com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter) -> a
    android.content.Context access$2(com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter) -> b
    void access$3(com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter,com.foxconn.lib.download.DownFile,com.foxconn.lib.download.AbDownloadProgressListener) -> a
    com.foxconn.lib.download.DownFileDao access$4(com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter) -> c
com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter$1 -> com.foxconn.emm.adapter.d:
    com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter this$0 -> a
    com.foxconn.lib.download.DownFile val$mDownFile -> b
    void onDownloadSize(long) -> onDownloadSize
    com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter access$0(com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter$1) -> a
com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter$1$1 -> com.foxconn.emm.adapter.e:
    com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter$1 this$1 -> a
    int val$c -> b
    long val$size -> c
    com.foxconn.lib.download.DownFile val$mDownFile -> d
    void run() -> run
com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter$1$2 -> com.foxconn.emm.adapter.f:
    com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter$1 this$1 -> a
    void run() -> run
com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter$2 -> com.foxconn.emm.adapter.g:
    com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter this$0 -> a
    com.foxconn.lib.download.DownFile val$mDownFile -> b
    com.foxconn.lib.download.AbDownloadProgressListener val$mDownloadProgressListener -> c
    void onClick(android.view.View) -> onClick
com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter$3 -> com.foxconn.emm.adapter.h:
    com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter this$0 -> a
    com.foxconn.lib.download.DownFile val$mDownFile -> b
    com.foxconn.lib.download.AbDownloadProgressListener val$mDownloadProgressListener -> c
    void update() -> update
    void get() -> get
com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter$ViewHolder -> com.foxconn.emm.adapter.i:
    android.widget.ImageView itemsIcon -> a
    android.widget.TextView itemsTitle -> b
    android.widget.TextView itemsDesc -> c
    android.widget.Button operateBtn -> d
    android.widget.ProgressBar progress -> e
    android.widget.TextView received_progress_percent -> f
    android.widget.TextView received_progress_number -> g
    android.widget.RelativeLayout received_progressBar -> h
    com.foxconn.emm.adapter.DownloadQueueExpandableListAdapter this$0 -> i
com.foxconn.emm.adapter.FileAdapter -> com.foxconn.emm.adapter.FileAdapter:
    android.content.Context context -> context
    java.util.List fileInfoList -> fileInfoList
    int item -> item
    android.view.LayoutInflater inflater -> inflater
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String parseSendTime(java.lang.String) -> parseSendTime
com.foxconn.emm.adapter.FileAdapter$DataWrapper -> com.foxconn.emm.adapter.j:
    android.widget.TextView info_center_command -> a
    android.widget.TextView info_center_content -> b
    android.widget.TextView info_center_receive_date -> c
    com.foxconn.emm.adapter.FileAdapter this$0 -> d
com.foxconn.emm.adapter.LimitListAdapter -> com.foxconn.emm.adapter.LimitListAdapter:
    android.content.Context context -> context
    java.util.List data -> data
    int listviewItem -> listviewItem
    android.view.LayoutInflater inflater -> inflater
    java.util.concurrent.ExecutorService singleThreadExecutor -> singleThreadExecutor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setType(com.foxconn.emm.bean.InstalledAppInfo,android.widget.TextView) -> setType
    void loadAppIcon(android.widget.ImageView,android.content.Context,com.foxconn.emm.bean.InstalledAppInfo) -> loadAppIcon
com.foxconn.emm.adapter.LimitListAdapter$DataWrapper -> com.foxconn.emm.adapter.k:
    android.widget.TextView item_name -> a
    android.widget.TextView item_detail -> b
    android.widget.ImageView imageView -> c
    android.widget.TextView category_name -> d
com.foxconn.emm.adapter.LimitListAdapter$LoadIconTaskCallable -> com.foxconn.emm.adapter.l:
    android.content.Context context -> b
    com.foxconn.emm.bean.InstalledAppInfo blackAppInfo -> c
    com.foxconn.emm.adapter.LimitListAdapter this$0 -> a
    android.graphics.drawable.Drawable call() -> a
    java.lang.Object call() -> call
com.foxconn.emm.adapter.NotificationAdapter -> com.foxconn.emm.adapter.NotificationAdapter:
    android.content.Context context -> context
    java.util.List notifiInfoList -> notifiInfoList
    int item -> item
    android.view.LayoutInflater inflater -> inflater
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String parseSendTime(java.lang.String) -> parseSendTime
com.foxconn.emm.adapter.NotificationAdapter$DataWrapper -> com.foxconn.emm.adapter.m:
    android.widget.TextView info_center_command -> a
    android.widget.TextView info_center_content -> b
    android.widget.TextView info_center_receive_date -> c
    com.foxconn.emm.adapter.NotificationAdapter this$0 -> d
com.foxconn.emm.adapter.PicAdapter -> com.foxconn.emm.adapter.PicAdapter:
    android.content.Context context -> context
    java.util.List picInfoList -> picInfoList
    int item -> item
    android.view.LayoutInflater inflater -> inflater
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String parseSendTime(java.lang.String) -> parseSendTime
com.foxconn.emm.adapter.PicAdapter$DataWrapper -> com.foxconn.emm.adapter.n:
    android.widget.TextView info_center_command -> a
    android.widget.TextView info_center_content -> b
    android.widget.TextView info_center_receive_date -> c
    com.foxconn.emm.adapter.PicAdapter this$0 -> d
com.foxconn.emm.adapter.TrafficAdapter -> com.foxconn.emm.adapter.TrafficAdapter:
    android.content.Context context -> context
    java.util.List trafficInfos -> trafficInfos
    android.content.pm.PackageManager packageManager -> packageManager
    int getCount() -> getCount
    com.foxconn.emm.bean.UidTraffic getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.foxconn.emm.adapter.TrafficAdapter$ViewHolder -> com.foxconn.emm.adapter.o:
    android.widget.ImageView iv_traffic_icon -> a
    android.widget.TextView tv_traffic_name -> b
    android.widget.TextView tv_traffic_received -> c
    android.widget.TextView tv_traffic_transmitted -> d
    com.foxconn.emm.adapter.TrafficAdapter this$0 -> e
com.foxconn.emm.adapter.WebPageAdapter -> com.foxconn.emm.adapter.WebPageAdapter:
    android.content.Context context -> context
    java.util.List webPageInfoList -> webPageInfoList
    int item -> item
    android.view.LayoutInflater inflater -> inflater
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String parseSendTime(java.lang.String) -> parseSendTime
com.foxconn.emm.adapter.WebPageAdapter$DataWrapper -> com.foxconn.emm.adapter.p:
    android.widget.TextView info_center_command -> a
    android.widget.TextView info_center_content -> b
    android.widget.TextView info_center_receive_date -> c
    com.foxconn.emm.adapter.WebPageAdapter this$0 -> d
com.foxconn.emm.bean.AppInfo -> com.foxconn.emm.bean.AppInfo:
    java.lang.String id -> id
    java.lang.String msgType -> msgType
    java.lang.String sendTime -> sendTime
    java.lang.String appList -> appList
    java.lang.String appName -> appName
    java.lang.String fileUrl -> fileUrl
    java.lang.String packageName -> packageName
    java.lang.String fileSize -> fileSize
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getMsgType() -> getMsgType
    void setMsgType(java.lang.String) -> setMsgType
    java.lang.String getSendTime() -> getSendTime
    void setSendTime(java.lang.String) -> setSendTime
    java.lang.String getAppList() -> getAppList
    void setAppList(java.lang.String) -> setAppList
    java.lang.String getAppName() -> getAppName
    void setAppName(java.lang.String) -> setAppName
    java.lang.String getFileUrl() -> getFileUrl
    void setFileUrl(java.lang.String) -> setFileUrl
    java.lang.String getPackageName() -> getPackageName
    void setPackageName(java.lang.String) -> setPackageName
    java.lang.String getFileSize() -> getFileSize
    void setFileSize(java.lang.String) -> setFileSize
    java.lang.String toString() -> toString
com.foxconn.emm.bean.AppInfo$TAG -> com.foxconn.emm.bean.AppInfo$TAG:
    java.lang.String ID -> ID
    java.lang.String MSGTYPE -> MSGTYPE
    java.lang.String SENDTIME -> SENDTIME
    java.lang.String APPLIST -> APPLIST
    java.lang.String APPNAME -> APPNAME
    java.lang.String FILEURL -> FILEURL
    java.lang.String PACKAGENAME -> PACKAGENAME
    java.lang.String FILESIZE -> FILESIZE
    com.foxconn.emm.bean.AppInfo this$0 -> this$0
com.foxconn.emm.bean.CalendarInfo -> com.foxconn.emm.bean.CalendarInfo:
    java.lang.String id -> id
    java.lang.String msgType -> msgType
    java.lang.String isAllDay -> isAllDay
    java.lang.String content -> content
    java.lang.String subject -> subject
    java.lang.String sendTime -> sendTime
    java.lang.String startTime -> startTime
    java.lang.String endTime -> endTime
    java.lang.String place -> place
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getMsgType() -> getMsgType
    void setMsgType(java.lang.String) -> setMsgType
    java.lang.String getIsAllDay() -> getIsAllDay
    void setIsAllDay(java.lang.String) -> setIsAllDay
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    java.lang.String getSendTime() -> getSendTime
    void setSendTime(java.lang.String) -> setSendTime
    java.lang.String getStartTime() -> getStartTime
    void setStartTime(java.lang.String) -> setStartTime
    java.lang.String getEndTime() -> getEndTime
    void setEndTime(java.lang.String) -> setEndTime
    java.lang.String getPlace() -> getPlace
    void setPlace(java.lang.String) -> setPlace
    java.lang.String toString() -> toString
com.foxconn.emm.bean.CalendarInfo$TAG -> com.foxconn.emm.bean.CalendarInfo$TAG:
    java.lang.String ID -> ID
    java.lang.String MSGTYPE -> MSGTYPE
    java.lang.String ISALLDAY -> ISALLDAY
    java.lang.String CONTENT -> CONTENT
    java.lang.String SUBJECT -> SUBJECT
    java.lang.String SENDTIME -> SENDTIME
    java.lang.String STARTTIME -> STARTTIME
    java.lang.String ENDTIME -> ENDTIME
    java.lang.String PLACE -> PLACE
com.foxconn.emm.bean.DeviceTrafficLimitInfo -> com.foxconn.emm.bean.DeviceTrafficLimitInfo:
    java.lang.String createBy -> createBy
    java.lang.String createDate -> createDate
    java.lang.String modifyBy -> modifyBy
    java.lang.String modifyDate -> modifyDate
    java.lang.String sendTime -> sendTime
    java.lang.String trafficLimit -> trafficLimit
    java.lang.String trafficLimitDesc -> trafficLimitDesc
    java.lang.String trafficLimitId -> trafficLimitId
    java.lang.String trafficLimitType -> trafficLimitType
    java.lang.String trafficStatus -> trafficStatus
    com.foxconn.emm.bean.DeviceTrafficLimitInfo getInstanceFromJson(java.lang.String) -> getInstanceFromJson
    java.lang.String getCreateBy() -> getCreateBy
    java.lang.String getCreateDate() -> getCreateDate
    java.lang.String getModifyBy() -> getModifyBy
    java.lang.String getModifyDate() -> getModifyDate
    java.lang.String getSendTime() -> getSendTime
    java.lang.String getTrafficLimit() -> getTrafficLimit
    java.lang.String getTrafficLimitDesc() -> getTrafficLimitDesc
    java.lang.String getTrafficLimitId() -> getTrafficLimitId
    java.lang.String getTrafficLimitType() -> getTrafficLimitType
    void setCreateBy(java.lang.String) -> setCreateBy
    void setCreateDate(java.lang.String) -> setCreateDate
    void setModifyBy(java.lang.String) -> setModifyBy
    void setModifyDate(java.lang.String) -> setModifyDate
    void setSendTime(java.lang.String) -> setSendTime
    void setTrafficLimit(java.lang.String) -> setTrafficLimit
    void setTrafficLimitDesc(java.lang.String) -> setTrafficLimitDesc
    void setTrafficLimitId(java.lang.String) -> setTrafficLimitId
    void setTrafficLimitType(java.lang.String) -> setTrafficLimitType
    java.lang.String getTrafficStatus() -> getTrafficStatus
    void setTrafficStatus(java.lang.String) -> setTrafficStatus
com.foxconn.emm.bean.DeviceTrafficLimitInfo$TAG -> com.foxconn.emm.bean.DeviceTrafficLimitInfo$TAG:
    java.lang.String tag_createBy -> tag_createBy
    java.lang.String tag_createDate -> tag_createDate
    java.lang.String tag_modifyBy -> tag_modifyBy
    java.lang.String tag_modifyDate -> tag_modifyDate
    java.lang.String tag_sendTime -> tag_sendTime
    java.lang.String tag_trafficLimit -> tag_trafficLimit
    java.lang.String tag_trafficLimitDesc -> tag_trafficLimitDesc
    java.lang.String tag_trafficLimitId -> tag_trafficLimitId
    java.lang.String tag_trafficLimitType -> tag_trafficLimitType
    java.lang.String tag_trafficStatus -> tag_trafficStatus
    java.lang.String tag_msgType -> tag_msgType
com.foxconn.emm.bean.FileInfo -> com.foxconn.emm.bean.FileInfo:
    java.lang.String id -> id
    java.lang.String content -> content
    java.lang.String subject -> subject
    java.lang.String sendTime -> sendTime
    java.lang.String msgType -> msgType
    java.lang.String password -> password
    java.lang.String contact -> contact
    java.lang.String deadline -> deadline
    java.lang.String fileUrl -> fileUrl
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    java.lang.String getSendTime() -> getSendTime
    void setSendTime(java.lang.String) -> setSendTime
    java.lang.String getMsgType() -> getMsgType
    void setMsgType(java.lang.String) -> setMsgType
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getContact() -> getContact
    void setContact(java.lang.String) -> setContact
    java.lang.String getDeadline() -> getDeadline
    void setDeadline(java.lang.String) -> setDeadline
    java.lang.String getFileUrl() -> getFileUrl
    void setFileUrl(java.lang.String) -> setFileUrl
    java.lang.String toString() -> toString
    java.lang.String getFilePath() -> getFilePath
    java.lang.String getFileName(java.lang.String,java.lang.String) -> getFileName
com.foxconn.emm.bean.FileInfo$TAG -> com.foxconn.emm.bean.FileInfo$TAG:
    java.lang.String ID -> ID
    java.lang.String CONTENT -> CONTENT
    java.lang.String SUBJECT -> SUBJECT
    java.lang.String SENDTIME -> SENDTIME
    java.lang.String MSGTYPE -> MSGTYPE
    java.lang.String PASSWORD -> PASSWORD
    java.lang.String CONTACT -> CONTACT
    java.lang.String DEADLINE -> DEADLINE
    java.lang.String FILEURL -> FILEURL
    java.lang.String URL -> URL
com.foxconn.emm.bean.InstalledAppInfo -> com.foxconn.emm.bean.InstalledAppInfo:
    java.lang.String appName -> appName
    java.lang.String versionName -> versionName
    android.graphics.drawable.Drawable drawable -> drawable
    java.lang.Boolean isUserApp -> isUserApp
    java.lang.String packageName -> packageName
    int versionCode -> versionCode
    int limittype -> limittype
    java.lang.String getPackageName() -> getPackageName
    void setPackageName(java.lang.String) -> setPackageName
    java.lang.String getAppName() -> getAppName
    java.lang.Boolean getIsUserApp() -> getIsUserApp
    void setIsUserApp(java.lang.Boolean) -> setIsUserApp
    void setAppName(java.lang.String) -> setAppName
    android.graphics.drawable.Drawable getDrawable(android.content.Context) -> getDrawable
    void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    java.lang.String getVersionName() -> getVersionName
    void setVersionName(java.lang.String) -> setVersionName
    int getVersionCode() -> getVersionCode
    void setVersionCode(int) -> setVersionCode
    int getLimittype() -> getLimittype
    void setLimittype(int) -> setLimittype
com.foxconn.emm.bean.InstalledAppInputParams -> com.foxconn.emm.bean.InstalledAppInputParams:
    java.lang.String packageName -> packageName
    int versionCode -> versionCode
    java.lang.String appName -> appName
    java.lang.String versionName -> versionName
    java.lang.String isRunning -> isRunning
    java.lang.String toString() -> toString
    java.lang.String getPackageName() -> getPackageName
    void setPackageName(java.lang.String) -> setPackageName
    int getVersionCode() -> getVersionCode
    void setVersionCode(int) -> setVersionCode
    java.lang.String getAppName() -> getAppName
    void setAppName(java.lang.String) -> setAppName
    java.lang.String getVersionName() -> getVersionName
    void setVersionName(java.lang.String) -> setVersionName
    java.lang.String getIsRunning() -> getIsRunning
    void setIsRunning(java.lang.String) -> setIsRunning
com.foxconn.emm.bean.InstalledAppInputParams$TAG -> com.foxconn.emm.bean.InstalledAppInputParams$TAG:
    java.lang.String software_name -> software_name
    java.lang.String software_version -> software_version
    java.lang.String software_size -> software_size
    java.lang.String software_running -> software_running
    java.lang.String packagename -> packagename
com.foxconn.emm.bean.LimitListInfo -> com.foxconn.emm.bean.LimitListInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String sendTime -> sendTime
    java.lang.String msgType -> msgType
    java.lang.String packName -> packName
    java.lang.String limitType -> limitType
    java.lang.String limitLimitType -> limitLimitType
    java.lang.String limitPwdTime -> limitPwdTime
    java.lang.String limitEnableTime -> limitEnableTime
    java.lang.String limitDisableTime -> limitDisableTime
    java.lang.String desc -> desc
    java.lang.String getSendTime() -> getSendTime
    void setSendTime(java.lang.String) -> setSendTime
    java.lang.String getMsgType() -> getMsgType
    void setMsgType(java.lang.String) -> setMsgType
    java.lang.String getPackName() -> getPackName
    void setPackName(java.lang.String) -> setPackName
    java.lang.String getLimitType() -> getLimitType
    void setLimitType(java.lang.String) -> setLimitType
    java.lang.String getLimitLimitType() -> getLimitLimitType
    void setLimitLimitType(java.lang.String) -> setLimitLimitType
    java.lang.String getLimitPwdTime() -> getLimitPwdTime
    void setLimitPwdTime(java.lang.String) -> setLimitPwdTime
    java.lang.String getLimitEnableTime() -> getLimitEnableTime
    void setLimitEnableTime(java.lang.String) -> setLimitEnableTime
    java.lang.String getLimitDisableTime() -> getLimitDisableTime
    void setLimitDisableTime(java.lang.String) -> setLimitDisableTime
    java.lang.String getDesc() -> getDesc
    void setDesc(java.lang.String) -> setDesc
    java.lang.String toString() -> toString
com.foxconn.emm.bean.LimitListInfo$TAG -> com.foxconn.emm.bean.LimitListInfo$TAG:
    java.lang.String SENDTIME -> SENDTIME
    java.lang.String MSGTYPE -> MSGTYPE
    java.lang.String LIMITLISTAPP -> LIMITLISTAPP
    java.lang.String LIMITTYPE -> LIMITTYPE
    java.lang.String LIMITLIMITTYPE -> LIMITLIMITTYPE
    java.lang.String LIMITPWDTIME -> LIMITPWDTIME
    java.lang.String LIMITENABLETIME -> LIMITENABLETIME
    java.lang.String LIMITDISABLETIME -> LIMITDISABLETIME
    java.lang.String DESC -> DESC
    java.lang.String PACKNAME -> PACKNAME
    java.lang.String ENABLE_TIME -> ENABLE_TIME
    java.lang.String DISABLE_TIME -> DISABLE_TIME
com.foxconn.emm.bean.MsgCommonInfo -> com.foxconn.emm.bean.MsgCommonInfo:
    java.lang.String msgType -> msgType
    java.lang.String sendTime -> sendTime
    java.lang.String lockPwd -> lockPwd
    java.lang.String getMsgType() -> getMsgType
    void setMsgType(java.lang.String) -> setMsgType
    java.lang.String getSendTime() -> getSendTime
    void setSendTime(java.lang.String) -> setSendTime
    java.lang.String getLockPwd() -> getLockPwd
    void setLockPwd(java.lang.String) -> setLockPwd
    java.lang.String toString() -> toString
com.foxconn.emm.bean.MsgCommonInfo$TAG -> com.foxconn.emm.bean.MsgCommonInfo$TAG:
    java.lang.String MSGTYPE -> MSGTYPE
    java.lang.String SENDTIME -> SENDTIME
    java.lang.String LOCKPWD -> LOCKPWD
com.foxconn.emm.bean.MsgInfo -> com.foxconn.emm.bean.MsgInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String id -> id
    java.lang.String command -> command
    java.lang.String fname_title -> fname_title
    java.lang.String code_place -> code_place
    java.lang.String receive_date -> receive_date
    java.lang.String msg_content -> msg_content
    java.lang.String isallday -> isallday
    java.lang.String date_start -> date_start
    java.lang.String date_end -> date_end
    java.lang.String folder_name -> folder_name
    java.lang.String despw -> despw
    java.lang.String descontact -> descontact
    java.lang.String TB_NAME -> TB_NAME
    java.lang.String ID -> ID
    java.lang.String COMMAND -> COMMAND
    java.lang.String FNAME_TITLE -> FNAME_TITLE
    java.lang.String CODE_PLACE -> CODE_PLACE
    java.lang.String RECEIVE_DATE -> RECEIVE_DATE
    java.lang.String MSG_CONTENT -> MSG_CONTENT
    java.lang.String ISALLDAY -> ISALLDAY
    java.lang.String DATE_START -> DATE_START
    java.lang.String DATE_END -> DATE_END
    java.lang.String FOLDER_NAME -> FOLDER_NAME
    java.lang.String DESPW -> DESPW
    java.lang.String DESCONTACT -> DESCONTACT
    java.lang.String FILE_PATH -> FILE_PATH
    java.lang.String DECRYPT_PATH -> DECRYPT_PATH
    java.lang.String toString() -> toString
    java.lang.String getFILE_Path() -> getFILE_Path
    java.lang.String getDECRYPT_Path() -> getDECRYPT_Path
    android.graphics.drawable.Drawable getFileImg(java.lang.String) -> getFileImg
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getMsg_content() -> getMsg_content
    void setMsg_content(java.lang.String) -> setMsg_content
    java.lang.String getCommand() -> getCommand
    void setCommand(java.lang.String) -> setCommand
    java.lang.String getFname_title() -> getFname_title
    void setFname_title(java.lang.String) -> setFname_title
    java.lang.String getCode_place() -> getCode_place
    void setCode_place(java.lang.String) -> setCode_place
    java.lang.String getReceive_date() -> getReceive_date
    void setReceive_date(java.lang.String) -> setReceive_date
    java.lang.String getIsallday() -> getIsallday
    void setIsallday(java.lang.String) -> setIsallday
    java.lang.String getDate_start() -> getDate_start
    void setDate_start(java.lang.String) -> setDate_start
    java.lang.String getDate_end() -> getDate_end
    void setDate_end(java.lang.String) -> setDate_end
    java.lang.String getFolder_name() -> getFolder_name
    void setFolder_name(java.lang.String) -> setFolder_name
    java.lang.String getDespw() -> getDespw
    void setDespw(java.lang.String) -> setDespw
    java.lang.String getDescontact() -> getDescontact
    void setDescontact(java.lang.String) -> setDescontact
com.foxconn.emm.bean.NotificationInfo -> com.foxconn.emm.bean.NotificationInfo:
    java.lang.String id -> id
    java.lang.String content -> content
    java.lang.String sendTime -> sendTime
    java.lang.String msgType -> msgType
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getSendTime() -> getSendTime
    void setSendTime(java.lang.String) -> setSendTime
    java.lang.String getMsgType() -> getMsgType
    void setMsgType(java.lang.String) -> setMsgType
    java.lang.String toString() -> toString
com.foxconn.emm.bean.NotificationInfo$TAG -> com.foxconn.emm.bean.NotificationInfo$TAG:
    java.lang.String ID -> ID
    java.lang.String CONTENT -> CONTENT
    java.lang.String SENDTIME -> SENDTIME
    java.lang.String MSGTYPE -> MSGTYPE
com.foxconn.emm.bean.PicInfo -> com.foxconn.emm.bean.PicInfo:
    java.lang.String id -> id
    java.lang.String content -> content
    java.lang.String img_list -> img_list
    java.lang.String subject -> subject
    java.lang.String sendTime -> sendTime
    java.lang.String msgType -> msgType
    java.lang.String password -> password
    java.lang.String contact -> contact
    java.lang.String deadline -> deadline
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getImg_list() -> getImg_list
    void setImg_list(java.lang.String) -> setImg_list
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    java.lang.String getSendTime() -> getSendTime
    void setSendTime(java.lang.String) -> setSendTime
    java.lang.String getMsgType() -> getMsgType
    void setMsgType(java.lang.String) -> setMsgType
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getContact() -> getContact
    void setContact(java.lang.String) -> setContact
    java.lang.String getDeadline() -> getDeadline
    void setDeadline(java.lang.String) -> setDeadline
    java.lang.String getPicFilePath() -> getPicFilePath
    java.lang.String getPicPath(java.lang.String,int,java.lang.String,java.lang.String) -> getPicPath
    java.lang.String getFileName(java.lang.String,java.lang.String) -> getFileName
    java.lang.String getPicName(java.lang.String,int,java.lang.String) -> getPicName
    java.lang.String toString() -> toString
com.foxconn.emm.bean.PicInfo$TAG -> com.foxconn.emm.bean.PicInfo$TAG:
    java.lang.String ID -> ID
    java.lang.String CONTENT -> CONTENT
    java.lang.String IMG_LIST -> IMG_LIST
    java.lang.String SUBJECT -> SUBJECT
    java.lang.String SENDTIME -> SENDTIME
    java.lang.String MSGTYPE -> MSGTYPE
    java.lang.String PASSWORD -> PASSWORD
    java.lang.String CONTACT -> CONTACT
    java.lang.String DEADLINE -> DEADLINE
    java.lang.String URL -> URL
    com.foxconn.emm.bean.PicInfo this$0 -> this$0
com.foxconn.emm.bean.PolicyInfo -> com.foxconn.emm.bean.PolicyInfo:
    java.lang.String sendTime -> sendTime
    java.lang.String sendIp -> sendIp
    java.lang.String sendnote -> sendnote
    java.lang.String DEFAULTPOLICYNO -> DEFAULTPOLICYNO
    com.foxconn.emm.bean.PolicyInfo$Auto_Synch auto_Synch -> auto_Synch
    java.lang.String COMMAND -> COMMAND
    java.lang.String DAY_OF_WEEK -> DAY_OF_WEEK
    com.foxconn.emm.bean.PolicyInfo$Enable_Bluetooth enable_Bluetooth -> enable_Bluetooth
    com.foxconn.emm.bean.PolicyInfo$Enable_Camera enable_Camera -> enable_Camera
    com.foxconn.emm.bean.PolicyInfo$Enable_Google_play enable_Google_play -> enable_Google_play
    com.foxconn.emm.bean.PolicyInfo$Enable_SSID enable_SSID -> enable_SSID
    com.foxconn.emm.bean.PolicyInfo$Enable_USB enable_USB -> enable_USB
    com.foxconn.emm.bean.PolicyInfo$Enable_Wifi enable_Wifi -> enable_Wifi
    java.lang.String END_TIME -> END_TIME
    com.foxconn.emm.bean.PolicyInfo$PW_Error_Count error_Count -> error_Count
    com.foxconn.emm.bean.PolicyInfo$Hidden_SSID hidden_SSID -> hidden_SSID
    com.foxconn.emm.bean.PolicyInfo$PW_Lock_Time lock_Time -> lock_Time
    java.lang.String POLICY_ID -> POLICY_ID
    com.foxconn.emm.bean.PolicyInfo$SSID_Pre_sharedkey pre_sharedkey -> pre_sharedkey
    com.foxconn.emm.bean.PolicyInfo$PW_Format pw_format -> pw_format
    com.foxconn.emm.bean.PolicyInfo$PW_Length pwLength -> pwLength
    com.foxconn.emm.bean.PolicyInfo$Required_PW required_PW -> required_PW
    com.foxconn.emm.bean.PolicyInfo$PW_Reset_Period reset_Period -> reset_Period
    com.foxconn.emm.bean.PolicyInfo$Scan_Bluetooth scan_Bluetooth -> scan_Bluetooth
    com.foxconn.emm.bean.PolicyInfo$Scan_Devices scan_Devices -> scan_Devices
    java.lang.String SEND_TIME -> SEND_TIME
    com.foxconn.emm.bean.PolicyInfo$SSID ssid -> ssid
    com.foxconn.emm.bean.PolicyInfo$SSID_Security ssid_security -> ssid_security
    java.lang.String START_TIME -> START_TIME
    com.foxconn.emm.bean.PolicyInfo$SSID_WEP_Key1 wep_Key1 -> wep_Key1
    com.foxconn.emm.bean.PolicyInfo getDefaultPolicy() -> getDefaultPolicy
    com.foxconn.emm.bean.PolicyInfo getPolicyInfoFromJson(java.lang.String) -> getPolicyInfoFromJson
    com.foxconn.emm.bean.PolicyInfo getPolicyInfoFromQRJson(java.lang.String) -> getPolicyInfoFromQRJson
    com.foxconn.emm.bean.PolicyInfo$Auto_Synch getAuto_Synch() -> getAuto_Synch
    com.foxconn.emm.bean.PolicyInfo$Enable_Bluetooth getEnable_Bluetooth() -> getEnable_Bluetooth
    com.foxconn.emm.bean.PolicyInfo$Enable_Camera getEnable_Camera() -> getEnable_Camera
    com.foxconn.emm.bean.PolicyInfo$Enable_Google_play getEnable_Google_play() -> getEnable_Google_play
    com.foxconn.emm.bean.PolicyInfo$Enable_SSID getEnable_SSID() -> getEnable_SSID
    com.foxconn.emm.bean.PolicyInfo$Enable_USB getEnable_USB() -> getEnable_USB
    com.foxconn.emm.bean.PolicyInfo$Enable_Wifi getEnable_Wifi() -> getEnable_Wifi
    com.foxconn.emm.bean.PolicyInfo$PW_Error_Count getError_Count() -> getError_Count
    com.foxconn.emm.bean.PolicyInfo$Hidden_SSID getHidden_SSID() -> getHidden_SSID
    com.foxconn.emm.bean.PolicyInfo$PW_Lock_Time getLock_Time() -> getLock_Time
    com.foxconn.emm.bean.PolicyInfo$SSID_Pre_sharedkey getPre_sharedkey() -> getPre_sharedkey
    com.foxconn.emm.bean.PolicyInfo$PW_Format getPw_format() -> getPw_format
    com.foxconn.emm.bean.PolicyInfo$PW_Length getPwLength() -> getPwLength
    com.foxconn.emm.bean.PolicyInfo$Required_PW getRequired_PW() -> getRequired_PW
    com.foxconn.emm.bean.PolicyInfo$PW_Reset_Period getReset_Period() -> getReset_Period
    com.foxconn.emm.bean.PolicyInfo$Scan_Bluetooth getScan_Bluetooth() -> getScan_Bluetooth
    com.foxconn.emm.bean.PolicyInfo$Scan_Devices getScan_Devices() -> getScan_Devices
    com.foxconn.emm.bean.PolicyInfo$SSID getSsid() -> getSsid
    com.foxconn.emm.bean.PolicyInfo$SSID_Security getSsid_security() -> getSsid_security
    com.foxconn.emm.bean.PolicyInfo$SSID_WEP_Key1 getWep_Key1() -> getWep_Key1
    void setAuto_Synch(com.foxconn.emm.bean.PolicyInfo$Auto_Synch) -> setAuto_Synch
    void setEnable_Bluetooth(com.foxconn.emm.bean.PolicyInfo$Enable_Bluetooth) -> setEnable_Bluetooth
    void setEnable_Camera(com.foxconn.emm.bean.PolicyInfo$Enable_Camera) -> setEnable_Camera
    void setEnable_Google_play(com.foxconn.emm.bean.PolicyInfo$Enable_Google_play) -> setEnable_Google_play
    void setEnable_SSID(com.foxconn.emm.bean.PolicyInfo$Enable_SSID) -> setEnable_SSID
    void setEnable_USB(com.foxconn.emm.bean.PolicyInfo$Enable_USB) -> setEnable_USB
    void setEnable_Wifi(com.foxconn.emm.bean.PolicyInfo$Enable_Wifi) -> setEnable_Wifi
    void setError_Count(com.foxconn.emm.bean.PolicyInfo$PW_Error_Count) -> setError_Count
    void setHidden_SSID(com.foxconn.emm.bean.PolicyInfo$Hidden_SSID) -> setHidden_SSID
    void setLock_Time(com.foxconn.emm.bean.PolicyInfo$PW_Lock_Time) -> setLock_Time
    void setPre_sharedkey(com.foxconn.emm.bean.PolicyInfo$SSID_Pre_sharedkey) -> setPre_sharedkey
    void setPw_format(com.foxconn.emm.bean.PolicyInfo$PW_Format) -> setPw_format
    void setPwLength(com.foxconn.emm.bean.PolicyInfo$PW_Length) -> setPwLength
    void setRequired_PW(com.foxconn.emm.bean.PolicyInfo$Required_PW) -> setRequired_PW
    void setReset_Period(com.foxconn.emm.bean.PolicyInfo$PW_Reset_Period) -> setReset_Period
    void setScan_Bluetooth(com.foxconn.emm.bean.PolicyInfo$Scan_Bluetooth) -> setScan_Bluetooth
    void setScan_Devices(com.foxconn.emm.bean.PolicyInfo$Scan_Devices) -> setScan_Devices
    void setSsid(com.foxconn.emm.bean.PolicyInfo$SSID) -> setSsid
    void setSsid_security(com.foxconn.emm.bean.PolicyInfo$SSID_Security) -> setSsid_security
    void setWep_Key1(com.foxconn.emm.bean.PolicyInfo$SSID_WEP_Key1) -> setWep_Key1
    java.lang.String toString() -> toString
    java.lang.String getSendTime() -> getSendTime
    void setSendTime(java.lang.String) -> setSendTime
    java.lang.String getSendIp() -> getSendIp
    void setSendIp(java.lang.String) -> setSendIp
    java.lang.String getSendnote() -> getSendnote
    void setSendnote(java.lang.String) -> setSendnote
com.foxconn.emm.bean.PolicyInfo$Auto_Synch -> com.foxconn.emm.bean.PolicyInfo$Auto_Synch:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$Auto_Synch,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$Auto_Synch,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$Enable_Bluetooth -> com.foxconn.emm.bean.PolicyInfo$Enable_Bluetooth:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$Enable_Bluetooth,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$Enable_Bluetooth,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$Enable_Camera -> com.foxconn.emm.bean.PolicyInfo$Enable_Camera:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$Enable_Camera,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$Enable_Camera,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$Enable_Google_play -> com.foxconn.emm.bean.PolicyInfo$Enable_Google_play:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$Enable_Google_play,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$Enable_Google_play,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$Enable_SSID -> com.foxconn.emm.bean.PolicyInfo$Enable_SSID:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$Enable_SSID,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$Enable_SSID,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$Enable_USB -> com.foxconn.emm.bean.PolicyInfo$Enable_USB:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$Enable_USB,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$Enable_USB,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$Enable_Wifi -> com.foxconn.emm.bean.PolicyInfo$Enable_Wifi:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$Enable_Wifi,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$Enable_Wifi,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$Hidden_SSID -> com.foxconn.emm.bean.PolicyInfo$Hidden_SSID:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$Hidden_SSID,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$Hidden_SSID,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$PW_Error_Count -> com.foxconn.emm.bean.PolicyInfo$PW_Error_Count:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$PW_Error_Count,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$PW_Error_Count,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$PW_Format -> com.foxconn.emm.bean.PolicyInfo$PW_Format:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$PW_Format,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$PW_Format,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$PW_Length -> com.foxconn.emm.bean.PolicyInfo$PW_Length:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$PW_Length,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$PW_Length,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$PW_Lock_Time -> com.foxconn.emm.bean.PolicyInfo$PW_Lock_Time:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$PW_Lock_Time,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$PW_Lock_Time,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$PW_Reset_Period -> com.foxconn.emm.bean.PolicyInfo$PW_Reset_Period:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$PW_Reset_Period,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$PW_Reset_Period,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$Required_PW -> com.foxconn.emm.bean.PolicyInfo$Required_PW:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$Required_PW,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$Required_PW,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$SSID -> com.foxconn.emm.bean.PolicyInfo$SSID:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$SSID,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$SSID,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$SSID_Pre_sharedkey -> com.foxconn.emm.bean.PolicyInfo$SSID_Pre_sharedkey:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$SSID_Pre_sharedkey,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$SSID_Pre_sharedkey,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$SSID_Security -> com.foxconn.emm.bean.PolicyInfo$SSID_Security:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$SSID_Security,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$SSID_Security,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$SSID_WEP_Key1 -> com.foxconn.emm.bean.PolicyInfo$SSID_WEP_Key1:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$SSID_WEP_Key1,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$SSID_WEP_Key1,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$Scan_Bluetooth -> com.foxconn.emm.bean.PolicyInfo$Scan_Bluetooth:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$Scan_Bluetooth,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$Scan_Bluetooth,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$Scan_Devices -> com.foxconn.emm.bean.PolicyInfo$Scan_Devices:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.PolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.PolicyInfo$Scan_Devices,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.PolicyInfo$Scan_Devices,java.lang.String) -> access$1
com.foxconn.emm.bean.PolicyInfo$TAG -> com.foxconn.emm.bean.PolicyInfo$TAG:
    java.lang.String tag_Auto_Synch -> tag_Auto_Synch
    java.lang.String tag_COMMAND -> tag_COMMAND
    java.lang.String tag_Enable_Bluetooth -> tag_Enable_Bluetooth
    java.lang.String tag_Enable_Camera -> tag_Enable_Camera
    java.lang.String tag_Enable_GoolgePlay -> tag_Enable_GoolgePlay
    java.lang.String tag_Enable_SSID -> tag_Enable_SSID
    java.lang.String tag_Enable_USB -> tag_Enable_USB
    java.lang.String tag_Enable_Wifi -> tag_Enable_Wifi
    java.lang.String tag_Hidden_SSID -> tag_Hidden_SSID
    java.lang.String tag_itemFlag -> tag_itemFlag
    java.lang.String tag_itemValue -> tag_itemValue
    java.lang.String tag_policyId -> tag_policyId
    java.lang.String tag_PW_Error_Count -> tag_PW_Error_Count
    java.lang.String tag_PW_Format -> tag_PW_Format
    java.lang.String tag_PW_Length -> tag_PW_Length
    java.lang.String tag_PW_Lock_Time -> tag_PW_Lock_Time
    java.lang.String tag_PW_Reset_Period -> tag_PW_Reset_Period
    java.lang.String tag_Required_PW -> tag_Required_PW
    java.lang.String tag_Scan_Bluetooth -> tag_Scan_Bluetooth
    java.lang.String tag_Scan_Devices -> tag_Scan_Devices
    java.lang.String tag_SSID -> tag_SSID
    java.lang.String tag_SSID_Pre_sharedkey -> tag_SSID_Pre_sharedkey
    java.lang.String tag_SSID_Security -> tag_SSID_Security
    java.lang.String tag_SSID_WEP_Key1 -> tag_SSID_WEP_Key1
    java.lang.String tag_success -> tag_success
    java.lang.String tag_sendnote -> tag_sendnote
    java.lang.String tag_sendip -> tag_sendip
    java.lang.String tag_sendtime -> tag_sendtime
com.foxconn.emm.bean.QRPolicyInfo -> com.foxconn.emm.bean.QRPolicyInfo:
    java.lang.String sendTime -> sendTime
    java.lang.String sendnote -> sendnote
    java.lang.String DEFAULTPOLICYNO -> DEFAULTPOLICYNO
    com.foxconn.emm.bean.QRPolicyInfo$Auto_Synch auto_Synch -> auto_Synch
    com.foxconn.emm.bean.QRPolicyInfo$Enable_Bluetooth enable_Bluetooth -> enable_Bluetooth
    com.foxconn.emm.bean.QRPolicyInfo$Enable_Camera enable_Camera -> enable_Camera
    com.foxconn.emm.bean.QRPolicyInfo$Enable_Google_play enable_Google_play -> enable_Google_play
    com.foxconn.emm.bean.QRPolicyInfo$Enable_USB enable_USB -> enable_USB
    com.foxconn.emm.bean.QRPolicyInfo$Enable_Wifi enable_Wifi -> enable_Wifi
    com.foxconn.emm.bean.QRPolicyInfo$PW_Error_Count error_Count -> error_Count
    com.foxconn.emm.bean.QRPolicyInfo$Hidden_SSID hidden_SSID -> hidden_SSID
    com.foxconn.emm.bean.QRPolicyInfo$PW_Lock_Time lock_Time -> lock_Time
    com.foxconn.emm.bean.QRPolicyInfo$SSID_Pre_sharedkey pre_sharedkey -> pre_sharedkey
    com.foxconn.emm.bean.QRPolicyInfo$PW_Format pw_format -> pw_format
    com.foxconn.emm.bean.QRPolicyInfo$PW_Length pwLength -> pwLength
    com.foxconn.emm.bean.QRPolicyInfo$Required_PW required_PW -> required_PW
    com.foxconn.emm.bean.QRPolicyInfo$PW_Reset_Period reset_Period -> reset_Period
    com.foxconn.emm.bean.QRPolicyInfo$Scan_Devices scan_Devices -> scan_Devices
    com.foxconn.emm.bean.QRPolicyInfo$SSID ssid -> ssid
    com.foxconn.emm.bean.QRPolicyInfo$SSID_Security ssid_security -> ssid_security
    com.foxconn.emm.bean.QRPolicyInfo$SSID_WEP_Key1 wep_Key1 -> wep_Key1
    com.foxconn.emm.bean.QRPolicyInfo getDefaultQRPolicy() -> getDefaultQRPolicy
    com.foxconn.emm.bean.QRPolicyInfo$Auto_Synch getAuto_Synch() -> getAuto_Synch
    com.foxconn.emm.bean.QRPolicyInfo$Enable_Bluetooth getEnable_Bluetooth() -> getEnable_Bluetooth
    com.foxconn.emm.bean.QRPolicyInfo$Enable_Camera getEnable_Camera() -> getEnable_Camera
    com.foxconn.emm.bean.QRPolicyInfo$Enable_Google_play getEnable_Google_play() -> getEnable_Google_play
    com.foxconn.emm.bean.QRPolicyInfo$Enable_USB getEnable_USB() -> getEnable_USB
    com.foxconn.emm.bean.QRPolicyInfo$Enable_Wifi getEnable_Wifi() -> getEnable_Wifi
    com.foxconn.emm.bean.QRPolicyInfo$PW_Error_Count getError_Count() -> getError_Count
    com.foxconn.emm.bean.QRPolicyInfo$Hidden_SSID getHidden_SSID() -> getHidden_SSID
    com.foxconn.emm.bean.QRPolicyInfo$PW_Lock_Time getLock_Time() -> getLock_Time
    com.foxconn.emm.bean.QRPolicyInfo$SSID_Pre_sharedkey getPre_sharedkey() -> getPre_sharedkey
    com.foxconn.emm.bean.QRPolicyInfo$PW_Format getPw_format() -> getPw_format
    com.foxconn.emm.bean.QRPolicyInfo$PW_Length getPwLength() -> getPwLength
    com.foxconn.emm.bean.QRPolicyInfo$Required_PW getRequired_PW() -> getRequired_PW
    com.foxconn.emm.bean.QRPolicyInfo$PW_Reset_Period getReset_Period() -> getReset_Period
    com.foxconn.emm.bean.QRPolicyInfo$Scan_Devices getScan_Devices() -> getScan_Devices
    com.foxconn.emm.bean.QRPolicyInfo$SSID getSsid() -> getSsid
    com.foxconn.emm.bean.QRPolicyInfo$SSID_Security getSsid_security() -> getSsid_security
    com.foxconn.emm.bean.QRPolicyInfo$SSID_WEP_Key1 getWep_Key1() -> getWep_Key1
    void setAuto_Synch(com.foxconn.emm.bean.QRPolicyInfo$Auto_Synch) -> setAuto_Synch
    void setEnable_Bluetooth(com.foxconn.emm.bean.QRPolicyInfo$Enable_Bluetooth) -> setEnable_Bluetooth
    void setEnable_Camera(com.foxconn.emm.bean.QRPolicyInfo$Enable_Camera) -> setEnable_Camera
    void setEnable_Google_play(com.foxconn.emm.bean.QRPolicyInfo$Enable_Google_play) -> setEnable_Google_play
    void setEnable_USB(com.foxconn.emm.bean.QRPolicyInfo$Enable_USB) -> setEnable_USB
    void setEnable_Wifi(com.foxconn.emm.bean.QRPolicyInfo$Enable_Wifi) -> setEnable_Wifi
    void setError_Count(com.foxconn.emm.bean.QRPolicyInfo$PW_Error_Count) -> setError_Count
    void setHidden_SSID(com.foxconn.emm.bean.QRPolicyInfo$Hidden_SSID) -> setHidden_SSID
    void setLock_Time(com.foxconn.emm.bean.QRPolicyInfo$PW_Lock_Time) -> setLock_Time
    void setPre_sharedkey(com.foxconn.emm.bean.QRPolicyInfo$SSID_Pre_sharedkey) -> setPre_sharedkey
    void setPw_format(com.foxconn.emm.bean.QRPolicyInfo$PW_Format) -> setPw_format
    void setPwLength(com.foxconn.emm.bean.QRPolicyInfo$PW_Length) -> setPwLength
    void setRequired_PW(com.foxconn.emm.bean.QRPolicyInfo$Required_PW) -> setRequired_PW
    void setReset_Period(com.foxconn.emm.bean.QRPolicyInfo$PW_Reset_Period) -> setReset_Period
    void setScan_Devices(com.foxconn.emm.bean.QRPolicyInfo$Scan_Devices) -> setScan_Devices
    void setSsid(com.foxconn.emm.bean.QRPolicyInfo$SSID) -> setSsid
    void setSsid_security(com.foxconn.emm.bean.QRPolicyInfo$SSID_Security) -> setSsid_security
    void setWep_Key1(com.foxconn.emm.bean.QRPolicyInfo$SSID_WEP_Key1) -> setWep_Key1
    java.lang.String getSendTime() -> getSendTime
    void setSendTime(java.lang.String) -> setSendTime
    java.lang.String getSendnote() -> getSendnote
    void setSendnote(java.lang.String) -> setSendnote
com.foxconn.emm.bean.QRPolicyInfo$Auto_Synch -> com.foxconn.emm.bean.QRPolicyInfo$Auto_Synch:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$Auto_Synch,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$Auto_Synch,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$Enable_Bluetooth -> com.foxconn.emm.bean.QRPolicyInfo$Enable_Bluetooth:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$Enable_Bluetooth,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$Enable_Bluetooth,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$Enable_Camera -> com.foxconn.emm.bean.QRPolicyInfo$Enable_Camera:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$Enable_Camera,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$Enable_Camera,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$Enable_Google_play -> com.foxconn.emm.bean.QRPolicyInfo$Enable_Google_play:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$Enable_Google_play,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$Enable_Google_play,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$Enable_USB -> com.foxconn.emm.bean.QRPolicyInfo$Enable_USB:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$Enable_USB,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$Enable_USB,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$Enable_Wifi -> com.foxconn.emm.bean.QRPolicyInfo$Enable_Wifi:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$Enable_Wifi,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$Enable_Wifi,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$Hidden_SSID -> com.foxconn.emm.bean.QRPolicyInfo$Hidden_SSID:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$Hidden_SSID,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$Hidden_SSID,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$PW_Error_Count -> com.foxconn.emm.bean.QRPolicyInfo$PW_Error_Count:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$PW_Error_Count,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$PW_Error_Count,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$PW_Format -> com.foxconn.emm.bean.QRPolicyInfo$PW_Format:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$PW_Format,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$PW_Format,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$PW_Length -> com.foxconn.emm.bean.QRPolicyInfo$PW_Length:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$PW_Length,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$PW_Length,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$PW_Lock_Time -> com.foxconn.emm.bean.QRPolicyInfo$PW_Lock_Time:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$PW_Lock_Time,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$PW_Lock_Time,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$PW_Reset_Period -> com.foxconn.emm.bean.QRPolicyInfo$PW_Reset_Period:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$PW_Reset_Period,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$PW_Reset_Period,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$Required_PW -> com.foxconn.emm.bean.QRPolicyInfo$Required_PW:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$Required_PW,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$Required_PW,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$SSID -> com.foxconn.emm.bean.QRPolicyInfo$SSID:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$SSID,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$SSID,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$SSID_Pre_sharedkey -> com.foxconn.emm.bean.QRPolicyInfo$SSID_Pre_sharedkey:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$SSID_Pre_sharedkey,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$SSID_Pre_sharedkey,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$SSID_Security -> com.foxconn.emm.bean.QRPolicyInfo$SSID_Security:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$SSID_Security,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$SSID_Security,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$SSID_WEP_Key1 -> com.foxconn.emm.bean.QRPolicyInfo$SSID_WEP_Key1:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$SSID_WEP_Key1,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$SSID_WEP_Key1,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$Scan_Devices -> com.foxconn.emm.bean.QRPolicyInfo$Scan_Devices:
    java.lang.String itemFlag -> itemFlag
    java.lang.String itemValue -> itemValue
    com.foxconn.emm.bean.QRPolicyInfo this$0 -> this$0
    java.lang.String getItemFlag() -> getItemFlag
    java.lang.String getItemValue() -> getItemValue
    void setItemFlag(java.lang.String) -> setItemFlag
    void setItemValue(java.lang.String) -> setItemValue
    java.lang.String toString() -> toString
    void access$0(com.foxconn.emm.bean.QRPolicyInfo$Scan_Devices,java.lang.String) -> access$0
    void access$1(com.foxconn.emm.bean.QRPolicyInfo$Scan_Devices,java.lang.String) -> access$1
com.foxconn.emm.bean.QRPolicyInfo$TAG -> com.foxconn.emm.bean.QRPolicyInfo$TAG:
    java.lang.String tag_Auto_Synch -> tag_Auto_Synch
    java.lang.String tag_Enable_Bluetooth -> tag_Enable_Bluetooth
    java.lang.String tag_Enable_Camera -> tag_Enable_Camera
    java.lang.String tag_Enable_GoolgePlay -> tag_Enable_GoolgePlay
    java.lang.String tag_Enable_USB -> tag_Enable_USB
    java.lang.String tag_Enable_Wifi -> tag_Enable_Wifi
    java.lang.String tag_Hidden_SSID -> tag_Hidden_SSID
    java.lang.String tag_itemFlag -> tag_itemFlag
    java.lang.String tag_itemValue -> tag_itemValue
    java.lang.String tag_policyId -> tag_policyId
    java.lang.String tag_PW_Error_Count -> tag_PW_Error_Count
    java.lang.String tag_PW_Format -> tag_PW_Format
    java.lang.String tag_PW_Length -> tag_PW_Length
    java.lang.String tag_PW_Lock_Time -> tag_PW_Lock_Time
    java.lang.String tag_PW_Reset_Period -> tag_PW_Reset_Period
    java.lang.String tag_Required_PW -> tag_Required_PW
    java.lang.String tag_Scan_Devices -> tag_Scan_Devices
    java.lang.String tag_SSID -> tag_SSID
    java.lang.String tag_SSID_Pre_sharedkey -> tag_SSID_Pre_sharedkey
    java.lang.String tag_SSID_Security -> tag_SSID_Security
    java.lang.String tag_SSID_WEP_Key1 -> tag_SSID_WEP_Key1
    java.lang.String tag_sendnote -> tag_sendnote
com.foxconn.emm.bean.RegResult -> com.foxconn.emm.bean.RegResult:
    java.lang.String success -> success
    java.lang.String msg -> msg
    java.lang.String code -> code
    java.lang.String flag -> flag
    void setSuccess(java.lang.String) -> setSuccess
    java.lang.String getSuccess() -> getSuccess
    java.lang.String toString() -> toString
    void setMsg(java.lang.String) -> setMsg
    java.lang.String getMsg() -> getMsg
    void setCode(java.lang.String) -> setCode
    java.lang.String getCode() -> getCode
    java.lang.String getFlag() -> getFlag
    void setFlag(java.lang.String) -> setFlag
com.foxconn.emm.bean.RegResult$TAG -> com.foxconn.emm.bean.RegResult$TAG:
    java.lang.String SUCCESS -> SUCCESS
    java.lang.String MSG -> MSG
    java.lang.String CODE -> CODE
    java.lang.String FLAG -> FLAG
    java.lang.String TRUE -> TRUE
    java.lang.String FALSE -> FALSE
    java.lang.String code_userinfo_notexists_0 -> code_userinfo_notexists_0
    java.lang.String code_registererror_1 -> code_registererror_1
    java.lang.String code_registersuccess_2 -> code_registersuccess_2
    java.lang.String code_notundercontrol_3 -> code_notundercontrol_3
    java.lang.String code_reregister_4 -> code_reregister_4
    java.lang.String code_reoldusername_5 -> code_reoldusername_5
com.foxconn.emm.bean.SysLicenseResult -> com.foxconn.emm.bean.SysLicenseResult:
    java.lang.String tag_code_success -> tag_code_success
    java.lang.String tag_code_fail_invalid -> tag_code_fail_invalid
    java.lang.String tag_code_fail_uplimit -> tag_code_fail_uplimit
    java.lang.String tag_code_fail_expire -> tag_code_fail_expire
    java.lang.String tag_success_success -> tag_success_success
    java.lang.String tag_success_fail -> tag_success_fail
    java.lang.String failureTime -> failureTime
    java.lang.String nowTime -> nowTime
    java.lang.String code -> code
    java.lang.String success -> success
    java.lang.String getFailureTime() -> getFailureTime
    void setFailureTime(java.lang.String) -> setFailureTime
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    java.lang.String getSuccess() -> getSuccess
    void setSuccess(java.lang.String) -> setSuccess
    java.lang.String getNowTime() -> getNowTime
    void setNowTime(java.lang.String) -> setNowTime
com.foxconn.emm.bean.SysTraffic -> com.foxconn.emm.bean.SysTraffic:
    long td -> td
    long tw -> tw
    long utd -> utd
    long tTime -> tTime
    int tday -> tday
    int tmonth -> tmonth
    int tyear -> tyear
    java.lang.String getTd() -> getTd
    void setTd(long) -> setTd
    java.lang.String toString() -> toString
    java.lang.String getTw() -> getTw
    void setTw(long) -> setTw
    java.lang.String getUtd() -> getUtd
    void setUtd(long) -> setUtd
    java.lang.String gettTime() -> gettTime
    void settTime(long) -> settTime
    int getTday() -> getTday
    void setTday(int) -> setTday
    int getTmonth() -> getTmonth
    void setTmonth(int) -> setTmonth
    int getTyear() -> getTyear
    void setTyear(int) -> setTyear
com.foxconn.emm.bean.SysTraffic$TAG -> com.foxconn.emm.bean.SysTraffic$TAG:
    java.lang.String tag_TD -> tag_TD
    java.lang.String tag_TW -> tag_TW
    java.lang.String tag_UTD -> tag_UTD
    java.lang.String tag_TTIME -> tag_TTIME
    java.lang.String tag_TDAY -> tag_TDAY
    java.lang.String tag_TMONTH -> tag_TMONTH
    java.lang.String tag_TYEAR -> tag_TYEAR
com.foxconn.emm.bean.TimerJSONPolicy -> com.foxconn.emm.bean.TimerJSONPolicy:
    java.lang.String DEFAULTPOLICYNO -> DEFAULTPOLICYNO
    java.lang.String IP -> IP
    java.lang.String COMMAND -> COMMAND
    java.lang.String POLICY_ID -> POLICY_ID
    java.lang.String PRIORITY -> PRIORITY
    java.lang.String Required_PW -> Required_PW
    java.lang.String PW_Format -> PW_Format
    java.lang.String PW_Length -> PW_Length
    java.lang.String PW_Error_Count -> PW_Error_Count
    java.lang.String PW_Lock_Time -> PW_Lock_Time
    java.lang.String PW_Reset_Period -> PW_Reset_Period
    java.lang.String Auto_Synch -> Auto_Synch
    java.lang.String ARoaming -> ARoaming
    java.lang.String Enable_Bluetooth -> Enable_Bluetooth
    java.lang.String Scan_Devices -> Scan_Devices
    java.lang.String Enable_Wifi -> Enable_Wifi
    java.lang.String Enable_SSID -> Enable_SSID
    java.lang.String SSID -> SSID
    java.lang.String Hidden_SSID -> Hidden_SSID
    java.lang.String SSID_Security -> SSID_Security
    java.lang.String SSID_Pre_sharedkey -> SSID_Pre_sharedkey
    java.lang.String SSID_WEP_Key1 -> SSID_WEP_Key1
    java.lang.String Enable_Camera -> Enable_Camera
    java.lang.String Enable_Google_play -> Enable_Google_play
    java.lang.String Enable_USB -> Enable_USB
    java.lang.String Hidden_APP -> Hidden_APP
    java.lang.String UPDATE_DATE -> UPDATE_DATE
    java.lang.String SEND_TIME -> SEND_TIME
    java.lang.String DAY_OF_WEEK -> DAY_OF_WEEK
    java.lang.String START_TIME -> START_TIME
    java.lang.String END_TIME -> END_TIME
    com.foxconn.emm.bean.TimerJSONPolicy reSetVal(com.foxconn.emm.bean.TimerJSONPolicy) -> reSetVal
    com.foxconn.emm.bean.TimerJSONPolicy getNewPolicy() -> getNewPolicy
    com.foxconn.emm.bean.TimerJSONPolicy getDefPolicy() -> getDefPolicy
    com.foxconn.emm.bean.TimerJSONPolicy getNullPolicy() -> getNullPolicy
    com.foxconn.emm.bean.TimerJSONPolicy getAllUsePolicy() -> getAllUsePolicy
    com.foxconn.emm.bean.TimerJSONPolicy getTimerJSONPolicy(java.lang.String) -> getTimerJSONPolicy
    java.lang.String convertToJson(java.lang.String) -> convertToJson
    java.lang.String convertToTreeJson(java.lang.Object) -> convertToTreeJson
    java.lang.String getUpdateDate() -> getUpdateDate
    void setUpdateDate(java.lang.String) -> setUpdateDate
    void SetPolicyID(java.lang.String) -> SetPolicyID
    java.lang.String getPolicyID() -> getPolicyID
    void setPriority(java.lang.String) -> setPriority
    java.lang.String getPriority() -> getPriority
    void setRequiredPW(java.lang.String) -> setRequiredPW
    java.lang.String getRequiredPW() -> getRequiredPW
    void setPWFormat(java.lang.String) -> setPWFormat
    java.lang.String getPWFormat() -> getPWFormat
    void setPWLength(java.lang.String) -> setPWLength
    java.lang.String getPWLength() -> getPWLength
    void setPWErrorCount(java.lang.String) -> setPWErrorCount
    java.lang.String getPWErrorCount() -> getPWErrorCount
    void setPWLockTime(java.lang.String) -> setPWLockTime
    java.lang.String getPWLockTime() -> getPWLockTime
    void setPWRestPeriod(java.lang.String) -> setPWRestPeriod
    java.lang.String getPWRestPeriod() -> getPWRestPeriod
    void setAutoSynch(java.lang.String) -> setAutoSynch
    java.lang.String getAutoSynch() -> getAutoSynch
    void setARoaming(java.lang.String) -> setARoaming
    java.lang.String getARoaming() -> getARoaming
    void setEnableBT(java.lang.String) -> setEnableBT
    java.lang.String getEnableBT() -> getEnableBT
    void setScanDevices(java.lang.String) -> setScanDevices
    java.lang.String getScanDevices() -> getScanDevices
    void setEnableWIFI(java.lang.String) -> setEnableWIFI
    java.lang.String getEnableWIFI() -> getEnableWIFI
    void setEnableSSID(java.lang.String) -> setEnableSSID
    java.lang.String getEnableSSID() -> getEnableSSID
    void setSSID(java.lang.String) -> setSSID
    java.lang.String getSSID() -> getSSID
    void setHiddenSSID(java.lang.String) -> setHiddenSSID
    java.lang.String getHiddenSSID() -> getHiddenSSID
    void setSSIDSecurity(java.lang.String) -> setSSIDSecurity
    java.lang.String getSSIDSecurity() -> getSSIDSecurity
    void setSSIDPresharedkey(java.lang.String) -> setSSIDPresharedkey
    java.lang.String getSSIDPresharedkey() -> getSSIDPresharedkey
    void setSSIDWepKey(java.lang.String) -> setSSIDWepKey
    java.lang.String getSSIDWepKey() -> getSSIDWepKey
    void setEnableCamera(java.lang.String) -> setEnableCamera
    java.lang.String getEnableCamera() -> getEnableCamera
    void setEnableGooglePlay(java.lang.String) -> setEnableGooglePlay
    java.lang.String getEnableGooglePlay() -> getEnableGooglePlay
    void setEnableUSB(java.lang.String) -> setEnableUSB
    java.lang.String getEnableUSB() -> getEnableUSB
    void setHiddenAPP(java.lang.String) -> setHiddenAPP
    java.lang.String getHiddenAPP() -> getHiddenAPP
    java.lang.String toString() -> toString
    java.lang.String getIP() -> getIP
    void setIP(java.lang.String) -> setIP
    java.lang.String getCOMMAND() -> getCOMMAND
    void setCOMMAND(java.lang.String) -> setCOMMAND
    java.lang.String getSEND_TIME() -> getSEND_TIME
    void setSEND_TIME(java.lang.String) -> setSEND_TIME
    java.lang.String getDAY_OF_WEEK() -> getDAY_OF_WEEK
    void setDAY_OF_WEEK(java.lang.String) -> setDAY_OF_WEEK
    java.lang.String getSTART_TIME() -> getSTART_TIME
    void setSTART_TIME(java.lang.String) -> setSTART_TIME
    java.lang.String getEND_TIME() -> getEND_TIME
    void setEND_TIME(java.lang.String) -> setEND_TIME
com.foxconn.emm.bean.TrafficData -> com.foxconn.emm.bean.TrafficData:
    java.lang.String date -> date
    double data -> data
    int total -> total
com.foxconn.emm.bean.TrafficInfo -> com.foxconn.emm.bean.TrafficInfo:
    java.lang.String name -> name
    android.graphics.drawable.Drawable icon -> icon
    int uid -> uid
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    android.graphics.drawable.Drawable getIcon() -> getIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    int getUid() -> getUid
    void setUid(int) -> setUid
com.foxconn.emm.bean.UidTraffic -> com.foxconn.emm.bean.UidTraffic:
    int uid -> uid
    java.lang.String packageName -> packageName
    java.lang.String appName -> appName
    long received_total -> received_total
    long uploaded_total -> uploaded_total
    long TTIME -> TTIME
    int THOUR -> THOUR
    int TDAY -> TDAY
    int TMONTH -> TMONTH
    int TYEAR -> TYEAR
    java.lang.String toString() -> toString
    java.lang.String getPackageName() -> getPackageName
    void setPackageName(java.lang.String) -> setPackageName
    long getReceived_total() -> getReceived_total
    void setReceived_total(long) -> setReceived_total
    long getUploaded_total() -> getUploaded_total
    void setUploaded_total(long) -> setUploaded_total
    long getTTIME() -> getTTIME
    void setTTIME(long) -> setTTIME
    int getTHOUR() -> getTHOUR
    void setTHOUR(int) -> setTHOUR
    int getTDAY() -> getTDAY
    void setTDAY(int) -> setTDAY
    int getTMONTH() -> getTMONTH
    void setTMONTH(int) -> setTMONTH
    int getTYEAR() -> getTYEAR
    void setTYEAR(int) -> setTYEAR
    int getUid() -> getUid
    void setUid(int) -> setUid
    java.lang.String getAppName() -> getAppName
    void setAppName(java.lang.String) -> setAppName
com.foxconn.emm.bean.UidTraffic$UidTrafficTag -> com.foxconn.emm.bean.UidTraffic$UidTrafficTag:
    java.lang.String tag_RECEIVED_TOTAL -> tag_RECEIVED_TOTAL
    java.lang.String tag_UPLOAD_TOTAL -> tag_UPLOAD_TOTAL
    java.lang.String tag_UID -> tag_UID
    java.lang.String tag_PACKAGE_NAME -> tag_PACKAGE_NAME
    java.lang.String tag_TDAY -> tag_TDAY
    java.lang.String tag_THOUR -> tag_THOUR
    java.lang.String tag_TMONTH -> tag_TMONTH
    java.lang.String tag_TYEAR -> tag_TYEAR
    java.lang.String tag_APPNAME -> tag_APPNAME
com.foxconn.emm.bean.UpdateInfo -> com.foxconn.emm.bean.UpdateInfo:
    long serialVersionUID -> serialVersionUID
    int versionCode -> versionCode
    java.lang.String versionName -> versionName
    java.lang.String url -> url
    java.lang.String description -> description
    java.lang.String required -> required
    int localVersionCode -> localVersionCode
    java.lang.String localVersionName -> localVersionName
    boolean isNeedUpdate(android.content.Context) -> isNeedUpdate
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    int getVersion() -> getVersion
    void setVersion(int) -> setVersion
    java.lang.String getVersionName() -> getVersionName
    void setVersionName(java.lang.String) -> setVersionName
    java.lang.String toString() -> toString
    java.lang.String getRequired() -> getRequired
    void setRequired(java.lang.String) -> setRequired
    int getLocalVersionCode() -> getLocalVersionCode
    void setLocalVersionCode(int) -> setLocalVersionCode
    java.lang.String getLocalVersionName() -> getLocalVersionName
    void setLocalVersionName(java.lang.String) -> setLocalVersionName
com.foxconn.emm.bean.UpdateInfo$TAG -> com.foxconn.emm.bean.UpdateInfo$TAG:
    java.lang.String tag_VERSIONCODE -> tag_VERSIONCODE
    java.lang.String tag_VERSIONNAME -> tag_VERSIONNAME
    java.lang.String tag_URL -> tag_URL
    java.lang.String tag_DESCRIPTION -> tag_DESCRIPTION
    java.lang.String tag_UP2D -> tag_UP2D
    java.lang.String tag_REQUIRED -> tag_REQUIRED
    java.lang.String tag_req_Y -> tag_req_Y
    java.lang.String tag_req_N -> tag_req_N
    java.lang.String UPDATEINFO -> UPDATEINFO
com.foxconn.emm.bean.UserInfo -> com.foxconn.emm.bean.UserInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String userId -> userId
    java.lang.String userNameEng -> userNameEng
    java.lang.String buGroup -> buGroup
    java.lang.String userNameChi -> userNameChi
    java.lang.String userImg -> userImg
    java.lang.String cellPhone -> cellPhone
    java.lang.String telExtension -> telExtension
    java.lang.String userMail -> userMail
    java.lang.String createBy -> createBy
    java.lang.String createDate -> createDate
    java.lang.String modifyBy -> modifyBy
    java.lang.String modifyDate -> modifyDate
    boolean isDisable -> isDisable
    java.lang.String toString() -> toString
    java.lang.String getHeadIconFilePath(java.lang.String) -> getHeadIconFilePath
    java.lang.String getHeadIconName(java.lang.String) -> getHeadIconName
    boolean hasHeadIcon(java.lang.String,java.lang.String) -> hasHeadIcon
    java.lang.String getUser_id() -> getUser_id
    void setUser_id(java.lang.String) -> setUser_id
    java.lang.String getBu_group() -> getBu_group
    void setBu_group(java.lang.String) -> setBu_group
    java.lang.String getPhone_no() -> getPhone_no
    void setPhone_no(java.lang.String) -> setPhone_no
    java.lang.String getTelExtension() -> getTelExtension
    void setTelExtension(java.lang.String) -> setTelExtension
    java.lang.String getUser_name_chi() -> getUser_name_chi
    void setUser_name_chi(java.lang.String) -> setUser_name_chi
    java.lang.String getUserMail() -> getUserMail
    void setUserMail(java.lang.String) -> setUserMail
    java.lang.String getUserImg() -> getUserImg
    void setUserImg(java.lang.String) -> setUserImg
    java.lang.String getUser_name_eng() -> getUser_name_eng
    void setUser_name_eng(java.lang.String) -> setUser_name_eng
    java.lang.String getCreateBy() -> getCreateBy
    void setCreateBy(java.lang.String) -> setCreateBy
    java.lang.String getCreateDate() -> getCreateDate
    void setCreateDate(java.lang.String) -> setCreateDate
    java.lang.String getModifyBy() -> getModifyBy
    void setModifyBy(java.lang.String) -> setModifyBy
    java.lang.String getModifyDate() -> getModifyDate
    void setModifyDate(java.lang.String) -> setModifyDate
    boolean isDisable() -> isDisable
    void setDisable(boolean) -> setDisable
com.foxconn.emm.bean.UserInfo$TAG -> com.foxconn.emm.bean.UserInfo$TAG:
    java.lang.String TB_NAME -> TB_NAME
    java.lang.String _ID -> _ID
    java.lang.String USER_ID -> USER_ID
    java.lang.String USER_NAME_ENG -> USER_NAME_ENG
    java.lang.String USER_NAME_CHI -> USER_NAME_CHI
    java.lang.String BU_GROUP -> BU_GROUP
    java.lang.String HEAD_ICON -> HEAD_ICON
    java.lang.String PHONE_NO -> PHONE_NO
    java.lang.String TELEXTENSION -> TELEXTENSION
    java.lang.String USERMAIL -> USERMAIL
    java.lang.String CREATEBY -> CREATEBY
    java.lang.String CREATEDATE -> CREATEDATE
    java.lang.String MODIFYBY -> MODIFYBY
    java.lang.String MODIFYDATE -> MODIFYDATE
    java.lang.String ISDISABLE -> ISDISABLE
com.foxconn.emm.bean.WebPageInfo -> com.foxconn.emm.bean.WebPageInfo:
    java.lang.String id -> id
    java.lang.String content -> content
    java.lang.String pageUrl -> pageUrl
    java.lang.String subject -> subject
    java.lang.String sendTime -> sendTime
    java.lang.String msgType -> msgType
    java.lang.String deadline -> deadline
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getPageUrl() -> getPageUrl
    void setPageUrl(java.lang.String) -> setPageUrl
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    java.lang.String getSendTime() -> getSendTime
    void setSendTime(java.lang.String) -> setSendTime
    java.lang.String getMsgType() -> getMsgType
    void setMsgType(java.lang.String) -> setMsgType
    java.lang.String getDeadline() -> getDeadline
    void setDeadline(java.lang.String) -> setDeadline
    java.lang.String toString() -> toString
com.foxconn.emm.bean.WebPageInfo$TAG -> com.foxconn.emm.bean.WebPageInfo$TAG:
    java.lang.String ID -> ID
    java.lang.String CONTENT -> CONTENT
    java.lang.String PAGEURL -> PAGEURL
    java.lang.String SUBJECT -> SUBJECT
    java.lang.String SENDTIME -> SENDTIME
    java.lang.String MSGTYPE -> MSGTYPE
    java.lang.String DEADLINE -> DEADLINE
com.foxconn.emm.bean.WhiteBlackInfo -> com.foxconn.emm.bean.WhiteBlackInfo:
    java.lang.String desc -> desc
    java.lang.String sendTime -> sendTime
    java.lang.String msgType -> msgType
    java.lang.String enableTime -> enableTime
    java.lang.String whiteListApp -> whiteListApp
    java.lang.String disableTime -> disableTime
    java.lang.String blackListApp -> blackListApp
    java.lang.String getDesc() -> getDesc
    void setDesc(java.lang.String) -> setDesc
    java.lang.String getSendTime() -> getSendTime
    void setSendTime(java.lang.String) -> setSendTime
    java.lang.String getMsgType() -> getMsgType
    void setMsgType(java.lang.String) -> setMsgType
    java.lang.String getEnableTime() -> getEnableTime
    void setEnableTime(java.lang.String) -> setEnableTime
    java.lang.String getWhiteListApp() -> getWhiteListApp
    void setWhiteListApp(java.lang.String) -> setWhiteListApp
    java.lang.String getDisableTime() -> getDisableTime
    void setDisableTime(java.lang.String) -> setDisableTime
    java.lang.String getBlackListApp() -> getBlackListApp
    void setBlackListApp(java.lang.String) -> setBlackListApp
    java.lang.String toString() -> toString
com.foxconn.emm.bean.WhiteBlackInfo$TAG -> com.foxconn.emm.bean.WhiteBlackInfo$TAG:
    java.lang.String DESC -> DESC
    java.lang.String SENDTIME -> SENDTIME
    java.lang.String MSGTYPE -> MSGTYPE
    java.lang.String ENABLETIME -> ENABLETIME
    java.lang.String WHITELISTAPP -> WHITELISTAPP
    java.lang.String DISABLETIME -> DISABLETIME
    java.lang.String BLACKLISTAPP -> BLACKLISTAPP
com.foxconn.emm.dao.AbBasicDBDao -> com.foxconn.emm.dao.a:
    java.lang.String getStringColumnValue(java.lang.String,android.database.Cursor) -> getStringColumnValue
    int getIntColumnValue(java.lang.String,android.database.Cursor) -> getIntColumnValue
    void closeDatabase(android.database.Cursor,android.database.sqlite.SQLiteDatabase) -> closeDatabase
    void closeCursor(android.database.Cursor) -> closeCursor
com.foxconn.emm.dao.AppInfoDao -> com.foxconn.emm.dao.b:
    android.content.Context context -> a
    com.foxconn.emm.db.DBHelper dbHelper -> b
    java.lang.String[] queryColumns -> c
    void add(com.foxconn.emm.bean.AppInfo) -> a
    java.util.List findAll() -> a
    int delete(java.lang.String) -> a
com.foxconn.emm.dao.CalendarInfoDao -> com.foxconn.emm.dao.c:
    android.content.Context context -> a
    com.foxconn.emm.db.DBHelper dbHelper -> b
    java.lang.String[] queryColumns -> c
    long add(com.foxconn.emm.bean.CalendarInfo) -> a
    java.util.List findAll() -> a
    int delete(java.lang.String) -> a
com.foxconn.emm.dao.DBUserInfoHelper -> com.foxconn.emm.dao.d:
    com.foxconn.emm.db.DBHelper dbHelper -> a
    android.database.sqlite.SQLiteDatabase db -> b
    android.content.ContentValues values -> c
    java.lang.String[] querycolumns -> d
    long insertUserInfo(com.foxconn.emm.bean.UserInfo) -> a
    com.foxconn.emm.bean.UserInfo findUserByUserId(java.lang.String) -> a
com.foxconn.emm.dao.FileInfoDao -> com.foxconn.emm.dao.e:
    android.content.Context context -> a
    com.foxconn.emm.db.DBHelper dbHelper -> b
    java.lang.String[] queryColumns -> c
    void add(com.foxconn.emm.bean.FileInfo) -> a
    java.util.List findAll() -> a
    java.util.List findFilesByKey(java.lang.String) -> a
    int delete(java.lang.String) -> b
com.foxconn.emm.dao.LimitListDao -> com.foxconn.emm.dao.f:
    android.content.Context context -> a
    com.foxconn.emm.db.DBHelper dbHelper -> b
    java.util.List getLimitList() -> a
    java.util.List getLimitListbyType(int) -> a
    java.util.List getFilteredPackageLimitList(java.util.List) -> a
    com.foxconn.emm.bean.InstalledAppInfo filter(com.foxconn.emm.bean.InstalledAppInfo,java.util.List) -> a
    int verifyLimitType(com.foxconn.emm.bean.LimitListInfo) -> d
    boolean find(com.foxconn.emm.bean.LimitListInfo) -> a
    void add(com.foxconn.emm.bean.LimitListInfo) -> b
    int update(com.foxconn.emm.bean.LimitListInfo) -> c
    void delete(java.lang.String,java.lang.String) -> a
com.foxconn.emm.dao.NotificationInfoDao -> com.foxconn.emm.dao.g:
    android.content.Context context -> a
    com.foxconn.emm.db.DBHelper dbHelper -> b
    java.lang.String[] queryColumns -> c
    void add(com.foxconn.emm.bean.NotificationInfo) -> a
    java.util.List findAll() -> a
    int delete(java.lang.String) -> a
com.foxconn.emm.dao.OffLineDatabase -> com.foxconn.emm.dao.h:
    android.database.sqlite.SQLiteDatabase db -> a
    java.lang.String[] querycolumns -> b
    com.foxconn.emm.bean.UserInfo findUserByUserId(java.lang.String) -> a
com.foxconn.emm.dao.PicInfoDao -> com.foxconn.emm.dao.i:
    android.content.Context context -> a
    com.foxconn.emm.db.DBHelper dbHelper -> b
    java.lang.String[] queryColumns -> c
    void add(com.foxconn.emm.bean.PicInfo) -> a
    java.util.List findAll() -> a
    int delete(java.lang.String) -> a
com.foxconn.emm.dao.SQLiteAssetHelper -> com.foxconn.emm.dao.SQLiteAssetHelper:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    java.lang.String mName -> c
    android.database.sqlite.SQLiteDatabase$CursorFactory mFactory -> d
    int mNewVersion -> e
    android.database.sqlite.SQLiteDatabase mDatabase -> f
    boolean mIsInitializing -> g
    java.lang.String mDatabasePath -> h
    java.lang.String mAssetPath -> i
    java.lang.String mUpgradePathFormat -> j
    int mForcedUpgradeVersion -> k
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    android.database.sqlite.SQLiteDatabase getReadableDatabase() -> getReadableDatabase
    void close() -> close
    void onConfigure(android.database.sqlite.SQLiteDatabase) -> onConfigure
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    android.database.sqlite.SQLiteDatabase createOrOpenDatabase(boolean) -> a
    android.database.sqlite.SQLiteDatabase returnDatabase() -> a
    void copyDatabaseFromAssets() -> b
    java.io.InputStream getUpgradeSQLStream(int,int) -> a
    void getUpgradeFilePaths(int,int,int,java.util.ArrayList) -> a
com.foxconn.emm.dao.SQLiteAssetHelper$SQLiteAssetException -> com.foxconn.emm.dao.SQLiteAssetHelper$SQLiteAssetException:
com.foxconn.emm.dao.TrafficAppsOptDao -> com.foxconn.emm.dao.j:
    android.content.Context context -> a
    com.foxconn.emm.db.DBHelper dbHelper -> b
    com.foxconn.emm.bean.UidTraffic getSpecificAppDataByDaypackagename(int,int,int,java.lang.String) -> a
    com.foxconn.emm.bean.UidTraffic getTrafficSingleAppDataByDaypackagename(int,java.lang.String,int,int) -> a
    java.util.List getHasTrafficAppsByDay(int,int,int) -> a
    void insertTrafficAppsData(com.foxconn.emm.bean.UidTraffic) -> a
com.foxconn.emm.dao.TrafficOptDao -> com.foxconn.emm.dao.k:
    android.content.Context context -> a
    com.foxconn.emm.db.DBHelper dbHelper -> b
    java.lang.String getUsedTotalTrafficToCurrentDay() -> a
    java.util.TreeMap getTrafficDataByMonth(int,int) -> a
    com.foxconn.emm.bean.SysTraffic getSpecificSysTrafficDataByDay(java.util.Calendar) -> a
    com.foxconn.emm.bean.SysTraffic getSpecificSysTrafficDataByDay(int,int,int) -> a
    com.foxconn.emm.bean.SysTraffic getTrafficSingleSysDataByDay(java.util.Calendar) -> b
    java.util.List getSysTrafficDataByMonth(int,int) -> b
    void insertTrafficSysData(com.foxconn.emm.bean.SysTraffic) -> a
com.foxconn.emm.dao.Utils -> com.foxconn.emm.dao.l:
    java.lang.String TAG -> a
    java.util.List splitSqlScript(java.lang.String,char) -> a
    void writeExtractedFileToDisk(java.io.InputStream,java.io.OutputStream) -> a
    java.util.zip.ZipInputStream getFileFromZip(java.io.InputStream) -> a
    java.lang.String convertStreamToString(java.io.InputStream) -> b
com.foxconn.emm.dao.VersionComparator -> com.foxconn.emm.dao.m:
    java.lang.String TAG -> a
    java.util.regex.Pattern pattern -> b
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.foxconn.emm.dao.WebPageInfoDao -> com.foxconn.emm.dao.n:
    android.content.Context context -> a
    com.foxconn.emm.db.DBHelper dbHelper -> b
    java.lang.String[] queryColumns -> c
    void add(com.foxconn.emm.bean.WebPageInfo) -> a
    java.util.List findAll() -> a
    int delete(java.lang.String) -> a
com.foxconn.emm.db.AppDBControlHelper -> com.foxconn.emm.a.a:
    android.database.sqlite.SQLiteDatabase getWriteableDataBase() -> a
    android.database.sqlite.SQLiteDatabase getReadableDatabase() -> getReadableDatabase
    void dropAllDataTable() -> b
    void dropAllDataForCleanInfo() -> c
com.foxconn.emm.db.DBHelper -> com.foxconn.emm.a.b:
    java.util.List dropDataTableSqlList -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.foxconn.emm.lock.CreateGesturePasswordActivity -> com.foxconn.emm.lock.CreateGesturePasswordActivity:
    com.foxconn.emm.lock.LockPatternView mLockPatternView -> d
    android.widget.Button mFooterRightButton -> e
    android.widget.Button mFooterLeftButton -> f
    android.widget.TextView mHeaderText -> a
    java.util.List mChosenPattern -> b
    android.widget.Toast mToast -> g
    com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage mUiStage -> h
    android.view.View[][] mPreviewViews -> i
    java.util.List mAnimatePattern -> j
    java.lang.Runnable mClearPatternRunnable -> k
    com.foxconn.emm.lock.LockPatternView$OnPatternListener mChooseNewLockPatternListener -> c
    int[] $SWITCH_TABLE$com$foxconn$emm$lock$CreateGesturePasswordActivity$Stage -> l
    void showToast(java.lang.CharSequence) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initPreviewViews() -> b
    void updatePreviewViews() -> c
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void updateStage(com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage) -> a
    void postClearPatternRunnable() -> d
    void onClick(android.view.View) -> onClick
    void saveChosenPatternAndFinish() -> e
    com.foxconn.emm.lock.LockPatternView access$0(com.foxconn.emm.lock.CreateGesturePasswordActivity) -> a
    java.lang.Runnable access$1(com.foxconn.emm.lock.CreateGesturePasswordActivity) -> b
    com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage access$2(com.foxconn.emm.lock.CreateGesturePasswordActivity) -> c
    void access$3(com.foxconn.emm.lock.CreateGesturePasswordActivity,com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage) -> a
    android.widget.Button access$4(com.foxconn.emm.lock.CreateGesturePasswordActivity) -> d
    android.widget.Button access$5(com.foxconn.emm.lock.CreateGesturePasswordActivity) -> e
    int[] $SWITCH_TABLE$com$foxconn$emm$lock$CreateGesturePasswordActivity$Stage() -> a
com.foxconn.emm.lock.CreateGesturePasswordActivity$1 -> com.foxconn.emm.lock.a:
    com.foxconn.emm.lock.CreateGesturePasswordActivity this$0 -> a
    void run() -> run
com.foxconn.emm.lock.CreateGesturePasswordActivity$2 -> com.foxconn.emm.lock.b:
    com.foxconn.emm.lock.CreateGesturePasswordActivity this$0 -> a
    void onPatternStart() -> a
    void onPatternCleared() -> b
    void onPatternDetected(java.util.List) -> a
    void onPatternCellAdded(java.util.List) -> b
    void patternInProgress() -> c
com.foxconn.emm.lock.CreateGesturePasswordActivity$LeftButtonMode -> com.foxconn.emm.lock.CreateGesturePasswordActivity$LeftButtonMode:
    com.foxconn.emm.lock.CreateGesturePasswordActivity$LeftButtonMode Cancel -> Cancel
    com.foxconn.emm.lock.CreateGesturePasswordActivity$LeftButtonMode CancelDisabled -> CancelDisabled
    com.foxconn.emm.lock.CreateGesturePasswordActivity$LeftButtonMode Retry -> Retry
    com.foxconn.emm.lock.CreateGesturePasswordActivity$LeftButtonMode RetryDisabled -> RetryDisabled
    com.foxconn.emm.lock.CreateGesturePasswordActivity$LeftButtonMode Gone -> Gone
    int text -> text
    boolean enabled -> enabled
    com.foxconn.emm.lock.CreateGesturePasswordActivity$LeftButtonMode[] ENUM$VALUES -> ENUM$VALUES
    com.foxconn.emm.lock.CreateGesturePasswordActivity$LeftButtonMode[] values() -> values
    com.foxconn.emm.lock.CreateGesturePasswordActivity$LeftButtonMode valueOf(java.lang.String) -> valueOf
com.foxconn.emm.lock.CreateGesturePasswordActivity$RightButtonMode -> com.foxconn.emm.lock.CreateGesturePasswordActivity$RightButtonMode:
    com.foxconn.emm.lock.CreateGesturePasswordActivity$RightButtonMode Continue -> Continue
    com.foxconn.emm.lock.CreateGesturePasswordActivity$RightButtonMode ContinueDisabled -> ContinueDisabled
    com.foxconn.emm.lock.CreateGesturePasswordActivity$RightButtonMode Confirm -> Confirm
    com.foxconn.emm.lock.CreateGesturePasswordActivity$RightButtonMode ConfirmDisabled -> ConfirmDisabled
    com.foxconn.emm.lock.CreateGesturePasswordActivity$RightButtonMode Ok -> Ok
    int text -> text
    boolean enabled -> enabled
    com.foxconn.emm.lock.CreateGesturePasswordActivity$RightButtonMode[] ENUM$VALUES -> ENUM$VALUES
    com.foxconn.emm.lock.CreateGesturePasswordActivity$RightButtonMode[] values() -> values
    com.foxconn.emm.lock.CreateGesturePasswordActivity$RightButtonMode valueOf(java.lang.String) -> valueOf
com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage -> com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage:
    com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage Introduction -> Introduction
    com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage HelpScreen -> HelpScreen
    com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage ChoiceTooShort -> ChoiceTooShort
    com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage FirstChoiceValid -> FirstChoiceValid
    com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage NeedToConfirm -> NeedToConfirm
    com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage ConfirmWrong -> ConfirmWrong
    com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage ChoiceConfirmed -> ChoiceConfirmed
    int headerMessage -> headerMessage
    com.foxconn.emm.lock.CreateGesturePasswordActivity$LeftButtonMode leftMode -> leftMode
    com.foxconn.emm.lock.CreateGesturePasswordActivity$RightButtonMode rightMode -> rightMode
    int footerMessage -> footerMessage
    boolean patternEnabled -> patternEnabled
    com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage[] ENUM$VALUES -> ENUM$VALUES
    com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage[] values() -> values
    com.foxconn.emm.lock.CreateGesturePasswordActivity$Stage valueOf(java.lang.String) -> valueOf
com.foxconn.emm.lock.GuideGesturePasswordActivity -> com.foxconn.emm.lock.GuideGesturePasswordActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.foxconn.emm.lock.GuideGesturePasswordActivity$1 -> com.foxconn.emm.lock.c:
    com.foxconn.emm.lock.GuideGesturePasswordActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.foxconn.emm.lock.LockPatternUtils -> com.foxconn.emm.lock.d:
    java.io.File sLockPatternFilename -> a
    java.util.concurrent.atomic.AtomicBoolean sHaveNonZeroPatternFile -> b
    android.os.FileObserver sPasswordObserver -> c
    boolean savedPatternExists() -> a
    void clearLock() -> b
    java.util.List stringToPattern(java.lang.String) -> a
    java.lang.String patternToString(java.util.List) -> a
    void saveLockPattern(java.util.List) -> b
    byte[] patternToHash(java.util.List) -> d
    boolean checkPattern(java.util.List) -> c
    java.util.concurrent.atomic.AtomicBoolean access$0() -> c
    java.io.File access$1() -> d
com.foxconn.emm.lock.LockPatternUtils$LockPatternFileObserver -> com.foxconn.emm.lock.e:
    void onEvent(int,java.lang.String) -> onEvent
com.foxconn.emm.lock.LockPatternView -> com.foxconn.emm.lock.LockPatternView:
    java.lang.String TAG -> TAG
    int ASPECT_SQUARE -> ASPECT_SQUARE
    int ASPECT_LOCK_WIDTH -> ASPECT_LOCK_WIDTH
    int ASPECT_LOCK_HEIGHT -> ASPECT_LOCK_HEIGHT
    boolean PROFILE_DRAWING -> PROFILE_DRAWING
    boolean mDrawingProfilingStarted -> mDrawingProfilingStarted
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mPathPaint -> mPathPaint
    int STATUS_BAR_HEIGHT -> STATUS_BAR_HEIGHT
    int MILLIS_PER_CIRCLE_ANIMATING -> MILLIS_PER_CIRCLE_ANIMATING
    com.foxconn.emm.lock.LockPatternView$OnPatternListener mOnPatternListener -> mOnPatternListener
    java.util.ArrayList mPattern -> mPattern
    boolean[][] mPatternDrawLookup -> mPatternDrawLookup
    float mInProgressX -> mInProgressX
    float mInProgressY -> mInProgressY
    long mAnimatingPeriodStart -> mAnimatingPeriodStart
    com.foxconn.emm.lock.LockPatternView$DisplayMode mPatternDisplayMode -> mPatternDisplayMode
    boolean mInputEnabled -> mInputEnabled
    boolean mInStealthMode -> mInStealthMode
    boolean mEnableHapticFeedback -> mEnableHapticFeedback
    boolean mPatternInProgress -> mPatternInProgress
    float mDiameterFactor -> mDiameterFactor
    int mStrokeAlpha -> mStrokeAlpha
    float mHitFactor -> mHitFactor
    float mSquareWidth -> mSquareWidth
    float mSquareHeight -> mSquareHeight
    android.graphics.Bitmap mBitmapCircleDefault -> mBitmapCircleDefault
    android.graphics.Bitmap mBitmapCircleGreen -> mBitmapCircleGreen
    android.graphics.Bitmap mBitmapCircleRed -> mBitmapCircleRed
    android.graphics.Path mCurrentPath -> mCurrentPath
    android.graphics.Rect mInvalidate -> mInvalidate
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    int mAspect -> mAspect
    android.graphics.Matrix mCircleMatrix -> mCircleMatrix
    android.graphics.Bitmap getBitmapFor(int) -> getBitmapFor
    boolean isInStealthMode() -> isInStealthMode
    boolean isTactileFeedbackEnabled() -> isTactileFeedbackEnabled
    void setInStealthMode(boolean) -> setInStealthMode
    void setTactileFeedbackEnabled(boolean) -> setTactileFeedbackEnabled
    void setOnPatternListener(com.foxconn.emm.lock.LockPatternView$OnPatternListener) -> setOnPatternListener
    void setPattern(com.foxconn.emm.lock.LockPatternView$DisplayMode,java.util.List) -> setPattern
    void setDisplayMode(com.foxconn.emm.lock.LockPatternView$DisplayMode) -> setDisplayMode
    void notifyCellAdded() -> notifyCellAdded
    void notifyPatternStarted() -> notifyPatternStarted
    void notifyPatternDetected() -> notifyPatternDetected
    void notifyPatternCleared() -> notifyPatternCleared
    void clearPattern() -> clearPattern
    void resetPattern() -> resetPattern
    void clearPatternDrawLookup() -> clearPatternDrawLookup
    void disableInput() -> disableInput
    void enableInput() -> enableInput
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int resolveMeasured(int,int) -> resolveMeasured
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    void onMeasure(int,int) -> onMeasure
    com.foxconn.emm.lock.LockPatternView$Cell detectAndAddHit(float,float) -> detectAndAddHit
    void addCellToPattern(com.foxconn.emm.lock.LockPatternView$Cell) -> addCellToPattern
    com.foxconn.emm.lock.LockPatternView$Cell checkForNewHit(float,float) -> checkForNewHit
    int getRowHit(float) -> getRowHit
    int getColumnHit(float) -> getColumnHit
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleActionMove(android.view.MotionEvent) -> handleActionMove
    void sendAccessEvent(int) -> sendAccessEvent
    void handleActionUp(android.view.MotionEvent) -> handleActionUp
    void handleActionDown(android.view.MotionEvent) -> handleActionDown
    float getCenterXForColumn(int) -> getCenterXForColumn
    float getCenterYForRow(int) -> getCenterYForRow
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawCircle(android.graphics.Canvas,int,int,boolean) -> drawCircle
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.foxconn.emm.lock.LockPatternView$Cell -> com.foxconn.emm.lock.f:
    int row -> a
    int column -> b
    com.foxconn.emm.lock.LockPatternView$Cell[][] sCells -> c
    int getRow() -> a
    int getColumn() -> b
    com.foxconn.emm.lock.LockPatternView$Cell of(int,int) -> a
    void checkRange(int,int) -> b
    java.lang.String toString() -> toString
com.foxconn.emm.lock.LockPatternView$DisplayMode -> com.foxconn.emm.lock.LockPatternView$DisplayMode:
    com.foxconn.emm.lock.LockPatternView$DisplayMode Correct -> Correct
    com.foxconn.emm.lock.LockPatternView$DisplayMode Animate -> Animate
    com.foxconn.emm.lock.LockPatternView$DisplayMode Wrong -> Wrong
    com.foxconn.emm.lock.LockPatternView$DisplayMode[] ENUM$VALUES -> ENUM$VALUES
    com.foxconn.emm.lock.LockPatternView$DisplayMode[] values() -> values
    com.foxconn.emm.lock.LockPatternView$DisplayMode valueOf(java.lang.String) -> valueOf
com.foxconn.emm.lock.LockPatternView$OnPatternListener -> com.foxconn.emm.lock.g:
    void onPatternStart() -> a
    void onPatternCleared() -> b
    void onPatternCellAdded(java.util.List) -> b
    void onPatternDetected(java.util.List) -> a
com.foxconn.emm.lock.LockPatternView$SavedState -> com.foxconn.emm.lock.LockPatternView$SavedState:
    java.lang.String mSerializedPattern -> a
    int mDisplayMode -> b
    boolean mInputEnabled -> c
    boolean mInStealthMode -> d
    boolean mTactileFeedbackEnabled -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getSerializedPattern() -> a
    int getDisplayMode() -> b
    boolean isInputEnabled() -> c
    boolean isInStealthMode() -> d
    boolean isTactileFeedbackEnabled() -> e
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.foxconn.emm.lock.LockPatternView$SavedState$1 -> com.foxconn.emm.lock.h:
    com.foxconn.emm.lock.LockPatternView$SavedState createFromParcel(android.os.Parcel) -> a
    com.foxconn.emm.lock.LockPatternView$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.foxconn.emm.lock.UnlockGesturePasswordActivity -> com.foxconn.emm.lock.UnlockGesturePasswordActivity:
    com.foxconn.emm.lock.LockPatternView mLockPatternView -> d
    int mFailedPatternAttemptsSinceLastTimeout -> e
    android.os.CountDownTimer mCountdownTimer -> f
    android.os.Handler mHandler -> g
    android.widget.TextView mHeadTextView -> h
    android.view.animation.Animation mShakeAnim -> i
    android.widget.Toast mToast -> j
    int flag -> k
    boolean canbackable -> l
    java.lang.Runnable mClearPatternRunnable -> m
    com.foxconn.emm.lock.LockPatternView$OnPatternListener mChooseNewLockPatternListener -> a
    java.lang.Runnable enrollsys -> b
    java.lang.Runnable attemptLockout -> c
    void showToast(java.lang.CharSequence) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    com.foxconn.emm.lock.LockPatternView access$0(com.foxconn.emm.lock.UnlockGesturePasswordActivity) -> a
    java.lang.Runnable access$1(com.foxconn.emm.lock.UnlockGesturePasswordActivity) -> b
    int access$2(com.foxconn.emm.lock.UnlockGesturePasswordActivity) -> c
    void access$3(com.foxconn.emm.lock.UnlockGesturePasswordActivity,java.lang.CharSequence) -> a
    android.os.Handler access$4(com.foxconn.emm.lock.UnlockGesturePasswordActivity) -> d
    int access$5(com.foxconn.emm.lock.UnlockGesturePasswordActivity) -> e
    void access$6(com.foxconn.emm.lock.UnlockGesturePasswordActivity,int) -> a
    android.widget.TextView access$7(com.foxconn.emm.lock.UnlockGesturePasswordActivity) -> f
    android.view.animation.Animation access$8(com.foxconn.emm.lock.UnlockGesturePasswordActivity) -> g
    void access$9(com.foxconn.emm.lock.UnlockGesturePasswordActivity,android.os.CountDownTimer) -> a
com.foxconn.emm.lock.UnlockGesturePasswordActivity$1 -> com.foxconn.emm.lock.i:
    com.foxconn.emm.lock.UnlockGesturePasswordActivity this$0 -> a
    void run() -> run
com.foxconn.emm.lock.UnlockGesturePasswordActivity$2 -> com.foxconn.emm.lock.j:
    com.foxconn.emm.lock.UnlockGesturePasswordActivity this$0 -> a
    void onPatternStart() -> a
    void onPatternCleared() -> b
    void onPatternDetected(java.util.List) -> a
    void onPatternCellAdded(java.util.List) -> b
    void patternInProgress() -> c
com.foxconn.emm.lock.UnlockGesturePasswordActivity$3 -> com.foxconn.emm.lock.k:
    com.foxconn.emm.lock.UnlockGesturePasswordActivity this$0 -> a
    void run() -> run
com.foxconn.emm.lock.UnlockGesturePasswordActivity$4 -> com.foxconn.emm.lock.l:
    com.foxconn.emm.lock.UnlockGesturePasswordActivity this$0 -> a
    void run() -> run
    com.foxconn.emm.lock.UnlockGesturePasswordActivity access$0(com.foxconn.emm.lock.UnlockGesturePasswordActivity$4) -> a
com.foxconn.emm.lock.UnlockGesturePasswordActivity$4$1 -> com.foxconn.emm.lock.m:
    com.foxconn.emm.lock.UnlockGesturePasswordActivity$4 this$1 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.foxconn.emm.provider.AppForbiddenProvider -> com.foxconn.emm.provider.AppForbiddenProvider:
    android.net.Uri chageurl -> a
    android.content.UriMatcher matcher -> b
    com.foxconn.emm.dao.LimitListDao limitListDao -> c
    boolean onCreate() -> onCreate
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.foxconn.emm.receiver.BTStatusReceiver -> com.foxconn.emm.receiver.BTStatusReceiver:
    com.foxconn.emm.tools.PolicyControl policyControl -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.foxconn.emm.receiver.BootReceiver -> com.foxconn.emm.receiver.BootReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.foxconn.emm.receiver.ConnectivityReceiver -> com.foxconn.emm.receiver.ConnectivityReceiver:
    com.foxconn.emm.service.EMMMonitorService emmMonitorService -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.foxconn.emm.receiver.DeviceAdminSampleReceiver -> com.foxconn.emm.receiver.DeviceAdminSampleReceiver:
    int ERR_TIME -> a
    int ERR_TIME_TOTAL -> b
    void showToast(android.content.Context,java.lang.String) -> a
    void onEnabled(android.content.Context,android.content.Intent) -> onEnabled
    java.lang.CharSequence onDisableRequested(android.content.Context,android.content.Intent) -> onDisableRequested
    void onDisabled(android.content.Context,android.content.Intent) -> onDisabled
    void onPasswordChanged(android.content.Context,android.content.Intent) -> onPasswordChanged
    void onPasswordFailed(android.content.Context,android.content.Intent) -> onPasswordFailed
    void onPasswordSucceeded(android.content.Context,android.content.Intent) -> onPasswordSucceeded
    void onPasswordExpiring(android.content.Context,android.content.Intent) -> onPasswordExpiring
com.foxconn.emm.receiver.EMMBroadcastReceiver -> com.foxconn.emm.receiver.EMMBroadcastReceiver:
    java.util.ArrayList mListeners -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.foxconn.emm.receiver.EMMBroadcastReceiver$EventHandler -> com.foxconn.emm.receiver.a:
    void onNetChange() -> onNetChange
com.foxconn.emm.receiver.EMMMessageCallBackReceiver -> com.foxconn.emm.receiver.EMMMessageCallBackReceiver:
    java.lang.String EMM_INFOCENTER_ACTION -> a
    java.lang.String EMM_MAM_ACTION -> b
    java.lang.String EMM_SAFEPOLICY_ACTION -> c
    java.lang.String EMM_MSG_TYPE -> d
    com.foxconn.app.IMessageReceiveCallback iMessageReceiveCallback -> e
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.foxconn.emm.receiver.LockScreenReceiver -> com.foxconn.emm.receiver.LockScreenReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.foxconn.emm.receiver.WifiStateReceiver -> com.foxconn.emm.receiver.WifiStateReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.foxconn.emm.service.BaseService -> com.foxconn.emm.service.BaseService:
    java.lang.String TAG -> TAG
    java.lang.String APP_NAME -> APP_NAME
    int MAX_TICKER_MSG_LEN -> MAX_TICKER_MSG_LEN
    int SERVICE_NOTIFICATION -> SERVICE_NOTIFICATION
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    android.app.Notification mNotification -> mNotification
    android.content.Intent mNotificationIntent -> mNotificationIntent
    android.os.Vibrator mVibrator -> mVibrator
    android.os.PowerManager$WakeLock mWakeLock -> mWakeLock
    java.util.Map mNotificationCount -> mNotificationCount
    java.util.Map mNotificationId -> mNotificationId
    int mLastNotificationId -> mLastNotificationId
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onRebind(android.content.Intent) -> onRebind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void addNotificationMGR() -> addNotificationMGR
    void notifyUpdateInfo(java.lang.String,java.lang.String,java.lang.String,boolean,com.foxconn.emm.bean.UpdateInfo) -> notifyUpdateInfo
    void setNotification(java.lang.String,java.lang.String,java.lang.String,com.foxconn.emm.bean.UpdateInfo) -> setNotification
    void setLEDNotification() -> setLEDNotification
    void resetNotificationCounter(java.lang.String) -> resetNotificationCounter
    void clearNotification(java.lang.String) -> clearNotification
com.foxconn.emm.service.EMMBaseIntentService -> com.foxconn.emm.service.EMMBaseIntentService:
    java.lang.Object LOCK -> b
    android.os.PowerManager$WakeLock sWakeLock -> c
    int SERVICE_NOTIFICATION -> a
    android.app.NotificationManager mNotificationManager -> d
    android.app.Notification mNotification -> e
    android.content.Intent mNotificationIntent -> f
    android.os.Vibrator mVibrator -> g
    java.util.Map mNotificationCount -> h
    java.util.Map mNotificationId -> i
    int mLastNotificationId -> j
    void onCreate() -> onCreate
    void initNotification() -> a
    void addNotificationMGR() -> b
    void onMessage(android.content.Context,android.content.Intent) -> a
    void onPreMessage(android.content.Context,android.content.Intent) -> b
    void onPostedMessage(android.content.Context,android.content.Intent) -> c
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void runIntentInService(android.content.Context,android.content.Intent,java.lang.String) -> a
    void notifyClient(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void setNotification(java.lang.String,java.lang.String,java.lang.String) -> a
    void setLEDNotification() -> c
    void resetNotificationCounter(java.lang.String) -> resetNotificationCounter
    void clearNotification(java.lang.String) -> clearNotification
com.foxconn.emm.service.EMMIntentService -> com.foxconn.emm.service.EMMIntentService:
    com.foxconn.emm.tools.PolicyControl policyControl -> b
    java.util.concurrent.ExecutorService executorService -> c
    com.foxconn.emm.dao.TrafficAppsOptDao trafficAppsOptDao -> d
    com.foxconn.emm.dao.TrafficOptDao trafficOptDao -> e
    void onCreate() -> onCreate
    void onMessage(android.content.Context,android.content.Intent) -> a
    void addToLimitList(com.foxconn.emm.bean.LimitListInfo,android.content.Context) -> a
    void removeLimitList(java.lang.String,java.lang.String,android.content.Context) -> a
    void parseLimitListSend(java.lang.String,android.content.Context) -> a
    void parseLimitListRemove(java.lang.String,android.content.Context) -> b
    java.util.List splitLimitPackages(java.lang.String) -> a
    void onPreMessage(android.content.Context,android.content.Intent) -> b
    void onPostedMessage(android.content.Context,android.content.Intent) -> c
    void sendEMMInfoCenterBroadCast(android.content.Context,java.lang.String) -> a
    void sendEMMAppMgrBroadCast(android.content.Context,java.lang.String) -> b
    void sendEMMPolicyControlBroadCast(android.content.Context,java.lang.String) -> c
    java.lang.String getMsgType(java.lang.String) -> b
    long parseCalendar(java.lang.String,android.content.Context) -> c
    void parseWebPage(java.lang.String,android.content.Context) -> d
    void parseFile(java.lang.String,android.content.Context) -> e
    void parseNotification(java.lang.String,android.content.Context) -> f
    void parseImage(java.lang.String,android.content.Context) -> g
    void parseCommonMsg(java.lang.String,android.content.Context) -> h
    void parseApps(java.lang.String,android.content.Context) -> i
com.foxconn.emm.service.EMMIntentService$1 -> com.foxconn.emm.service.a:
    com.foxconn.emm.service.EMMIntentService this$0 -> a
    java.lang.String getChildElementXML() -> getChildElementXML
com.foxconn.emm.service.EMMIntentService$DownloadAppsTask -> com.foxconn.emm.service.b:
    com.foxconn.emm.bean.AppInfo appInfo -> b
    com.foxconn.emm.service.EMMIntentService this$0 -> a
    void run() -> run
    java.lang.String downFileToSD(java.lang.String,java.lang.String,java.lang.String) -> a
com.foxconn.emm.service.EMMIntentService$SyncDeviceSoftwareTask -> com.foxconn.emm.service.c:
    com.foxconn.emm.service.EMMIntentService this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMIntentService$SyncLimitListTask -> com.foxconn.emm.service.d:
    com.foxconn.emm.service.EMMIntentService this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMIntentService$UpdateLocationTask -> com.foxconn.emm.service.e:
    com.foxconn.emm.service.EMMIntentService this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMMonitorProcessManager -> com.foxconn.emm.service.f:
    com.foxconn.emm.service.EMMMonitorService emmMonitorService -> a
    java.util.ArrayList taskList -> b
    boolean running -> c
    java.util.concurrent.Future futureTask -> d
    com.foxconn.emm.service.EMMMonitorService$TaskSubmitter taskSubmitter -> e
    com.foxconn.emm.service.EMMMonitorService$TaskTracker taskTracker -> f
    android.content.SharedPreferences sharedPrefs -> g
    com.foxconn.emm.dao.TrafficAppsOptDao trafficAppsOptDao -> h
    com.foxconn.emm.dao.TrafficOptDao trafficOptDao -> i
    com.foxconn.lib.network.control.NetworkControlTool networkControlTool -> j
    void submitCollectAppsTrafficTask() -> g
    void submitCollectAllTrafficTask() -> a
    void submitMonitorDeviceTrafficTask() -> b
    void submitSyncDeviceTrafficTask() -> c
    void submitSyncAllTrafficTask() -> d
    void runTask() -> e
    void addTask(java.lang.Runnable) -> a
    com.foxconn.emm.service.EMMMonitorService getEmmMonitorService() -> f
    com.foxconn.emm.dao.TrafficAppsOptDao access$0(com.foxconn.emm.service.EMMMonitorProcessManager) -> a
    com.foxconn.emm.service.EMMMonitorService access$1(com.foxconn.emm.service.EMMMonitorProcessManager) -> b
    com.foxconn.emm.dao.TrafficOptDao access$2(com.foxconn.emm.service.EMMMonitorProcessManager) -> c
    com.foxconn.lib.network.control.NetworkControlTool access$3(com.foxconn.emm.service.EMMMonitorProcessManager) -> d
com.foxconn.emm.service.EMMMonitorProcessManager$CollectAppsTrafficTask -> com.foxconn.emm.service.g:
    com.foxconn.emm.service.EMMMonitorProcessManager emmMonitorProcessManager -> b
    com.foxconn.emm.service.EMMMonitorProcessManager this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMMonitorProcessManager$CollectSysTrafficTask -> com.foxconn.emm.service.h:
    com.foxconn.emm.service.EMMMonitorProcessManager emmMonitorProcessManager -> b
    com.foxconn.emm.service.EMMMonitorProcessManager this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMMonitorProcessManager$MonitorDeviceTrafficTask -> com.foxconn.emm.service.i:
    com.foxconn.emm.service.EMMMonitorProcessManager emmMonitorProcessManager -> b
    com.foxconn.emm.service.EMMMonitorProcessManager this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMMonitorProcessManager$SyncAppsTrafficTask -> com.foxconn.emm.service.j:
    com.foxconn.emm.service.EMMMonitorProcessManager emmMonitorProcessManager -> b
    com.foxconn.emm.service.EMMMonitorProcessManager this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMMonitorProcessManager$SyncDeviceTrafficTask -> com.foxconn.emm.service.k:
    com.foxconn.emm.service.EMMMonitorProcessManager emmMonitorProcessManager -> b
    com.foxconn.emm.service.EMMMonitorProcessManager this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMMonitorProcessManager$TrafficStatisticsCollector -> com.foxconn.emm.service.l:
    com.foxconn.emm.bean.SysTraffic getSysTraffics(android.content.Context) -> a
    java.util.List getUidInfosTraffics(android.content.Context) -> b
    int getSplitTmonth(java.lang.String) -> a
    int getSplitTday(java.lang.String) -> b
    boolean filterApp(android.content.pm.ApplicationInfo) -> a
com.foxconn.emm.service.EMMMonitorService -> com.foxconn.emm.service.EMMMonitorService:
    com.foxconn.emm.service.EMMMonitorService$EMMMonitorBinder monitorBinder -> c
    android.content.pm.PackageManager packageManager -> d
    android.app.AlarmManager mAlarmManager -> e
    android.app.PendingIntent mPendingIntent -> f
    com.foxconn.emm.service.EMMMonitorService$TaskSubmitter taskSubmitter -> g
    com.foxconn.emm.service.EMMMonitorService$TaskTracker taskTracker -> h
    android.content.SharedPreferences sharedPrefs -> i
    android.content.Context context -> j
    com.foxconn.emm.service.ServiceManager serviceManager -> k
    com.foxconn.emm.service.EMMMonitorProcessManager emmProcessManager -> l
    java.util.concurrent.ExecutorService processorExecutors -> m
    java.util.concurrent.ScheduledExecutorService scheduledExecutorService -> n
    com.foxconn.emm.dao.TrafficAppsOptDao trafficAppsOptDao -> o
    com.foxconn.emm.dao.TrafficOptDao trafficOptDao -> p
    com.foxconn.emm.dao.LimitListDao limitListDao -> q
    android.content.BroadcastReceiver connBroadcastReceiver -> r
    java.util.List limitLists -> a
    com.foxconn.emm.bean.LimitListInfo tempStoplimitListInfo -> s
    android.app.ActivityManager activitymgr -> t
    android.content.Intent atyLimitappintent -> u
    boolean flag -> v
    android.app.KeyguardManager keyguardManager -> b
    void onCreate() -> onCreate
    void registerContentProvier() -> n
    void registerConnectivityReceiver() -> o
    void unregisterConnectivityReceiver() -> p
    void startMonitorAppsTask() -> q
    void protectServiceProcess() -> a
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void appRestartLimit(com.foxconn.emm.bean.LimitListInfo) -> appRestartLimit
    void appStopLimit(com.foxconn.emm.bean.LimitListInfo) -> appStopLimit
    void startCollectTrafficTask() -> b
    android.content.Intent getIntent() -> c
    void onNetChange() -> d
    com.foxconn.emm.bean.LimitListInfo containPackage(java.lang.String,java.util.List) -> a
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    java.util.concurrent.ExecutorService getProcessorExecutors() -> e
    void setProcessorExecutors(java.util.concurrent.ExecutorService) -> setProcessorExecutors
    com.foxconn.emm.service.EMMMonitorProcessManager getEmmProcessManager() -> f
    void setEmmProcessManager(com.foxconn.emm.service.EMMMonitorProcessManager) -> setEmmProcessManager
    void setServiceManager(com.foxconn.emm.service.ServiceManager) -> setServiceManager
    android.content.SharedPreferences getSharedPrefs() -> g
    void setSharedPrefs(android.content.SharedPreferences) -> setSharedPrefs
    com.foxconn.emm.service.EMMMonitorService$TaskTracker getTaskTracker() -> h
    void setTaskTracker(com.foxconn.emm.service.EMMMonitorService$TaskTracker) -> setTaskTracker
    android.content.pm.PackageManager getPackageManager() -> getPackageManager
    void setPackageManager(android.content.pm.PackageManager) -> setPackageManager
    java.util.concurrent.ScheduledExecutorService getScheduledExecutorService() -> i
    void setScheduledExecutorService(java.util.concurrent.ScheduledExecutorService) -> setScheduledExecutorService
    android.content.Context getContext() -> j
    void setContext(android.content.Context) -> setContext
    com.foxconn.emm.service.EMMMonitorService$TaskSubmitter getTaskSubmitter() -> k
    void setTaskSubmitter(com.foxconn.emm.service.EMMMonitorService$TaskSubmitter) -> setTaskSubmitter
    com.foxconn.emm.dao.TrafficAppsOptDao getTrafficAppsOptDao() -> l
    void setTrafficAppsOptDao(com.foxconn.emm.dao.TrafficAppsOptDao) -> setTrafficAppsOptDao
    com.foxconn.emm.dao.TrafficOptDao getTrafficOptDao() -> m
    void setTrafficOptDao(com.foxconn.emm.dao.TrafficOptDao) -> setTrafficOptDao
    com.foxconn.emm.service.EMMMonitorProcessManager access$0(com.foxconn.emm.service.EMMMonitorService) -> a
    boolean access$1(com.foxconn.emm.service.EMMMonitorService) -> b
    void access$2(com.foxconn.emm.service.EMMMonitorService,com.foxconn.emm.bean.LimitListInfo) -> a
    android.app.ActivityManager access$3(com.foxconn.emm.service.EMMMonitorService) -> c
    com.foxconn.emm.bean.LimitListInfo access$4(com.foxconn.emm.service.EMMMonitorService) -> d
    android.content.Intent access$5(com.foxconn.emm.service.EMMMonitorService) -> e
    com.foxconn.emm.dao.LimitListDao access$6(com.foxconn.emm.service.EMMMonitorService) -> f
com.foxconn.emm.service.EMMMonitorService$EMMMonitorBinder -> com.foxconn.emm.service.m:
    com.foxconn.emm.service.EMMMonitorService this$0 -> a
    void addTempStopLimit(com.foxconn.emm.bean.LimitListInfo) -> a
com.foxconn.emm.service.EMMMonitorService$LimitListObserver -> com.foxconn.emm.service.n:
    com.foxconn.emm.service.EMMMonitorService this$0 -> a
    void onChange(boolean) -> onChange
com.foxconn.emm.service.EMMMonitorService$MonitorAppsTask -> com.foxconn.emm.service.o:
    com.foxconn.emm.service.EMMMonitorService this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMMonitorService$StartCollectorTask -> com.foxconn.emm.service.p:
    com.foxconn.emm.service.EMMMonitorService this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMMonitorService$TaskSubmitter -> com.foxconn.emm.service.q:
    com.foxconn.emm.service.EMMMonitorService notificationService -> a
    com.foxconn.emm.service.EMMMonitorService this$0 -> b
    java.util.concurrent.Future submit(java.lang.Runnable) -> a
com.foxconn.emm.service.EMMMonitorService$TaskTracker -> com.foxconn.emm.service.r:
    com.foxconn.emm.service.EMMMonitorService emmService -> a
    int count -> b
    com.foxconn.emm.service.EMMMonitorService this$0 -> c
    void increase() -> a
    void decrease() -> b
com.foxconn.emm.service.EMMProcessManager -> com.foxconn.emm.service.s:
    com.foxconn.emm.service.EMMService emmService -> a
    java.util.ArrayList taskList -> b
    boolean running -> c
    java.util.concurrent.Future futureTask -> d
    com.foxconn.emm.service.EMMService$TaskSubmitter taskSubmitter -> e
    com.foxconn.emm.service.EMMService$TaskTracker taskTracker -> f
    android.content.SharedPreferences sharedPrefs -> g
    com.foxconn.emm.tools.PolicyControl policyControl -> h
    void startUpdateProcess() -> a
    void startLoginProcess() -> b
    void submitCheckUpdateTask() -> m
    void submitSyncPolicyTask() -> c
    void submitUploadImgTask() -> d
    void submitSyncDeviceSoftwareTask() -> e
    void submitSyncDeviceTrafficLimitInfoTask() -> f
    void submitSysLicenseValidateTask() -> g
    void setCheckUpdateTime() -> h
    java.lang.String getLastCheckUpdateTime() -> i
    boolean isNeedCheckUpdate() -> j
    com.foxconn.emm.service.EMMService getEmmService() -> k
    void runTask() -> l
    void addTask(java.lang.Runnable) -> a
    com.foxconn.emm.service.EMMService access$0(com.foxconn.emm.service.EMMProcessManager) -> a
    com.foxconn.emm.tools.PolicyControl access$1(com.foxconn.emm.service.EMMProcessManager) -> b
    void access$2(com.foxconn.emm.service.EMMProcessManager,com.foxconn.emm.tools.PolicyControl) -> a
com.foxconn.emm.service.EMMProcessManager$CheckUpdateTask -> com.foxconn.emm.service.t:
    com.foxconn.emm.service.EMMProcessManager emmProcessManager -> a
    com.foxconn.emm.service.EMMProcessManager this$0 -> b
    void run() -> run
com.foxconn.emm.service.EMMProcessManager$DeviceTrafficLimitTask -> com.foxconn.emm.service.u:
    com.foxconn.emm.service.EMMProcessManager emmProcessManager -> a
    com.foxconn.emm.service.EMMProcessManager this$0 -> b
    void run() -> run
com.foxconn.emm.service.EMMProcessManager$SyncDeviceSoftwareTask -> com.foxconn.emm.service.v:
    com.foxconn.emm.service.EMMProcessManager emmProcessManager -> a
    com.foxconn.emm.service.EMMProcessManager this$0 -> b
    void run() -> run
com.foxconn.emm.service.EMMProcessManager$SyncPolicyTask -> com.foxconn.emm.service.w:
    com.foxconn.emm.service.EMMProcessManager emmProcessManager -> a
    com.foxconn.emm.service.EMMProcessManager this$0 -> b
    void run() -> run
com.foxconn.emm.service.EMMProcessManager$SysLicenseValidateTask -> com.foxconn.emm.service.x:
    com.foxconn.emm.service.EMMProcessManager emmProcessManager -> a
    com.foxconn.emm.service.EMMProcessManager this$0 -> b
    void run() -> run
    void save2SP(com.foxconn.emm.bean.SysLicenseResult) -> a
com.foxconn.emm.service.EMMProcessManager$UpLoadImgTask -> com.foxconn.emm.service.y:
    com.foxconn.emm.service.EMMProcessManager emmProcessManager -> a
    com.foxconn.emm.service.EMMProcessManager this$0 -> b
    void run() -> run
com.foxconn.emm.service.EMMService -> com.foxconn.emm.service.EMMService:
    android.os.Binder emmBinder -> emmBinder
    java.util.concurrent.ExecutorService processorExecutors -> processorExecutors
    com.foxconn.app.IConnectionStatusCallback mConnectionStatusCallback -> mConnectionStatusCallback
    com.foxconn.emm.service.EMMService$TaskSubmitter taskSubmitter -> taskSubmitter
    com.foxconn.emm.service.EMMService$TaskTracker taskTracker -> taskTracker
    com.foxconn.emm.service.EMMProcessManager emmProcessManager -> emmProcessManager
    int CONNECTED -> CONNECTED
    int FAILCONNECTED -> FAILCONNECTED
    int CONNECTING -> CONNECTING
    java.lang.String NETWORK_ERROR -> NETWORK_ERROR
    java.lang.String LOGIN_FAILED -> LOGIN_FAILED
    java.lang.String SERVICE_NAME -> SERVICE_NAME
    int SERVICE_NOTIFICATION -> SERVICE_NOTIFICATION
    android.os.Handler mMainHandler -> mMainHandler
    int mConnectedState -> mConnectedState
    android.content.SharedPreferences sharedPrefs -> sharedPrefs
    com.foxconn.emm.dao.DBUserInfoHelper dbuserInfoHelper -> dbuserInfoHelper
    android.content.Context context -> context
    com.foxconn.emm.service.ServiceManager serviceManager -> serviceManager
    com.foxconn.emm.tools.PolicyControl policyControl -> policyControl
    android.app.AlarmManager mAlarmManager -> mAlarmManager
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.app.ActivityManager mActivityManager -> mActivityManager
    java.lang.Runnable monitorStatus -> monitorStatus
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    android.content.Intent getIntent() -> getIntent
    void checkService() -> checkService
    boolean onUnbind(android.content.Intent) -> onUnbind
    void loginEMM(java.lang.String,java.lang.String) -> loginEMM
    void reFreshEMM() -> reFreshEMM
    void protectServiceProcess() -> protectServiceProcess
    void registerConnectionStatusCallback(com.foxconn.app.IConnectionStatusCallback) -> registerConnectionStatusCallback
    void unRegisterConnectionStatusCallback() -> unRegisterConnectionStatusCallback
    java.util.concurrent.ExecutorService getProcessorExecutors() -> getProcessorExecutors
    void setProcessorExecutors(java.util.concurrent.ExecutorService) -> setProcessorExecutors
    void startPendingService() -> startPendingService
    void onNetChange() -> onNetChange
    void checkUserUploadUserImage() -> checkUserUploadUserImage
    void checkUserInfoIsAuthorized() -> checkUserInfoIsAuthorized
    void postAuthorFailed() -> postAuthorFailed
    void userAuthorFailed(android.content.Context) -> userAuthorFailed
    void postConnectionFailed(java.lang.String) -> postConnectionFailed
    void connectionFailed(java.lang.String) -> connectionFailed
    void postConnectionScuessed(java.lang.String) -> postConnectionScuessed
    void connectionScuessed(java.lang.String) -> connectionScuessed
    void postConnecting() -> postConnecting
    void connecting() -> connecting
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    com.foxconn.emm.service.EMMService$TaskSubmitter getTaskSubmitter() -> getTaskSubmitter
    void setTaskSubmitter(com.foxconn.emm.service.EMMService$TaskSubmitter) -> setTaskSubmitter
    com.foxconn.emm.service.EMMService$TaskTracker getTaskTracker() -> getTaskTracker
    void setTaskTracker(com.foxconn.emm.service.EMMService$TaskTracker) -> setTaskTracker
    com.foxconn.emm.service.EMMProcessManager getEmmProcessManager() -> getEmmProcessManager
    void setEmmProcessManager(com.foxconn.emm.service.EMMProcessManager) -> setEmmProcessManager
    android.content.SharedPreferences getSharedPrefs() -> getSharedPrefs
    void setSharedPrefs(android.content.SharedPreferences) -> setSharedPrefs
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    com.foxconn.emm.service.ServiceManager getServiceManager() -> getServiceManager
    void setServiceManager(com.foxconn.emm.service.ServiceManager) -> setServiceManager
    com.foxconn.emm.tools.PolicyControl getPolicyControl() -> getPolicyControl
    void setPolicyControl(com.foxconn.emm.tools.PolicyControl) -> setPolicyControl
    void updateServiceNotification(java.lang.String) -> updateServiceNotification
    boolean isAppOnForeground() -> isAppOnForeground
    void activityOnResume() -> activityOnResume
    void activityOnPause() -> activityOnPause
    android.os.Handler access$0(com.foxconn.emm.service.EMMService) -> access$0
    void access$1(com.foxconn.emm.service.EMMService) -> access$1
    com.foxconn.emm.dao.DBUserInfoHelper access$2(com.foxconn.emm.service.EMMService) -> access$2
    void access$3(com.foxconn.emm.service.EMMService,java.lang.String) -> access$3
    void access$4(com.foxconn.emm.service.EMMService,android.content.Context) -> access$4
    void access$5(com.foxconn.emm.service.EMMService,java.lang.String) -> access$5
    void access$6(com.foxconn.emm.service.EMMService,java.lang.String) -> access$6
    void access$7(com.foxconn.emm.service.EMMService) -> access$7
com.foxconn.emm.service.EMMService$1 -> com.foxconn.emm.service.z:
    com.foxconn.emm.service.EMMService this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMService$2 -> com.foxconn.emm.service.aa:
    com.foxconn.emm.service.EMMService this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMService$3 -> com.foxconn.emm.service.ab:
    com.foxconn.emm.service.EMMService this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.foxconn.emm.service.EMMService$4 -> com.foxconn.emm.service.ac:
    com.foxconn.emm.service.EMMService this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.foxconn.emm.service.EMMService$5 -> com.foxconn.emm.service.ad:
    com.foxconn.emm.service.EMMService this$0 -> a
    java.lang.String val$reason -> b
    void run() -> run
com.foxconn.emm.service.EMMService$6 -> com.foxconn.emm.service.ae:
    com.foxconn.emm.service.EMMService this$0 -> a
    java.lang.String val$message -> b
    void run() -> run
com.foxconn.emm.service.EMMService$7 -> com.foxconn.emm.service.af:
    com.foxconn.emm.service.EMMService this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMService$EMMBinder -> com.foxconn.emm.service.ag:
    com.foxconn.emm.service.EMMService this$0 -> a
    com.foxconn.emm.service.EMMService getService() -> a
com.foxconn.emm.service.EMMService$ExtraUserInfoTaskCallable -> com.foxconn.emm.service.ah:
    java.lang.String username -> b
    com.foxconn.emm.service.EMMService this$0 -> a
    com.foxconn.emm.bean.UserInfo call() -> a
    java.lang.Object call() -> call
com.foxconn.emm.service.EMMService$LoginTaskCallable -> com.foxconn.emm.service.ai:
    java.lang.String password -> b
    java.lang.String username -> c
    com.foxconn.emm.service.EMMService this$0 -> a
    com.foxconn.emm.bean.RegResult call() -> a
    java.lang.Object call() -> call
com.foxconn.emm.service.EMMService$OfflineLoginTaskCallable -> com.foxconn.emm.service.aj:
    java.lang.String password -> b
    java.lang.String username -> c
    com.foxconn.emm.service.EMMService this$0 -> a
    void run() -> run
com.foxconn.emm.service.EMMService$TaskSubmitter -> com.foxconn.emm.service.ak:
    com.foxconn.emm.service.EMMService notificationService -> a
    com.foxconn.emm.service.EMMService this$0 -> b
    java.util.concurrent.Future submit(java.lang.Runnable) -> a
com.foxconn.emm.service.EMMService$TaskTracker -> com.foxconn.emm.service.al:
    com.foxconn.emm.service.EMMService emmService -> a
    int count -> b
    com.foxconn.emm.service.EMMService this$0 -> c
    void increase() -> a
    void decrease() -> b
com.foxconn.emm.service.IMonitorService -> com.foxconn.emm.service.am:
    void addTempStopLimit(com.foxconn.emm.bean.LimitListInfo) -> a
com.foxconn.emm.service.ServiceManager -> com.foxconn.emm.service.an:
    android.content.Context context -> a
    android.content.SharedPreferences sharedPrefs -> b
    java.util.Properties props -> c
    java.lang.String apiKey -> d
    java.lang.String xmppHost -> e
    java.lang.String xmppPort -> f
    void checkKeepRunningService() -> a
    void startNotificationService() -> b
    void startEMMMonitorService() -> c
    java.util.Properties loadProperties() -> d
    android.content.Context access$0(com.foxconn.emm.service.ServiceManager) -> a
com.foxconn.emm.service.ServiceManager$1 -> com.foxconn.emm.service.ao:
    com.foxconn.emm.service.ServiceManager this$0 -> a
    void run() -> run
com.foxconn.emm.service.ServiceManager$2 -> com.foxconn.emm.service.ap:
    com.foxconn.emm.service.ServiceManager this$0 -> a
    void run() -> run
com.foxconn.emm.swipemenulistview.SwipeMenu -> com.foxconn.emm.swipemenulistview.a:
    android.content.Context mContext -> a
    java.util.List mItems -> b
    int mViewType -> c
    android.content.Context getContext() -> a
    void addMenuItem(com.foxconn.emm.swipemenulistview.SwipeMenuItem) -> a
    java.util.List getMenuItems() -> b
    void setViewType(int) -> a
com.foxconn.emm.swipemenulistview.SwipeMenuAdapter -> com.foxconn.emm.swipemenulistview.SwipeMenuAdapter:
    android.widget.ListAdapter mAdapter -> mAdapter
    android.content.Context mContext -> mContext
    com.foxconn.emm.swipemenulistview.SwipeMenuListView$OnMenuItemClickListener onMenuItemClickListener -> onMenuItemClickListener
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void createMenu(com.foxconn.emm.swipemenulistview.SwipeMenu) -> createMenu
    void onItemClick(com.foxconn.emm.swipemenulistview.SwipeMenuView,com.foxconn.emm.swipemenulistview.SwipeMenu,int) -> onItemClick
    void setOnMenuItemClickListener(com.foxconn.emm.swipemenulistview.SwipeMenuListView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    boolean hasStableIds() -> hasStableIds
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
    android.widget.ListAdapter getWrappedAdapter() -> getWrappedAdapter
com.foxconn.emm.swipemenulistview.SwipeMenuCreator -> com.foxconn.emm.swipemenulistview.b:
    void create(com.foxconn.emm.swipemenulistview.SwipeMenu) -> a
com.foxconn.emm.swipemenulistview.SwipeMenuItem -> com.foxconn.emm.swipemenulistview.c:
    android.content.Context mContext -> a
    java.lang.String title -> b
    android.graphics.drawable.Drawable icon -> c
    android.graphics.drawable.Drawable background -> d
    int titleColor -> e
    int titleSize -> f
    int width -> g
    int getTitleColor() -> a
    int getTitleSize() -> b
    void setTitleSize(int) -> a
    void setTitleColor(int) -> b
    java.lang.String getTitle() -> c
    void setTitle(java.lang.String) -> a
    android.graphics.drawable.Drawable getIcon() -> d
    void setIcon(int) -> c
    android.graphics.drawable.Drawable getBackground() -> e
    void setBackground(android.graphics.drawable.Drawable) -> a
    int getWidth() -> f
    void setWidth(int) -> d
com.foxconn.emm.swipemenulistview.SwipeMenuLayout -> com.foxconn.emm.swipemenulistview.SwipeMenuLayout:
    int CONTENT_VIEW_ID -> CONTENT_VIEW_ID
    int MENU_VIEW_ID -> MENU_VIEW_ID
    int STATE_CLOSE -> STATE_CLOSE
    int STATE_OPEN -> STATE_OPEN
    android.view.View mContentView -> mContentView
    com.foxconn.emm.swipemenulistview.SwipeMenuView mMenuView -> mMenuView
    int mDownX -> mDownX
    int state -> state
    android.support.v4.view.GestureDetectorCompat mGestureDetector -> mGestureDetector
    android.view.GestureDetector$OnGestureListener mGestureListener -> mGestureListener
    boolean isFling -> isFling
    int MIN_FLING -> MIN_FLING
    int MAX_VELOCITYX -> MAX_VELOCITYX
    android.support.v4.widget.ScrollerCompat mOpenScroller -> mOpenScroller
    android.support.v4.widget.ScrollerCompat mCloseScroller -> mCloseScroller
    int mBaseX -> mBaseX
    int position -> position
    android.view.animation.Interpolator mCloseInterpolator -> mCloseInterpolator
    android.view.animation.Interpolator mOpenInterpolator -> mOpenInterpolator
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    void init() -> init
    void onAttachedToWindow() -> onAttachedToWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onSwipe(android.view.MotionEvent) -> onSwipe
    boolean isOpen() -> isOpen
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void swipe(int) -> swipe
    void computeScroll() -> computeScroll
    void smoothCloseMenu() -> smoothCloseMenu
    void smoothOpenMenu() -> smoothOpenMenu
    void closeMenu() -> closeMenu
    void openMenu() -> openMenu
    android.view.View getContentView() -> getContentView
    com.foxconn.emm.swipemenulistview.SwipeMenuView getMenuView() -> getMenuView
    int dp2px(int) -> dp2px
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setMenuHeight(int) -> setMenuHeight
    void access$0(com.foxconn.emm.swipemenulistview.SwipeMenuLayout,boolean) -> access$0
    int access$1(com.foxconn.emm.swipemenulistview.SwipeMenuLayout) -> access$1
    int access$2(com.foxconn.emm.swipemenulistview.SwipeMenuLayout) -> access$2
com.foxconn.emm.swipemenulistview.SwipeMenuLayout$1 -> com.foxconn.emm.swipemenulistview.d:
    com.foxconn.emm.swipemenulistview.SwipeMenuLayout this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.foxconn.emm.swipemenulistview.SwipeMenuListView -> com.foxconn.emm.swipemenulistview.SwipeMenuListView:
    int TOUCH_STATE_NONE -> TOUCH_STATE_NONE
    int TOUCH_STATE_X -> TOUCH_STATE_X
    int TOUCH_STATE_Y -> TOUCH_STATE_Y
    int MAX_Y -> MAX_Y
    int MAX_X -> MAX_X
    float mDownX -> mDownX
    float mDownY -> mDownY
    int mTouchState -> mTouchState
    int mTouchPosition -> mTouchPosition
    com.foxconn.emm.swipemenulistview.SwipeMenuLayout mTouchView -> mTouchView
    com.foxconn.emm.swipemenulistview.SwipeMenuListView$OnSwipeListener mOnSwipeListener -> mOnSwipeListener
    com.foxconn.emm.swipemenulistview.SwipeMenuCreator mMenuCreator -> mMenuCreator
    com.foxconn.emm.swipemenulistview.SwipeMenuListView$OnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    android.view.animation.Interpolator mCloseInterpolator -> mCloseInterpolator
    android.view.animation.Interpolator mOpenInterpolator -> mOpenInterpolator
    void init() -> init
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setCloseInterpolator(android.view.animation.Interpolator) -> setCloseInterpolator
    void setOpenInterpolator(android.view.animation.Interpolator) -> setOpenInterpolator
    android.view.animation.Interpolator getOpenInterpolator() -> getOpenInterpolator
    android.view.animation.Interpolator getCloseInterpolator() -> getCloseInterpolator
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void smoothOpenMenu(int) -> smoothOpenMenu
    int dp2px(int) -> dp2px
    void setMenuCreator(com.foxconn.emm.swipemenulistview.SwipeMenuCreator) -> setMenuCreator
    void setOnMenuItemClickListener(com.foxconn.emm.swipemenulistview.SwipeMenuListView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void setOnSwipeListener(com.foxconn.emm.swipemenulistview.SwipeMenuListView$OnSwipeListener) -> setOnSwipeListener
    com.foxconn.emm.swipemenulistview.SwipeMenuCreator access$0(com.foxconn.emm.swipemenulistview.SwipeMenuListView) -> access$0
    com.foxconn.emm.swipemenulistview.SwipeMenuListView$OnMenuItemClickListener access$1(com.foxconn.emm.swipemenulistview.SwipeMenuListView) -> access$1
    com.foxconn.emm.swipemenulistview.SwipeMenuLayout access$2(com.foxconn.emm.swipemenulistview.SwipeMenuListView) -> access$2
com.foxconn.emm.swipemenulistview.SwipeMenuListView$1 -> com.foxconn.emm.swipemenulistview.e:
    com.foxconn.emm.swipemenulistview.SwipeMenuListView this$0 -> a
    void createMenu(com.foxconn.emm.swipemenulistview.SwipeMenu) -> createMenu
    void onItemClick(com.foxconn.emm.swipemenulistview.SwipeMenuView,com.foxconn.emm.swipemenulistview.SwipeMenu,int) -> onItemClick
com.foxconn.emm.swipemenulistview.SwipeMenuListView$OnMenuItemClickListener -> com.foxconn.emm.swipemenulistview.f:
    void onMenuItemClick(int,com.foxconn.emm.swipemenulistview.SwipeMenu,int) -> a
com.foxconn.emm.swipemenulistview.SwipeMenuListView$OnSwipeListener -> com.foxconn.emm.swipemenulistview.g:
    void onSwipeStart(int) -> a
    void onSwipeEnd(int) -> b
com.foxconn.emm.swipemenulistview.SwipeMenuView -> com.foxconn.emm.swipemenulistview.SwipeMenuView:
    com.foxconn.emm.swipemenulistview.SwipeMenuListView mListView -> mListView
    com.foxconn.emm.swipemenulistview.SwipeMenuLayout mLayout -> mLayout
    com.foxconn.emm.swipemenulistview.SwipeMenu mMenu -> mMenu
    com.foxconn.emm.swipemenulistview.SwipeMenuView$OnSwipeItemClickListener onItemClickListener -> onItemClickListener
    int position -> position
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    void addItem(com.foxconn.emm.swipemenulistview.SwipeMenuItem,int) -> addItem
    android.widget.ImageView createIcon(com.foxconn.emm.swipemenulistview.SwipeMenuItem) -> createIcon
    android.widget.TextView createTitle(com.foxconn.emm.swipemenulistview.SwipeMenuItem) -> createTitle
    void onClick(android.view.View) -> onClick
    com.foxconn.emm.swipemenulistview.SwipeMenuView$OnSwipeItemClickListener getOnSwipeItemClickListener() -> getOnSwipeItemClickListener
    void setOnSwipeItemClickListener(com.foxconn.emm.swipemenulistview.SwipeMenuView$OnSwipeItemClickListener) -> setOnSwipeItemClickListener
    void setLayout(com.foxconn.emm.swipemenulistview.SwipeMenuLayout) -> setLayout
com.foxconn.emm.swipemenulistview.SwipeMenuView$OnSwipeItemClickListener -> com.foxconn.emm.swipemenulistview.h:
    void onItemClick(com.foxconn.emm.swipemenulistview.SwipeMenuView,com.foxconn.emm.swipemenulistview.SwipeMenu,int) -> onItemClick
com.foxconn.emm.tools.CrashHandler -> com.foxconn.emm.tools.a:
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> a
    com.foxconn.emm.tools.CrashHandler INSTANCE -> b
    android.content.Context mContext -> c
    com.foxconn.emm.tools.CrashHandler getInstance() -> a
    void init(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> a
    java.io.File save2File(java.lang.String) -> a
    void sendAppCrashReport(android.content.Context,java.lang.String,java.io.File) -> a
    java.lang.String getCrashReport(android.content.Context,java.lang.Throwable) -> a
    android.content.pm.PackageInfo getPackageInfo(android.content.Context) -> b
    android.content.Context access$0(com.foxconn.emm.tools.CrashHandler) -> a
    void access$1(com.foxconn.emm.tools.CrashHandler,android.content.Context,java.lang.String,java.io.File) -> a
com.foxconn.emm.tools.CrashHandler$1 -> com.foxconn.emm.tools.b:
    com.foxconn.emm.tools.CrashHandler this$0 -> a
    java.lang.String val$crashReport -> b
    void run() -> run
com.foxconn.emm.tools.CrashHandler$2 -> com.foxconn.emm.tools.c:
    com.foxconn.emm.tools.CrashHandler this$0 -> a
    java.io.File val$file -> b
    java.lang.String val$crashReport -> c
    android.content.Context val$context -> d
    void onClick(android.content.DialogInterface,int) -> onClick
com.foxconn.emm.tools.CrashHandler$3 -> com.foxconn.emm.tools.d:
    com.foxconn.emm.tools.CrashHandler this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.foxconn.emm.tools.CrashHandler$SystemCrashErrorReportTask -> com.foxconn.emm.tools.e:
    java.lang.String crashReport -> b
    com.foxconn.emm.tools.CrashHandler this$0 -> a
    void run() -> run
com.foxconn.emm.tools.FileDES -> com.foxconn.emm.tools.f:
    java.security.Key mKey -> a
    javax.crypto.Cipher mDecryptCipher -> b
    javax.crypto.Cipher mEncryptCipher -> c
    void initKey(java.lang.String) -> a
    void initCipher() -> a
    void doDecryptFile(java.io.InputStream,java.lang.String) -> a
    void doDecryptFile(java.lang.String,java.lang.String) -> a
com.foxconn.emm.tools.PakageInfoService -> com.foxconn.emm.tools.g:
    java.util.List getAppInfos(android.content.Context) -> a
    boolean filterApp(android.content.pm.ApplicationInfo) -> a
com.foxconn.emm.tools.PolicyControl -> com.foxconn.emm.tools.h:
    android.content.Context context -> a
    android.content.ComponentName mDeviceAdminSample -> b
    android.app.admin.DevicePolicyManager mDPM -> c
    android.net.wifi.WifiManager wifiManager -> d
    android.bluetooth.BluetoothAdapter btAdapter -> e
    java.lang.String enablePolicy(java.lang.String) -> a
    java.lang.String enableCurrentPolicy() -> a
    java.lang.String enablePolicy(com.foxconn.emm.bean.PolicyInfo) -> a
    java.lang.String enableDefaultPolicy() -> b
    void lockDevice(java.lang.String) -> b
    void removeWipe() -> c
    void unLockDevice() -> d
    void enableWifi() -> e
    void disableWifi() -> f
    void connectToSpecifySSID(java.lang.String,java.lang.String) -> a
    void watingenabling() -> m
    void checkCurrentNetworkSSID(com.foxconn.emm.tools.WiFiAutoConnManager,java.lang.String,java.lang.String) -> a
    void enableCamera() -> g
    void disableCamera() -> h
    void enableBlueTooth() -> i
    void enableBlueTooth(boolean) -> a
    void disableBlueTooth() -> j
    void removeControl() -> k
    void cleanInfo() -> l
    java.lang.String enableQRPolicy(com.foxconn.emm.bean.PolicyInfo) -> b
    boolean isNull(java.lang.Object) -> a
com.foxconn.emm.tools.TrafficTools -> com.foxconn.emm.tools.i:
    long getTotalWlanTraffic() -> a
    long getTotalDataTraffic() -> b
    long getTotalDataReceived() -> c
    long getTotalDataTransmitted() -> d
    long getSingleUidReceivedData(int) -> a
    long getSingleUidTransmittedData(int) -> b
com.foxconn.emm.tools.UploadHeadImgTools -> com.foxconn.emm.tools.j:
    void uploadImgToServer2(java.lang.String,java.lang.String,java.lang.String) -> a
com.foxconn.emm.tools.UploadHeadImgTools$1 -> com.foxconn.emm.tools.k:
    java.lang.String val$uploadFile -> a
    java.lang.String val$userId -> b
    java.lang.String val$newName -> c
    void run() -> run
    void uploadFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.foxconn.emm.tools.WiFiAutoConnManager -> com.foxconn.emm.tools.WiFiAutoConnManager:
    android.net.wifi.WifiManager wifiManager -> a
    void connect(java.lang.String,java.lang.String,com.foxconn.emm.tools.WiFiAutoConnManager$WifiCipherType) -> a
    android.net.wifi.WifiConfiguration isExsits(java.lang.String) -> a
    android.net.wifi.WifiConfiguration createWifiInfo(java.lang.String,java.lang.String,com.foxconn.emm.tools.WiFiAutoConnManager$WifiCipherType) -> b
    boolean openWifi() -> a
    boolean isHexWepKey(java.lang.String) -> b
    boolean isHex(java.lang.String) -> c
    boolean access$0(com.foxconn.emm.tools.WiFiAutoConnManager) -> a
    android.net.wifi.WifiConfiguration access$1(com.foxconn.emm.tools.WiFiAutoConnManager,java.lang.String,java.lang.String,com.foxconn.emm.tools.WiFiAutoConnManager$WifiCipherType) -> a
    android.net.wifi.WifiConfiguration access$2(com.foxconn.emm.tools.WiFiAutoConnManager,java.lang.String) -> a
com.foxconn.emm.tools.WiFiAutoConnManager$ConnectRunnable -> com.foxconn.emm.tools.l:
    java.lang.String ssid -> b
    java.lang.String password -> c
    com.foxconn.emm.tools.WiFiAutoConnManager$WifiCipherType type -> d
    com.foxconn.emm.tools.WiFiAutoConnManager this$0 -> a
    void run() -> run
com.foxconn.emm.tools.WiFiAutoConnManager$WifiCipherType -> com.foxconn.emm.tools.WiFiAutoConnManager$WifiCipherType:
    com.foxconn.emm.tools.WiFiAutoConnManager$WifiCipherType WIFICIPHER_WEP -> WIFICIPHER_WEP
    com.foxconn.emm.tools.WiFiAutoConnManager$WifiCipherType WIFICIPHER_WPA -> WIFICIPHER_WPA
    com.foxconn.emm.tools.WiFiAutoConnManager$WifiCipherType WIFICIPHER_NOPASS -> WIFICIPHER_NOPASS
    com.foxconn.emm.tools.WiFiAutoConnManager$WifiCipherType WIFICIPHER_INVALID -> WIFICIPHER_INVALID
    com.foxconn.emm.tools.WiFiAutoConnManager$WifiCipherType[] ENUM$VALUES -> ENUM$VALUES
    com.foxconn.emm.tools.WiFiAutoConnManager$WifiCipherType[] values() -> values
    com.foxconn.emm.tools.WiFiAutoConnManager$WifiCipherType valueOf(java.lang.String) -> valueOf
com.foxconn.emm.utils.ApplicationDetailInfo -> com.foxconn.emm.utils.a:
    android.content.Context context -> a
    void showInstalledAppDetails(java.lang.String) -> a
    android.content.pm.PackageInfo getPackageInfo(android.content.Context) -> a
com.foxconn.emm.utils.ChangeLog -> com.foxconn.emm.utils.ChangeLog:
    android.content.Context mContext -> a
    java.lang.String lastVersion -> b
    java.lang.String thisVersion -> c
    com.foxconn.emm.utils.ChangeLog$Listmode listMode -> d
    java.lang.StringBuffer sb -> e
    boolean firstRun() -> a
    boolean firstRunEver() -> b
com.foxconn.emm.utils.ChangeLog$Listmode -> com.foxconn.emm.utils.ChangeLog$Listmode:
    com.foxconn.emm.utils.ChangeLog$Listmode NONE -> NONE
    com.foxconn.emm.utils.ChangeLog$Listmode ORDERED -> ORDERED
    com.foxconn.emm.utils.ChangeLog$Listmode UNORDERED -> UNORDERED
    com.foxconn.emm.utils.ChangeLog$Listmode[] ENUM$VALUES -> ENUM$VALUES
    com.foxconn.emm.utils.ChangeLog$Listmode[] values() -> values
    com.foxconn.emm.utils.ChangeLog$Listmode valueOf(java.lang.String) -> valueOf
com.foxconn.emm.utils.DateUtil -> com.foxconn.emm.utils.b:
    java.text.SimpleDateFormat dateFormate -> a
    java.util.Calendar minusDay(java.util.Calendar,int) -> a
    int compareDays(java.util.Calendar,java.util.Calendar) -> a
com.foxconn.emm.utils.EMMContants -> com.foxconn.emm.utils.c:
    boolean SHOW_WELCOME_license_flag -> a
com.foxconn.emm.utils.EMMContants$LocalConf -> com.foxconn.emm.utils.d:
    void initImageDownFullDir() -> c
    void initAppDownFullDir() -> d
    void initEncryptionFileDownFullDir() -> e
    void initDecryptionFileDownFullDir() -> f
    void initDownloadsFileFillDir() -> g
    boolean isSdPresent() -> a
    java.lang.String getEMMLocalHost_dirPath() -> b
com.foxconn.emm.utils.EMMContants$XMPPCONF -> com.foxconn.emm.utils.e:
    com.foxconn.emm.xmpp.XmppManager xmppManager -> a
com.foxconn.emm.utils.EMMPreferences -> com.foxconn.emm.utils.f:
    android.content.SharedPreferences settings -> a
    android.content.SharedPreferences policyData -> b
    android.content.SharedPreferences getSP(android.content.Context) -> t
    android.content.SharedPreferences getPolicySP(android.content.Context) -> u
    void setPolicyData(android.content.Context,java.lang.String) -> a
    java.lang.String getPolicyData(android.content.Context) -> a
    java.lang.String getTotalData(android.content.Context) -> b
    java.lang.String getTrafficInfoLimit(android.content.Context) -> c
    void setTrafficInfoLimit(android.content.Context,java.lang.String) -> b
    java.lang.Boolean getSecurityNeedAuthorized(android.content.Context) -> d
    void setSecurityNeedAuthorized(android.content.Context,java.lang.Boolean) -> a
    java.lang.Boolean getSecurityStatus(android.content.Context) -> e
    void setSecurityStatus(android.content.Context,java.lang.Boolean) -> b
    java.lang.String getUserID(android.content.Context) -> f
    void setUserID(android.content.Context,java.lang.String) -> c
    java.lang.String getDEVICELocation(android.content.Context) -> g
    void setDEVICELocation(android.content.Context,java.lang.String) -> d
    java.lang.String getDEVICELocationStreet(android.content.Context) -> h
    void setDEVICELocationStreet(android.content.Context,java.lang.String) -> e
    java.lang.String getUserInfoSyncTime(android.content.Context) -> i
    void setUserInfoSyncTime(android.content.Context,java.lang.String) -> f
    boolean getIsLicensePass(android.content.Context) -> j
    void setLicenseIsPass(android.content.Context,boolean) -> a
    boolean getIsLicenseEnable(android.content.Context) -> k
    void setUserBGID(android.content.Context,java.lang.String) -> g
    java.lang.String getAppUpdateTime(android.content.Context) -> l
    void setAppUpdateTime(android.content.Context,java.lang.String) -> h
    void setIMEI(android.content.Context,java.lang.String) -> i
    java.lang.String getDeviceEnrolled(android.content.Context) -> m
    void setDeviceEnrolled(android.content.Context,java.lang.String) -> j
    java.lang.String getLocationCode(android.content.Context) -> n
    void setLocationCode(android.content.Context,java.lang.String) -> k
    boolean isHASHEADIMG_UPLOAD(android.content.Context) -> o
    void setHASHEADIMG_UPLOAD(android.content.Context,boolean) -> b
    java.lang.String getSysLicenseNo(android.content.Context) -> p
    void setSysLicenseNo(android.content.Context,java.lang.String) -> l
    java.lang.String getSysLicenseEnterpriseName(android.content.Context) -> q
    void setSysLicenseEnterpriseName(android.content.Context,java.lang.String) -> m
    java.lang.String getSysLicenseDeadLine(android.content.Context) -> r
    void setSysLicenseDeadLine(android.content.Context,java.lang.String) -> n
    java.lang.String getSysLicenseCurrentTime(android.content.Context) -> s
    void setSysLicenseCurrentTime(android.content.Context,java.lang.String) -> o
com.foxconn.emm.utils.EMMReqParamsUtils -> com.foxconn.emm.utils.g:
    java.lang.String getEntrollStrData(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String getWifiMac(android.content.Context) -> a
    java.lang.String getSyncUserInfoStr(android.content.Context,java.lang.String) -> a
    java.lang.String getSyncPolicyStr(android.content.Context) -> b
    java.lang.String getSyncDeviceTrafficStr(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getSyncDeviceTrafficStr(android.content.Context,com.foxconn.emm.bean.SysTraffic) -> a
    java.lang.String getSyncAppsTrafficStr(android.content.Context,java.lang.String) -> b
    java.lang.String getSyncAppsTrafficStr(android.content.Context,java.util.List) -> a
    java.lang.String getSyncDeviceLocationStr(android.content.Context) -> c
    org.json.JSONObject convertToJSONobject(com.foxconn.emm.bean.UidTraffic) -> a
    java.lang.String getSyncDeviceLimitListStr(android.content.Context,java.lang.String) -> c
    java.lang.String getSyncDeviceLimitListStr(android.content.Context) -> d
    java.lang.String getSyncDeviceLimitListStr(android.content.Context,java.util.List) -> b
    com.foxconn.emm.bean.InstalledAppInfo getAllInstalledAppInfoFilter(android.content.Context,com.foxconn.emm.bean.LimitListInfo) -> a
    org.json.JSONObject converToJSONobject(android.content.Context,com.foxconn.emm.bean.LimitListInfo) -> b
    java.lang.String getSyncDeviceSoftWareStr(android.content.Context,java.lang.String) -> d
    java.lang.String getSyncDeviceSoftWareStr(android.content.Context) -> e
    java.lang.String getSyncDeviceSoftwareStr(android.content.Context,java.util.List) -> c
    org.json.JSONObject converToJSONobject(android.content.Context,com.foxconn.emm.bean.InstalledAppInfo) -> a
    java.lang.String getSyncDeviceSerialNoStr(android.content.Context,java.lang.String) -> e
    java.lang.String getSyncTrafficInfoLimit(android.content.Context) -> f
    org.json.JSONObject getSysCrashErrorReport(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getSysLicenseValidate(android.content.Context,java.lang.String,java.lang.String) -> b
    java.lang.String getSysLicenseUsualValidate(android.content.Context) -> g
com.foxconn.emm.utils.HttpClientUtil -> com.foxconn.emm.utils.h:
    int ok -> a
    int Partial_Content -> b
    int Not_Found -> c
    java.lang.String getRequestJsonParamsJson(java.lang.String,java.lang.String) -> a
    java.io.InputStream getRequestXML(java.lang.String) -> a
    java.lang.String returnData(java.lang.String,java.lang.String) -> b
com.foxconn.emm.utils.IconImgUtils -> com.foxconn.emm.utils.i:
    android.graphics.Bitmap getImgFromServer(java.lang.String) -> a
    java.lang.String getImageNameIncludeType(java.lang.String) -> b
    boolean compare2ImageName(java.lang.String,java.lang.String) -> a
com.foxconn.emm.utils.ImageUtils -> com.foxconn.emm.utils.j:
    int posX -> a
    int posY -> b
    com.foxconn.emm.utils.ImageUtils instance -> c
    com.foxconn.emm.utils.ImageUtils getInstance() -> a
    android.graphics.Bitmap rotate(float,float,float,android.graphics.Bitmap) -> a
    android.graphics.Bitmap rightRotate(android.graphics.Bitmap) -> a
    java.lang.String saveToLocal(android.graphics.Bitmap,java.lang.String) -> a
    android.graphics.Bitmap getBitmapFromSDScale(java.io.File,int,int) -> a
    android.graphics.Bitmap zoomBitmap(android.graphics.Bitmap,int,int) -> a
    android.graphics.Bitmap reverseBitmap(android.graphics.Bitmap,int) -> a
com.foxconn.emm.utils.L -> com.foxconn.emm.utils.k:
    boolean isDebug -> a
    void i(java.lang.String) -> a
    void d(java.lang.String) -> b
    void e(java.lang.String) -> c
    void i(java.lang.Class,java.lang.String) -> a
    void d(java.lang.Class,java.lang.String) -> b
    void w(java.lang.Class,java.lang.String) -> c
    void e(java.lang.Class,java.lang.String) -> d
    void v(java.lang.Class,java.lang.String) -> e
    void i(java.lang.String,java.lang.String) -> a
    void d(java.lang.String,java.lang.String) -> b
    void e(java.lang.String,java.lang.String) -> c
    void v(java.lang.String,java.lang.String) -> d
    void e(java.lang.Class,java.lang.String,java.lang.Exception) -> a
    void i(java.lang.Class,java.lang.String,org.jivesoftware.smack.XMPPException) -> a
com.foxconn.emm.utils.NetUtil -> com.foxconn.emm.utils.NetUtil:
    android.content.Context mContext -> c
    android.net.NetworkInfo$State wifiState -> a
    android.net.NetworkInfo$State mobileState -> b
    com.foxconn.emm.utils.NetUtil$NetWorkState getConnectState() -> a
    boolean checkNetWorkInfo(android.content.Context) -> a
com.foxconn.emm.utils.NetUtil$NetWorkState -> com.foxconn.emm.utils.NetUtil$NetWorkState:
    com.foxconn.emm.utils.NetUtil$NetWorkState WIFI -> WIFI
    com.foxconn.emm.utils.NetUtil$NetWorkState MOBILE -> MOBILE
    com.foxconn.emm.utils.NetUtil$NetWorkState NONE -> NONE
    com.foxconn.emm.utils.NetUtil$NetWorkState[] ENUM$VALUES -> ENUM$VALUES
    com.foxconn.emm.utils.NetUtil$NetWorkState[] values() -> values
    com.foxconn.emm.utils.NetUtil$NetWorkState valueOf(java.lang.String) -> valueOf
com.foxconn.emm.utils.ParseXmlUtils -> com.foxconn.emm.utils.l:
    com.foxconn.emm.bean.UpdateInfo getUpdataInfo(java.io.InputStream) -> a
com.foxconn.emm.utils.PreferencesUtils -> com.foxconn.emm.utils.m:
    java.lang.String PREFERENCE_NAME -> a
    boolean putString(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> b
com.foxconn.emm.utils.T -> com.foxconn.emm.utils.n:
    android.widget.Toast toast -> a
    void showShort(android.content.Context,java.lang.CharSequence) -> a
    void showLong(android.content.Context,java.lang.CharSequence) -> b
    void show(android.content.Context,java.lang.CharSequence,int) -> a
com.foxconn.emm.utils.TaskUtil -> com.foxconn.emm.utils.o:
    void killAllProcess(android.content.Context) -> a
com.foxconn.emm.utils.TestNetUtils -> com.foxconn.emm.utils.p:
    void run() -> run
    boolean checkNetWorkInfo(android.content.Context) -> a
com.foxconn.emm.utils.TextFormater -> com.foxconn.emm.utils.q:
    java.lang.String simpleDateFormat -> a
    java.lang.String simpleDateFormat2 -> b
    java.lang.String dataSizeFormat(long) -> a
    java.lang.String getStringToMBFromByte(long) -> b
    java.lang.String getDateString(java.util.Date,java.lang.String) -> a
    java.lang.String getCurrentDateStringForErrorReport() -> a
    java.lang.String getDateString(java.util.Date) -> a
    java.lang.String getCurrentDateString() -> b
    void saveCurrentDateString(android.content.Context) -> a
    java.lang.String getCurrentDateStringForHome() -> c
    java.lang.String getDateStringForHome(java.util.Date) -> b
    java.lang.String getShutdownDateString(android.content.Context) -> b
    java.lang.String isHasShutdown(android.content.Context) -> c
    long convertStringToLong(java.lang.String) -> a
    java.lang.Double left2(double) -> a
    boolean isEmpty(java.lang.Object) -> a
    long getTimeToLong(java.lang.String) -> b
com.foxconn.emm.utils.ToastUtils -> com.foxconn.emm.utils.r:
    void show(android.content.Context,java.lang.CharSequence) -> a
    void show(android.content.Context,java.lang.CharSequence,int) -> a
com.foxconn.emm.utils.VersionUtil -> com.foxconn.emm.utils.s:
    int getVersionCode(android.content.Context) -> a
    android.content.pm.PackageInfo getVersionInfo(android.content.Context) -> b
    java.lang.String getVersionName(android.content.Context) -> c
com.foxconn.emm.view.BounceScrollView -> com.foxconn.emm.view.BounceScrollView:
    android.view.View inner -> inner
    float y -> y
    android.graphics.Rect normal -> normal
    boolean isCount -> isCount
    void onFinishInflate() -> onFinishInflate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void commOnTouchEvent(android.view.MotionEvent) -> commOnTouchEvent
    void animation() -> animation
    boolean isNeedAnimation() -> isNeedAnimation
    boolean isNeedMove() -> isNeedMove
com.foxconn.emm.view.CommonMsgInfoDialog -> com.foxconn.emm.view.CommonMsgInfoDialog:
    android.content.Context context -> context
    int position -> position
    int flag -> flag
    java.lang.String pwd -> pwd
    java.lang.String subject -> subject
    java.lang.String suffix -> suffix
    java.lang.String sendTime -> sendTime
    android.widget.Button common_dialog_positive_btn -> common_dialog_positive_btn
    android.widget.Button common_dialog_negative_btn -> common_dialog_negative_btn
    android.widget.Button common_dialog_pic_list_btn -> common_dialog_pic_list_btn
    android.widget.TextView common_dialog_title_tv -> common_dialog_title_tv
    android.widget.TextView common_dialog_connect_tv -> common_dialog_connect_tv
    android.widget.TextView common_dialog_prompt_tv -> common_dialog_prompt_tv
    android.widget.EditText common_dialog_input_pwd_et -> common_dialog_input_pwd_et
    android.widget.LinearLayout input_pwd_lay -> input_pwd_lay
    android.widget.LinearLayout common_dialog_info_lay -> common_dialog_info_lay
    android.widget.LinearLayout common_dialog_pic_list_lay -> common_dialog_pic_list_lay
    android.widget.ListView common_dialog_pic_list_lv -> common_dialog_pic_list_lv
    java.util.List picPathList -> picPathList
    java.lang.Boolean[] exists -> exists
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void show() -> show
    void dismiss() -> dismiss
    void setTitle(java.lang.CharSequence) -> setTitle
    void setCancelable(boolean) -> setCancelable
    void setTwoBtnDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setTwoBtnDialog
    void setOneBtnDialog(java.lang.String,java.lang.String,java.lang.String) -> setOneBtnDialog
    void setOpenFielDailog(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setOpenFielDailog
    void setInputPwdDailog(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setInputPwdDailog
    void onClick(android.view.View) -> onClick
    void clickPositiveBtn() -> clickPositiveBtn
    void showInfo() -> showInfo
    void deleteInfo() -> deleteInfo
    void open(java.lang.String,boolean) -> open
    void displayPicList(java.util.List,java.lang.Boolean[]) -> displayPicList
    void desFile(java.lang.String) -> desFile
    void judgePwd() -> judgePwd
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    java.lang.String getFilePath() -> getFilePath
    java.lang.String getDesFilePath() -> getDesFilePath
    java.lang.String getRelativePicPath(int,java.lang.String) -> getRelativePicPath
    boolean isExists(java.lang.String) -> isExists
    void mkdirsPicDesPath() -> mkdirsPicDesPath
    java.lang.String getSuffix(java.lang.String) -> getSuffix
    java.lang.Boolean[] access$0(com.foxconn.emm.view.CommonMsgInfoDialog) -> access$0
    java.lang.String access$1(com.foxconn.emm.view.CommonMsgInfoDialog) -> access$1
    void access$2(com.foxconn.emm.view.CommonMsgInfoDialog) -> access$2
    java.util.List access$3(com.foxconn.emm.view.CommonMsgInfoDialog) -> access$3
    java.lang.String access$4(com.foxconn.emm.view.CommonMsgInfoDialog) -> access$4
    android.content.Context access$5(com.foxconn.emm.view.CommonMsgInfoDialog) -> access$5
com.foxconn.emm.view.CommonMsgInfoDialog$ItemClick -> com.foxconn.emm.view.CommonMsgInfoDialog$ItemClick:
    com.foxconn.emm.view.CommonMsgInfoDialog this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.foxconn.emm.view.SildingFinishLayout -> com.foxconn.emm.view.SildingFinishLayout:
    android.view.ViewGroup mParentView -> mParentView
    android.view.View touchView -> touchView
    int mTouchSlop -> mTouchSlop
    int downX -> downX
    int downY -> downY
    int tempX -> tempX
    android.widget.Scroller mScroller -> mScroller
    int viewWidth -> viewWidth
    boolean isSilding -> isSilding
    com.foxconn.emm.view.SildingFinishLayout$OnSildingFinishListener onSildingFinishListener -> onSildingFinishListener
    boolean isFinish -> isFinish
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setOnSildingFinishListener(com.foxconn.emm.view.SildingFinishLayout$OnSildingFinishListener) -> setOnSildingFinishListener
    void setTouchView(android.view.View) -> setTouchView
    android.view.View getTouchView() -> getTouchView
    void scrollRight() -> scrollRight
    void scrollOrigin() -> scrollOrigin
    boolean isTouchOnAbsListView() -> isTouchOnAbsListView
    boolean isTouchOnScrollView() -> isTouchOnScrollView
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void computeScroll() -> computeScroll
com.foxconn.emm.view.SildingFinishLayout$OnSildingFinishListener -> com.foxconn.emm.view.SildingFinishLayout$OnSildingFinishListener:
    void onSildingFinish() -> onSildingFinish
com.foxconn.emm.view.SysLicenseDialog -> com.foxconn.emm.view.SysLicenseDialog:
    android.widget.EditText sys_license_dialog_enterprisename_tv -> sys_license_dialog_enterprisename_tv
    android.widget.EditText sys_license_dialog_licenseno_tv -> sys_license_dialog_licenseno_tv
    android.widget.ImageView sys_license_button_clear -> sys_license_button_clear
    android.widget.ImageView sys_license_key_button_clear -> sys_license_key_button_clear
    android.widget.Button sys_license_dialog_varlidate_btn -> sys_license_dialog_varlidate_btn
    android.widget.TextView sys_license_dialog_varlidate_showdeadline_tv -> sys_license_dialog_varlidate_showdeadline_tv
    android.widget.RelativeLayout sys_license_dialog_varlidate_showresult_rl -> sys_license_dialog_varlidate_showresult_rl
    android.widget.ImageView sys_license_dialog_varlidate_btn_left_iv -> sys_license_dialog_varlidate_btn_left_iv
    android.widget.ProgressBar sys_license_dialog_varlidate_btn_right_pb -> sys_license_dialog_varlidate_btn_right_pb
    boolean is_varlidatepass -> is_varlidatepass
    android.content.Context context -> context
    com.foxconn.lib.welcome.license.AtyFirstLoadWelcomePage atyFirstLoadWelcomepage -> atyFirstLoadWelcomepage
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void onClick(android.view.View) -> onClick
    void validateLicense() -> validateLicense
    void dismiss() -> dismiss
    void cancel() -> cancel
    void setContext(android.content.Context) -> setContext
    android.widget.ImageView access$0(com.foxconn.emm.view.SysLicenseDialog) -> access$0
    android.widget.ImageView access$1(com.foxconn.emm.view.SysLicenseDialog) -> access$1
    android.widget.EditText access$2(com.foxconn.emm.view.SysLicenseDialog) -> access$2
    android.widget.EditText access$3(com.foxconn.emm.view.SysLicenseDialog) -> access$3
    android.widget.ProgressBar access$4(com.foxconn.emm.view.SysLicenseDialog) -> access$4
    android.widget.Button access$5(com.foxconn.emm.view.SysLicenseDialog) -> access$5
    android.widget.TextView access$6(com.foxconn.emm.view.SysLicenseDialog) -> access$6
    android.widget.ImageView access$7(com.foxconn.emm.view.SysLicenseDialog) -> access$7
    android.widget.RelativeLayout access$8(com.foxconn.emm.view.SysLicenseDialog) -> access$8
com.foxconn.emm.view.SysLicenseDialog$ValidateLicenseTask -> com.foxconn.emm.view.SysLicenseDialog$ValidateLicenseTask:
    java.lang.String enterpriseName -> enterpriseName
    java.lang.String licenseNo -> licenseNo
    android.os.CountDownTimer countDownTimer -> countDownTimer
    com.foxconn.emm.view.SysLicenseDialog this$0 -> this$0
    void onCancelled() -> onCancelled
    void onPreExecute() -> onPreExecute
    com.foxconn.emm.bean.SysLicenseResult doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(com.foxconn.emm.bean.SysLicenseResult) -> onPostExecute
    java.lang.String getcauseStr(com.foxconn.emm.bean.SysLicenseResult) -> getcauseStr
    void save2SP(com.foxconn.emm.bean.SysLicenseResult) -> save2SP
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.foxconn.emm.view.SysLicenseDialog$ValidateLicenseTask$1 -> com.foxconn.emm.view.SysLicenseDialog$ValidateLicenseTask$1:
    com.foxconn.emm.view.SysLicenseDialog$ValidateLicenseTask this$1 -> this$1
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.foxconn.emm.view.SysLicenseDialog2 -> com.foxconn.emm.view.SysLicenseDialog2:
    android.widget.EditText sys_license_dialog_enterprisename_tv -> sys_license_dialog_enterprisename_tv
    android.widget.EditText sys_license_dialog_licenseno_tv -> sys_license_dialog_licenseno_tv
    android.widget.ImageView sys_license_button_clear -> sys_license_button_clear
    android.widget.ImageView sys_license_key_button_clear -> sys_license_key_button_clear
    android.widget.Button sys_license_dialog_varlidate_btn -> sys_license_dialog_varlidate_btn
    android.widget.TextView sys_license_dialog_varlidate_showdeadline_tv -> sys_license_dialog_varlidate_showdeadline_tv
    android.widget.RelativeLayout sys_license_dialog_varlidate_showresult_rl -> sys_license_dialog_varlidate_showresult_rl
    android.widget.ImageView sys_license_dialog_varlidate_btn_left_iv -> sys_license_dialog_varlidate_btn_left_iv
    android.widget.ProgressBar sys_license_dialog_varlidate_btn_right_pb -> sys_license_dialog_varlidate_btn_right_pb
    android.widget.Button sys_license_dialog_varlidate_close_btn -> sys_license_dialog_varlidate_close_btn
    android.widget.TextView sys_license_dialog_msg_content_tv -> sys_license_dialog_msg_content_tv
    int inner_exprises -> inner_exprises
    int outter_exprises -> outter_exprises
    int reactive_license -> reactive_license
    int current_condition -> current_condition
    boolean is_varlidatepass -> is_varlidatepass
    boolean canentersys -> canentersys
    boolean is_revalidate -> is_revalidate
    android.content.Context context -> context
    com.foxconn.emm.bean.SysLicenseResult sysLicenseResult -> sysLicenseResult
    java.lang.String enterpriseName -> enterpriseName
    java.lang.String licenseNo -> licenseNo
    com.foxconn.app.aty.AtyWelcome atywelcome -> atywelcome
    java.lang.String CONSTANT_LICENSENO -> CONSTANT_LICENSENO
    void initCurrentcondition(com.foxconn.emm.bean.SysLicenseResult) -> initCurrentcondition
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    android.graphics.drawable.Drawable getbtnLeftivDrawable(com.foxconn.emm.bean.SysLicenseResult) -> getbtnLeftivDrawable
    java.lang.CharSequence getCause(com.foxconn.emm.bean.SysLicenseResult) -> getCause
    int getLeftDay(com.foxconn.emm.bean.SysLicenseResult) -> getLeftDay
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void onClick(android.view.View) -> onClick
    void onclickturn() -> onclickturn
    void validateLicense() -> validateLicense
    void dismiss() -> dismiss
    void cancel() -> cancel
    void setContext(android.content.Context) -> setContext
    int getCurrent_condition() -> getCurrent_condition
    void setCurrent_condition(int) -> setCurrent_condition
    android.widget.ImageView access$0(com.foxconn.emm.view.SysLicenseDialog2) -> access$0
    android.widget.ImageView access$1(com.foxconn.emm.view.SysLicenseDialog2) -> access$1
    android.widget.EditText access$2(com.foxconn.emm.view.SysLicenseDialog2) -> access$2
    android.widget.EditText access$3(com.foxconn.emm.view.SysLicenseDialog2) -> access$3
    android.widget.ProgressBar access$4(com.foxconn.emm.view.SysLicenseDialog2) -> access$4
    android.widget.Button access$5(com.foxconn.emm.view.SysLicenseDialog2) -> access$5
    android.widget.TextView access$6(com.foxconn.emm.view.SysLicenseDialog2) -> access$6
    android.widget.ImageView access$7(com.foxconn.emm.view.SysLicenseDialog2) -> access$7
    android.widget.RelativeLayout access$8(com.foxconn.emm.view.SysLicenseDialog2) -> access$8
com.foxconn.emm.view.SysLicenseDialog2$ValidateLicenseTask -> com.foxconn.emm.view.SysLicenseDialog2$ValidateLicenseTask:
    java.lang.String enterpriseName -> enterpriseName
    java.lang.String licenseNo -> licenseNo
    android.os.CountDownTimer countDownTimer -> countDownTimer
    com.foxconn.emm.view.SysLicenseDialog2 this$0 -> this$0
    void onCancelled() -> onCancelled
    void onPreExecute() -> onPreExecute
    com.foxconn.emm.bean.SysLicenseResult doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(com.foxconn.emm.bean.SysLicenseResult) -> onPostExecute
    java.lang.String getcauseStr(com.foxconn.emm.bean.SysLicenseResult) -> getcauseStr
    void save2SP(com.foxconn.emm.bean.SysLicenseResult) -> save2SP
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.foxconn.emm.view.SysLicenseDialog2$ValidateLicenseTask$1 -> com.foxconn.emm.view.SysLicenseDialog2$ValidateLicenseTask$1:
    com.foxconn.emm.view.SysLicenseDialog2$ValidateLicenseTask this$1 -> this$1
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.foxconn.emm.view.UpdateDialog -> com.foxconn.emm.view.UpdateDialog:
    int DOWNLOAD_PREPARE -> DOWNLOAD_PREPARE
    int DOWNLOAD_WORK -> DOWNLOAD_WORK
    int DOWNLOAD_OK -> DOWNLOAD_OK
    int DOWNLOAD_ERROR -> DOWNLOAD_ERROR
    int DOWNLOAD_CLOSE -> DOWNLOAD_CLOSE
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.widget.TextView sys_updating_progress_status_tv -> sys_updating_progress_status_tv
    android.widget.TextView button1 -> button1
    android.widget.ProgressBar pb -> pb
    android.widget.TextView button2 -> button2
    com.foxconn.emm.bean.UpdateInfo updateInfo -> updateInfo
    java.lang.String filePath -> filePath
    java.lang.String getPathDir -> getPathDir
    android.os.Handler handler -> handler
    int fileSize -> fileSize
    java.lang.Runnable runnable -> runnable
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> initData
    java.lang.String getUpdateAppDirPath() -> getUpdateAppDirPath
    void initView() -> initView
    void show() -> show
    void onClick(android.view.View) -> onClick
    void cancel() -> cancel
    void buttonOper() -> buttonOper
    void cleanFile() -> cleanFile
    void sendMessage(int,int) -> sendMessage
    void sendMessage(int) -> sendMessage
    java.lang.String getGetPathDir() -> getGetPathDir
    void setGetPathDir(java.lang.String) -> setGetPathDir
    java.lang.String getFilePath() -> getFilePath
    void setFilePath(java.lang.String) -> setFilePath
    android.content.Context access$0(com.foxconn.emm.view.UpdateDialog) -> access$0
    android.widget.TextView access$1(com.foxconn.emm.view.UpdateDialog) -> access$1
    android.widget.ProgressBar access$2(com.foxconn.emm.view.UpdateDialog) -> access$2
    android.widget.TextView access$3(com.foxconn.emm.view.UpdateDialog) -> access$3
    android.widget.TextView access$4(com.foxconn.emm.view.UpdateDialog) -> access$4
    com.foxconn.emm.bean.UpdateInfo access$5(com.foxconn.emm.view.UpdateDialog) -> access$5
    void access$6(com.foxconn.emm.view.UpdateDialog,int) -> access$6
    void access$7(com.foxconn.emm.view.UpdateDialog,int,int) -> access$7
com.foxconn.emm.view.UpdateDialog$1 -> com.foxconn.emm.view.UpdateDialog$1:
    com.foxconn.emm.view.UpdateDialog this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.foxconn.emm.view.UpdateDialog$2 -> com.foxconn.emm.view.UpdateDialog$2:
    com.foxconn.emm.view.UpdateDialog this$0 -> this$0
    void run() -> run
    void downloadFile() -> downloadFile
com.foxconn.emm.view.UpdateProgress -> com.foxconn.emm.view.UpdateProgress:
    android.content.Context context -> context
    java.lang.String msg -> msg
    android.widget.TextView sys_updating_progress_status_tv -> sys_updating_progress_status_tv
    android.widget.ProgressBar sys_updating_pb -> sys_updating_pb
    void onCreate(android.os.Bundle) -> onCreate
    void show() -> show
    void dismiss() -> dismiss
    void setCancelable(boolean) -> setCancelable
    void hideProgress() -> hideProgress
    void setMessage(java.lang.CharSequence) -> setMessage
    void initView() -> initView
    void initData() -> initData
com.foxconn.emm.xmpp.ConnectivityReceiver -> com.foxconn.emm.xmpp.ConnectivityReceiver:
    com.foxconn.emm.xmpp.NotificationService notificationService -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.foxconn.emm.xmpp.NotificationIQ -> com.foxconn.emm.xmpp.NotificationIQ:
    long serialVersionUID -> serialVersionUID
    java.lang.String message -> message
    java.lang.String id -> id
    java.lang.String packetID -> packetID
    void setPacketID(java.lang.String) -> setPacketID
    java.lang.String getPacketID() -> getPacketID
    java.lang.String getChildElementXML() -> getChildElementXML
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
com.foxconn.emm.xmpp.NotificationIQProvider -> com.foxconn.emm.xmpp.a:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
com.foxconn.emm.xmpp.NotificationService -> com.foxconn.emm.xmpp.NotificationService:
    android.telephony.TelephonyManager telephonyManager -> a
    android.content.BroadcastReceiver connectivityReceiver -> b
    android.telephony.PhoneStateListener phoneStateListener -> c
    java.util.concurrent.ExecutorService executorService -> d
    com.foxconn.emm.xmpp.NotificationService$TaskSubmitter taskSubmitter -> e
    com.foxconn.emm.xmpp.NotificationService$TaskTracker taskTracker -> f
    com.foxconn.emm.xmpp.XmppManager xmppManager -> g
    android.content.SharedPreferences sharedPrefs -> h
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onRebind(android.content.Intent) -> onRebind
    boolean onUnbind(android.content.Intent) -> onUnbind
    android.content.Intent getIntent() -> a
    java.util.concurrent.ExecutorService getExecutorService() -> b
    com.foxconn.emm.xmpp.NotificationService$TaskSubmitter getTaskSubmitter() -> c
    com.foxconn.emm.xmpp.NotificationService$TaskTracker getTaskTracker() -> d
    com.foxconn.emm.xmpp.XmppManager getXmppManager() -> e
    android.content.SharedPreferences getSharedPreferences() -> f
    void connect() -> g
    void disconnect() -> h
    void registerConnectivityReceiver() -> i
    void unregisterConnectivityReceiver() -> j
    void start() -> k
    void stop() -> l
    void access$0(com.foxconn.emm.xmpp.NotificationService) -> a
com.foxconn.emm.xmpp.NotificationService$1 -> com.foxconn.emm.xmpp.b:
    com.foxconn.emm.xmpp.NotificationService this$0 -> a
    void run() -> run
com.foxconn.emm.xmpp.NotificationService$2 -> com.foxconn.emm.xmpp.c:
    com.foxconn.emm.xmpp.NotificationService this$0 -> a
    void run() -> run
com.foxconn.emm.xmpp.NotificationService$3 -> com.foxconn.emm.xmpp.d:
    com.foxconn.emm.xmpp.NotificationService this$0 -> a
    void run() -> run
com.foxconn.emm.xmpp.NotificationService$TaskSubmitter -> com.foxconn.emm.xmpp.e:
    com.foxconn.emm.xmpp.NotificationService notificationService -> a
    com.foxconn.emm.xmpp.NotificationService this$0 -> b
    java.util.concurrent.Future submit(java.lang.Runnable) -> a
com.foxconn.emm.xmpp.NotificationService$TaskTracker -> com.foxconn.emm.xmpp.f:
    com.foxconn.emm.xmpp.NotificationService notificationService -> a
    int count -> b
    com.foxconn.emm.xmpp.NotificationService this$0 -> c
    void increase() -> a
    void decrease() -> b
com.foxconn.emm.xmpp.ReconnectionThread -> com.foxconn.emm.xmpp.g:
    com.foxconn.emm.xmpp.XmppManager xmppManager -> a
    int waiting -> b
    void run() -> run
    int waiting() -> a
    com.foxconn.emm.xmpp.XmppManager access$0(com.foxconn.emm.xmpp.ReconnectionThread) -> a
com.foxconn.emm.xmpp.ReconnectionThread$1 -> com.foxconn.emm.xmpp.h:
    com.foxconn.emm.xmpp.ReconnectionThread this$0 -> a
    java.lang.InterruptedException val$e -> b
    void run() -> run
com.foxconn.emm.xmpp.XmppManager -> com.foxconn.emm.xmpp.i:
    android.content.Context context -> a
    com.foxconn.emm.xmpp.NotificationService$TaskSubmitter taskSubmitter -> b
    com.foxconn.emm.xmpp.NotificationService$TaskTracker taskTracker -> c
    android.content.SharedPreferences sharedPrefs -> d
    java.lang.String xmppHost -> e
    int xmppPort -> f
    org.jivesoftware.smack.XMPPConnection connection -> g
    java.lang.String username -> h
    java.lang.String password -> i
    java.lang.String userId -> j
    org.jivesoftware.smack.ConnectionListener connectionListener -> k
    org.jivesoftware.smack.PacketListener notificationPacketListener -> l
    android.os.Handler handler -> m
    java.util.List taskList -> n
    boolean running -> o
    java.util.concurrent.Future futureTask -> p
    java.lang.Thread reconnection -> q
    android.content.Context getContext() -> a
    void connect() -> b
    void disconnect() -> c
    void terminatePersistentConnection() -> d
    org.jivesoftware.smack.XMPPConnection getConnection() -> e
    void setConnection(org.jivesoftware.smack.XMPPConnection) -> a
    java.lang.String getUsername() -> f
    void setUsername(java.lang.String) -> a
    void setPassword(java.lang.String) -> b
    java.lang.String getUserId() -> g
    void setUserId(java.lang.String) -> c
    org.jivesoftware.smack.ConnectionListener getConnectionListener() -> h
    org.jivesoftware.smack.PacketListener getNotificationPacketListener() -> i
    void startReconnectionThread() -> j
    android.os.Handler getHandler() -> k
    void reregisterAccount() -> l
    void runTask() -> m
    boolean isConnected() -> n
    boolean isAuthenticated() -> o
    boolean isRegistered() -> p
    void submitConnectTask() -> q
    void submitRegisterTask() -> r
    void submitLoginTask() -> s
    void addTask(java.lang.Runnable) -> a
    void removeAccount() -> t
    boolean access$0(com.foxconn.emm.xmpp.XmppManager) -> a
    java.lang.String access$1(com.foxconn.emm.xmpp.XmppManager) -> b
    int access$2(com.foxconn.emm.xmpp.XmppManager) -> c
    boolean access$3(com.foxconn.emm.xmpp.XmppManager) -> d
    android.content.Context access$4(com.foxconn.emm.xmpp.XmppManager) -> e
    android.content.SharedPreferences access$5(com.foxconn.emm.xmpp.XmppManager) -> f
    org.jivesoftware.smack.XMPPConnection access$6(com.foxconn.emm.xmpp.XmppManager) -> g
    boolean access$7(com.foxconn.emm.xmpp.XmppManager) -> h
    java.lang.String access$8(com.foxconn.emm.xmpp.XmppManager) -> i
    java.lang.String access$9(com.foxconn.emm.xmpp.XmppManager) -> j
    java.lang.String access$10(com.foxconn.emm.xmpp.XmppManager) -> k
com.foxconn.emm.xmpp.XmppManager$1 -> com.foxconn.emm.xmpp.j:
    com.foxconn.emm.xmpp.XmppManager xmppManager -> a
    com.foxconn.emm.xmpp.XmppManager this$0 -> b
    void run() -> run
com.foxconn.emm.xmpp.XmppManager$ConnectTask -> com.foxconn.emm.xmpp.k:
    com.foxconn.emm.xmpp.XmppManager xmppManager -> a
    com.foxconn.emm.xmpp.XmppManager this$0 -> b
    void run() -> run
com.foxconn.emm.xmpp.XmppManager$LoginTask -> com.foxconn.emm.xmpp.l:
    com.foxconn.emm.xmpp.XmppManager xmppManager -> a
    com.foxconn.emm.xmpp.XmppManager this$0 -> b
    void run() -> run
com.foxconn.emm.xmpp.XmppManager$RegisterTask -> com.foxconn.emm.xmpp.m:
    com.foxconn.emm.xmpp.XmppManager xmppManager -> a
    com.foxconn.emm.xmpp.XmppManager this$0 -> b
    void run() -> run
    com.foxconn.emm.xmpp.XmppManager access$1(com.foxconn.emm.xmpp.XmppManager$RegisterTask) -> a
com.foxconn.emm.xmpp.XmppManager$RegisterTask$1 -> com.foxconn.emm.xmpp.n:
    com.foxconn.emm.xmpp.XmppManager$RegisterTask this$1 -> a
    java.lang.String val$newUsername -> b
    java.lang.String val$newUserId -> c
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.foxconn.emm.xmpp.listener.NotificationPacketListener -> com.foxconn.emm.xmpp.a.a:
    com.foxconn.emm.xmpp.XmppManager xmppManager -> a
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.foxconn.emm.xmpp.listener.PersistentConnectionListener -> com.foxconn.emm.xmpp.a.b:
    com.foxconn.emm.xmpp.XmppManager xmppManager -> a
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
com.foxconn.emm.xmpp.listener.PhoneStateChangeListener -> com.foxconn.emm.xmpp.a.c:
    com.foxconn.emm.xmpp.NotificationService notificationService -> a
    void onDataConnectionStateChanged(int) -> onDataConnectionStateChanged
    java.lang.String getState(int) -> a
com.foxconn.lib.charts.BarChartDataSetGenerator -> com.foxconn.lib.charts.BarChartDataSetGenerator:
    int TYPE_DATA_today -> TYPE_DATA_today
    int TYPE_DATA_yesterday -> TYPE_DATA_yesterday
    int TYPE_DATA_tomonth -> TYPE_DATA_tomonth
    int TYPE_DATA_lastmonth -> TYPE_DATA_lastmonth
    int TYPE_WLAN_today -> TYPE_WLAN_today
    int TYPE_WLAN_yesterday -> TYPE_WLAN_yesterday
    int TYPE_WLAN_tomonth -> TYPE_WLAN_tomonth
    int TYPE_WLAN_lastmonth -> TYPE_WLAN_lastmonth
    int type -> type
    double[] values -> values
    java.lang.String[] generateExplains() -> generateExplains
    double[] generateSerialDatas(double[]) -> generateSerialDatas
    double[] generateSerialDatas() -> generateSerialDatas
    java.lang.String generateXTitleData() -> generateXTitleData
    java.lang.String generateTitle() -> generateTitle
    java.lang.String generateYTitleData() -> generateYTitleData
    int getYMaxLabels() -> getYMaxLabels
    int getXMaxLables() -> getXMaxLables
    int getXLables() -> getXLables
    int getYLables() -> getYLables
    double getMax(double[]) -> getMax
com.foxconn.lib.charts.BarChartRendererBuilder -> com.foxconn.lib.charts.BarChartRendererBuilder:
    com.ab.view.chart.XYMultipleSeriesRenderer xyMultipleSeriesRenderer -> xyMultipleSeriesRenderer
    android.view.View generateChartView(android.content.Context,android.view.ViewGroup$LayoutParams,com.ab.view.chart.XYMultipleSeriesDataset,com.ab.view.chart.XYMultipleSeriesRenderer) -> generateChartView
    com.ab.view.chart.XYMultipleSeriesDataset buildSingleSeriesDataset(java.lang.String,double[],java.lang.String[]) -> buildSingleSeriesDataset
    com.ab.view.chart.XYMultipleSeriesRenderer buildDefaultXYSeriesRenderer() -> buildDefaultXYSeriesRenderer
    com.ab.view.chart.XYMultipleSeriesRenderer buildXYSeriesRenderer(int[],boolean,com.ab.view.chart.PointStyle,float,float) -> buildXYSeriesRenderer
    void buildRender(float,float,float,java.lang.String,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int) -> buildRender
    void buildDefaultXYMultipleSeriesRenderer(java.lang.String,java.lang.String,int,int,int,int) -> buildDefaultXYMultipleSeriesRenderer
    com.ab.view.chart.XYMultipleSeriesRenderer getXyMultipleSeriesRenderer() -> getXyMultipleSeriesRenderer
    void setXyMultipleSeriesRenderer(com.ab.view.chart.XYMultipleSeriesRenderer) -> setXyMultipleSeriesRenderer
com.foxconn.lib.charts.HomeArc -> com.foxconn.lib.charts.HomeArc:
    android.graphics.Paint paint_black -> paint_black
    android.graphics.Paint paint_white -> paint_white
    android.graphics.RectF rectf -> rectf
    float tb -> tb
    int blackColor -> blackColor
    int whiteColor -> whiteColor
    int score -> score
    float arc_y -> arc_y
    int score_text -> score_text
    void init(int) -> init
    void onDraw(android.graphics.Canvas) -> onDraw
    float access$0(com.foxconn.lib.charts.HomeArc) -> access$0
    void access$1(com.foxconn.lib.charts.HomeArc,float) -> access$1
    int access$2(com.foxconn.lib.charts.HomeArc) -> access$2
    void access$3(com.foxconn.lib.charts.HomeArc,int) -> access$3
    int access$4(com.foxconn.lib.charts.HomeArc) -> access$4
com.foxconn.lib.charts.HomeArc$1 -> com.foxconn.lib.charts.HomeArc$1:
    com.foxconn.lib.charts.HomeArc this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
com.foxconn.lib.charts.HomeArc$thread -> com.foxconn.lib.charts.HomeArc$thread:
    java.lang.Thread thread -> thread
    int statek -> statek
    int count -> count
    com.foxconn.lib.charts.HomeArc this$0 -> this$0
    void run() -> run
com.foxconn.lib.charts.HomeColumnar -> com.foxconn.lib.charts.HomeColumnar:
    java.util.List score -> score
    float tb -> tb
    float interval_left_right -> interval_left_right
    android.graphics.Paint paint_date -> paint_date
    android.graphics.Paint paint_rectf_gray -> paint_rectf_gray
    android.graphics.Paint paint_rectf_blue -> paint_rectf_blue
    int fineLineColor -> fineLineColor
    int blueLineColor -> blueLineColor
    void init(java.util.List) -> init
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawRectf(android.graphics.Canvas) -> drawRectf
    void drawDate(android.graphics.Canvas) -> drawDate
com.foxconn.lib.cropimage.BaseCancelable -> com.foxconn.lib.cropimage.BaseCancelable:
    int STATE_INITIAL -> STATE_INITIAL
    int STATE_EXECUTING -> STATE_EXECUTING
    int STATE_CANCELING -> STATE_CANCELING
    int STATE_CANCELED -> STATE_CANCELED
    int STATE_ERROR -> STATE_ERROR
    int STATE_COMPLETE -> STATE_COMPLETE
    int mState -> mState
    java.lang.Throwable mError -> mError
    java.lang.Object mResult -> mResult
    com.foxconn.lib.cropimage.Cancelable mCurrentTask -> mCurrentTask
    java.lang.Thread mThread -> mThread
    java.lang.Object execute() -> execute
    void interruptNow() -> interruptNow
    void freeCanceledResult(java.lang.Object) -> freeCanceledResult
    boolean isInStates(int) -> isInStates
    java.lang.Object handleTerminalStates() -> handleTerminalStates
    void await() -> await
    java.lang.Object get() -> get
    boolean requestCancel() -> requestCancel
    boolean isCanceling() -> isCanceling
    java.lang.Object runSubTask(com.foxconn.lib.cropimage.Cancelable) -> runSubTask
com.foxconn.lib.cropimage.BitmapManager -> com.foxconn.lib.cropimage.BitmapManager:
    java.lang.String TAG -> TAG
    java.util.WeakHashMap mThreadStatus -> mThreadStatus
    com.foxconn.lib.cropimage.BitmapManager sManager -> sManager
    com.foxconn.lib.cropimage.BitmapManager$ThreadStatus getOrCreateThreadStatus(java.lang.Thread) -> getOrCreateThreadStatus
    void setDecodingOptions(java.lang.Thread,android.graphics.BitmapFactory$Options) -> setDecodingOptions
    android.graphics.BitmapFactory$Options getDecodingOptions(java.lang.Thread) -> getDecodingOptions
    void removeDecodingOptions(java.lang.Thread) -> removeDecodingOptions
    void allowThreadDecoding(com.foxconn.lib.cropimage.BitmapManager$ThreadSet) -> allowThreadDecoding
    void cancelThreadDecoding(com.foxconn.lib.cropimage.BitmapManager$ThreadSet) -> cancelThreadDecoding
    boolean canThreadDecoding(java.lang.Thread) -> canThreadDecoding
    void allowThreadDecoding(java.lang.Thread) -> allowThreadDecoding
    void cancelThreadDecoding(java.lang.Thread) -> cancelThreadDecoding
    void dump() -> dump
    com.foxconn.lib.cropimage.BitmapManager instance() -> instance
    android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.BitmapFactory$Options) -> decodeFileDescriptor
com.foxconn.lib.cropimage.BitmapManager$State -> com.foxconn.lib.cropimage.BitmapManager$State:
    com.foxconn.lib.cropimage.BitmapManager$State CANCEL -> CANCEL
    com.foxconn.lib.cropimage.BitmapManager$State ALLOW -> ALLOW
    com.foxconn.lib.cropimage.BitmapManager$State[] ENUM$VALUES -> ENUM$VALUES
    com.foxconn.lib.cropimage.BitmapManager$State[] values() -> values
    com.foxconn.lib.cropimage.BitmapManager$State valueOf(java.lang.String) -> valueOf
com.foxconn.lib.cropimage.BitmapManager$ThreadSet -> com.foxconn.lib.cropimage.BitmapManager$ThreadSet:
    java.util.WeakHashMap mWeakCollection -> mWeakCollection
    void add(java.lang.Thread) -> add
    void remove(java.lang.Thread) -> remove
    java.util.Iterator iterator() -> iterator
com.foxconn.lib.cropimage.BitmapManager$ThreadStatus -> com.foxconn.lib.cropimage.BitmapManager$ThreadStatus:
    com.foxconn.lib.cropimage.BitmapManager$State mState -> mState
    android.graphics.BitmapFactory$Options mOptions -> mOptions
    java.lang.String toString() -> toString
com.foxconn.lib.cropimage.Cancelable -> com.foxconn.lib.cropimage.Cancelable:
    boolean requestCancel() -> requestCancel
    void await() -> await
    java.lang.Object get() -> get
com.foxconn.lib.cropimage.CropImage -> com.foxconn.lib.cropimage.CropImage:
    java.lang.String TAG -> TAG
    android.graphics.Bitmap$CompressFormat mOutputFormat -> mOutputFormat
    android.net.Uri mSaveUri -> mSaveUri
    int mAspectX -> mAspectX
    int mAspectY -> mAspectY
    boolean mCircleCrop -> mCircleCrop
    android.os.Handler mHandler -> mHandler
    int mOutputX -> mOutputX
    int mOutputY -> mOutputY
    boolean mScale -> mScale
    boolean mScaleUp -> mScaleUp
    boolean mDoFaceDetection -> mDoFaceDetection
    boolean mWaitingToPick -> mWaitingToPick
    boolean mSaving -> mSaving
    com.foxconn.lib.cropimage.CropImageView mImageView -> mImageView
    android.content.ContentResolver mContentResolver -> mContentResolver
    android.graphics.Bitmap mBitmap -> mBitmap
    com.foxconn.lib.cropimage.BitmapManager$ThreadSet mDecodingThreads -> mDecodingThreads
    com.foxconn.lib.cropimage.HighlightView mCrop -> mCrop
    com.foxconn.lib.cropimage.IImage mImage -> mImage
    java.lang.String mImagePath -> mImagePath
    java.lang.Runnable mRunFaceDetection -> mRunFaceDetection
    int NO_STORAGE_ERROR -> NO_STORAGE_ERROR
    int CANNOT_STAT_ERROR -> CANNOT_STAT_ERROR
    void onCreate(android.os.Bundle) -> onCreate
    android.net.Uri getImageUri(java.lang.String) -> getImageUri
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    void startFaceDetection() -> startFaceDetection
    void onSaveClicked() -> onSaveClicked
    void saveOutput(android.graphics.Bitmap) -> saveOutput
    void onPause() -> onPause
    void showStorageToast(android.app.Activity) -> showStorageToast
    void showStorageToast(android.app.Activity,int) -> showStorageToast
    int calculatePicturesRemaining() -> calculatePicturesRemaining
    com.foxconn.lib.cropimage.CropImageView access$0(com.foxconn.lib.cropimage.CropImage) -> access$0
    android.graphics.Bitmap access$1(com.foxconn.lib.cropimage.CropImage) -> access$1
    boolean access$2(com.foxconn.lib.cropimage.CropImage) -> access$2
    int access$3(com.foxconn.lib.cropimage.CropImage) -> access$3
    int access$4(com.foxconn.lib.cropimage.CropImage) -> access$4
    boolean access$5(com.foxconn.lib.cropimage.CropImage) -> access$5
    android.os.Handler access$6(com.foxconn.lib.cropimage.CropImage) -> access$6
    void access$7(com.foxconn.lib.cropimage.CropImage) -> access$7
    com.foxconn.lib.cropimage.IImage access$8(com.foxconn.lib.cropimage.CropImage) -> access$8
    void access$9(com.foxconn.lib.cropimage.CropImage,android.graphics.Bitmap) -> access$9
    void access$10(com.foxconn.lib.cropimage.CropImage,android.graphics.Bitmap) -> access$10
com.foxconn.lib.cropimage.CropImage$1 -> com.foxconn.lib.cropimage.CropImage$1:
    float mScale -> mScale
    android.graphics.Matrix mImageMatrix -> mImageMatrix
    android.media.FaceDetector$Face[] mFaces -> mFaces
    int mNumFaces -> mNumFaces
    com.foxconn.lib.cropimage.CropImage this$0 -> this$0
    void handleFace(android.media.FaceDetector$Face) -> handleFace
    void makeDefault() -> makeDefault
    android.graphics.Bitmap prepareBitmap() -> prepareBitmap
    void run() -> run
    void access$0(com.foxconn.lib.cropimage.CropImage$1,android.media.FaceDetector$Face) -> access$0
    void access$1(com.foxconn.lib.cropimage.CropImage$1) -> access$1
    com.foxconn.lib.cropimage.CropImage access$2(com.foxconn.lib.cropimage.CropImage$1) -> access$2
com.foxconn.lib.cropimage.CropImage$1$1 -> com.foxconn.lib.cropimage.CropImage$1$1:
    com.foxconn.lib.cropimage.CropImage$1 this$1 -> this$1
    void run() -> run
com.foxconn.lib.cropimage.CropImage$2 -> com.foxconn.lib.cropimage.CropImage$2:
    com.foxconn.lib.cropimage.CropImage this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.foxconn.lib.cropimage.CropImage$3 -> com.foxconn.lib.cropimage.CropImage$3:
    com.foxconn.lib.cropimage.CropImage this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.foxconn.lib.cropimage.CropImage$4 -> com.foxconn.lib.cropimage.CropImage$4:
    com.foxconn.lib.cropimage.CropImage this$0 -> this$0
    void run() -> run
    com.foxconn.lib.cropimage.CropImage access$0(com.foxconn.lib.cropimage.CropImage$4) -> access$0
com.foxconn.lib.cropimage.CropImage$4$1 -> com.foxconn.lib.cropimage.CropImage$4$1:
    com.foxconn.lib.cropimage.CropImage$4 this$1 -> this$1
    android.graphics.Bitmap val$b -> val$b
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    void run() -> run
com.foxconn.lib.cropimage.CropImage$5 -> com.foxconn.lib.cropimage.CropImage$5:
    com.foxconn.lib.cropimage.CropImage this$0 -> this$0
    android.graphics.Bitmap val$b -> val$b
    void run() -> run
com.foxconn.lib.cropimage.CropImageView -> com.foxconn.lib.cropimage.CropImageView:
    java.util.ArrayList mHighlightViews -> mHighlightViews
    com.foxconn.lib.cropimage.HighlightView mMotionHighlightView -> mMotionHighlightView
    float mLastX -> mLastX
    float mLastY -> mLastY
    int mMotionEdge -> mMotionEdge
    android.content.Context mContext -> mContext
    void onLayout(boolean,int,int,int,int) -> onLayout
    void zoomTo(float,float,float) -> zoomTo
    void zoomIn() -> zoomIn
    void zoomOut() -> zoomOut
    void postTranslate(float,float) -> postTranslate
    void recomputeFocus(android.view.MotionEvent) -> recomputeFocus
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void ensureVisible(com.foxconn.lib.cropimage.HighlightView) -> ensureVisible
    void centerBasedOnHighlightView(com.foxconn.lib.cropimage.HighlightView) -> centerBasedOnHighlightView
    void onDraw(android.graphics.Canvas) -> onDraw
    void add(com.foxconn.lib.cropimage.HighlightView) -> add
com.foxconn.lib.cropimage.HighlightView -> com.foxconn.lib.cropimage.HighlightView:
    java.lang.String TAG -> TAG
    android.view.View mContext -> mContext
    int GROW_NONE -> GROW_NONE
    int GROW_LEFT_EDGE -> GROW_LEFT_EDGE
    int GROW_RIGHT_EDGE -> GROW_RIGHT_EDGE
    int GROW_TOP_EDGE -> GROW_TOP_EDGE
    int GROW_BOTTOM_EDGE -> GROW_BOTTOM_EDGE
    int MOVE -> MOVE
    boolean mIsFocused -> mIsFocused
    boolean mHidden -> mHidden
    com.foxconn.lib.cropimage.HighlightView$ModifyMode mMode -> mMode
    android.graphics.Rect mDrawRect -> mDrawRect
    android.graphics.RectF mImageRect -> mImageRect
    android.graphics.RectF mCropRect -> mCropRect
    android.graphics.Matrix mMatrix -> mMatrix
    boolean mMaintainAspectRatio -> mMaintainAspectRatio
    float mInitialAspectRatio -> mInitialAspectRatio
    boolean mCircle -> mCircle
    android.graphics.drawable.Drawable mResizeDrawableWidth -> mResizeDrawableWidth
    android.graphics.drawable.Drawable mResizeDrawableHeight -> mResizeDrawableHeight
    android.graphics.drawable.Drawable mResizeDrawableDiagonal -> mResizeDrawableDiagonal
    android.graphics.Paint mFocusPaint -> mFocusPaint
    android.graphics.Paint mNoFocusPaint -> mNoFocusPaint
    android.graphics.Paint mOutlinePaint -> mOutlinePaint
    void init() -> init
    boolean hasFocus() -> hasFocus
    void setFocus(boolean) -> setFocus
    void setHidden(boolean) -> setHidden
    void draw(android.graphics.Canvas) -> draw
    com.foxconn.lib.cropimage.HighlightView$ModifyMode getMode() -> getMode
    void setMode(com.foxconn.lib.cropimage.HighlightView$ModifyMode) -> setMode
    int getHit(float,float) -> getHit
    void handleMotion(int,float,float) -> handleMotion
    void moveBy(float,float) -> moveBy
    void growBy(float,float) -> growBy
    android.graphics.Rect getCropRect() -> getCropRect
    android.graphics.Rect computeLayout() -> computeLayout
    void invalidate() -> invalidate
    void setup(android.graphics.Matrix,android.graphics.Rect,android.graphics.RectF,boolean,boolean) -> setup
com.foxconn.lib.cropimage.HighlightView$ModifyMode -> com.foxconn.lib.cropimage.HighlightView$ModifyMode:
    com.foxconn.lib.cropimage.HighlightView$ModifyMode None -> None
    com.foxconn.lib.cropimage.HighlightView$ModifyMode Move -> Move
    com.foxconn.lib.cropimage.HighlightView$ModifyMode Grow -> Grow
    com.foxconn.lib.cropimage.HighlightView$ModifyMode[] ENUM$VALUES -> ENUM$VALUES
    com.foxconn.lib.cropimage.HighlightView$ModifyMode[] values() -> values
    com.foxconn.lib.cropimage.HighlightView$ModifyMode valueOf(java.lang.String) -> valueOf
com.foxconn.lib.cropimage.IImage -> com.foxconn.lib.cropimage.IImage:
    int THUMBNAIL_TARGET_SIZE -> THUMBNAIL_TARGET_SIZE
    int MINI_THUMB_TARGET_SIZE -> MINI_THUMB_TARGET_SIZE
    int UNCONSTRAINED -> UNCONSTRAINED
    boolean ROTATE_AS_NEEDED -> ROTATE_AS_NEEDED
    boolean NO_ROTATE -> NO_ROTATE
    boolean USE_NATIVE -> USE_NATIVE
    boolean NO_NATIVE -> NO_NATIVE
    com.foxconn.lib.cropimage.IImageList getContainer() -> getContainer
    android.graphics.Bitmap fullSizeBitmap(int,int) -> fullSizeBitmap
    android.graphics.Bitmap fullSizeBitmap(int,int,boolean) -> fullSizeBitmap
    android.graphics.Bitmap fullSizeBitmap(int,int,boolean,boolean) -> fullSizeBitmap
    int getDegreesRotated() -> getDegreesRotated
    java.io.InputStream fullSizeImageData() -> fullSizeImageData
    long fullSizeImageId() -> fullSizeImageId
    android.net.Uri fullSizeImageUri() -> fullSizeImageUri
    java.lang.String getDataPath() -> getDataPath
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    long getDateTaken() -> getDateTaken
    java.lang.String getMimeType() -> getMimeType
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    java.lang.String getDisplayName() -> getDisplayName
    boolean isReadonly() -> isReadonly
    boolean isDrm() -> isDrm
    android.graphics.Bitmap thumbBitmap(boolean) -> thumbBitmap
    android.net.Uri thumbUri() -> thumbUri
    android.graphics.Bitmap miniThumbBitmap() -> miniThumbBitmap
    boolean rotateImageBy(int) -> rotateImageBy
com.foxconn.lib.cropimage.IImageList -> com.foxconn.lib.cropimage.IImageList:
    java.util.HashMap getBucketIds() -> getBucketIds
    void deactivate() -> deactivate
    int getCount() -> getCount
    boolean isEmpty() -> isEmpty
    com.foxconn.lib.cropimage.IImage getImageAt(int) -> getImageAt
    com.foxconn.lib.cropimage.IImage getImageForUri(android.net.Uri) -> getImageForUri
    boolean removeImage(com.foxconn.lib.cropimage.IImage) -> removeImage
    boolean removeImageAt(int) -> removeImageAt
    int getImageIndex(com.foxconn.lib.cropimage.IImage) -> getImageIndex
    void checkThumbnail(int) -> checkThumbnail
    void open(android.content.ContentResolver) -> open
    void close() -> close
com.foxconn.lib.cropimage.ImageViewTouchBase -> com.foxconn.lib.cropimage.ImageViewTouchBase:
    java.lang.String TAG -> TAG
    android.graphics.Matrix mBaseMatrix -> mBaseMatrix
    android.graphics.Matrix mSuppMatrix -> mSuppMatrix
    android.graphics.Matrix mDisplayMatrix -> mDisplayMatrix
    float[] mMatrixValues -> mMatrixValues
    com.foxconn.lib.cropimage.RotateBitmap mBitmapDisplayed -> mBitmapDisplayed
    int mThisWidth -> mThisWidth
    int mThisHeight -> mThisHeight
    float mMaxZoom -> mMaxZoom
    int mScrollY -> mScrollY
    int mScrollX -> mScrollX
    int mLeft -> mLeft
    int mRight -> mRight
    int mTop -> mTop
    int mBottom -> mBottom
    int mPaddingTop -> mPaddingTop
    int mPaddingBottom -> mPaddingBottom
    int mPaddingLeft -> mPaddingLeft
    int mPaddingRight -> mPaddingRight
    com.foxconn.lib.cropimage.ImageViewTouchBase$Recycler mRecycler -> mRecycler
    android.os.Handler mHandler -> mHandler
    int mLastXTouchPos -> mLastXTouchPos
    int mLastYTouchPos -> mLastYTouchPos
    java.lang.Runnable mOnLayoutRunnable -> mOnLayoutRunnable
    float SCALE_RATE -> SCALE_RATE
    void setRecycler(com.foxconn.lib.cropimage.ImageViewTouchBase$Recycler) -> setRecycler
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageBitmap(android.graphics.Bitmap,int) -> setImageBitmap
    void clear() -> clear
    void setImageBitmapResetBase(android.graphics.Bitmap,boolean) -> setImageBitmapResetBase
    void setImageRotateBitmapResetBase(com.foxconn.lib.cropimage.RotateBitmap,boolean) -> setImageRotateBitmapResetBase
    void center(boolean,boolean) -> center
    void init() -> init
    float getValue(android.graphics.Matrix,int) -> getValue
    float getScale(android.graphics.Matrix) -> getScale
    float getScale() -> getScale
    void getProperBaseMatrix(com.foxconn.lib.cropimage.RotateBitmap,android.graphics.Matrix) -> getProperBaseMatrix
    android.graphics.Matrix getImageViewMatrix() -> getImageViewMatrix
    float maxZoom() -> maxZoom
    void zoomTo(float,float,float) -> zoomTo
    void zoomTo(float,float,float,float) -> zoomTo
    void zoomTo(float) -> zoomTo
    void zoomIn() -> zoomIn
    void zoomOut() -> zoomOut
    void zoomIn(float) -> zoomIn
    void zoomOut(float) -> zoomOut
    void postTranslate(float,float) -> postTranslate
    void panBy(float,float) -> panBy
com.foxconn.lib.cropimage.ImageViewTouchBase$1 -> com.foxconn.lib.cropimage.ImageViewTouchBase$1:
    com.foxconn.lib.cropimage.ImageViewTouchBase this$0 -> this$0
    com.foxconn.lib.cropimage.RotateBitmap val$bitmap -> val$bitmap
    boolean val$resetSupp -> val$resetSupp
    void run() -> run
com.foxconn.lib.cropimage.ImageViewTouchBase$2 -> com.foxconn.lib.cropimage.ImageViewTouchBase$2:
    com.foxconn.lib.cropimage.ImageViewTouchBase this$0 -> this$0
    float val$durationMs -> val$durationMs
    long val$startTime -> val$startTime
    float val$oldScale -> val$oldScale
    float val$incrementPerMs -> val$incrementPerMs
    float val$centerX -> val$centerX
    float val$centerY -> val$centerY
    void run() -> run
com.foxconn.lib.cropimage.ImageViewTouchBase$Recycler -> com.foxconn.lib.cropimage.ImageViewTouchBase$Recycler:
    void recycle(android.graphics.Bitmap) -> recycle
com.foxconn.lib.cropimage.LruCache -> com.foxconn.lib.cropimage.LruCache:
    java.util.HashMap mLruMap -> mLruMap
    java.util.HashMap mWeakMap -> mWeakMap
    java.lang.ref.ReferenceQueue mQueue -> mQueue
    void cleanUpWeakMap() -> cleanUpWeakMap
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void clear() -> clear
com.foxconn.lib.cropimage.LruCache$1 -> com.foxconn.lib.cropimage.LruCache$1:
    com.foxconn.lib.cropimage.LruCache this$0 -> this$0
    int val$capacity -> val$capacity
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.foxconn.lib.cropimage.LruCache$Entry -> com.foxconn.lib.cropimage.LruCache$Entry:
    java.lang.Object mKey -> mKey
com.foxconn.lib.cropimage.MonitoredActivity -> com.foxconn.lib.cropimage.MonitoredActivity:
    java.util.ArrayList mListeners -> mListeners
    void addLifeCycleListener(com.foxconn.lib.cropimage.MonitoredActivity$LifeCycleListener) -> addLifeCycleListener
    void removeLifeCycleListener(com.foxconn.lib.cropimage.MonitoredActivity$LifeCycleListener) -> removeLifeCycleListener
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onStop() -> onStop
com.foxconn.lib.cropimage.MonitoredActivity$LifeCycleAdapter -> com.foxconn.lib.cropimage.MonitoredActivity$LifeCycleAdapter:
    void onActivityCreated(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityCreated
    void onActivityDestroyed(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityDestroyed
    void onActivityPaused(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityPaused
    void onActivityResumed(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityResumed
    void onActivityStarted(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityStarted
    void onActivityStopped(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityStopped
com.foxconn.lib.cropimage.MonitoredActivity$LifeCycleListener -> com.foxconn.lib.cropimage.MonitoredActivity$LifeCycleListener:
    void onActivityCreated(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityCreated
    void onActivityDestroyed(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityDestroyed
    void onActivityPaused(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityPaused
    void onActivityResumed(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityResumed
    void onActivityStarted(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityStarted
    void onActivityStopped(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityStopped
com.foxconn.lib.cropimage.RotateBitmap -> com.foxconn.lib.cropimage.RotateBitmap:
    java.lang.String TAG -> TAG
    android.graphics.Bitmap mBitmap -> mBitmap
    int mRotation -> mRotation
    void setRotation(int) -> setRotation
    int getRotation() -> getRotation
    android.graphics.Bitmap getBitmap() -> getBitmap
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    android.graphics.Matrix getRotateMatrix() -> getRotateMatrix
    boolean isOrientationChanged() -> isOrientationChanged
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    void recycle() -> recycle
com.foxconn.lib.cropimage.Util -> com.foxconn.lib.cropimage.Util:
    java.lang.String TAG -> TAG
    android.view.View$OnClickListener sNullOnClickListener -> sNullOnClickListener
    android.graphics.Bitmap rotate(android.graphics.Bitmap,int) -> rotate
    android.graphics.Bitmap transform(android.graphics.Matrix,android.graphics.Bitmap,int,int,boolean) -> transform
    android.graphics.Bitmap extractMiniThumb(android.graphics.Bitmap,int,int) -> extractMiniThumb
    android.graphics.Bitmap extractMiniThumb(android.graphics.Bitmap,int,int,boolean) -> extractMiniThumb
    android.graphics.Bitmap createVideoThumbnail(java.lang.String) -> createVideoThumbnail
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    void closeSilently(java.io.Closeable) -> closeSilently
    void closeSilently(android.os.ParcelFileDescriptor) -> closeSilently
    android.os.ParcelFileDescriptor makeInputStream(android.net.Uri,android.content.ContentResolver) -> makeInputStream
    void debugWhere(java.lang.String,java.lang.String) -> debugWhere
    android.view.View$OnClickListener getNullOnClickListener() -> getNullOnClickListener
    void Assert(boolean) -> Assert
    boolean equals(java.lang.String,java.lang.String) -> equals
    void startBackgroundJob(com.foxconn.lib.cropimage.MonitoredActivity,java.lang.String,java.lang.String,java.lang.Runnable,android.os.Handler) -> startBackgroundJob
    android.graphics.BitmapFactory$Options createNativeAllocOptions() -> createNativeAllocOptions
com.foxconn.lib.cropimage.Util$1 -> com.foxconn.lib.cropimage.Util$1:
    void onClick(android.view.View) -> onClick
com.foxconn.lib.cropimage.Util$BackgroundJob -> com.foxconn.lib.cropimage.Util$BackgroundJob:
    com.foxconn.lib.cropimage.MonitoredActivity mActivity -> mActivity
    android.app.ProgressDialog mDialog -> mDialog
    java.lang.Runnable mJob -> mJob
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mCleanupRunner -> mCleanupRunner
    void run() -> run
    void onActivityDestroyed(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityDestroyed
    void onActivityStopped(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityStopped
    void onActivityStarted(com.foxconn.lib.cropimage.MonitoredActivity) -> onActivityStarted
    com.foxconn.lib.cropimage.MonitoredActivity access$0(com.foxconn.lib.cropimage.Util$BackgroundJob) -> access$0
    android.app.ProgressDialog access$1(com.foxconn.lib.cropimage.Util$BackgroundJob) -> access$1
com.foxconn.lib.cropimage.Util$BackgroundJob$1 -> com.foxconn.lib.cropimage.Util$BackgroundJob$1:
    com.foxconn.lib.cropimage.Util$BackgroundJob this$1 -> this$1
    void run() -> run
com.foxconn.lib.download.AbDownloadProgressListener -> com.foxconn.lib.download.AbDownloadProgressListener:
    void onDownloadSize(long) -> onDownloadSize
com.foxconn.lib.download.AbDownloadThread -> com.foxconn.lib.download.AbDownloadThread:
    java.lang.String TAG -> TAG
    boolean D -> D
    java.io.File saveFile -> saveFile
    com.foxconn.lib.download.DownFile mDownFile -> mDownFile
    boolean finish -> finish
    boolean flag -> flag
    com.foxconn.lib.download.AbFileDownloader downloader -> downloader
    void run() -> run
    boolean isFinish() -> isFinish
    java.io.File getSaveFile() -> getSaveFile
    void setFlag(boolean) -> setFlag
com.foxconn.lib.download.AbFileDownloader -> com.foxconn.lib.download.AbFileDownloader:
    java.lang.String TAG -> TAG
    boolean D -> D
    android.content.Context context -> context
    com.foxconn.lib.download.AbDownloadThread threads -> threads
    com.foxconn.lib.download.DownFileDao mDownFileDao -> mDownFileDao
    java.io.File saveFile -> saveFile
    com.foxconn.lib.download.DownFile mDownFile -> mDownFile
    int mThreadNum -> mThreadNum
    boolean flag -> flag
    void update(com.foxconn.lib.download.DownFile) -> update
    void download(com.foxconn.lib.download.AbDownloadProgressListener) -> download
    java.util.Map getHttpResponseHeader(java.net.HttpURLConnection) -> getHttpResponseHeader
    void printResponseHeader(java.net.HttpURLConnection) -> printResponseHeader
    com.foxconn.lib.download.AbDownloadThread getThreads() -> getThreads
    java.io.File getSaveFile() -> getSaveFile
    boolean getFlag() -> getFlag
    void setFlag(boolean) -> setFlag
com.foxconn.lib.download.DownFile -> com.foxconn.lib.download.DownFile:
    int _ID -> _ID
    java.lang.String icon -> icon
    java.lang.String name -> name
    java.lang.String description -> description
    java.lang.String pakageName -> pakageName
    int state -> state
    java.lang.String downUrl -> downUrl
    java.lang.String downPath -> downPath
    long downLength -> downLength
    long totalLength -> totalLength
    java.lang.String suffix -> suffix
    int get_ID() -> get_ID
    void set_ID(int) -> set_ID
    java.lang.String getIcon() -> getIcon
    void setIcon(java.lang.String) -> setIcon
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getPakageName() -> getPakageName
    void setPakageName(java.lang.String) -> setPakageName
    int getState() -> getState
    void setState(int) -> setState
    java.lang.String getDownUrl() -> getDownUrl
    void setDownUrl(java.lang.String) -> setDownUrl
    java.lang.String getDownPath() -> getDownPath
    void setDownPath(java.lang.String) -> setDownPath
    long getDownLength() -> getDownLength
    void setDownLength(long) -> setDownLength
    long getTotalLength() -> getTotalLength
    void setTotalLength(long) -> setTotalLength
    java.lang.String getSuffix() -> getSuffix
    void setSuffix(java.lang.String) -> setSuffix
com.foxconn.lib.download.DownFileDao -> com.foxconn.lib.download.DownFileDao:
    com.foxconn.emm.db.DBHelper openHelper -> openHelper
    android.content.Context mContext -> mContext
    com.foxconn.lib.download.DownFileDao mDownFileDao -> mDownFileDao
    com.foxconn.lib.download.DownFileDao getInstance(android.content.Context) -> getInstance
    com.foxconn.lib.download.DownFile getDownFile(java.lang.String) -> getDownFile
    java.util.List getAllDownFiles() -> getAllDownFiles
    long save(com.foxconn.lib.download.DownFile) -> save
    boolean find(com.foxconn.lib.download.DownFile) -> find
    long update(com.foxconn.lib.download.DownFile) -> update
    long delete(java.lang.String) -> delete
com.foxconn.lib.network.control.Api -> com.foxconn.lib.network.control.Api:
    java.lang.String VERSION -> VERSION
    int SPECIAL_UID_ANY -> SPECIAL_UID_ANY
    java.lang.String SCRIPT_FILE -> SCRIPT_FILE
    java.lang.String PREFS_NAME -> PREFS_NAME
    java.lang.String PREF_3G_UIDS -> PREF_3G_UIDS
    java.lang.String PREF_WIFI_UIDS -> PREF_WIFI_UIDS
    java.lang.String PREF_PASSWORD -> PREF_PASSWORD
    java.lang.String PREF_MODE -> PREF_MODE
    java.lang.String PREF_ENABLED -> PREF_ENABLED
    java.lang.String PREF_LOGENABLED -> PREF_LOGENABLED
    java.lang.String MODE_WHITELIST -> MODE_WHITELIST
    java.lang.String MODE_BLACKLIST -> MODE_BLACKLIST
    java.lang.String STATUS_CHANGED_MSG -> STATUS_CHANGED_MSG
    java.lang.String TOGGLE_REQUEST_MSG -> TOGGLE_REQUEST_MSG
    java.lang.String STATUS_EXTRA -> STATUS_EXTRA
    com.foxconn.lib.network.control.Api$DroidApp[] applications -> applications
    boolean hasroot -> hasroot
    void alert(android.content.Context,java.lang.CharSequence) -> alert
    java.lang.String scriptHeader(android.content.Context) -> scriptHeader
    void copyRawFile(android.content.Context,int,java.io.File,java.lang.String) -> copyRawFile
    boolean applyIptablesRulesImpl(android.content.Context,java.util.List,java.util.List,boolean) -> applyIptablesRulesImpl
    boolean applySavedIptablesRules(android.content.Context,boolean) -> applySavedIptablesRules
    boolean applyIptablesRules(android.content.Context,boolean) -> applyIptablesRules
    void saveRules(android.content.Context) -> saveRules
    boolean purgeIptables(android.content.Context,boolean) -> purgeIptables
    void showIptablesRules(android.content.Context) -> showIptablesRules
    boolean clearLog(android.content.Context) -> clearLog
    void showLog(android.content.Context) -> showLog
    com.foxconn.lib.network.control.Api$DroidApp[] getApps(android.content.Context) -> getApps
    boolean hasRootAccess(android.content.Context,boolean) -> hasRootAccess
    int runScript(android.content.Context,java.lang.String,java.lang.StringBuilder,long,boolean) -> runScript
    int runScriptAsRoot(android.content.Context,java.lang.String,java.lang.StringBuilder,long) -> runScriptAsRoot
    int runScriptAsRoot(android.content.Context,java.lang.String,java.lang.StringBuilder) -> runScriptAsRoot
    int runScript(android.content.Context,java.lang.String,java.lang.StringBuilder) -> runScript
    boolean assertBinaries(android.content.Context,boolean) -> assertBinaries
    boolean isEnabled(android.content.Context) -> isEnabled
    void setEnabled(android.content.Context,boolean) -> setEnabled
com.foxconn.lib.network.control.Api$DroidApp -> com.foxconn.lib.network.control.Api$DroidApp:
    int uid -> uid
    java.lang.String[] names -> names
    boolean selected_wifi -> selected_wifi
    boolean selected_3g -> selected_3g
    java.lang.String tostr -> tostr
    java.lang.String toString() -> toString
com.foxconn.lib.network.control.Api$LogInfo -> com.foxconn.lib.network.control.Api$LogInfo:
    int totalBlocked -> totalBlocked
    java.util.HashMap dstBlocked -> dstBlocked
    int access$1(com.foxconn.lib.network.control.Api$LogInfo) -> access$1
    void access$2(com.foxconn.lib.network.control.Api$LogInfo,int) -> access$2
    java.util.HashMap access$3(com.foxconn.lib.network.control.Api$LogInfo) -> access$3
com.foxconn.lib.network.control.Api$ScriptRunner -> com.foxconn.lib.network.control.Api$ScriptRunner:
    java.io.File file -> file
    java.lang.String script -> script
    java.lang.StringBuilder res -> res
    boolean asroot -> asroot
    int exitcode -> exitcode
    java.lang.Process exec -> exec
    void run() -> run
    void destroy() -> destroy
com.foxconn.lib.network.control.NetworkControlTool -> com.foxconn.lib.network.control.NetworkControlTool:
    android.content.Context context -> context
    void shutdownWifiNetwork() -> shutdownWifiNetwork
    void shutdownDataNetwork() -> shutdownDataNetwork
com.foxconn.lib.qrcode.camera.AutoFocusManager -> com.foxconn.lib.qrcode.camera.AutoFocusManager:
    java.lang.String TAG -> TAG
    long AUTO_FOCUS_INTERVAL_MS -> AUTO_FOCUS_INTERVAL_MS
    java.util.Collection FOCUS_MODES_CALLING_AF -> FOCUS_MODES_CALLING_AF
    boolean stopped -> stopped
    boolean focusing -> focusing
    boolean useAutoFocus -> useAutoFocus
    android.hardware.Camera camera -> camera
    android.os.AsyncTask outstandingTask -> outstandingTask
    void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
    void autoFocusAgainLater() -> autoFocusAgainLater
    void start() -> start
    void cancelOutstandingTask() -> cancelOutstandingTask
    void stop() -> stop
com.foxconn.lib.qrcode.camera.AutoFocusManager$AutoFocusTask -> com.foxconn.lib.qrcode.camera.AutoFocusManager$AutoFocusTask:
    com.foxconn.lib.qrcode.camera.AutoFocusManager this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.foxconn.lib.qrcode.camera.CameraConfigurationManager -> com.foxconn.lib.qrcode.camera.CameraConfigurationManager:
    java.lang.String TAG -> TAG
    int MIN_PREVIEW_PIXELS -> MIN_PREVIEW_PIXELS
    double MAX_ASPECT_DISTORTION -> MAX_ASPECT_DISTORTION
    android.content.Context context -> context
    android.graphics.Point screenResolution -> screenResolution
    android.graphics.Point cameraResolution -> cameraResolution
    void initFromCameraParameters(android.hardware.Camera) -> initFromCameraParameters
    android.graphics.Point getDisplaySize(android.view.Display) -> getDisplaySize
    void setDesiredCameraParameters(android.hardware.Camera,boolean) -> setDesiredCameraParameters
    android.graphics.Point getCameraResolution() -> getCameraResolution
    android.graphics.Point getScreenResolution() -> getScreenResolution
    android.graphics.Point findBestPreviewSizeValue(android.hardware.Camera$Parameters,android.graphics.Point) -> findBestPreviewSizeValue
com.foxconn.lib.qrcode.camera.CameraConfigurationManager$1 -> com.foxconn.lib.qrcode.camera.CameraConfigurationManager$1:
    com.foxconn.lib.qrcode.camera.CameraConfigurationManager this$0 -> this$0
    int compare(android.hardware.Camera$Size,android.hardware.Camera$Size) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.foxconn.lib.qrcode.camera.CameraManager -> com.foxconn.lib.qrcode.camera.CameraManager:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    com.foxconn.lib.qrcode.camera.CameraConfigurationManager configManager -> configManager
    android.hardware.Camera camera -> camera
    com.foxconn.lib.qrcode.camera.AutoFocusManager autoFocusManager -> autoFocusManager
    boolean initialized -> initialized
    boolean previewing -> previewing
    int requestedCameraId -> requestedCameraId
    com.foxconn.lib.qrcode.camera.PreviewCallback previewCallback -> previewCallback
    void openDriver(android.view.SurfaceHolder) -> openDriver
    boolean isOpen() -> isOpen
    void closeDriver() -> closeDriver
    void startPreview() -> startPreview
    void stopPreview() -> stopPreview
    void requestPreviewFrame(android.os.Handler,int) -> requestPreviewFrame
    void setManualCameraId(int) -> setManualCameraId
    android.graphics.Point getCameraResolution() -> getCameraResolution
    android.hardware.Camera$Size getPreviewSize() -> getPreviewSize
com.foxconn.lib.qrcode.camera.PreviewCallback -> com.foxconn.lib.qrcode.camera.PreviewCallback:
    java.lang.String TAG -> TAG
    com.foxconn.lib.qrcode.camera.CameraConfigurationManager configManager -> configManager
    android.os.Handler previewHandler -> previewHandler
    int previewMessage -> previewMessage
    void setHandler(android.os.Handler,int) -> setHandler
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
com.foxconn.lib.qrcode.camera.open.OpenCameraInterface -> com.foxconn.lib.qrcode.camera.open.OpenCameraInterface:
    java.lang.String TAG -> TAG
    android.hardware.Camera open(int) -> open
    android.hardware.Camera open() -> open
com.foxconn.lib.qrcode.decode.DecodeFormatManager -> com.foxconn.lib.qrcode.decode.DecodeFormatManager:
    java.util.Set PRODUCT_FORMATS -> PRODUCT_FORMATS
    java.util.Set INDUSTRIAL_FORMATS -> INDUSTRIAL_FORMATS
    java.util.Set ONE_D_FORMATS -> ONE_D_FORMATS
    java.util.Set QR_CODE_FORMATS -> QR_CODE_FORMATS
    java.util.Collection getQrCodeFormats() -> getQrCodeFormats
    java.util.Collection getBarCodeFormats() -> getBarCodeFormats
com.foxconn.lib.qrcode.decode.DecodeHandler -> com.foxconn.lib.qrcode.decode.DecodeHandler:
    com.foxconn.app.aty.CaptureActivity activity -> activity
    com.google.zxing.MultiFormatReader multiFormatReader -> multiFormatReader
    boolean running -> running
    void handleMessage(android.os.Message) -> handleMessage
    void decode(byte[],int,int) -> decode
    void bundleThumbnail(com.google.zxing.PlanarYUVLuminanceSource,android.os.Bundle) -> bundleThumbnail
    com.google.zxing.PlanarYUVLuminanceSource buildLuminanceSource(byte[],int,int) -> buildLuminanceSource
com.foxconn.lib.qrcode.decode.DecodeThread -> com.foxconn.lib.qrcode.decode.DecodeThread:
    java.lang.String BARCODE_BITMAP -> BARCODE_BITMAP
    int BARCODE_MODE -> BARCODE_MODE
    int QRCODE_MODE -> QRCODE_MODE
    int ALL_MODE -> ALL_MODE
    com.foxconn.app.aty.CaptureActivity activity -> activity
    java.util.Map hints -> hints
    android.os.Handler handler -> handler
    java.util.concurrent.CountDownLatch handlerInitLatch -> handlerInitLatch
    android.os.Handler getHandler() -> getHandler
    void run() -> run
com.foxconn.lib.qrcode.utils.BeepManager -> com.foxconn.lib.qrcode.utils.BeepManager:
    java.lang.String TAG -> TAG
    float BEEP_VOLUME -> BEEP_VOLUME
    long VIBRATE_DURATION -> VIBRATE_DURATION
    android.app.Activity activity -> activity
    android.media.MediaPlayer mediaPlayer -> mediaPlayer
    boolean playBeep -> playBeep
    boolean vibrate -> vibrate
    void updatePrefs() -> updatePrefs
    void playBeepSoundAndVibrate() -> playBeepSoundAndVibrate
    boolean shouldBeep(android.content.SharedPreferences,android.content.Context) -> shouldBeep
    android.media.MediaPlayer buildMediaPlayer(android.content.Context) -> buildMediaPlayer
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void close() -> close
com.foxconn.lib.qrcode.utils.CaptureActivityHandler -> com.foxconn.lib.qrcode.utils.CaptureActivityHandler:
    com.foxconn.app.aty.CaptureActivity activity -> activity
    com.foxconn.lib.qrcode.decode.DecodeThread decodeThread -> decodeThread
    com.foxconn.lib.qrcode.camera.CameraManager cameraManager -> cameraManager
    com.foxconn.lib.qrcode.utils.CaptureActivityHandler$State state -> state
    void handleMessage(android.os.Message) -> handleMessage
    void quitSynchronously() -> quitSynchronously
    void restartPreviewAndDecode() -> restartPreviewAndDecode
com.foxconn.lib.qrcode.utils.CaptureActivityHandler$State -> com.foxconn.lib.qrcode.utils.CaptureActivityHandler$State:
    com.foxconn.lib.qrcode.utils.CaptureActivityHandler$State PREVIEW -> PREVIEW
    com.foxconn.lib.qrcode.utils.CaptureActivityHandler$State SUCCESS -> SUCCESS
    com.foxconn.lib.qrcode.utils.CaptureActivityHandler$State DONE -> DONE
    com.foxconn.lib.qrcode.utils.CaptureActivityHandler$State[] ENUM$VALUES -> ENUM$VALUES
    com.foxconn.lib.qrcode.utils.CaptureActivityHandler$State[] values() -> values
    com.foxconn.lib.qrcode.utils.CaptureActivityHandler$State valueOf(java.lang.String) -> valueOf
com.foxconn.lib.qrcode.utils.InactivityTimer -> com.foxconn.lib.qrcode.utils.InactivityTimer:
    java.lang.String TAG -> TAG
    long INACTIVITY_DELAY_MS -> INACTIVITY_DELAY_MS
    android.app.Activity activity -> activity
    android.content.BroadcastReceiver powerStatusReceiver -> powerStatusReceiver
    boolean registered -> registered
    android.os.AsyncTask inactivityTask -> inactivityTask
    void onActivity() -> onActivity
    void onPause() -> onPause
    void onResume() -> onResume
    void cancel() -> cancel
    void shutdown() -> shutdown
    void access$0(com.foxconn.lib.qrcode.utils.InactivityTimer) -> access$0
    java.lang.String access$1() -> access$1
    android.app.Activity access$2(com.foxconn.lib.qrcode.utils.InactivityTimer) -> access$2
com.foxconn.lib.qrcode.utils.InactivityTimer$InactivityAsyncTask -> com.foxconn.lib.qrcode.utils.InactivityTimer$InactivityAsyncTask:
    com.foxconn.lib.qrcode.utils.InactivityTimer this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.foxconn.lib.qrcode.utils.InactivityTimer$PowerStatusReceiver -> com.foxconn.lib.qrcode.utils.InactivityTimer$PowerStatusReceiver:
    com.foxconn.lib.qrcode.utils.InactivityTimer this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.foxconn.lib.residemenu.ResideMenu -> com.foxconn.lib.residemenu.ResideMenu:
    int DIRECTION_LEFT -> DIRECTION_LEFT
    int DIRECTION_RIGHT -> DIRECTION_RIGHT
    int PRESSED_MOVE_HORIZANTAL -> PRESSED_MOVE_HORIZANTAL
    int PRESSED_DOWN -> PRESSED_DOWN
    int PRESSED_DONE -> PRESSED_DONE
    int PRESSED_MOVE_VERTICAL -> PRESSED_MOVE_VERTICAL
    android.widget.ImageView imageViewShadow -> imageViewShadow
    android.widget.ImageView imageViewBackground -> imageViewBackground
    android.widget.LinearLayout layoutLeftMenu -> layoutLeftMenu
    android.widget.LinearLayout layoutRightMenu -> layoutRightMenu
    android.widget.LinearLayout layoutInfo -> layoutInfo
    android.widget.LinearLayout layoutSetting -> layoutSetting
    android.widget.RelativeLayout leftMenu -> leftMenu
    android.widget.RelativeLayout rightMenu -> rightMenu
    android.widget.RelativeLayout scrollViewMenu -> scrollViewMenu
    android.app.Activity activity -> activity
    android.view.ViewGroup viewDecor -> viewDecor
    com.foxconn.lib.residemenu.TouchDisableView viewActivity -> viewActivity
    boolean isOpened -> isOpened
    float shadowAdjustScaleX -> shadowAdjustScaleX
    float shadowAdjustScaleY -> shadowAdjustScaleY
    java.util.List ignoredViews -> ignoredViews
    java.util.List leftMenuItems -> leftMenuItems
    java.util.List rightMenuItems -> rightMenuItems
    android.util.DisplayMetrics displayMetrics -> displayMetrics
    com.foxconn.lib.residemenu.ResideMenu$OnMenuListener menuListener -> menuListener
    float lastRawX -> lastRawX
    boolean isInIgnoredView -> isInIgnoredView
    int scaleDirection -> scaleDirection
    int pressedState -> pressedState
    java.util.List disabledSwipeDirection -> disabledSwipeDirection
    float mScaleValue -> mScaleValue
    android.widget.TextView sys_common_residemenu_locaddress_tv -> sys_common_residemenu_locaddress_tv
    android.widget.TextView sys_common_residemenu_setting_tv -> sys_common_residemenu_setting_tv
    android.widget.ImageView sys_common_residemenu_setting_iv -> sys_common_residemenu_setting_iv
    android.view.View$OnClickListener viewActivityOnClickListener -> viewActivityOnClickListener
    com.nineoldandroids.animation.Animator$AnimatorListener animationListener -> animationListener
    float lastActionDownX -> lastActionDownX
    float lastActionDownY -> lastActionDownY
    void initViews(android.content.Context) -> initViews
    void attachToActivity(android.app.Activity) -> attachToActivity
    void initValue(android.app.Activity) -> initValue
    void setShadowAdjustScaleXByOrientation() -> setShadowAdjustScaleXByOrientation
    void setBackground(int) -> setBackground
    void setShadowVisible(boolean) -> setShadowVisible
    void addMenuInfo(com.foxconn.lib.residemenu.ResideMenuInfo) -> addMenuInfo
    void addMenuItem(com.foxconn.lib.residemenu.ResideMenuItem) -> addMenuItem
    void addMenuItem(com.foxconn.lib.residemenu.ResideMenuItem,int) -> addMenuItem
    void setMenuItems(java.util.List) -> setMenuItems
    void setMenuItems(java.util.List,int) -> setMenuItems
    void rebuildMenu() -> rebuildMenu
    java.util.List getMenuItems() -> getMenuItems
    java.util.List getMenuItems(int) -> getMenuItems
    void setMenuListener(com.foxconn.lib.residemenu.ResideMenu$OnMenuListener) -> setMenuListener
    com.foxconn.lib.residemenu.ResideMenu$OnMenuListener getMenuListener() -> getMenuListener
    void setViewPadding() -> setViewPadding
    void openMenu(int) -> openMenu
    void closeMenu() -> closeMenu
    void setDirectionDisable(int) -> setDirectionDisable
    void setSwipeDirectionDisable(int) -> setSwipeDirectionDisable
    boolean isInDisableDirection(int) -> isInDisableDirection
    void setScaleDirection(int) -> setScaleDirection
    boolean isOpened() -> isOpened
    com.nineoldandroids.animation.AnimatorSet buildScaleDownAnimation(android.view.View,float,float) -> buildScaleDownAnimation
    com.nineoldandroids.animation.AnimatorSet buildScaleUpAnimation(android.view.View,float,float) -> buildScaleUpAnimation
    com.nineoldandroids.animation.AnimatorSet buildMenuAnimation(android.view.View,float) -> buildMenuAnimation
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViewList() -> clearIgnoredViewList
    boolean isInIgnoredView(android.view.MotionEvent) -> isInIgnoredView
    void setScaleDirectionByRawX(float) -> setScaleDirectionByRawX
    float getTargetScale(float) -> getTargetScale
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    int getScreenHeight() -> getScreenHeight
    int getScreenWidth() -> getScreenWidth
    void setScaleValue(float) -> setScaleValue
    android.widget.TextView getSys_common_residemenu_locaddress_tv() -> getSys_common_residemenu_locaddress_tv
    void setSys_common_residemenu_locaddress_tv(android.widget.TextView) -> setSys_common_residemenu_locaddress_tv
    android.widget.TextView getSys_common_residemenu_setting_tv() -> getSys_common_residemenu_setting_tv
    void setSys_common_residemenu_setting_tv(android.widget.TextView) -> setSys_common_residemenu_setting_tv
    android.widget.ImageView getSys_common_residemenu_setting_iv() -> getSys_common_residemenu_setting_iv
    void setSys_common_residemenu_setting_iv(android.widget.ImageView) -> setSys_common_residemenu_setting_iv
    android.widget.RelativeLayout access$0(com.foxconn.lib.residemenu.ResideMenu) -> access$0
    com.foxconn.lib.residemenu.ResideMenu$OnMenuListener access$1(com.foxconn.lib.residemenu.ResideMenu) -> access$1
    com.foxconn.lib.residemenu.TouchDisableView access$2(com.foxconn.lib.residemenu.ResideMenu) -> access$2
    android.view.View$OnClickListener access$3(com.foxconn.lib.residemenu.ResideMenu) -> access$3
com.foxconn.lib.residemenu.ResideMenu$1 -> com.foxconn.lib.residemenu.ResideMenu$1:
    com.foxconn.lib.residemenu.ResideMenu this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.foxconn.lib.residemenu.ResideMenu$2 -> com.foxconn.lib.residemenu.ResideMenu$2:
    com.foxconn.lib.residemenu.ResideMenu this$0 -> this$0
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.foxconn.lib.residemenu.ResideMenu$OnMenuListener -> com.foxconn.lib.residemenu.ResideMenu$OnMenuListener:
    void openMenu() -> openMenu
    void closeMenu() -> closeMenu
com.foxconn.lib.residemenu.ResideMenuInfo -> com.foxconn.lib.residemenu.ResideMenuInfo:
    android.widget.ImageView iv_icon -> iv_icon
    android.widget.TextView tv_username -> tv_username
    android.widget.TextView tv_dengji -> tv_dengji
    void initViews(android.content.Context) -> initViews
    void setIcon(int) -> setIcon
    void setTitle(java.lang.String) -> setTitle
    void setDengJi(java.lang.String) -> setDengJi
com.foxconn.lib.residemenu.ResideMenuItem -> com.foxconn.lib.residemenu.ResideMenuItem:
    android.widget.ImageView iv_icon -> iv_icon
    android.widget.TextView tv_title -> tv_title
    void initViews(android.content.Context) -> initViews
    void setIcon(int) -> setIcon
    void setTitle(int) -> setTitle
    void setTitle(java.lang.String) -> setTitle
com.foxconn.lib.residemenu.TouchDisableView -> com.foxconn.lib.residemenu.TouchDisableView:
    android.view.View mContent -> mContent
    boolean mTouchDisabled -> mTouchDisabled
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setTouchDisable(boolean) -> setTouchDisable
    boolean isTouchDisabled() -> isTouchDisabled
com.foxconn.lib.welcome.license.AtyFirstLoadWelcomePage -> com.foxconn.lib.welcome.license.AtyFirstLoadWelcomePage:
    java.lang.String TAG -> TAG
    com.foxconn.lib.welcome.license.TestFragmentAdapter mAdapter -> mAdapter
    android.support.v4.view.ViewPager mPager -> mPager
    com.foxconn.lib.welcome.license.UnderlinePageIndicator mIndicator -> mIndicator
    android.widget.TextView emm_sys_welcomepage_bottom_start_tv -> emm_sys_welcomepage_bottom_start_tv
    android.widget.TextView emm_sys_welcomepage_bottom_next_tv -> emm_sys_welcomepage_bottom_next_tv
    int currentPageItem -> currentPageItem
    int pagerCount -> pagerCount
    android.view.View emm_sys_welcomepage_bottom_deliver -> emm_sys_welcomepage_bottom_deliver
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void turn() -> turn
    void access$0(com.foxconn.lib.welcome.license.AtyFirstLoadWelcomePage,int) -> access$0
    int access$1(com.foxconn.lib.welcome.license.AtyFirstLoadWelcomePage) -> access$1
    int access$2(com.foxconn.lib.welcome.license.AtyFirstLoadWelcomePage) -> access$2
    android.widget.TextView access$3(com.foxconn.lib.welcome.license.AtyFirstLoadWelcomePage) -> access$3
    android.view.View access$4(com.foxconn.lib.welcome.license.AtyFirstLoadWelcomePage) -> access$4
com.foxconn.lib.welcome.license.AtyFirstLoadWelcomePage$1 -> com.foxconn.lib.welcome.license.AtyFirstLoadWelcomePage$1:
    com.foxconn.lib.welcome.license.AtyFirstLoadWelcomePage this$0 -> this$0
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.foxconn.lib.welcome.license.IconPagerAdapter -> com.foxconn.lib.welcome.license.IconPagerAdapter:
    int getIconResId(int) -> getIconResId
    int getCount() -> getCount
com.foxconn.lib.welcome.license.PageIndicator -> com.foxconn.lib.welcome.license.PageIndicator:
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void notifyDataSetChanged() -> notifyDataSetChanged
com.foxconn.lib.welcome.license.TestFragment -> com.foxconn.lib.welcome.license.TestFragment:
    java.lang.String KEY_CONTENT -> KEY_CONTENT
    int content -> content
    java.lang.String mContent -> mContent
    com.foxconn.lib.welcome.license.TestFragment newInstance(java.lang.String) -> newInstance
    com.foxconn.lib.welcome.license.TestFragment newInstance(int) -> newInstance
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.foxconn.lib.welcome.license.TestFragmentAdapter -> com.foxconn.lib.welcome.license.TestFragmentAdapter:
    java.lang.String[] CONTENT -> CONTENT
    int mCount -> mCount
    int[] values -> values
    int count -> count
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    void setCount(int) -> setCount
    int getIconResId(int) -> getIconResId
com.foxconn.lib.welcome.license.UnderlinePageIndicator -> com.foxconn.lib.welcome.license.UnderlinePageIndicator:
    int INVALID_POINTER -> INVALID_POINTER
    int FADE_FRAME_MS -> FADE_FRAME_MS
    android.graphics.Paint mPaint -> mPaint
    boolean mFades -> mFades
    int mFadeDelay -> mFadeDelay
    int mFadeLength -> mFadeLength
    int mFadeBy -> mFadeBy
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mScrollState -> mScrollState
    int mCurrentPage -> mCurrentPage
    float mPositionOffset -> mPositionOffset
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    java.lang.Runnable mFadeRunnable -> mFadeRunnable
    boolean getFades() -> getFades
    void setFades(boolean) -> setFades
    int getFadeDelay() -> getFadeDelay
    void setFadeDelay(int) -> setFadeDelay
    int getFadeLength() -> getFadeLength
    void setFadeLength(int) -> setFadeLength
    int getSelectedColor() -> getSelectedColor
    void setSelectedColor(int) -> setSelectedColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean access$0(com.foxconn.lib.welcome.license.UnderlinePageIndicator) -> access$0
    android.graphics.Paint access$1(com.foxconn.lib.welcome.license.UnderlinePageIndicator) -> access$1
    int access$2(com.foxconn.lib.welcome.license.UnderlinePageIndicator) -> access$2
    java.lang.Runnable access$3(com.foxconn.lib.welcome.license.UnderlinePageIndicator) -> access$3
com.foxconn.lib.welcome.license.UnderlinePageIndicator$1 -> com.foxconn.lib.welcome.license.UnderlinePageIndicator$1:
    com.foxconn.lib.welcome.license.UnderlinePageIndicator this$0 -> this$0
    void run() -> run
com.foxconn.lib.welcome.license.UnderlinePageIndicator$2 -> com.foxconn.lib.welcome.license.UnderlinePageIndicator$2:
    com.foxconn.lib.welcome.license.UnderlinePageIndicator this$0 -> this$0
    void run() -> run
com.foxconn.lib.welcome.license.UnderlinePageIndicator$SavedState -> com.foxconn.lib.welcome.license.UnderlinePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.foxconn.lib.welcome.license.UnderlinePageIndicator$SavedState$1 -> com.foxconn.lib.welcome.license.UnderlinePageIndicator$SavedState$1:
    com.foxconn.lib.welcome.license.UnderlinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.foxconn.lib.welcome.license.UnderlinePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.google.gson.AnonymousAndLocalClassExclusionStrategy -> com.google.gson.AnonymousAndLocalClassExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
    boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
com.google.gson.BaseMapTypeAdapter -> com.google.gson.BaseMapTypeAdapter:
    com.google.gson.JsonElement serialize(com.google.gson.JsonSerializationContext,java.lang.Object,java.lang.reflect.Type) -> serialize
    java.util.Map constructMapType(java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> constructMapType
com.google.gson.Cache -> com.google.gson.Cache:
    void addElement(java.lang.Object,java.lang.Object) -> addElement
    java.lang.Object getElement(java.lang.Object) -> getElement
    java.lang.Object removeElement(java.lang.Object) -> removeElement
com.google.gson.CamelCaseSeparatorNamingPolicy -> com.google.gson.CamelCaseSeparatorNamingPolicy:
    java.lang.String separatorString -> separatorString
    java.lang.String translateName(java.lang.String,java.lang.reflect.Type,java.util.Collection) -> translateName
com.google.gson.CircularReferenceException -> com.google.gson.CircularReferenceException:
    long serialVersionUID -> serialVersionUID
    java.lang.Object offendingNode -> offendingNode
    java.lang.IllegalStateException createDetailedException(com.google.gson.FieldAttributes) -> createDetailedException
com.google.gson.CompositionFieldNamingPolicy -> com.google.gson.CompositionFieldNamingPolicy:
    com.google.gson.RecursiveFieldNamingPolicy[] fieldPolicies -> fieldPolicies
    java.lang.String translateName(java.lang.String,java.lang.reflect.Type,java.util.Collection) -> translateName
com.google.gson.DefaultConstructorAllocator -> com.google.gson.DefaultConstructorAllocator:
    java.lang.reflect.Constructor NULL_CONSTRUCTOR -> NULL_CONSTRUCTOR
    com.google.gson.Cache constructorCache -> constructorCache
    boolean isInCache(java.lang.Class) -> isInCache
    java.lang.reflect.Constructor createNullConstructor() -> createNullConstructor
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.reflect.Constructor findConstructor(java.lang.Class) -> findConstructor
    java.lang.reflect.Constructor getNoArgsConstructor(java.lang.Class) -> getNoArgsConstructor
com.google.gson.DefaultConstructorAllocator$Null -> com.google.gson.DefaultConstructorAllocator$Null:
com.google.gson.DefaultTypeAdapters -> com.google.gson.DefaultTypeAdapters:
    com.google.gson.DefaultTypeAdapters$DefaultDateTypeAdapter DATE_TYPE_ADAPTER -> DATE_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$DefaultJavaSqlDateTypeAdapter JAVA_SQL_DATE_TYPE_ADAPTER -> JAVA_SQL_DATE_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$DefaultTimeTypeAdapter TIME_TYPE_ADAPTER -> TIME_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$DefaultTimestampDeserializer TIMESTAMP_DESERIALIZER -> TIMESTAMP_DESERIALIZER
    com.google.gson.DefaultTypeAdapters$EnumTypeAdapter ENUM_TYPE_ADAPTER -> ENUM_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$UrlTypeAdapter URL_TYPE_ADAPTER -> URL_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$UriTypeAdapter URI_TYPE_ADAPTER -> URI_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$UuidTypeAdapter UUUID_TYPE_ADAPTER -> UUUID_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$LocaleTypeAdapter LOCALE_TYPE_ADAPTER -> LOCALE_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$DefaultInetAddressAdapter INET_ADDRESS_ADAPTER -> INET_ADDRESS_ADAPTER
    com.google.gson.DefaultTypeAdapters$CollectionTypeAdapter COLLECTION_TYPE_ADAPTER -> COLLECTION_TYPE_ADAPTER
    com.google.gson.MapTypeAdapter MAP_TYPE_ADAPTER -> MAP_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$BigDecimalTypeAdapter BIG_DECIMAL_TYPE_ADAPTER -> BIG_DECIMAL_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$BigIntegerTypeAdapter BIG_INTEGER_TYPE_ADAPTER -> BIG_INTEGER_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$BooleanTypeAdapter BOOLEAN_TYPE_ADAPTER -> BOOLEAN_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$ByteTypeAdapter BYTE_TYPE_ADAPTER -> BYTE_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$CharacterTypeAdapter CHARACTER_TYPE_ADAPTER -> CHARACTER_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$DoubleDeserializer DOUBLE_TYPE_ADAPTER -> DOUBLE_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$FloatDeserializer FLOAT_TYPE_ADAPTER -> FLOAT_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$IntegerTypeAdapter INTEGER_TYPE_ADAPTER -> INTEGER_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$LongDeserializer LONG_DESERIALIZER -> LONG_DESERIALIZER
    com.google.gson.DefaultTypeAdapters$NumberTypeAdapter NUMBER_TYPE_ADAPTER -> NUMBER_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$ShortTypeAdapter SHORT_TYPE_ADAPTER -> SHORT_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$StringTypeAdapter STRING_TYPE_ADAPTER -> STRING_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$StringBuilderTypeAdapter STRING_BUILDER_TYPE_ADAPTER -> STRING_BUILDER_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$StringBufferTypeAdapter STRING_BUFFER_TYPE_ADAPTER -> STRING_BUFFER_TYPE_ADAPTER
    com.google.gson.DefaultTypeAdapters$GregorianCalendarTypeAdapter GREGORIAN_CALENDAR_TYPE_ADAPTER -> GREGORIAN_CALENDAR_TYPE_ADAPTER
    com.google.gson.ParameterizedTypeHandlerMap DEFAULT_SERIALIZERS -> DEFAULT_SERIALIZERS
    com.google.gson.ParameterizedTypeHandlerMap DEFAULT_HIERARCHY_SERIALIZERS -> DEFAULT_HIERARCHY_SERIALIZERS
    com.google.gson.ParameterizedTypeHandlerMap DEFAULT_DESERIALIZERS -> DEFAULT_DESERIALIZERS
    com.google.gson.ParameterizedTypeHandlerMap DEFAULT_HIERARCHY_DESERIALIZERS -> DEFAULT_HIERARCHY_DESERIALIZERS
    com.google.gson.ParameterizedTypeHandlerMap DEFAULT_INSTANCE_CREATORS -> DEFAULT_INSTANCE_CREATORS
    com.google.gson.ParameterizedTypeHandlerMap createDefaultSerializers() -> createDefaultSerializers
    com.google.gson.ParameterizedTypeHandlerMap createDefaultHierarchySerializers() -> createDefaultHierarchySerializers
    com.google.gson.ParameterizedTypeHandlerMap createDefaultDeserializers() -> createDefaultDeserializers
    com.google.gson.ParameterizedTypeHandlerMap createDefaultHierarchyDeserializers() -> createDefaultHierarchyDeserializers
    com.google.gson.ParameterizedTypeHandlerMap createDefaultInstanceCreators() -> createDefaultInstanceCreators
    com.google.gson.JsonDeserializer wrapDeserializer(com.google.gson.JsonDeserializer) -> wrapDeserializer
    com.google.gson.ParameterizedTypeHandlerMap getDefaultSerializers() -> getDefaultSerializers
    com.google.gson.ParameterizedTypeHandlerMap getAllDefaultSerializers() -> getAllDefaultSerializers
    com.google.gson.ParameterizedTypeHandlerMap getAllDefaultDeserializers() -> getAllDefaultDeserializers
    com.google.gson.ParameterizedTypeHandlerMap getDefaultSerializers(boolean,com.google.gson.LongSerializationPolicy) -> getDefaultSerializers
    com.google.gson.ParameterizedTypeHandlerMap getDefaultDeserializers() -> getDefaultDeserializers
    com.google.gson.ParameterizedTypeHandlerMap getDefaultInstanceCreators() -> getDefaultInstanceCreators
com.google.gson.DefaultTypeAdapters$1 -> com.google.gson.DefaultTypeAdapters$1:
com.google.gson.DefaultTypeAdapters$BigDecimalTypeAdapter -> com.google.gson.DefaultTypeAdapters$BigDecimalTypeAdapter:
    com.google.gson.JsonElement serialize(java.math.BigDecimal,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.math.BigDecimal deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$BigIntegerTypeAdapter -> com.google.gson.DefaultTypeAdapters$BigIntegerTypeAdapter:
    com.google.gson.JsonElement serialize(java.math.BigInteger,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.math.BigInteger deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$BooleanTypeAdapter -> com.google.gson.DefaultTypeAdapters$BooleanTypeAdapter:
    com.google.gson.JsonElement serialize(java.lang.Boolean,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Boolean deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$ByteTypeAdapter -> com.google.gson.DefaultTypeAdapters$ByteTypeAdapter:
    com.google.gson.JsonElement serialize(java.lang.Byte,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Byte deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$CharacterTypeAdapter -> com.google.gson.DefaultTypeAdapters$CharacterTypeAdapter:
    com.google.gson.JsonElement serialize(java.lang.Character,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Character deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$CollectionTypeAdapter -> com.google.gson.DefaultTypeAdapters$CollectionTypeAdapter:
    com.google.gson.JsonElement serialize(java.util.Collection,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.Collection deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.util.Collection constructCollectionType(java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> constructCollectionType
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$DefaultConstructorCreator -> com.google.gson.DefaultTypeAdapters$DefaultConstructorCreator:
    java.lang.Class defaultInstance -> defaultInstance
    com.google.gson.DefaultConstructorAllocator allocator -> allocator
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
    java.lang.String toString() -> toString
com.google.gson.DefaultTypeAdapters$DefaultDateTypeAdapter -> com.google.gson.DefaultTypeAdapters$DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> deserializeToDate
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$DefaultInetAddressAdapter -> com.google.gson.DefaultTypeAdapters$DefaultInetAddressAdapter:
    java.net.InetAddress deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    com.google.gson.JsonElement serialize(java.net.InetAddress,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.DefaultTypeAdapters$DefaultJavaSqlDateTypeAdapter -> com.google.gson.DefaultTypeAdapters$DefaultJavaSqlDateTypeAdapter:
    java.text.DateFormat format -> format
    com.google.gson.JsonElement serialize(java.sql.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.sql.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$DefaultTimeTypeAdapter -> com.google.gson.DefaultTypeAdapters$DefaultTimeTypeAdapter:
    java.text.DateFormat format -> format
    com.google.gson.JsonElement serialize(java.sql.Time,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.sql.Time deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$DefaultTimestampDeserializer -> com.google.gson.DefaultTypeAdapters$DefaultTimestampDeserializer:
    java.sql.Timestamp deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$DoubleDeserializer -> com.google.gson.DefaultTypeAdapters$DoubleDeserializer:
    java.lang.Double deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$DoubleSerializer -> com.google.gson.DefaultTypeAdapters$DoubleSerializer:
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    com.google.gson.JsonElement serialize(java.lang.Double,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.DefaultTypeAdapters$EnumTypeAdapter -> com.google.gson.DefaultTypeAdapters$EnumTypeAdapter:
    com.google.gson.JsonElement serialize(java.lang.Enum,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Enum deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$FloatDeserializer -> com.google.gson.DefaultTypeAdapters$FloatDeserializer:
    java.lang.Float deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$FloatSerializer -> com.google.gson.DefaultTypeAdapters$FloatSerializer:
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    com.google.gson.JsonElement serialize(java.lang.Float,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.DefaultTypeAdapters$GregorianCalendarTypeAdapter -> com.google.gson.DefaultTypeAdapters$GregorianCalendarTypeAdapter:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    com.google.gson.JsonElement serialize(java.util.GregorianCalendar,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.GregorianCalendar deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$IntegerTypeAdapter -> com.google.gson.DefaultTypeAdapters$IntegerTypeAdapter:
    com.google.gson.JsonElement serialize(java.lang.Integer,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Integer deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$LocaleTypeAdapter -> com.google.gson.DefaultTypeAdapters$LocaleTypeAdapter:
    com.google.gson.JsonElement serialize(java.util.Locale,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.Locale deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$LongDeserializer -> com.google.gson.DefaultTypeAdapters$LongDeserializer:
    java.lang.Long deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$LongSerializer -> com.google.gson.DefaultTypeAdapters$LongSerializer:
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.JsonElement serialize(java.lang.Long,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.DefaultTypeAdapters$NumberTypeAdapter -> com.google.gson.DefaultTypeAdapters$NumberTypeAdapter:
    com.google.gson.JsonElement serialize(java.lang.Number,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Number deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$ShortTypeAdapter -> com.google.gson.DefaultTypeAdapters$ShortTypeAdapter:
    com.google.gson.JsonElement serialize(java.lang.Short,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Short deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$StringBufferTypeAdapter -> com.google.gson.DefaultTypeAdapters$StringBufferTypeAdapter:
    com.google.gson.JsonElement serialize(java.lang.StringBuffer,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.StringBuffer deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$StringBuilderTypeAdapter -> com.google.gson.DefaultTypeAdapters$StringBuilderTypeAdapter:
    com.google.gson.JsonElement serialize(java.lang.StringBuilder,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.StringBuilder deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$StringTypeAdapter -> com.google.gson.DefaultTypeAdapters$StringTypeAdapter:
    com.google.gson.JsonElement serialize(java.lang.String,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.String deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$UriTypeAdapter -> com.google.gson.DefaultTypeAdapters$UriTypeAdapter:
    com.google.gson.JsonElement serialize(java.net.URI,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.net.URI deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$UrlTypeAdapter -> com.google.gson.DefaultTypeAdapters$UrlTypeAdapter:
    com.google.gson.JsonElement serialize(java.net.URL,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.net.URL deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DefaultTypeAdapters$UuidTypeAdapter -> com.google.gson.DefaultTypeAdapters$UuidTypeAdapter:
    com.google.gson.JsonElement serialize(java.util.UUID,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.UUID deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.DelegatingJsonElementVisitor -> com.google.gson.DelegatingJsonElementVisitor:
    com.google.gson.JsonElementVisitor delegate -> delegate
    void endArray(com.google.gson.JsonArray) -> endArray
    void endObject(com.google.gson.JsonObject) -> endObject
    void startArray(com.google.gson.JsonArray) -> startArray
    void startObject(com.google.gson.JsonObject) -> startObject
    void visitArrayMember(com.google.gson.JsonArray,com.google.gson.JsonPrimitive,boolean) -> visitArrayMember
    void visitArrayMember(com.google.gson.JsonArray,com.google.gson.JsonArray,boolean) -> visitArrayMember
    void visitArrayMember(com.google.gson.JsonArray,com.google.gson.JsonObject,boolean) -> visitArrayMember
    void visitObjectMember(com.google.gson.JsonObject,java.lang.String,com.google.gson.JsonPrimitive,boolean) -> visitObjectMember
    void visitObjectMember(com.google.gson.JsonObject,java.lang.String,com.google.gson.JsonArray,boolean) -> visitObjectMember
    void visitObjectMember(com.google.gson.JsonObject,java.lang.String,com.google.gson.JsonObject,boolean) -> visitObjectMember
    void visitNullObjectMember(com.google.gson.JsonObject,java.lang.String,boolean) -> visitNullObjectMember
    void visitPrimitive(com.google.gson.JsonPrimitive) -> visitPrimitive
    void visitNull() -> visitNull
    void visitNullArrayMember(com.google.gson.JsonArray,boolean) -> visitNullArrayMember
com.google.gson.DisjunctionExclusionStrategy -> com.google.gson.DisjunctionExclusionStrategy:
    java.util.Collection strategies -> strategies
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.Escaper -> com.google.gson.Escaper:
    char[] HEX_CHARS -> HEX_CHARS
    java.util.Set JS_ESCAPE_CHARS -> JS_ESCAPE_CHARS
    java.util.Set HTML_ESCAPE_CHARS -> HTML_ESCAPE_CHARS
    boolean escapeHtmlCharacters -> escapeHtmlCharacters
    java.lang.String escapeJsonString(java.lang.CharSequence) -> escapeJsonString
    void escapeJsonString(java.lang.CharSequence,java.lang.StringBuilder) -> escapeJsonString
    boolean mustEscapeCharInJsString(int) -> mustEscapeCharInJsString
    boolean isControlCharacter(int) -> isControlCharacter
    void appendHexJavaScriptRepresentation(int,java.lang.Appendable) -> appendHexJavaScriptRepresentation
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.ExposeAnnotationDeserializationExclusionStrategy -> com.google.gson.ExposeAnnotationDeserializationExclusionStrategy:
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
com.google.gson.ExposeAnnotationSerializationExclusionStrategy -> com.google.gson.ExposeAnnotationSerializationExclusionStrategy:
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.String MAX_CACHE_PROPERTY_NAME -> MAX_CACHE_PROPERTY_NAME
    com.google.gson.Cache ANNOTATION_CACHE -> ANNOTATION_CACHE
    java.lang.Class declaringClazz -> declaringClazz
    java.lang.reflect.Field field -> field
    java.lang.Class declaredType -> declaredType
    boolean isSynthetic -> isSynthetic
    int modifiers -> modifiers
    java.lang.String name -> name
    java.lang.reflect.Type resolvedType -> resolvedType
    java.lang.reflect.Type genericType -> genericType
    java.util.Collection annotations -> annotations
    int getMaxCacheSize() -> getMaxCacheSize
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    java.lang.Class getDeclaredClass() -> getDeclaredClass
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.util.Collection getAnnotations() -> getAnnotations
    boolean hasModifier(int) -> hasModifier
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
    boolean isSynthetic() -> isSynthetic
    java.lang.reflect.Field getFieldObject() -> getFieldObject
    java.lang.reflect.Type getResolvedType() -> getResolvedType
    java.lang.annotation.Annotation getAnnotationFromArray(java.util.Collection,java.lang.Class) -> getAnnotationFromArray
    java.lang.reflect.Type getTypeInfoForField(java.lang.reflect.Field,java.lang.reflect.Type) -> getTypeInfoForField
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingStrategy2 namingPolicy -> namingPolicy
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.FieldNamingStrategy2 getFieldNamingPolicy() -> getFieldNamingPolicy
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy2 -> com.google.gson.FieldNamingStrategy2:
    java.lang.String translateName(com.google.gson.FieldAttributes) -> translateName
com.google.gson.FieldNamingStrategy2Adapter -> com.google.gson.FieldNamingStrategy2Adapter:
    com.google.gson.FieldNamingStrategy adaptee -> adaptee
    java.lang.String translateName(com.google.gson.FieldAttributes) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    com.google.gson.AnonymousAndLocalClassExclusionStrategy DEFAULT_ANON_LOCAL_CLASS_EXCLUSION_STRATEGY -> DEFAULT_ANON_LOCAL_CLASS_EXCLUSION_STRATEGY
    com.google.gson.SyntheticFieldExclusionStrategy DEFAULT_SYNTHETIC_FIELD_EXCLUSION_STRATEGY -> DEFAULT_SYNTHETIC_FIELD_EXCLUSION_STRATEGY
    com.google.gson.ModifierBasedExclusionStrategy DEFAULT_MODIFIER_BASED_EXCLUSION_STRATEGY -> DEFAULT_MODIFIER_BASED_EXCLUSION_STRATEGY
    com.google.gson.FieldNamingStrategy2 DEFAULT_NAMING_POLICY -> DEFAULT_NAMING_POLICY
    com.google.gson.ExclusionStrategy DEFAULT_EXCLUSION_STRATEGY -> DEFAULT_EXCLUSION_STRATEGY
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    com.google.gson.ExclusionStrategy deserializationExclusionStrategy -> deserializationExclusionStrategy
    com.google.gson.ExclusionStrategy serializationExclusionStrategy -> serializationExclusionStrategy
    com.google.gson.FieldNamingStrategy2 fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.MappedObjectConstructor objectConstructor -> objectConstructor
    com.google.gson.ParameterizedTypeHandlerMap serializers -> serializers
    com.google.gson.ParameterizedTypeHandlerMap deserializers -> deserializers
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    com.google.gson.ExclusionStrategy createExclusionStrategy() -> createExclusionStrategy
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    java.lang.String toString() -> toString
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.MapAsArrayTypeAdapter COMPLEX_KEY_MAP_TYPE_ADAPTER -> COMPLEX_KEY_MAP_TYPE_ADAPTER
    com.google.gson.InnerClassExclusionStrategy innerClassExclusionStrategy -> innerClassExclusionStrategy
    com.google.gson.ExposeAnnotationDeserializationExclusionStrategy exposeAnnotationDeserializationExclusionStrategy -> exposeAnnotationDeserializationExclusionStrategy
    com.google.gson.ExposeAnnotationSerializationExclusionStrategy exposeAnnotationSerializationExclusionStrategy -> exposeAnnotationSerializationExclusionStrategy
    java.util.Set serializeExclusionStrategies -> serializeExclusionStrategies
    java.util.Set deserializeExclusionStrategies -> deserializeExclusionStrategies
    double ignoreVersionsAfter -> ignoreVersionsAfter
    com.google.gson.ModifierBasedExclusionStrategy modifierBasedExclusionStrategy -> modifierBasedExclusionStrategy
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean excludeFieldsWithoutExposeAnnotation -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy2 fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.ParameterizedTypeHandlerMap instanceCreators -> instanceCreators
    com.google.gson.ParameterizedTypeHandlerMap serializers -> serializers
    com.google.gson.ParameterizedTypeHandlerMap deserializers -> deserializers
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    com.google.gson.GsonBuilder setVersion(double) -> setVersion
    com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy2) -> setFieldNamingStrategy
    com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    com.google.gson.GsonBuilder registerInstanceCreator(java.lang.reflect.Type,com.google.gson.InstanceCreator) -> registerInstanceCreator
    com.google.gson.GsonBuilder registerSerializer(java.lang.reflect.Type,com.google.gson.JsonSerializer) -> registerSerializer
    com.google.gson.GsonBuilder registerDeserializer(java.lang.reflect.Type,com.google.gson.JsonDeserializer) -> registerDeserializer
    com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    com.google.gson.GsonBuilder registerInstanceCreatorForTypeHierarchy(java.lang.Class,com.google.gson.InstanceCreator) -> registerInstanceCreatorForTypeHierarchy
    com.google.gson.GsonBuilder registerSerializerForTypeHierarchy(java.lang.Class,com.google.gson.JsonSerializer) -> registerSerializerForTypeHierarchy
    com.google.gson.GsonBuilder registerDeserializerForTypeHierarchy(java.lang.Class,com.google.gson.JsonDeserializer) -> registerDeserializerForTypeHierarchy
    com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    com.google.gson.Gson create() -> create
    void addTypeAdaptersForDate(java.lang.String,int,int,com.google.gson.ParameterizedTypeHandlerMap,com.google.gson.ParameterizedTypeHandlerMap) -> addTypeAdaptersForDate
    void registerIfAbsent(java.lang.Class,com.google.gson.ParameterizedTypeHandlerMap,java.lang.Object) -> registerIfAbsent
com.google.gson.InnerClassExclusionStrategy -> com.google.gson.InnerClassExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isStatic(java.lang.Class) -> isStatic
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JavaFieldNamingPolicy -> com.google.gson.JavaFieldNamingPolicy:
    java.lang.String translateName(java.lang.String,java.lang.reflect.Type,java.util.Collection) -> translateName
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    void add(com.google.gson.JsonElement) -> add
    void addAll(com.google.gson.JsonArray) -> addAll
    void reverse() -> reverse
    int size() -> size
    java.util.Iterator iterator() -> iterator
    com.google.gson.JsonElement get(int) -> get
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    short getAsShort() -> getAsShort
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Object getAsObject() -> getAsObject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void toString(java.lang.Appendable,com.google.gson.Escaper) -> toString
com.google.gson.JsonArrayDeserializationVisitor -> com.google.gson.JsonArrayDeserializationVisitor:
    java.lang.Object constructTarget() -> constructTarget
    void visitArray(java.lang.Object,java.lang.reflect.Type) -> visitArray
    void startVisitingObject(java.lang.Object) -> startVisitingObject
    void visitArrayField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> visitArrayField
    void visitObjectField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> visitObjectField
    boolean visitFieldUsingCustomHandler(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> visitFieldUsingCustomHandler
    void visitPrimitive(java.lang.Object) -> visitPrimitive
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializationContextDefault -> com.google.gson.JsonDeserializationContextDefault:
    com.google.gson.ObjectNavigator objectNavigator -> objectNavigator
    com.google.gson.FieldNamingStrategy2 fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.ParameterizedTypeHandlerMap deserializers -> deserializers
    com.google.gson.MappedObjectConstructor objectConstructor -> objectConstructor
    com.google.gson.ObjectConstructor getObjectConstructor() -> getObjectConstructor
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
    java.lang.Object fromJsonArray(java.lang.reflect.Type,com.google.gson.JsonArray,com.google.gson.JsonDeserializationContext) -> fromJsonArray
    java.lang.Object fromJsonObject(java.lang.reflect.Type,com.google.gson.JsonObject,com.google.gson.JsonDeserializationContext) -> fromJsonObject
    java.lang.Object fromJsonPrimitive(java.lang.reflect.Type,com.google.gson.JsonPrimitive,com.google.gson.JsonDeserializationContext) -> fromJsonPrimitive
com.google.gson.JsonDeserializationVisitor -> com.google.gson.JsonDeserializationVisitor:
    com.google.gson.ObjectNavigator objectNavigator -> objectNavigator
    com.google.gson.FieldNamingStrategy2 fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.ObjectConstructor objectConstructor -> objectConstructor
    com.google.gson.ParameterizedTypeHandlerMap deserializers -> deserializers
    java.lang.Object target -> target
    com.google.gson.JsonElement json -> json
    java.lang.reflect.Type targetType -> targetType
    com.google.gson.JsonDeserializationContext context -> context
    boolean constructed -> constructed
    java.lang.Object getTarget() -> getTarget
    java.lang.Object constructTarget() -> constructTarget
    void start(com.google.gson.ObjectTypePair) -> start
    void end(com.google.gson.ObjectTypePair) -> end
    boolean visitUsingCustomHandler(com.google.gson.ObjectTypePair) -> visitUsingCustomHandler
    java.lang.Object invokeCustomDeserializer(com.google.gson.JsonElement,com.google.gson.Pair) -> invokeCustomDeserializer
    java.lang.Object visitChildAsObject(java.lang.reflect.Type,com.google.gson.JsonElement) -> visitChildAsObject
    java.lang.Object visitChildAsArray(java.lang.reflect.Type,com.google.gson.JsonArray) -> visitChildAsArray
    java.lang.Object visitChild(java.lang.reflect.Type,com.google.gson.JsonDeserializationVisitor) -> visitChild
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonDeserializerExceptionWrapper -> com.google.gson.JsonDeserializerExceptionWrapper:
    com.google.gson.JsonDeserializer delegate -> delegate
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    com.google.gson.Escaper BASIC_ESCAPER -> BASIC_ESCAPER
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    boolean isJsonNull() -> isJsonNull
    com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    short getAsShort() -> getAsShort
    java.lang.Object getAsObject() -> getAsObject
    java.lang.String toString() -> toString
    void toString(java.lang.Appendable,com.google.gson.Escaper) -> toString
com.google.gson.JsonElementVisitor -> com.google.gson.JsonElementVisitor:
    void visitPrimitive(com.google.gson.JsonPrimitive) -> visitPrimitive
    void visitNull() -> visitNull
    void startArray(com.google.gson.JsonArray) -> startArray
    void visitArrayMember(com.google.gson.JsonArray,com.google.gson.JsonPrimitive,boolean) -> visitArrayMember
    void visitArrayMember(com.google.gson.JsonArray,com.google.gson.JsonArray,boolean) -> visitArrayMember
    void visitArrayMember(com.google.gson.JsonArray,com.google.gson.JsonObject,boolean) -> visitArrayMember
    void visitNullArrayMember(com.google.gson.JsonArray,boolean) -> visitNullArrayMember
    void endArray(com.google.gson.JsonArray) -> endArray
    void startObject(com.google.gson.JsonObject) -> startObject
    void visitObjectMember(com.google.gson.JsonObject,java.lang.String,com.google.gson.JsonPrimitive,boolean) -> visitObjectMember
    void visitObjectMember(com.google.gson.JsonObject,java.lang.String,com.google.gson.JsonArray,boolean) -> visitObjectMember
    void visitObjectMember(com.google.gson.JsonObject,java.lang.String,com.google.gson.JsonObject,boolean) -> visitObjectMember
    void visitNullObjectMember(com.google.gson.JsonObject,java.lang.String,boolean) -> visitNullObjectMember
    void endObject(com.google.gson.JsonObject) -> endObject
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    void toString(java.lang.Appendable,com.google.gson.Escaper) -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.google.gson.JsonNull createJsonNull() -> createJsonNull
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    java.util.Map members -> members
    void add(java.lang.String,com.google.gson.JsonElement) -> add
    com.google.gson.JsonElement remove(java.lang.String) -> remove
    void addProperty(java.lang.String,java.lang.String) -> addProperty
    void addProperty(java.lang.String,java.lang.Number) -> addProperty
    void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    void addProperty(java.lang.String,java.lang.Character) -> addProperty
    com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    java.util.Set entrySet() -> entrySet
    boolean has(java.lang.String) -> has
    com.google.gson.JsonElement get(java.lang.String) -> get
    com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void toString(java.lang.Appendable,com.google.gson.Escaper) -> toString
com.google.gson.JsonObjectDeserializationVisitor -> com.google.gson.JsonObjectDeserializationVisitor:
    java.lang.Object constructTarget() -> constructTarget
    void startVisitingObject(java.lang.Object) -> startVisitingObject
    void visitArray(java.lang.Object,java.lang.reflect.Type) -> visitArray
    void visitObjectField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> visitObjectField
    void visitArrayField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> visitArrayField
    java.lang.String getFieldName(com.google.gson.FieldAttributes) -> getFieldName
    boolean visitFieldUsingCustomHandler(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> visitFieldUsingCustomHandler
    void visitPrimitive(java.lang.Object) -> visitPrimitive
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    com.google.gson.JsonElement parse(java.lang.String) -> parse
    com.google.gson.JsonElement parse(java.io.Reader) -> parse
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.math.BigInteger INTEGER_MAX -> INTEGER_MAX
    java.math.BigInteger LONG_MAX -> LONG_MAX
    java.lang.Object value -> value
    void setValue(java.lang.Object) -> setValue
    boolean isBoolean() -> isBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    boolean getAsBoolean() -> getAsBoolean
    boolean isNumber() -> isNumber
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.Number stringToNumber(java.lang.String) -> stringToNumber
    boolean isString() -> isString
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    short getAsShort() -> getAsShort
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.lang.Object getAsObject() -> getAsObject
    void toString(java.lang.Appendable,com.google.gson.Escaper) -> toString
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    boolean isFloatingPoint(com.google.gson.JsonPrimitive) -> isFloatingPoint
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializationContextDefault -> com.google.gson.JsonSerializationContextDefault:
    com.google.gson.ObjectNavigator objectNavigator -> objectNavigator
    com.google.gson.FieldNamingStrategy2 fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.ParameterizedTypeHandlerMap serializers -> serializers
    boolean serializeNulls -> serializeNulls
    com.google.gson.MemoryRefStack ancestors -> ancestors
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,boolean) -> serialize
com.google.gson.JsonSerializationVisitor -> com.google.gson.JsonSerializationVisitor:
    com.google.gson.ObjectNavigator objectNavigator -> objectNavigator
    com.google.gson.FieldNamingStrategy2 fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.ParameterizedTypeHandlerMap serializers -> serializers
    boolean serializeNulls -> serializeNulls
    com.google.gson.JsonSerializationContext context -> context
    com.google.gson.MemoryRefStack ancestors -> ancestors
    com.google.gson.JsonElement root -> root
    java.lang.Object getTarget() -> getTarget
    void start(com.google.gson.ObjectTypePair) -> start
    void end(com.google.gson.ObjectTypePair) -> end
    void startVisitingObject(java.lang.Object) -> startVisitingObject
    void visitArray(java.lang.Object,java.lang.reflect.Type) -> visitArray
    void visitArrayField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> visitArrayField
    void visitObjectField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> visitObjectField
    void visitPrimitive(java.lang.Object) -> visitPrimitive
    void addAsChildOfObject(com.google.gson.FieldAttributes,com.google.gson.ObjectTypePair) -> addAsChildOfObject
    void addChildAsElement(com.google.gson.FieldAttributes,com.google.gson.JsonElement) -> addChildAsElement
    void addAsArrayElement(com.google.gson.ObjectTypePair) -> addAsArrayElement
    com.google.gson.JsonElement getJsonElementForChild(com.google.gson.ObjectTypePair) -> getJsonElementForChild
    boolean visitUsingCustomHandler(com.google.gson.ObjectTypePair) -> visitUsingCustomHandler
    com.google.gson.JsonElement findAndInvokeCustomSerializer(com.google.gson.ObjectTypePair) -> findAndInvokeCustomSerializer
    boolean visitFieldUsingCustomHandler(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> visitFieldUsingCustomHandler
    void assignToRoot(com.google.gson.JsonElement) -> assignToRoot
    boolean isFieldNull(com.google.gson.FieldAttributes,java.lang.Object) -> isFieldNull
    java.lang.Object getFieldValue(com.google.gson.FieldAttributes,java.lang.Object) -> getFieldValue
    com.google.gson.JsonElement getJsonElement() -> getJsonElement
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    com.google.gson.JsonElement next() -> next
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonTreeNavigator -> com.google.gson.JsonTreeNavigator:
    com.google.gson.JsonElementVisitor visitor -> visitor
    boolean visitNulls -> visitNulls
    void navigate(com.google.gson.JsonElement) -> navigate
    boolean visitChild(com.google.gson.JsonObject,java.lang.String,com.google.gson.JsonElement,boolean) -> visitChild
    void visitChild(com.google.gson.JsonArray,com.google.gson.JsonElement,boolean) -> visitChild
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy$Strategy strategy -> strategy
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
com.google.gson.LongSerializationPolicy$DefaultStrategy -> com.google.gson.LongSerializationPolicy$DefaultStrategy:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$Strategy -> com.google.gson.LongSerializationPolicy$Strategy:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$StringStrategy -> com.google.gson.LongSerializationPolicy$StringStrategy:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LowerCamelCaseSeparatorNamingPolicy -> com.google.gson.LowerCamelCaseSeparatorNamingPolicy:
com.google.gson.LowerCaseNamingPolicy -> com.google.gson.LowerCaseNamingPolicy:
    java.lang.String translateName(java.lang.String,java.lang.reflect.Type,java.util.Collection) -> translateName
com.google.gson.LruCache -> com.google.gson.LruCache:
    long serialVersionUID -> serialVersionUID
    int maxCapacity -> maxCapacity
    void addElement(java.lang.Object,java.lang.Object) -> addElement
    java.lang.Object getElement(java.lang.Object) -> getElement
    java.lang.Object removeElement(java.lang.Object) -> removeElement
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.google.gson.MapAsArrayTypeAdapter -> com.google.gson.MapAsArrayTypeAdapter:
    java.util.Map deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    com.google.gson.JsonElement serialize(java.util.Map,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.reflect.Type[] typeToTypeArguments(java.lang.reflect.Type) -> typeToTypeArguments
    void checkSize(java.lang.Object,int,java.lang.Object,int) -> checkSize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.MapTypeAdapter -> com.google.gson.MapTypeAdapter:
    com.google.gson.JsonElement serialize(java.util.Map,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.Map deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.MappedObjectConstructor -> com.google.gson.MappedObjectConstructor:
    com.google.gson.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    com.google.gson.DefaultConstructorAllocator defaultConstructorAllocator -> defaultConstructorAllocator
    com.google.gson.ParameterizedTypeHandlerMap instanceCreatorMap -> instanceCreatorMap
    java.lang.Object construct(java.lang.reflect.Type) -> construct
    java.lang.Object constructArray(java.lang.reflect.Type,int) -> constructArray
    java.lang.Object constructWithAllocators(java.lang.reflect.Type) -> constructWithAllocators
    java.lang.String toString() -> toString
com.google.gson.MemoryRefStack -> com.google.gson.MemoryRefStack:
    java.util.Stack stack -> stack
    com.google.gson.ObjectTypePair push(com.google.gson.ObjectTypePair) -> push
    com.google.gson.ObjectTypePair pop() -> pop
    boolean isEmpty() -> isEmpty
    com.google.gson.ObjectTypePair peek() -> peek
    boolean contains(com.google.gson.ObjectTypePair) -> contains
com.google.gson.ModifierBasedExclusionStrategy -> com.google.gson.ModifierBasedExclusionStrategy:
    java.util.Collection modifiers -> modifiers
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.ModifyFirstLetterNamingPolicy -> com.google.gson.ModifyFirstLetterNamingPolicy:
    com.google.gson.ModifyFirstLetterNamingPolicy$LetterModifier letterModifier -> letterModifier
    java.lang.String translateName(java.lang.String,java.lang.reflect.Type,java.util.Collection) -> translateName
    java.lang.String modifyString(char,java.lang.String,int) -> modifyString
com.google.gson.ModifyFirstLetterNamingPolicy$LetterModifier -> com.google.gson.ModifyFirstLetterNamingPolicy$LetterModifier:
    com.google.gson.ModifyFirstLetterNamingPolicy$LetterModifier UPPER -> UPPER
    com.google.gson.ModifyFirstLetterNamingPolicy$LetterModifier LOWER -> LOWER
    com.google.gson.ModifyFirstLetterNamingPolicy$LetterModifier[] $VALUES -> $VALUES
    com.google.gson.ModifyFirstLetterNamingPolicy$LetterModifier[] values() -> values
    com.google.gson.ModifyFirstLetterNamingPolicy$LetterModifier valueOf(java.lang.String) -> valueOf
com.google.gson.NullExclusionStrategy -> com.google.gson.NullExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.ObjectConstructor -> com.google.gson.ObjectConstructor:
    java.lang.Object construct(java.lang.reflect.Type) -> construct
    java.lang.Object constructArray(java.lang.reflect.Type,int) -> constructArray
com.google.gson.ObjectNavigator -> com.google.gson.ObjectNavigator:
    com.google.gson.ExclusionStrategy exclusionStrategy -> exclusionStrategy
    com.google.gson.ReflectingFieldNavigator reflectingFieldNavigator -> reflectingFieldNavigator
    void accept(com.google.gson.ObjectTypePair,com.google.gson.ObjectNavigator$Visitor) -> accept
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
com.google.gson.ObjectNavigator$Visitor -> com.google.gson.ObjectNavigator$Visitor:
    void start(com.google.gson.ObjectTypePair) -> start
    void end(com.google.gson.ObjectTypePair) -> end
    void startVisitingObject(java.lang.Object) -> startVisitingObject
    void visitArray(java.lang.Object,java.lang.reflect.Type) -> visitArray
    void visitObjectField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> visitObjectField
    void visitArrayField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> visitArrayField
    boolean visitUsingCustomHandler(com.google.gson.ObjectTypePair) -> visitUsingCustomHandler
    boolean visitFieldUsingCustomHandler(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> visitFieldUsingCustomHandler
    void visitPrimitive(java.lang.Object) -> visitPrimitive
    java.lang.Object getTarget() -> getTarget
com.google.gson.ObjectTypePair -> com.google.gson.ObjectTypePair:
    java.lang.Object obj -> obj
    java.lang.reflect.Type type -> type
    boolean preserveType -> preserveType
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
    java.lang.reflect.Type getType() -> getType
    java.lang.String toString() -> toString
    com.google.gson.Pair getMatchingHandler(com.google.gson.ParameterizedTypeHandlerMap) -> getMatchingHandler
    com.google.gson.ObjectTypePair toMoreSpecificType() -> toMoreSpecificType
    java.lang.reflect.Type getMoreSpecificType() -> getMoreSpecificType
    java.lang.reflect.Type getActualTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Class) -> getActualTypeIfMoreSpecific
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isPreserveType() -> isPreserveType
com.google.gson.Pair -> com.google.gson.Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    java.lang.String toString() -> toString
com.google.gson.ParameterizedTypeHandlerMap -> com.google.gson.ParameterizedTypeHandlerMap:
    java.util.logging.Logger logger -> logger
    java.util.Map map -> map
    java.util.List typeHierarchyList -> typeHierarchyList
    boolean modifiable -> modifiable
    void registerForTypeHierarchy(java.lang.Class,java.lang.Object) -> registerForTypeHierarchy
    void registerForTypeHierarchy(com.google.gson.Pair) -> registerForTypeHierarchy
    int getIndexOfAnOverriddenHandler(java.lang.Class) -> getIndexOfAnOverriddenHandler
    void register(java.lang.reflect.Type,java.lang.Object) -> register
    void registerIfAbsent(com.google.gson.ParameterizedTypeHandlerMap) -> registerIfAbsent
    void register(com.google.gson.ParameterizedTypeHandlerMap) -> register
    void registerIfAbsent(java.lang.reflect.Type,java.lang.Object) -> registerIfAbsent
    void makeUnmodifiable() -> makeUnmodifiable
    java.lang.Object getHandlerFor(java.lang.reflect.Type) -> getHandlerFor
    java.lang.Object getHandlerForTypeHierarchy(java.lang.Class) -> getHandlerForTypeHierarchy
    boolean hasSpecificHandlerFor(java.lang.reflect.Type) -> hasSpecificHandlerFor
    int getIndexOfSpecificHandlerForTypeHierarchy(java.lang.Class) -> getIndexOfSpecificHandlerForTypeHierarchy
    com.google.gson.ParameterizedTypeHandlerMap copyOf() -> copyOf
    java.lang.String toString() -> toString
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
com.google.gson.Primitives -> com.google.gson.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isWrapperType(java.lang.Class) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.gson.RecursiveFieldNamingPolicy -> com.google.gson.RecursiveFieldNamingPolicy:
    java.lang.String translateName(com.google.gson.FieldAttributes) -> translateName
    java.lang.String translateName(java.lang.String,java.lang.reflect.Type,java.util.Collection) -> translateName
com.google.gson.ReflectingFieldNavigator -> com.google.gson.ReflectingFieldNavigator:
    com.google.gson.Cache fieldsCache -> fieldsCache
    com.google.gson.ExclusionStrategy exclusionStrategy -> exclusionStrategy
    void visitFieldsReflectively(com.google.gson.ObjectTypePair,com.google.gson.ObjectNavigator$Visitor) -> visitFieldsReflectively
    java.util.List getAllFields(java.lang.reflect.Type,java.lang.reflect.Type) -> getAllFields
    java.util.List getInheritanceHierarchy(java.lang.reflect.Type) -> getInheritanceHierarchy
com.google.gson.SerializedNameAnnotationInterceptingNamingPolicy -> com.google.gson.SerializedNameAnnotationInterceptingNamingPolicy:
    com.google.gson.FieldNamingStrategy2 delegate -> delegate
    java.lang.String translateName(com.google.gson.FieldAttributes) -> translateName
com.google.gson.Streams -> com.google.gson.Streams:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    com.google.gson.JsonElement parseRecursive(com.google.gson.stream.JsonReader) -> parseRecursive
    void write(com.google.gson.JsonElement,boolean,com.google.gson.stream.JsonWriter) -> write
    java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.Streams$1 -> com.google.gson.Streams$1:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.Streams$AppendableWriter -> com.google.gson.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.google.gson.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.Streams$AppendableWriter$CurrentWrite -> com.google.gson.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.SyntheticFieldExclusionStrategy -> com.google.gson.SyntheticFieldExclusionStrategy:
    boolean skipSyntheticFields -> skipSyntheticFields
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
com.google.gson.UnsafeAllocator -> com.google.gson.UnsafeAllocator:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.google.gson.UnsafeAllocator create() -> create
com.google.gson.UnsafeAllocator$1 -> com.google.gson.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.UnsafeAllocator$2 -> com.google.gson.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.UnsafeAllocator$3 -> com.google.gson.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.UnsafeAllocator$4 -> com.google.gson.UnsafeAllocator$4:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.UpperCamelCaseSeparatorNamingPolicy -> com.google.gson.UpperCamelCaseSeparatorNamingPolicy:
com.google.gson.UpperCaseNamingPolicy -> com.google.gson.UpperCaseNamingPolicy:
    java.lang.String translateName(java.lang.String,java.lang.reflect.Type,java.util.Collection) -> translateName
com.google.gson.VersionConstants -> com.google.gson.VersionConstants:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
com.google.gson.VersionExclusionStrategy -> com.google.gson.VersionExclusionStrategy:
    double version -> version
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void checkArgument(boolean) -> checkArgument
    void checkState(boolean) -> checkState
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    boolean isArray(java.lang.reflect.Type) -> isArray
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    void access$000(java.lang.reflect.Type) -> access$000
    int access$100(java.lang.Object) -> access$100
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    java.util.List stack -> stack
    boolean hasToken -> hasToken
    com.google.gson.stream.JsonToken token -> token
    java.lang.String name -> name
    java.lang.String value -> value
    boolean skipping -> skipping
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    void expect(com.google.gson.stream.JsonToken) -> expect
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    com.google.gson.stream.JsonToken quickPeek() -> quickPeek
    void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    com.google.gson.stream.JsonToken advance() -> advance
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    com.google.gson.stream.JsonScope peekStack() -> peekStack
    com.google.gson.stream.JsonScope pop() -> pop
    void push(com.google.gson.stream.JsonScope) -> push
    void replaceTop(com.google.gson.stream.JsonScope) -> replaceTop
    com.google.gson.stream.JsonToken nextInArray(boolean) -> nextInArray
    com.google.gson.stream.JsonToken nextInObject(boolean) -> nextInObject
    com.google.gson.stream.JsonToken objectValue() -> objectValue
    com.google.gson.stream.JsonToken nextValue() -> nextValue
    boolean fillBuffer(int) -> fillBuffer
    int nextNonWhitespace() -> nextNonWhitespace
    void checkLenient() -> checkLenient
    void skipToEndOfLine() -> skipToEndOfLine
    boolean skipTo(java.lang.String) -> skipTo
    java.lang.String nextString(char) -> nextString
    java.lang.String nextLiteral() -> nextLiteral
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> readEscapeCharacter
    com.google.gson.stream.JsonToken readLiteral() -> readLiteral
    void decodeLiteral() -> decodeLiteral
    java.io.IOException syntaxError(java.lang.String) -> syntaxError
    java.lang.CharSequence getSnippet() -> getSnippet
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> $SwitchMap$com$google$gson$stream$JsonScope
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    com.google.gson.stream.JsonScope EMPTY_ARRAY -> EMPTY_ARRAY
    com.google.gson.stream.JsonScope NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    com.google.gson.stream.JsonScope EMPTY_OBJECT -> EMPTY_OBJECT
    com.google.gson.stream.JsonScope DANGLING_NAME -> DANGLING_NAME
    com.google.gson.stream.JsonScope NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    com.google.gson.stream.JsonScope EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    com.google.gson.stream.JsonScope NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    com.google.gson.stream.JsonScope CLOSED -> CLOSED
    com.google.gson.stream.JsonScope[] $VALUES -> $VALUES
    com.google.gson.stream.JsonScope[] values() -> values
    com.google.gson.stream.JsonScope valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.io.Writer out -> out
    java.util.List stack -> stack
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    void setIndent(java.lang.String) -> setIndent
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void setHtmlSafe(boolean) -> setHtmlSafe
    boolean isHtmlSafe() -> isHtmlSafe
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter open(com.google.gson.stream.JsonScope,java.lang.String) -> open
    com.google.gson.stream.JsonWriter close(com.google.gson.stream.JsonScope,com.google.gson.stream.JsonScope,java.lang.String) -> close
    com.google.gson.stream.JsonScope peek() -> peek
    void replaceTop(com.google.gson.stream.JsonScope) -> replaceTop
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> string
    void newline() -> newline
    void beforeName() -> beforeName
    void beforeValue(boolean) -> beforeValue
com.google.gson.stream.JsonWriter$1 -> com.google.gson.stream.JsonWriter$1:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> $SwitchMap$com$google$gson$stream$JsonScope
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.google.zxing.BarcodeFormat -> com.google.zxing.BarcodeFormat:
    com.google.zxing.BarcodeFormat AZTEC -> AZTEC
    com.google.zxing.BarcodeFormat CODABAR -> CODABAR
    com.google.zxing.BarcodeFormat CODE_39 -> CODE_39
    com.google.zxing.BarcodeFormat CODE_93 -> CODE_93
    com.google.zxing.BarcodeFormat CODE_128 -> CODE_128
    com.google.zxing.BarcodeFormat DATA_MATRIX -> DATA_MATRIX
    com.google.zxing.BarcodeFormat EAN_8 -> EAN_8
    com.google.zxing.BarcodeFormat EAN_13 -> EAN_13
    com.google.zxing.BarcodeFormat ITF -> ITF
    com.google.zxing.BarcodeFormat MAXICODE -> MAXICODE
    com.google.zxing.BarcodeFormat PDF_417 -> PDF_417
    com.google.zxing.BarcodeFormat QR_CODE -> QR_CODE
    com.google.zxing.BarcodeFormat RSS_14 -> RSS_14
    com.google.zxing.BarcodeFormat RSS_EXPANDED -> RSS_EXPANDED
    com.google.zxing.BarcodeFormat UPC_A -> UPC_A
    com.google.zxing.BarcodeFormat UPC_E -> UPC_E
    com.google.zxing.BarcodeFormat UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.BarcodeFormat[] ENUM$VALUES -> ENUM$VALUES
    com.google.zxing.BarcodeFormat[] values() -> values
    com.google.zxing.BarcodeFormat valueOf(java.lang.String) -> valueOf
com.google.zxing.Binarizer -> com.google.zxing.Binarizer:
    com.google.zxing.LuminanceSource source -> source
    com.google.zxing.LuminanceSource getLuminanceSource() -> getLuminanceSource
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.google.zxing.BinaryBitmap -> com.google.zxing.BinaryBitmap:
    com.google.zxing.Binarizer binarizer -> binarizer
    com.google.zxing.common.BitMatrix matrix -> matrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.BinaryBitmap crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.BinaryBitmap rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.BinaryBitmap rotateCounterClockwise45() -> rotateCounterClockwise45
    java.lang.String toString() -> toString
com.google.zxing.ChecksumException -> com.google.zxing.ChecksumException:
    com.google.zxing.ChecksumException instance -> instance
    com.google.zxing.ChecksumException getChecksumInstance() -> getChecksumInstance
com.google.zxing.DecodeHintType -> com.google.zxing.DecodeHintType:
    com.google.zxing.DecodeHintType OTHER -> OTHER
    com.google.zxing.DecodeHintType PURE_BARCODE -> PURE_BARCODE
    com.google.zxing.DecodeHintType POSSIBLE_FORMATS -> POSSIBLE_FORMATS
    com.google.zxing.DecodeHintType TRY_HARDER -> TRY_HARDER
    com.google.zxing.DecodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.DecodeHintType ALLOWED_LENGTHS -> ALLOWED_LENGTHS
    com.google.zxing.DecodeHintType ASSUME_CODE_39_CHECK_DIGIT -> ASSUME_CODE_39_CHECK_DIGIT
    com.google.zxing.DecodeHintType ASSUME_GS1 -> ASSUME_GS1
    com.google.zxing.DecodeHintType RETURN_CODABAR_START_END -> RETURN_CODABAR_START_END
    com.google.zxing.DecodeHintType NEED_RESULT_POINT_CALLBACK -> NEED_RESULT_POINT_CALLBACK
    com.google.zxing.DecodeHintType ALLOWED_EAN_EXTENSIONS -> ALLOWED_EAN_EXTENSIONS
    java.lang.Class valueType -> valueType
    com.google.zxing.DecodeHintType[] ENUM$VALUES -> ENUM$VALUES
    java.lang.Class getValueType() -> getValueType
    com.google.zxing.DecodeHintType[] values() -> values
    com.google.zxing.DecodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.Dimension -> com.google.zxing.Dimension:
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.zxing.EncodeHintType -> com.google.zxing.EncodeHintType:
    com.google.zxing.EncodeHintType ERROR_CORRECTION -> ERROR_CORRECTION
    com.google.zxing.EncodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.EncodeHintType DATA_MATRIX_SHAPE -> DATA_MATRIX_SHAPE
    com.google.zxing.EncodeHintType MIN_SIZE -> MIN_SIZE
    com.google.zxing.EncodeHintType MAX_SIZE -> MAX_SIZE
    com.google.zxing.EncodeHintType MARGIN -> MARGIN
    com.google.zxing.EncodeHintType PDF417_COMPACT -> PDF417_COMPACT
    com.google.zxing.EncodeHintType PDF417_COMPACTION -> PDF417_COMPACTION
    com.google.zxing.EncodeHintType PDF417_DIMENSIONS -> PDF417_DIMENSIONS
    com.google.zxing.EncodeHintType AZTEC_LAYERS -> AZTEC_LAYERS
    com.google.zxing.EncodeHintType[] ENUM$VALUES -> ENUM$VALUES
    com.google.zxing.EncodeHintType[] values() -> values
    com.google.zxing.EncodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.FormatException -> com.google.zxing.FormatException:
    com.google.zxing.FormatException instance -> instance
    com.google.zxing.FormatException getFormatInstance() -> getFormatInstance
com.google.zxing.InvertedLuminanceSource -> com.google.zxing.InvertedLuminanceSource:
    com.google.zxing.LuminanceSource delegate -> delegate
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.LuminanceSource invert() -> invert
    com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.LuminanceSource rotateCounterClockwise45() -> rotateCounterClockwise45
com.google.zxing.LuminanceSource -> com.google.zxing.LuminanceSource:
    int width -> width
    int height -> height
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.LuminanceSource invert() -> invert
    com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.LuminanceSource rotateCounterClockwise45() -> rotateCounterClockwise45
    java.lang.String toString() -> toString
com.google.zxing.MultiFormatReader -> com.google.zxing.MultiFormatReader:
    java.util.Map hints -> hints
    com.google.zxing.Reader[] readers -> readers
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.Result decodeWithState(com.google.zxing.BinaryBitmap) -> decodeWithState
    void setHints(java.util.Map) -> setHints
    void reset() -> reset
    com.google.zxing.Result decodeInternal(com.google.zxing.BinaryBitmap) -> decodeInternal
com.google.zxing.MultiFormatWriter -> com.google.zxing.MultiFormatWriter:
    int[] $SWITCH_TABLE$com$google$zxing$BarcodeFormat -> $SWITCH_TABLE$com$google$zxing$BarcodeFormat
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    int[] $SWITCH_TABLE$com$google$zxing$BarcodeFormat() -> $SWITCH_TABLE$com$google$zxing$BarcodeFormat
com.google.zxing.NotFoundException -> com.google.zxing.NotFoundException:
    com.google.zxing.NotFoundException instance -> instance
    com.google.zxing.NotFoundException getNotFoundInstance() -> getNotFoundInstance
com.google.zxing.PlanarYUVLuminanceSource -> com.google.zxing.PlanarYUVLuminanceSource:
    int THUMBNAIL_SCALE_FACTOR -> THUMBNAIL_SCALE_FACTOR
    byte[] yuvData -> yuvData
    int dataWidth -> dataWidth
    int dataHeight -> dataHeight
    int left -> left
    int top -> top
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    int[] renderThumbnail() -> renderThumbnail
    int getThumbnailWidth() -> getThumbnailWidth
    int getThumbnailHeight() -> getThumbnailHeight
    void reverseHorizontal(int,int) -> reverseHorizontal
com.google.zxing.RGBLuminanceSource -> com.google.zxing.RGBLuminanceSource:
    byte[] luminances -> luminances
    int dataWidth -> dataWidth
    int dataHeight -> dataHeight
    int left -> left
    int top -> top
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
com.google.zxing.Reader -> com.google.zxing.Reader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.ReaderException -> com.google.zxing.ReaderException:
    java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.zxing.Result -> com.google.zxing.Result:
    java.lang.String text -> text
    byte[] rawBytes -> rawBytes
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    com.google.zxing.BarcodeFormat format -> format
    java.util.Map resultMetadata -> resultMetadata
    long timestamp -> timestamp
    java.lang.String getText() -> getText
    byte[] getRawBytes() -> getRawBytes
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.util.Map getResultMetadata() -> getResultMetadata
    void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object) -> putMetadata
    void putAllMetadata(java.util.Map) -> putAllMetadata
    void addResultPoints(com.google.zxing.ResultPoint[]) -> addResultPoints
    long getTimestamp() -> getTimestamp
    java.lang.String toString() -> toString
com.google.zxing.ResultMetadataType -> com.google.zxing.ResultMetadataType:
    com.google.zxing.ResultMetadataType OTHER -> OTHER
    com.google.zxing.ResultMetadataType ORIENTATION -> ORIENTATION
    com.google.zxing.ResultMetadataType BYTE_SEGMENTS -> BYTE_SEGMENTS
    com.google.zxing.ResultMetadataType ERROR_CORRECTION_LEVEL -> ERROR_CORRECTION_LEVEL
    com.google.zxing.ResultMetadataType ISSUE_NUMBER -> ISSUE_NUMBER
    com.google.zxing.ResultMetadataType SUGGESTED_PRICE -> SUGGESTED_PRICE
    com.google.zxing.ResultMetadataType POSSIBLE_COUNTRY -> POSSIBLE_COUNTRY
    com.google.zxing.ResultMetadataType UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.ResultMetadataType PDF417_EXTRA_METADATA -> PDF417_EXTRA_METADATA
    com.google.zxing.ResultMetadataType STRUCTURED_APPEND_SEQUENCE -> STRUCTURED_APPEND_SEQUENCE
    com.google.zxing.ResultMetadataType STRUCTURED_APPEND_PARITY -> STRUCTURED_APPEND_PARITY
    com.google.zxing.ResultMetadataType[] ENUM$VALUES -> ENUM$VALUES
    com.google.zxing.ResultMetadataType[] values() -> values
    com.google.zxing.ResultMetadataType valueOf(java.lang.String) -> valueOf
com.google.zxing.ResultPoint -> com.google.zxing.ResultPoint:
    float x -> x
    float y -> y
    float getX() -> getX
    float getY() -> getY
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void orderBestPatterns(com.google.zxing.ResultPoint[]) -> orderBestPatterns
    float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    float crossProductZ(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> crossProductZ
com.google.zxing.ResultPointCallback -> com.google.zxing.ResultPointCallback:
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> foundPossibleResultPoint
com.google.zxing.Writer -> com.google.zxing.Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
com.google.zxing.WriterException -> com.google.zxing.WriterException:
com.google.zxing.aztec.AztecDetectorResult -> com.google.zxing.aztec.AztecDetectorResult:
    boolean compact -> compact
    int nbDatablocks -> nbDatablocks
    int nbLayers -> nbLayers
    int getNbLayers() -> getNbLayers
    int getNbDatablocks() -> getNbDatablocks
    boolean isCompact() -> isCompact
com.google.zxing.aztec.AztecReader -> com.google.zxing.aztec.AztecReader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.aztec.AztecWriter -> com.google.zxing.aztec.AztecWriter:
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.nio.charset.Charset,int,int) -> encode
    com.google.zxing.common.BitMatrix renderResult(com.google.zxing.aztec.encoder.AztecCode,int,int) -> renderResult
com.google.zxing.aztec.decoder.Decoder -> com.google.zxing.aztec.decoder.Decoder:
    java.lang.String[] UPPER_TABLE -> UPPER_TABLE
    java.lang.String[] LOWER_TABLE -> LOWER_TABLE
    java.lang.String[] MIXED_TABLE -> MIXED_TABLE
    java.lang.String[] PUNCT_TABLE -> PUNCT_TABLE
    java.lang.String[] DIGIT_TABLE -> DIGIT_TABLE
    com.google.zxing.aztec.AztecDetectorResult ddata -> ddata
    int[] $SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table -> $SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table
    com.google.zxing.common.DecoderResult decode(com.google.zxing.aztec.AztecDetectorResult) -> decode
    java.lang.String highLevelDecode(boolean[]) -> highLevelDecode
    java.lang.String getEncodedData(boolean[]) -> getEncodedData
    com.google.zxing.aztec.decoder.Decoder$Table getTable(char) -> getTable
    java.lang.String getCharacter(com.google.zxing.aztec.decoder.Decoder$Table,int) -> getCharacter
    boolean[] correctBits(boolean[]) -> correctBits
    boolean[] extractBits(com.google.zxing.common.BitMatrix) -> extractBits
    int readCode(boolean[],int,int) -> readCode
    int totalBitsInLayer(int,boolean) -> totalBitsInLayer
    int[] $SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table() -> $SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table
com.google.zxing.aztec.decoder.Decoder$Table -> com.google.zxing.aztec.decoder.Decoder$Table:
    com.google.zxing.aztec.decoder.Decoder$Table UPPER -> UPPER
    com.google.zxing.aztec.decoder.Decoder$Table LOWER -> LOWER
    com.google.zxing.aztec.decoder.Decoder$Table MIXED -> MIXED
    com.google.zxing.aztec.decoder.Decoder$Table DIGIT -> DIGIT
    com.google.zxing.aztec.decoder.Decoder$Table PUNCT -> PUNCT
    com.google.zxing.aztec.decoder.Decoder$Table BINARY -> BINARY
    com.google.zxing.aztec.decoder.Decoder$Table[] ENUM$VALUES -> ENUM$VALUES
    com.google.zxing.aztec.decoder.Decoder$Table[] values() -> values
    com.google.zxing.aztec.decoder.Decoder$Table valueOf(java.lang.String) -> valueOf
com.google.zxing.aztec.detector.Detector -> com.google.zxing.aztec.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    boolean compact -> compact
    int nbLayers -> nbLayers
    int nbDataBlocks -> nbDataBlocks
    int nbCenterLayers -> nbCenterLayers
    int shift -> shift
    int[] EXPECTED_CORNER_BITS -> EXPECTED_CORNER_BITS
    com.google.zxing.aztec.AztecDetectorResult detect() -> detect
    com.google.zxing.aztec.AztecDetectorResult detect(boolean) -> detect
    void extractParameters(com.google.zxing.ResultPoint[]) -> extractParameters
    int getRotation(int[],int) -> getRotation
    int getCorrectedParameterData(long,boolean) -> getCorrectedParameterData
    com.google.zxing.ResultPoint[] getBullsEyeCorners(com.google.zxing.aztec.detector.Detector$Point) -> getBullsEyeCorners
    com.google.zxing.aztec.detector.Detector$Point getMatrixCenter() -> getMatrixCenter
    com.google.zxing.ResultPoint[] getMatrixCornerPoints(com.google.zxing.ResultPoint[]) -> getMatrixCornerPoints
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> sampleGrid
    int sampleLine(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> sampleLine
    boolean isWhiteOrBlackRectangle(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> isWhiteOrBlackRectangle
    int getColor(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> getColor
    com.google.zxing.aztec.detector.Detector$Point getFirstDifferent(com.google.zxing.aztec.detector.Detector$Point,boolean,int,int) -> getFirstDifferent
    com.google.zxing.ResultPoint[] expandSquare(com.google.zxing.ResultPoint[],float,float) -> expandSquare
    boolean isValid(int,int) -> isValid
    boolean isValid(com.google.zxing.ResultPoint) -> isValid
    float distance(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> distance
    float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    int getDimension() -> getDimension
com.google.zxing.aztec.detector.Detector$Point -> com.google.zxing.aztec.detector.Detector$Point:
    int x -> x
    int y -> y
    com.google.zxing.ResultPoint toResultPoint() -> toResultPoint
    int getX() -> getX
    int getY() -> getY
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.AztecCode -> com.google.zxing.aztec.encoder.AztecCode:
    boolean compact -> compact
    int size -> size
    int layers -> layers
    int codeWords -> codeWords
    com.google.zxing.common.BitMatrix matrix -> matrix
    boolean isCompact() -> isCompact
    void setCompact(boolean) -> setCompact
    int getSize() -> getSize
    void setSize(int) -> setSize
    int getLayers() -> getLayers
    void setLayers(int) -> setLayers
    int getCodeWords() -> getCodeWords
    void setCodeWords(int) -> setCodeWords
    com.google.zxing.common.BitMatrix getMatrix() -> getMatrix
    void setMatrix(com.google.zxing.common.BitMatrix) -> setMatrix
com.google.zxing.aztec.encoder.BinaryShiftToken -> com.google.zxing.aztec.encoder.BinaryShiftToken:
    short binaryShiftStart -> binaryShiftStart
    short binaryShiftByteCount -> binaryShiftByteCount
    void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.Encoder -> com.google.zxing.aztec.encoder.Encoder:
    int DEFAULT_EC_PERCENT -> DEFAULT_EC_PERCENT
    int DEFAULT_AZTEC_LAYERS -> DEFAULT_AZTEC_LAYERS
    int MAX_NB_BITS -> MAX_NB_BITS
    int MAX_NB_BITS_COMPACT -> MAX_NB_BITS_COMPACT
    int[] WORD_SIZE -> WORD_SIZE
    com.google.zxing.aztec.encoder.AztecCode encode(byte[]) -> encode
    com.google.zxing.aztec.encoder.AztecCode encode(byte[],int,int) -> encode
    void drawBullsEye(com.google.zxing.common.BitMatrix,int,int) -> drawBullsEye
    com.google.zxing.common.BitArray generateModeMessage(boolean,int,int) -> generateModeMessage
    void drawModeMessage(com.google.zxing.common.BitMatrix,boolean,int,com.google.zxing.common.BitArray) -> drawModeMessage
    com.google.zxing.common.BitArray generateCheckWords(com.google.zxing.common.BitArray,int,int) -> generateCheckWords
    int[] bitsToWords(com.google.zxing.common.BitArray,int,int) -> bitsToWords
    com.google.zxing.common.reedsolomon.GenericGF getGF(int) -> getGF
    com.google.zxing.common.BitArray stuffBits(com.google.zxing.common.BitArray,int) -> stuffBits
    int totalBitsInLayer(int,boolean) -> totalBitsInLayer
com.google.zxing.aztec.encoder.HighLevelEncoder -> com.google.zxing.aztec.encoder.HighLevelEncoder:
    java.lang.String[] MODE_NAMES -> MODE_NAMES
    int MODE_UPPER -> MODE_UPPER
    int MODE_LOWER -> MODE_LOWER
    int MODE_DIGIT -> MODE_DIGIT
    int MODE_MIXED -> MODE_MIXED
    int MODE_PUNCT -> MODE_PUNCT
    int[][] LATCH_TABLE -> LATCH_TABLE
    int[][] CHAR_MAP -> CHAR_MAP
    int[][] SHIFT_TABLE -> SHIFT_TABLE
    byte[] text -> text
    com.google.zxing.common.BitArray encode() -> encode
    java.util.Collection updateStateListForChar(java.lang.Iterable,int) -> updateStateListForChar
    void updateStateForChar(com.google.zxing.aztec.encoder.State,int,java.util.Collection) -> updateStateForChar
    java.util.Collection updateStateListForPair(java.lang.Iterable,int,int) -> updateStateListForPair
    void updateStateForPair(com.google.zxing.aztec.encoder.State,int,int,java.util.Collection) -> updateStateForPair
    java.util.Collection simplifyStates(java.lang.Iterable) -> simplifyStates
com.google.zxing.aztec.encoder.HighLevelEncoder$1 -> com.google.zxing.aztec.encoder.HighLevelEncoder$1:
    com.google.zxing.aztec.encoder.HighLevelEncoder this$0 -> this$0
    int compare(com.google.zxing.aztec.encoder.State,com.google.zxing.aztec.encoder.State) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.aztec.encoder.SimpleToken -> com.google.zxing.aztec.encoder.SimpleToken:
    short value -> value
    short bitCount -> bitCount
    void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.State -> com.google.zxing.aztec.encoder.State:
    com.google.zxing.aztec.encoder.State INITIAL_STATE -> INITIAL_STATE
    int mode -> mode
    com.google.zxing.aztec.encoder.Token token -> token
    int binaryShiftByteCount -> binaryShiftByteCount
    int bitCount -> bitCount
    int getMode() -> getMode
    com.google.zxing.aztec.encoder.Token getToken() -> getToken
    int getBinaryShiftByteCount() -> getBinaryShiftByteCount
    int getBitCount() -> getBitCount
    com.google.zxing.aztec.encoder.State latchAndAppend(int,int) -> latchAndAppend
    com.google.zxing.aztec.encoder.State shiftAndAppend(int,int) -> shiftAndAppend
    com.google.zxing.aztec.encoder.State addBinaryShiftChar(int) -> addBinaryShiftChar
    com.google.zxing.aztec.encoder.State endBinaryShift(int) -> endBinaryShift
    boolean isBetterThanOrEqualTo(com.google.zxing.aztec.encoder.State) -> isBetterThanOrEqualTo
    com.google.zxing.common.BitArray toBitArray(byte[]) -> toBitArray
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.Token -> com.google.zxing.aztec.encoder.Token:
    com.google.zxing.aztec.encoder.Token EMPTY -> EMPTY
    com.google.zxing.aztec.encoder.Token previous -> previous
    com.google.zxing.aztec.encoder.Token getPrevious() -> getPrevious
    com.google.zxing.aztec.encoder.Token add(int,int) -> add
    com.google.zxing.aztec.encoder.Token addBinaryShift(int,int) -> addBinaryShift
    void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
com.google.zxing.client.result.AbstractDoCoMoResultParser -> com.google.zxing.client.result.AbstractDoCoMoResultParser:
    java.lang.String[] matchDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchDoCoMoPrefixedField
    java.lang.String matchSingleDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchSingleDoCoMoPrefixedField
com.google.zxing.client.result.AddressBookAUResultParser -> com.google.zxing.client.result.AddressBookAUResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] matchMultipleValuePrefix(java.lang.String,int,java.lang.String,boolean) -> matchMultipleValuePrefix
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookDoCoMoResultParser -> com.google.zxing.client.result.AddressBookDoCoMoResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String parseName(java.lang.String) -> parseName
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookParsedResult -> com.google.zxing.client.result.AddressBookParsedResult:
    java.lang.String[] names -> names
    java.lang.String[] nicknames -> nicknames
    java.lang.String pronunciation -> pronunciation
    java.lang.String[] phoneNumbers -> phoneNumbers
    java.lang.String[] phoneTypes -> phoneTypes
    java.lang.String[] emails -> emails
    java.lang.String[] emailTypes -> emailTypes
    java.lang.String instantMessenger -> instantMessenger
    java.lang.String note -> note
    java.lang.String[] addresses -> addresses
    java.lang.String[] addressTypes -> addressTypes
    java.lang.String org -> org
    java.lang.String birthday -> birthday
    java.lang.String title -> title
    java.lang.String[] urls -> urls
    java.lang.String[] geo -> geo
    java.lang.String[] getNames() -> getNames
    java.lang.String[] getNicknames() -> getNicknames
    java.lang.String getPronunciation() -> getPronunciation
    java.lang.String[] getPhoneNumbers() -> getPhoneNumbers
    java.lang.String[] getPhoneTypes() -> getPhoneTypes
    java.lang.String[] getEmails() -> getEmails
    java.lang.String[] getEmailTypes() -> getEmailTypes
    java.lang.String getInstantMessenger() -> getInstantMessenger
    java.lang.String getNote() -> getNote
    java.lang.String[] getAddresses() -> getAddresses
    java.lang.String[] getAddressTypes() -> getAddressTypes
    java.lang.String getTitle() -> getTitle
    java.lang.String getOrg() -> getOrg
    java.lang.String[] getURLs() -> getURLs
    java.lang.String getBirthday() -> getBirthday
    java.lang.String[] getGeo() -> getGeo
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.BizcardResultParser -> com.google.zxing.client.result.BizcardResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] buildPhoneNumbers(java.lang.String,java.lang.String,java.lang.String) -> buildPhoneNumbers
    java.lang.String buildName(java.lang.String,java.lang.String) -> buildName
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.BookmarkDoCoMoResultParser -> com.google.zxing.client.result.BookmarkDoCoMoResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.CalendarParsedResult -> com.google.zxing.client.result.CalendarParsedResult:
    java.util.regex.Pattern RFC2445_DURATION -> RFC2445_DURATION
    long[] RFC2445_DURATION_FIELD_UNITS -> RFC2445_DURATION_FIELD_UNITS
    java.util.regex.Pattern DATE_TIME -> DATE_TIME
    java.lang.String summary -> summary
    java.util.Date start -> start
    boolean startAllDay -> startAllDay
    java.util.Date end -> end
    boolean endAllDay -> endAllDay
    java.lang.String location -> location
    java.lang.String organizer -> organizer
    java.lang.String[] attendees -> attendees
    java.lang.String description -> description
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String getSummary() -> getSummary
    java.util.Date getStart() -> getStart
    boolean isStartAllDay() -> isStartAllDay
    java.util.Date getEnd() -> getEnd
    boolean isEndAllDay() -> isEndAllDay
    java.lang.String getLocation() -> getLocation
    java.lang.String getOrganizer() -> getOrganizer
    java.lang.String[] getAttendees() -> getAttendees
    java.lang.String getDescription() -> getDescription
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    java.lang.String getDisplayResult() -> getDisplayResult
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.lang.String format(boolean,java.util.Date) -> format
    long parseDurationMS(java.lang.CharSequence) -> parseDurationMS
    java.text.DateFormat buildDateFormat() -> buildDateFormat
    java.text.DateFormat buildDateTimeFormat() -> buildDateTimeFormat
com.google.zxing.client.result.EmailAddressParsedResult -> com.google.zxing.client.result.EmailAddressParsedResult:
    java.lang.String[] tos -> tos
    java.lang.String[] ccs -> ccs
    java.lang.String[] bccs -> bccs
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String getEmailAddress() -> getEmailAddress
    java.lang.String[] getTos() -> getTos
    java.lang.String[] getCCs() -> getCCs
    java.lang.String[] getBCCs() -> getBCCs
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getMailtoURI() -> getMailtoURI
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.EmailAddressResultParser -> com.google.zxing.client.result.EmailAddressResultParser:
    java.util.regex.Pattern COMMA -> COMMA
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.EmailDoCoMoResultParser -> com.google.zxing.client.result.EmailDoCoMoResultParser:
    java.util.regex.Pattern ATEXT_ALPHANUMERIC -> ATEXT_ALPHANUMERIC
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidEmailAddress(java.lang.String) -> isBasicallyValidEmailAddress
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ExpandedProductParsedResult -> com.google.zxing.client.result.ExpandedProductParsedResult:
    java.lang.String KILOGRAM -> KILOGRAM
    java.lang.String POUND -> POUND
    java.lang.String rawText -> rawText
    java.lang.String productID -> productID
    java.lang.String sscc -> sscc
    java.lang.String lotNumber -> lotNumber
    java.lang.String productionDate -> productionDate
    java.lang.String packagingDate -> packagingDate
    java.lang.String bestBeforeDate -> bestBeforeDate
    java.lang.String expirationDate -> expirationDate
    java.lang.String weight -> weight
    java.lang.String weightType -> weightType
    java.lang.String weightIncrement -> weightIncrement
    java.lang.String price -> price
    java.lang.String priceIncrement -> priceIncrement
    java.lang.String priceCurrency -> priceCurrency
    java.util.Map uncommonAIs -> uncommonAIs
    boolean equals(java.lang.Object) -> equals
    boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    int hashCode() -> hashCode
    int hashNotNull(java.lang.Object) -> hashNotNull
    java.lang.String getRawText() -> getRawText
    java.lang.String getProductID() -> getProductID
    java.lang.String getSscc() -> getSscc
    java.lang.String getLotNumber() -> getLotNumber
    java.lang.String getProductionDate() -> getProductionDate
    java.lang.String getPackagingDate() -> getPackagingDate
    java.lang.String getBestBeforeDate() -> getBestBeforeDate
    java.lang.String getExpirationDate() -> getExpirationDate
    java.lang.String getWeight() -> getWeight
    java.lang.String getWeightType() -> getWeightType
    java.lang.String getWeightIncrement() -> getWeightIncrement
    java.lang.String getPrice() -> getPrice
    java.lang.String getPriceIncrement() -> getPriceIncrement
    java.lang.String getPriceCurrency() -> getPriceCurrency
    java.util.Map getUncommonAIs() -> getUncommonAIs
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ExpandedProductResultParser -> com.google.zxing.client.result.ExpandedProductResultParser:
    com.google.zxing.client.result.ExpandedProductParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String findAIvalue(int,java.lang.String) -> findAIvalue
    java.lang.String findValue(int,java.lang.String) -> findValue
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.GeoParsedResult -> com.google.zxing.client.result.GeoParsedResult:
    double latitude -> latitude
    double longitude -> longitude
    double altitude -> altitude
    java.lang.String query -> query
    java.lang.String getGeoURI() -> getGeoURI
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    double getAltitude() -> getAltitude
    java.lang.String getQuery() -> getQuery
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.GeoResultParser -> com.google.zxing.client.result.GeoResultParser:
    java.util.regex.Pattern GEO_URL_PATTERN -> GEO_URL_PATTERN
    com.google.zxing.client.result.GeoParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ISBNParsedResult -> com.google.zxing.client.result.ISBNParsedResult:
    java.lang.String isbn -> isbn
    java.lang.String getISBN() -> getISBN
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ISBNResultParser -> com.google.zxing.client.result.ISBNResultParser:
    com.google.zxing.client.result.ISBNParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ParsedResult -> com.google.zxing.client.result.ParsedResult:
    com.google.zxing.client.result.ParsedResultType type -> type
    com.google.zxing.client.result.ParsedResultType getType() -> getType
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String toString() -> toString
    void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
com.google.zxing.client.result.ParsedResultType -> com.google.zxing.client.result.ParsedResultType:
    com.google.zxing.client.result.ParsedResultType ADDRESSBOOK -> ADDRESSBOOK
    com.google.zxing.client.result.ParsedResultType EMAIL_ADDRESS -> EMAIL_ADDRESS
    com.google.zxing.client.result.ParsedResultType PRODUCT -> PRODUCT
    com.google.zxing.client.result.ParsedResultType URI -> URI
    com.google.zxing.client.result.ParsedResultType TEXT -> TEXT
    com.google.zxing.client.result.ParsedResultType GEO -> GEO
    com.google.zxing.client.result.ParsedResultType TEL -> TEL
    com.google.zxing.client.result.ParsedResultType SMS -> SMS
    com.google.zxing.client.result.ParsedResultType CALENDAR -> CALENDAR
    com.google.zxing.client.result.ParsedResultType WIFI -> WIFI
    com.google.zxing.client.result.ParsedResultType ISBN -> ISBN
    com.google.zxing.client.result.ParsedResultType VIN -> VIN
    com.google.zxing.client.result.ParsedResultType[] ENUM$VALUES -> ENUM$VALUES
    com.google.zxing.client.result.ParsedResultType[] values() -> values
    com.google.zxing.client.result.ParsedResultType valueOf(java.lang.String) -> valueOf
com.google.zxing.client.result.ProductParsedResult -> com.google.zxing.client.result.ProductParsedResult:
    java.lang.String productID -> productID
    java.lang.String normalizedProductID -> normalizedProductID
    java.lang.String getProductID() -> getProductID
    java.lang.String getNormalizedProductID() -> getNormalizedProductID
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ProductResultParser -> com.google.zxing.client.result.ProductResultParser:
    com.google.zxing.client.result.ProductParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ResultParser -> com.google.zxing.client.result.ResultParser:
    com.google.zxing.client.result.ResultParser[] PARSERS -> PARSERS
    java.util.regex.Pattern DIGITS -> DIGITS
    java.util.regex.Pattern AMPERSAND -> AMPERSAND
    java.util.regex.Pattern EQUALS -> EQUALS
    java.lang.String BYTE_ORDER_MARK -> BYTE_ORDER_MARK
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String getMassagedText(com.google.zxing.Result) -> getMassagedText
    com.google.zxing.client.result.ParsedResult parseResult(com.google.zxing.Result) -> parseResult
    void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
    java.lang.String[] maybeWrap(java.lang.String) -> maybeWrap
    java.lang.String unescapeBackslash(java.lang.String) -> unescapeBackslash
    int parseHexDigit(char) -> parseHexDigit
    boolean isStringOfDigits(java.lang.CharSequence,int) -> isStringOfDigits
    boolean isSubstringOfDigits(java.lang.CharSequence,int,int) -> isSubstringOfDigits
    java.util.Map parseNameValuePairs(java.lang.String) -> parseNameValuePairs
    void appendKeyValue(java.lang.CharSequence,java.util.Map) -> appendKeyValue
    java.lang.String urlDecode(java.lang.String) -> urlDecode
    java.lang.String[] matchPrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchPrefixedField
    int countPrecedingBackslashes(java.lang.CharSequence,int) -> countPrecedingBackslashes
    java.lang.String matchSinglePrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchSinglePrefixedField
com.google.zxing.client.result.SMSMMSResultParser -> com.google.zxing.client.result.SMSMMSResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    void addNumberVia(java.util.Collection,java.util.Collection,java.lang.String) -> addNumberVia
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMSParsedResult -> com.google.zxing.client.result.SMSParsedResult:
    java.lang.String[] numbers -> numbers
    java.lang.String[] vias -> vias
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String getSMSURI() -> getSMSURI
    java.lang.String[] getNumbers() -> getNumbers
    java.lang.String[] getVias() -> getVias
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.SMSTOMMSTOResultParser -> com.google.zxing.client.result.SMSTOMMSTOResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMTPResultParser -> com.google.zxing.client.result.SMTPResultParser:
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TelParsedResult -> com.google.zxing.client.result.TelParsedResult:
    java.lang.String number -> number
    java.lang.String telURI -> telURI
    java.lang.String title -> title
    java.lang.String getNumber() -> getNumber
    java.lang.String getTelURI() -> getTelURI
    java.lang.String getTitle() -> getTitle
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.TelResultParser -> com.google.zxing.client.result.TelResultParser:
    com.google.zxing.client.result.TelParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TextParsedResult -> com.google.zxing.client.result.TextParsedResult:
    java.lang.String text -> text
    java.lang.String language -> language
    java.lang.String getText() -> getText
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.URIParsedResult -> com.google.zxing.client.result.URIParsedResult:
    java.util.regex.Pattern USER_IN_HOST -> USER_IN_HOST
    java.lang.String uri -> uri
    java.lang.String title -> title
    java.lang.String getURI() -> getURI
    java.lang.String getTitle() -> getTitle
    boolean isPossiblyMaliciousURI() -> isPossiblyMaliciousURI
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String massageURI(java.lang.String) -> massageURI
    boolean isColonFollowedByPortNumber(java.lang.String,int) -> isColonFollowedByPortNumber
com.google.zxing.client.result.URIResultParser -> com.google.zxing.client.result.URIResultParser:
    java.util.regex.Pattern URL_WITH_PROTOCOL_PATTERN -> URL_WITH_PROTOCOL_PATTERN
    java.util.regex.Pattern URL_WITHOUT_PROTOCOL_PATTERN -> URL_WITHOUT_PROTOCOL_PATTERN
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidURI(java.lang.String) -> isBasicallyValidURI
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.URLTOResultParser -> com.google.zxing.client.result.URLTOResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VCardResultParser -> com.google.zxing.client.result.VCardResultParser:
    java.util.regex.Pattern BEGIN_VCARD -> BEGIN_VCARD
    java.util.regex.Pattern VCARD_LIKE_DATE -> VCARD_LIKE_DATE
    java.util.regex.Pattern CR_LF_SPACE_TAB -> CR_LF_SPACE_TAB
    java.util.regex.Pattern NEWLINE_ESCAPE -> NEWLINE_ESCAPE
    java.util.regex.Pattern VCARD_ESCAPES -> VCARD_ESCAPES
    java.util.regex.Pattern EQUALS -> EQUALS
    java.util.regex.Pattern SEMICOLON -> SEMICOLON
    java.util.regex.Pattern UNESCAPED_SEMICOLONS -> UNESCAPED_SEMICOLONS
    java.util.regex.Pattern COMMA -> COMMA
    java.util.regex.Pattern SEMICOLON_OR_COMMA -> SEMICOLON_OR_COMMA
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.util.List matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchVCardPrefixedField
    java.lang.String decodeQuotedPrintable(java.lang.CharSequence,java.lang.String) -> decodeQuotedPrintable
    void maybeAppendFragment(java.io.ByteArrayOutputStream,java.lang.String,java.lang.StringBuilder) -> maybeAppendFragment
    java.util.List matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchSingleVCardPrefixedField
    java.lang.String toPrimaryValue(java.util.List) -> toPrimaryValue
    java.lang.String[] toPrimaryValues(java.util.Collection) -> toPrimaryValues
    java.lang.String[] toTypes(java.util.Collection) -> toTypes
    boolean isLikeVCardDate(java.lang.CharSequence) -> isLikeVCardDate
    void formatNames(java.lang.Iterable) -> formatNames
    void maybeAppendComponent(java.lang.String[],int,java.lang.StringBuilder) -> maybeAppendComponent
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VEventResultParser -> com.google.zxing.client.result.VEventResultParser:
    com.google.zxing.client.result.CalendarParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchSingleVCardPrefixedField
    java.lang.String[] matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchVCardPrefixedField
    java.lang.String stripMailto(java.lang.String) -> stripMailto
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VINParsedResult -> com.google.zxing.client.result.VINParsedResult:
    java.lang.String vin -> vin
    java.lang.String worldManufacturerID -> worldManufacturerID
    java.lang.String vehicleDescriptorSection -> vehicleDescriptorSection
    java.lang.String vehicleIdentifierSection -> vehicleIdentifierSection
    java.lang.String countryCode -> countryCode
    java.lang.String vehicleAttributes -> vehicleAttributes
    int modelYear -> modelYear
    char plantCode -> plantCode
    java.lang.String sequentialNumber -> sequentialNumber
    java.lang.String getVIN() -> getVIN
    java.lang.String getWorldManufacturerID() -> getWorldManufacturerID
    java.lang.String getVehicleDescriptorSection() -> getVehicleDescriptorSection
    java.lang.String getVehicleIdentifierSection() -> getVehicleIdentifierSection
    java.lang.String getCountryCode() -> getCountryCode
    java.lang.String getVehicleAttributes() -> getVehicleAttributes
    int getModelYear() -> getModelYear
    char getPlantCode() -> getPlantCode
    java.lang.String getSequentialNumber() -> getSequentialNumber
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.VINResultParser -> com.google.zxing.client.result.VINResultParser:
    java.util.regex.Pattern IOQ -> IOQ
    java.util.regex.Pattern AZ09 -> AZ09
    com.google.zxing.client.result.VINParsedResult parse(com.google.zxing.Result) -> parse
    boolean checkChecksum(java.lang.CharSequence) -> checkChecksum
    int vinCharValue(char) -> vinCharValue
    int vinPositionWeight(int) -> vinPositionWeight
    char checkChar(int) -> checkChar
    int modelYear(char) -> modelYear
    java.lang.String countryCode(java.lang.CharSequence) -> countryCode
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.WifiParsedResult -> com.google.zxing.client.result.WifiParsedResult:
    java.lang.String ssid -> ssid
    java.lang.String networkEncryption -> networkEncryption
    java.lang.String password -> password
    boolean hidden -> hidden
    java.lang.String getSsid() -> getSsid
    java.lang.String getNetworkEncryption() -> getNetworkEncryption
    java.lang.String getPassword() -> getPassword
    boolean isHidden() -> isHidden
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.WifiResultParser -> com.google.zxing.client.result.WifiResultParser:
    com.google.zxing.client.result.WifiParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.common.BitArray -> com.google.zxing.common.BitArray:
    int[] bits -> bits
    int size -> size
    int getSize() -> getSize
    int getSizeInBytes() -> getSizeInBytes
    void ensureCapacity(int) -> ensureCapacity
    boolean get(int) -> get
    void set(int) -> set
    void flip(int) -> flip
    int getNextSet(int) -> getNextSet
    int getNextUnset(int) -> getNextUnset
    void setBulk(int,int) -> setBulk
    void setRange(int,int) -> setRange
    void clear() -> clear
    boolean isRange(int,int,boolean) -> isRange
    void appendBit(boolean) -> appendBit
    void appendBits(int,int) -> appendBits
    void appendBitArray(com.google.zxing.common.BitArray) -> appendBitArray
    void xor(com.google.zxing.common.BitArray) -> xor
    void toBytes(int,byte[],int,int) -> toBytes
    int[] getBitArray() -> getBitArray
    void reverse() -> reverse
    int[] makeArray(int) -> makeArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.zxing.common.BitArray clone() -> clone
    java.lang.Object clone() -> clone
com.google.zxing.common.BitMatrix -> com.google.zxing.common.BitMatrix:
    int width -> width
    int height -> height
    int rowSize -> rowSize
    int[] bits -> bits
    boolean get(int,int) -> get
    void set(int,int) -> set
    void flip(int,int) -> flip
    void clear() -> clear
    void setRegion(int,int,int,int) -> setRegion
    com.google.zxing.common.BitArray getRow(int,com.google.zxing.common.BitArray) -> getRow
    void setRow(int,com.google.zxing.common.BitArray) -> setRow
    void rotate180() -> rotate180
    int[] getEnclosingRectangle() -> getEnclosingRectangle
    int[] getTopLeftOnBit() -> getTopLeftOnBit
    int[] getBottomRightOnBit() -> getBottomRightOnBit
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.zxing.common.BitMatrix clone() -> clone
    java.lang.Object clone() -> clone
com.google.zxing.common.BitSource -> com.google.zxing.common.BitSource:
    byte[] bytes -> bytes
    int byteOffset -> byteOffset
    int bitOffset -> bitOffset
    int getBitOffset() -> getBitOffset
    int getByteOffset() -> getByteOffset
    int readBits(int) -> readBits
    int available() -> available
com.google.zxing.common.CharacterSetECI -> com.google.zxing.common.CharacterSetECI:
    com.google.zxing.common.CharacterSetECI Cp437 -> Cp437
    com.google.zxing.common.CharacterSetECI ISO8859_1 -> ISO8859_1
    com.google.zxing.common.CharacterSetECI ISO8859_2 -> ISO8859_2
    com.google.zxing.common.CharacterSetECI ISO8859_3 -> ISO8859_3
    com.google.zxing.common.CharacterSetECI ISO8859_4 -> ISO8859_4
    com.google.zxing.common.CharacterSetECI ISO8859_5 -> ISO8859_5
    com.google.zxing.common.CharacterSetECI ISO8859_6 -> ISO8859_6
    com.google.zxing.common.CharacterSetECI ISO8859_7 -> ISO8859_7
    com.google.zxing.common.CharacterSetECI ISO8859_8 -> ISO8859_8
    com.google.zxing.common.CharacterSetECI ISO8859_9 -> ISO8859_9
    com.google.zxing.common.CharacterSetECI ISO8859_10 -> ISO8859_10
    com.google.zxing.common.CharacterSetECI ISO8859_11 -> ISO8859_11
    com.google.zxing.common.CharacterSetECI ISO8859_13 -> ISO8859_13
    com.google.zxing.common.CharacterSetECI ISO8859_14 -> ISO8859_14
    com.google.zxing.common.CharacterSetECI ISO8859_15 -> ISO8859_15
    com.google.zxing.common.CharacterSetECI ISO8859_16 -> ISO8859_16
    com.google.zxing.common.CharacterSetECI SJIS -> SJIS
    com.google.zxing.common.CharacterSetECI Cp1250 -> Cp1250
    com.google.zxing.common.CharacterSetECI Cp1251 -> Cp1251
    com.google.zxing.common.CharacterSetECI Cp1252 -> Cp1252
    com.google.zxing.common.CharacterSetECI Cp1256 -> Cp1256
    com.google.zxing.common.CharacterSetECI UnicodeBigUnmarked -> UnicodeBigUnmarked
    com.google.zxing.common.CharacterSetECI UTF8 -> UTF8
    com.google.zxing.common.CharacterSetECI ASCII -> ASCII
    com.google.zxing.common.CharacterSetECI Big5 -> Big5
    com.google.zxing.common.CharacterSetECI GB18030 -> GB18030
    com.google.zxing.common.CharacterSetECI EUC_KR -> EUC_KR
    java.util.Map VALUE_TO_ECI -> VALUE_TO_ECI
    java.util.Map NAME_TO_ECI -> NAME_TO_ECI
    int[] values -> values
    java.lang.String[] otherEncodingNames -> otherEncodingNames
    com.google.zxing.common.CharacterSetECI[] ENUM$VALUES -> ENUM$VALUES
    int getValue() -> getValue
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int) -> getCharacterSetECIByValue
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByName(java.lang.String) -> getCharacterSetECIByName
    com.google.zxing.common.CharacterSetECI[] values() -> values
    com.google.zxing.common.CharacterSetECI valueOf(java.lang.String) -> valueOf
com.google.zxing.common.DecoderResult -> com.google.zxing.common.DecoderResult:
    byte[] rawBytes -> rawBytes
    java.lang.String text -> text
    java.util.List byteSegments -> byteSegments
    java.lang.String ecLevel -> ecLevel
    java.lang.Integer errorsCorrected -> errorsCorrected
    java.lang.Integer erasures -> erasures
    java.lang.Object other -> other
    int structuredAppendParity -> structuredAppendParity
    int structuredAppendSequenceNumber -> structuredAppendSequenceNumber
    byte[] getRawBytes() -> getRawBytes
    java.lang.String getText() -> getText
    java.util.List getByteSegments() -> getByteSegments
    java.lang.String getECLevel() -> getECLevel
    java.lang.Integer getErrorsCorrected() -> getErrorsCorrected
    void setErrorsCorrected(java.lang.Integer) -> setErrorsCorrected
    java.lang.Integer getErasures() -> getErasures
    void setErasures(java.lang.Integer) -> setErasures
    java.lang.Object getOther() -> getOther
    void setOther(java.lang.Object) -> setOther
    boolean hasStructuredAppend() -> hasStructuredAppend
    int getStructuredAppendParity() -> getStructuredAppendParity
    int getStructuredAppendSequenceNumber() -> getStructuredAppendSequenceNumber
com.google.zxing.common.DefaultGridSampler -> com.google.zxing.common.DefaultGridSampler:
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
com.google.zxing.common.DetectorResult -> com.google.zxing.common.DetectorResult:
    com.google.zxing.common.BitMatrix bits -> bits
    com.google.zxing.ResultPoint[] points -> points
    com.google.zxing.common.BitMatrix getBits() -> getBits
    com.google.zxing.ResultPoint[] getPoints() -> getPoints
com.google.zxing.common.GlobalHistogramBinarizer -> com.google.zxing.common.GlobalHistogramBinarizer:
    int LUMINANCE_BITS -> LUMINANCE_BITS
    int LUMINANCE_SHIFT -> LUMINANCE_SHIFT
    int LUMINANCE_BUCKETS -> LUMINANCE_BUCKETS
    byte[] EMPTY -> EMPTY
    byte[] luminances -> luminances
    int[] buckets -> buckets
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void initArrays(int) -> initArrays
    int estimateBlackPoint(int[]) -> estimateBlackPoint
com.google.zxing.common.GridSampler -> com.google.zxing.common.GridSampler:
    com.google.zxing.common.GridSampler gridSampler -> gridSampler
    void setGridSampler(com.google.zxing.common.GridSampler) -> setGridSampler
    com.google.zxing.common.GridSampler getInstance() -> getInstance
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
    void checkAndNudgePoints(com.google.zxing.common.BitMatrix,float[]) -> checkAndNudgePoints
com.google.zxing.common.HybridBinarizer -> com.google.zxing.common.HybridBinarizer:
    int BLOCK_SIZE_POWER -> BLOCK_SIZE_POWER
    int BLOCK_SIZE -> BLOCK_SIZE
    int BLOCK_SIZE_MASK -> BLOCK_SIZE_MASK
    int MINIMUM_DIMENSION -> MINIMUM_DIMENSION
    int MIN_DYNAMIC_RANGE -> MIN_DYNAMIC_RANGE
    com.google.zxing.common.BitMatrix matrix -> matrix
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.google.zxing.common.BitMatrix) -> calculateThresholdForBlock
    int cap(int,int,int) -> cap
    void thresholdBlock(byte[],int,int,int,int,com.google.zxing.common.BitMatrix) -> thresholdBlock
    int[][] calculateBlackPoints(byte[],int,int,int,int) -> calculateBlackPoints
com.google.zxing.common.PerspectiveTransform -> com.google.zxing.common.PerspectiveTransform:
    float a11 -> a11
    float a12 -> a12
    float a13 -> a13
    float a21 -> a21
    float a22 -> a22
    float a23 -> a23
    float a31 -> a31
    float a32 -> a32
    float a33 -> a33
    com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> quadrilateralToQuadrilateral
    void transformPoints(float[]) -> transformPoints
    void transformPoints(float[],float[]) -> transformPoints
    com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float) -> squareToQuadrilateral
    com.google.zxing.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float) -> quadrilateralToSquare
    com.google.zxing.common.PerspectiveTransform buildAdjoint() -> buildAdjoint
    com.google.zxing.common.PerspectiveTransform times(com.google.zxing.common.PerspectiveTransform) -> times
com.google.zxing.common.StringUtils -> com.google.zxing.common.StringUtils:
    java.lang.String PLATFORM_DEFAULT_ENCODING -> PLATFORM_DEFAULT_ENCODING
    java.lang.String SHIFT_JIS -> SHIFT_JIS
    java.lang.String GB2312 -> GB2312
    java.lang.String EUC_JP -> EUC_JP
    java.lang.String UTF8 -> UTF8
    java.lang.String ISO88591 -> ISO88591
    boolean ASSUME_SHIFT_JIS -> ASSUME_SHIFT_JIS
    java.lang.String guessEncoding(byte[],java.util.Map) -> guessEncoding
com.google.zxing.common.detector.MathUtils -> com.google.zxing.common.detector.MathUtils:
    int round(float) -> round
    float distance(float,float,float,float) -> distance
    float distance(int,int,int,int) -> distance
com.google.zxing.common.detector.MonochromeRectangleDetector -> com.google.zxing.common.detector.MonochromeRectangleDetector:
    int MAX_MODULES -> MAX_MODULES
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPoint[] detect() -> detect
    com.google.zxing.ResultPoint findCornerFromCenter(int,int,int,int,int,int,int,int,int) -> findCornerFromCenter
    int[] blackWhiteRange(int,int,int,int,boolean) -> blackWhiteRange
com.google.zxing.common.detector.WhiteRectangleDetector -> com.google.zxing.common.detector.WhiteRectangleDetector:
    int INIT_SIZE -> INIT_SIZE
    int CORR -> CORR
    com.google.zxing.common.BitMatrix image -> image
    int height -> height
    int width -> width
    int leftInit -> leftInit
    int rightInit -> rightInit
    int downInit -> downInit
    int upInit -> upInit
    com.google.zxing.ResultPoint[] detect() -> detect
    com.google.zxing.ResultPoint getBlackPointOnSegment(float,float,float,float) -> getBlackPointOnSegment
    com.google.zxing.ResultPoint[] centerEdges(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> centerEdges
    boolean containsBlackPoint(int,int,int,boolean) -> containsBlackPoint
com.google.zxing.common.reedsolomon.GenericGF -> com.google.zxing.common.reedsolomon.GenericGF:
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_12 -> AZTEC_DATA_12
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_10 -> AZTEC_DATA_10
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_6 -> AZTEC_DATA_6
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_PARAM -> AZTEC_PARAM
    com.google.zxing.common.reedsolomon.GenericGF QR_CODE_FIELD_256 -> QR_CODE_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF DATA_MATRIX_FIELD_256 -> DATA_MATRIX_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_8 -> AZTEC_DATA_8
    com.google.zxing.common.reedsolomon.GenericGF MAXICODE_FIELD_64 -> MAXICODE_FIELD_64
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.common.reedsolomon.GenericGFPoly zero -> zero
    com.google.zxing.common.reedsolomon.GenericGFPoly one -> one
    int size -> size
    int primitive -> primitive
    int generatorBase -> generatorBase
    com.google.zxing.common.reedsolomon.GenericGFPoly getZero() -> getZero
    com.google.zxing.common.reedsolomon.GenericGFPoly getOne() -> getOne
    com.google.zxing.common.reedsolomon.GenericGFPoly buildMonomial(int,int) -> buildMonomial
    int addOrSubtract(int,int) -> addOrSubtract
    int exp(int) -> exp
    int log(int) -> log
    int inverse(int) -> inverse
    int multiply(int,int) -> multiply
    int getSize() -> getSize
    int getGeneratorBase() -> getGeneratorBase
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.GenericGFPoly -> com.google.zxing.common.reedsolomon.GenericGFPoly:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    int[] coefficients -> coefficients
    int[] getCoefficients() -> getCoefficients
    int getDegree() -> getDegree
    boolean isZero() -> isZero
    int getCoefficient(int) -> getCoefficient
    int evaluateAt(int) -> evaluateAt
    com.google.zxing.common.reedsolomon.GenericGFPoly addOrSubtract(com.google.zxing.common.reedsolomon.GenericGFPoly) -> addOrSubtract
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(com.google.zxing.common.reedsolomon.GenericGFPoly) -> multiply
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int) -> multiply
    com.google.zxing.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    com.google.zxing.common.reedsolomon.GenericGFPoly[] divide(com.google.zxing.common.reedsolomon.GenericGFPoly) -> divide
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.ReedSolomonDecoder -> com.google.zxing.common.reedsolomon.ReedSolomonDecoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    void decode(int[],int) -> decode
    com.google.zxing.common.reedsolomon.GenericGFPoly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GenericGFPoly,com.google.zxing.common.reedsolomon.GenericGFPoly,int) -> runEuclideanAlgorithm
    int[] findErrorLocations(com.google.zxing.common.reedsolomon.GenericGFPoly) -> findErrorLocations
    int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GenericGFPoly,int[]) -> findErrorMagnitudes
com.google.zxing.common.reedsolomon.ReedSolomonEncoder -> com.google.zxing.common.reedsolomon.ReedSolomonEncoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    java.util.List cachedGenerators -> cachedGenerators
    com.google.zxing.common.reedsolomon.GenericGFPoly buildGenerator(int) -> buildGenerator
    void encode(int[],int) -> encode
com.google.zxing.common.reedsolomon.ReedSolomonException -> com.google.zxing.common.reedsolomon.ReedSolomonException:
com.google.zxing.datamatrix.DataMatrixReader -> com.google.zxing.datamatrix.DataMatrixReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.datamatrix.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    int moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.datamatrix.DataMatrixWriter -> com.google.zxing.datamatrix.DataMatrixWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encodeLowLevel(com.google.zxing.datamatrix.encoder.DefaultPlacement,com.google.zxing.datamatrix.encoder.SymbolInfo) -> encodeLowLevel
    com.google.zxing.common.BitMatrix convertByteMatrixToBitMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> convertByteMatrixToBitMatrix
com.google.zxing.datamatrix.decoder.BitMatrixParser -> com.google.zxing.datamatrix.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix mappingBitMatrix -> mappingBitMatrix
    com.google.zxing.common.BitMatrix readMappingMatrix -> readMappingMatrix
    com.google.zxing.datamatrix.decoder.Version version -> version
    com.google.zxing.datamatrix.decoder.Version getVersion() -> getVersion
    com.google.zxing.datamatrix.decoder.Version readVersion(com.google.zxing.common.BitMatrix) -> readVersion
    byte[] readCodewords() -> readCodewords
    boolean readModule(int,int,int,int) -> readModule
    int readUtah(int,int,int,int) -> readUtah
    int readCorner1(int,int) -> readCorner1
    int readCorner2(int,int) -> readCorner2
    int readCorner3(int,int) -> readCorner3
    int readCorner4(int,int) -> readCorner4
    com.google.zxing.common.BitMatrix extractDataRegion(com.google.zxing.common.BitMatrix) -> extractDataRegion
com.google.zxing.datamatrix.decoder.DataBlock -> com.google.zxing.datamatrix.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.datamatrix.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.datamatrix.decoder.Version) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser:
    char[] C40_BASIC_SET_CHARS -> C40_BASIC_SET_CHARS
    char[] C40_SHIFT2_SET_CHARS -> C40_SHIFT2_SET_CHARS
    char[] TEXT_BASIC_SET_CHARS -> TEXT_BASIC_SET_CHARS
    char[] TEXT_SHIFT3_SET_CHARS -> TEXT_SHIFT3_SET_CHARS
    int[] $SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode -> $SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode
    com.google.zxing.common.DecoderResult decode(byte[]) -> decode
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode decodeAsciiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.lang.StringBuilder) -> decodeAsciiSegment
    void decodeC40Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeC40Segment
    void decodeTextSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeTextSegment
    void decodeAnsiX12Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeAnsiX12Segment
    void parseTwoBytes(int,int,int[]) -> parseTwoBytes
    void decodeEdifactSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeEdifactSegment
    void decodeBase256Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.util.Collection) -> decodeBase256Segment
    int unrandomize255State(int,int) -> unrandomize255State
    int[] $SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode() -> $SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode PAD_ENCODE -> PAD_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ASCII_ENCODE -> ASCII_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode C40_ENCODE -> C40_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode TEXT_ENCODE -> TEXT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ANSIX12_ENCODE -> ANSIX12_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode EDIFACT_ENCODE -> EDIFACT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode BASE256_ENCODE -> BASE256_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] ENUM$VALUES -> ENUM$VALUES
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.datamatrix.decoder.Decoder -> com.google.zxing.datamatrix.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.datamatrix.decoder.Version -> com.google.zxing.datamatrix.decoder.Version:
    com.google.zxing.datamatrix.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int symbolSizeRows -> symbolSizeRows
    int symbolSizeColumns -> symbolSizeColumns
    int dataRegionSizeRows -> dataRegionSizeRows
    int dataRegionSizeColumns -> dataRegionSizeColumns
    com.google.zxing.datamatrix.decoder.Version$ECBlocks ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int getSymbolSizeRows() -> getSymbolSizeRows
    int getSymbolSizeColumns() -> getSymbolSizeColumns
    int getDataRegionSizeRows() -> getDataRegionSizeRows
    int getDataRegionSizeColumns() -> getDataRegionSizeColumns
    int getTotalCodewords() -> getTotalCodewords
    com.google.zxing.datamatrix.decoder.Version$ECBlocks getECBlocks() -> getECBlocks
    com.google.zxing.datamatrix.decoder.Version getVersionForDimensions(int,int) -> getVersionForDimensions
    java.lang.String toString() -> toString
    com.google.zxing.datamatrix.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.datamatrix.decoder.Version$ECB -> com.google.zxing.datamatrix.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.datamatrix.decoder.Version$ECBlocks -> com.google.zxing.datamatrix.decoder.Version$ECBlocks:
    int ecCodewords -> ecCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewords() -> getECCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.datamatrix.detector.Detector -> com.google.zxing.datamatrix.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector -> rectangleDetector
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.ResultPoint correctTopRightRectangular(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> correctTopRightRectangular
    com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> correctTopRight
    boolean isValid(com.google.zxing.ResultPoint) -> isValid
    int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    void increment(java.util.Map,com.google.zxing.ResultPoint) -> increment
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> sampleGrid
    com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> transitionsBetween
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions:
    com.google.zxing.ResultPoint from -> from
    com.google.zxing.ResultPoint to -> to
    int transitions -> transitions
    com.google.zxing.ResultPoint getFrom() -> getFrom
    com.google.zxing.ResultPoint getTo() -> getTo
    int getTransitions() -> getTransitions
    java.lang.String toString() -> toString
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator:
    int compare(com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions,com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.datamatrix.encoder.ASCIIEncoder -> com.google.zxing.datamatrix.encoder.ASCIIEncoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    char encodeASCIIDigits(char,char) -> encodeASCIIDigits
com.google.zxing.datamatrix.encoder.Base256Encoder -> com.google.zxing.datamatrix.encoder.Base256Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    char randomize255State(char,int) -> randomize255State
com.google.zxing.datamatrix.encoder.C40Encoder -> com.google.zxing.datamatrix.encoder.C40Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    int backtrackOneCharacter(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder,java.lang.StringBuilder,int) -> backtrackOneCharacter
    void writeNextTriplet(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> writeNextTriplet
    void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> handleEOD
    int encodeChar(char,java.lang.StringBuilder) -> encodeChar
    java.lang.String encodeToCodewords(java.lang.CharSequence,int) -> encodeToCodewords
com.google.zxing.datamatrix.encoder.DataMatrixSymbolInfo144 -> com.google.zxing.datamatrix.encoder.DataMatrixSymbolInfo144:
    int getInterleavedBlockCount() -> getInterleavedBlockCount
    int getDataLengthForInterleavedBlock(int) -> getDataLengthForInterleavedBlock
com.google.zxing.datamatrix.encoder.DefaultPlacement -> com.google.zxing.datamatrix.encoder.DefaultPlacement:
    java.lang.CharSequence codewords -> codewords
    int numrows -> numrows
    int numcols -> numcols
    byte[] bits -> bits
    int getNumrows() -> getNumrows
    int getNumcols() -> getNumcols
    byte[] getBits() -> getBits
    boolean getBit(int,int) -> getBit
    void setBit(int,int,boolean) -> setBit
    boolean hasBit(int,int) -> hasBit
    void place() -> place
    void module(int,int,int,int) -> module
    void utah(int,int,int) -> utah
    void corner1(int) -> corner1
    void corner2(int) -> corner2
    void corner3(int) -> corner3
    void corner4(int) -> corner4
com.google.zxing.datamatrix.encoder.EdifactEncoder -> com.google.zxing.datamatrix.encoder.EdifactEncoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.CharSequence) -> handleEOD
    void encodeChar(char,java.lang.StringBuilder) -> encodeChar
    java.lang.String encodeToCodewords(java.lang.CharSequence,int) -> encodeToCodewords
com.google.zxing.datamatrix.encoder.Encoder -> com.google.zxing.datamatrix.encoder.Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
com.google.zxing.datamatrix.encoder.EncoderContext -> com.google.zxing.datamatrix.encoder.EncoderContext:
    java.lang.String msg -> msg
    com.google.zxing.datamatrix.encoder.SymbolShapeHint shape -> shape
    com.google.zxing.Dimension minSize -> minSize
    com.google.zxing.Dimension maxSize -> maxSize
    java.lang.StringBuilder codewords -> codewords
    int pos -> pos
    int newEncoding -> newEncoding
    com.google.zxing.datamatrix.encoder.SymbolInfo symbolInfo -> symbolInfo
    int skipAtEnd -> skipAtEnd
    void setSymbolShape(com.google.zxing.datamatrix.encoder.SymbolShapeHint) -> setSymbolShape
    void setSizeConstraints(com.google.zxing.Dimension,com.google.zxing.Dimension) -> setSizeConstraints
    java.lang.String getMessage() -> getMessage
    void setSkipAtEnd(int) -> setSkipAtEnd
    char getCurrentChar() -> getCurrentChar
    char getCurrent() -> getCurrent
    java.lang.StringBuilder getCodewords() -> getCodewords
    void writeCodewords(java.lang.String) -> writeCodewords
    void writeCodeword(char) -> writeCodeword
    int getCodewordCount() -> getCodewordCount
    int getNewEncoding() -> getNewEncoding
    void signalEncoderChange(int) -> signalEncoderChange
    void resetEncoderSignal() -> resetEncoderSignal
    boolean hasMoreCharacters() -> hasMoreCharacters
    int getTotalMessageCharCount() -> getTotalMessageCharCount
    int getRemainingCharacters() -> getRemainingCharacters
    com.google.zxing.datamatrix.encoder.SymbolInfo getSymbolInfo() -> getSymbolInfo
    void updateSymbolInfo() -> updateSymbolInfo
    void updateSymbolInfo(int) -> updateSymbolInfo
    void resetSymbolInfo() -> resetSymbolInfo
com.google.zxing.datamatrix.encoder.ErrorCorrection -> com.google.zxing.datamatrix.encoder.ErrorCorrection:
    int[] FACTOR_SETS -> FACTOR_SETS
    int[][] FACTORS -> FACTORS
    int MODULO_VALUE -> MODULO_VALUE
    int[] LOG -> LOG
    int[] ALOG -> ALOG
    java.lang.String encodeECC200(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolInfo) -> encodeECC200
    java.lang.String createECCBlock(java.lang.CharSequence,int) -> createECCBlock
    java.lang.String createECCBlock(java.lang.CharSequence,int,int,int) -> createECCBlock
com.google.zxing.datamatrix.encoder.HighLevelEncoder -> com.google.zxing.datamatrix.encoder.HighLevelEncoder:
    char PAD -> PAD
    char LATCH_TO_C40 -> LATCH_TO_C40
    char LATCH_TO_BASE256 -> LATCH_TO_BASE256
    char UPPER_SHIFT -> UPPER_SHIFT
    char MACRO_05 -> MACRO_05
    char MACRO_06 -> MACRO_06
    char LATCH_TO_ANSIX12 -> LATCH_TO_ANSIX12
    char LATCH_TO_TEXT -> LATCH_TO_TEXT
    char LATCH_TO_EDIFACT -> LATCH_TO_EDIFACT
    char C40_UNLATCH -> C40_UNLATCH
    char X12_UNLATCH -> X12_UNLATCH
    java.lang.String MACRO_05_HEADER -> MACRO_05_HEADER
    java.lang.String MACRO_06_HEADER -> MACRO_06_HEADER
    java.lang.String MACRO_TRAILER -> MACRO_TRAILER
    int ASCII_ENCODATION -> ASCII_ENCODATION
    int C40_ENCODATION -> C40_ENCODATION
    int TEXT_ENCODATION -> TEXT_ENCODATION
    int X12_ENCODATION -> X12_ENCODATION
    int EDIFACT_ENCODATION -> EDIFACT_ENCODATION
    int BASE256_ENCODATION -> BASE256_ENCODATION
    char randomize253State(char,int) -> randomize253State
    java.lang.String encodeHighLevel(java.lang.String) -> encodeHighLevel
    java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension) -> encodeHighLevel
    int lookAheadTest(java.lang.CharSequence,int,int) -> lookAheadTest
    int findMinimums(float[],int[],int,byte[]) -> findMinimums
    int getMinimumCount(byte[]) -> getMinimumCount
    boolean isDigit(char) -> isDigit
    boolean isExtendedASCII(char) -> isExtendedASCII
    boolean isNativeC40(char) -> isNativeC40
    boolean isNativeText(char) -> isNativeText
    boolean isNativeX12(char) -> isNativeX12
    boolean isX12TermSep(char) -> isX12TermSep
    boolean isNativeEDIFACT(char) -> isNativeEDIFACT
    boolean isSpecialB256(char) -> isSpecialB256
    int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    void illegalCharacter(char) -> illegalCharacter
com.google.zxing.datamatrix.encoder.SymbolInfo -> com.google.zxing.datamatrix.encoder.SymbolInfo:
    com.google.zxing.datamatrix.encoder.SymbolInfo[] PROD_SYMBOLS -> PROD_SYMBOLS
    com.google.zxing.datamatrix.encoder.SymbolInfo[] symbols -> symbols
    boolean rectangular -> rectangular
    int dataCapacity -> dataCapacity
    int errorCodewords -> errorCodewords
    int matrixWidth -> matrixWidth
    int matrixHeight -> matrixHeight
    int dataRegions -> dataRegions
    int rsBlockData -> rsBlockData
    int rsBlockError -> rsBlockError
    void overrideSymbolSet(com.google.zxing.datamatrix.encoder.SymbolInfo[]) -> overrideSymbolSet
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,boolean,boolean) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint,boolean) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension,boolean) -> lookup
    int getHorizontalDataRegions() -> getHorizontalDataRegions
    int getVerticalDataRegions() -> getVerticalDataRegions
    int getSymbolDataWidth() -> getSymbolDataWidth
    int getSymbolDataHeight() -> getSymbolDataHeight
    int getSymbolWidth() -> getSymbolWidth
    int getSymbolHeight() -> getSymbolHeight
    int getCodewordCount() -> getCodewordCount
    int getInterleavedBlockCount() -> getInterleavedBlockCount
    int getDataCapacity() -> getDataCapacity
    int getErrorCodewords() -> getErrorCodewords
    int getDataLengthForInterleavedBlock(int) -> getDataLengthForInterleavedBlock
    int getErrorLengthForInterleavedBlock(int) -> getErrorLengthForInterleavedBlock
    java.lang.String toString() -> toString
com.google.zxing.datamatrix.encoder.SymbolShapeHint -> com.google.zxing.datamatrix.encoder.SymbolShapeHint:
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_NONE -> FORCE_NONE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_SQUARE -> FORCE_SQUARE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_RECTANGLE -> FORCE_RECTANGLE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint[] ENUM$VALUES -> ENUM$VALUES
    com.google.zxing.datamatrix.encoder.SymbolShapeHint[] values() -> values
    com.google.zxing.datamatrix.encoder.SymbolShapeHint valueOf(java.lang.String) -> valueOf
com.google.zxing.datamatrix.encoder.TextEncoder -> com.google.zxing.datamatrix.encoder.TextEncoder:
    int getEncodingMode() -> getEncodingMode
    int encodeChar(char,java.lang.StringBuilder) -> encodeChar
com.google.zxing.datamatrix.encoder.X12Encoder -> com.google.zxing.datamatrix.encoder.X12Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    int encodeChar(char,java.lang.StringBuilder) -> encodeChar
    void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> handleEOD
com.google.zxing.maxicode.MaxiCodeReader -> com.google.zxing.maxicode.MaxiCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    int MATRIX_WIDTH -> MATRIX_WIDTH
    int MATRIX_HEIGHT -> MATRIX_HEIGHT
    com.google.zxing.maxicode.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
com.google.zxing.maxicode.decoder.BitMatrixParser -> com.google.zxing.maxicode.decoder.BitMatrixParser:
    int[][] BITNR -> BITNR
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    byte[] readCodewords() -> readCodewords
com.google.zxing.maxicode.decoder.DecodedBitStreamParser -> com.google.zxing.maxicode.decoder.DecodedBitStreamParser:
    char SHIFTA -> SHIFTA
    char SHIFTB -> SHIFTB
    char SHIFTC -> SHIFTC
    char SHIFTD -> SHIFTD
    char SHIFTE -> SHIFTE
    char TWOSHIFTA -> TWOSHIFTA
    char THREESHIFTA -> THREESHIFTA
    char LATCHA -> LATCHA
    char LATCHB -> LATCHB
    char LOCK -> LOCK
    char ECI -> ECI
    char NS -> NS
    char PAD -> PAD
    char FS -> FS
    char GS -> GS
    char RS -> RS
    java.text.NumberFormat NINE_DIGITS -> NINE_DIGITS
    java.text.NumberFormat THREE_DIGITS -> THREE_DIGITS
    java.lang.String[] SETS -> SETS
    com.google.zxing.common.DecoderResult decode(byte[],int) -> decode
    int getBit(int,byte[]) -> getBit
    int getInt(byte[],byte[]) -> getInt
    int getCountry(byte[]) -> getCountry
    int getServiceClass(byte[]) -> getServiceClass
    int getPostCode2Length(byte[]) -> getPostCode2Length
    int getPostCode2(byte[]) -> getPostCode2
    java.lang.String getPostCode3(byte[]) -> getPostCode3
    java.lang.String getMessage(byte[],int,int) -> getMessage
com.google.zxing.maxicode.decoder.Decoder -> com.google.zxing.maxicode.decoder.Decoder:
    int ALL -> ALL
    int EVEN -> EVEN
    int ODD -> ODD
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    void correctErrors(byte[],int,int,int,int) -> correctErrors
com.google.zxing.multi.ByQuadrantReader -> com.google.zxing.multi.ByQuadrantReader:
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    void makeAbsolute(com.google.zxing.ResultPoint[],int,int) -> makeAbsolute
com.google.zxing.multi.GenericMultipleBarcodeReader -> com.google.zxing.multi.GenericMultipleBarcodeReader:
    int MIN_DIMENSION_TO_RECUR -> MIN_DIMENSION_TO_RECUR
    int MAX_DEPTH -> MAX_DEPTH
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    void doDecodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map,java.util.List,int,int,int) -> doDecodeMultiple
    com.google.zxing.Result translateResultPoints(com.google.zxing.Result,int,int) -> translateResultPoints
com.google.zxing.multi.MultipleBarcodeReader -> com.google.zxing.multi.MultipleBarcodeReader:
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
com.google.zxing.multi.qrcode.QRCodeMultiReader -> com.google.zxing.multi.qrcode.QRCodeMultiReader:
    com.google.zxing.Result[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    java.util.List processStructuredAppend(java.util.List) -> processStructuredAppend
com.google.zxing.multi.qrcode.QRCodeMultiReader$SAComparator -> com.google.zxing.multi.qrcode.QRCodeMultiReader$SAComparator:
    int compare(com.google.zxing.Result,com.google.zxing.Result) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.multi.qrcode.detector.MultiDetector -> com.google.zxing.multi.qrcode.detector.MultiDetector:
    com.google.zxing.common.DetectorResult[] EMPTY_DETECTOR_RESULTS -> EMPTY_DETECTOR_RESULTS
    com.google.zxing.common.DetectorResult[] detectMulti(java.util.Map) -> detectMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder:
    com.google.zxing.qrcode.detector.FinderPatternInfo[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    float MAX_MODULE_COUNT_PER_EDGE -> MAX_MODULE_COUNT_PER_EDGE
    float MIN_MODULE_COUNT_PER_EDGE -> MIN_MODULE_COUNT_PER_EDGE
    float DIFF_MODSIZE_CUTOFF_PERCENT -> DIFF_MODSIZE_CUTOFF_PERCENT
    float DIFF_MODSIZE_CUTOFF -> DIFF_MODSIZE_CUTOFF
    com.google.zxing.qrcode.detector.FinderPattern[][] selectMutipleBestPatterns() -> selectMutipleBestPatterns
    com.google.zxing.qrcode.detector.FinderPatternInfo[] findMulti(java.util.Map) -> findMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator:
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.oned.CodaBarReader -> com.google.zxing.oned.CodaBarReader:
    float MAX_ACCEPTABLE -> MAX_ACCEPTABLE
    float PADDING -> PADDING
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int MIN_CHARACTER_LENGTH -> MIN_CHARACTER_LENGTH
    char[] STARTEND_ENCODING -> STARTEND_ENCODING
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    int counterLength -> counterLength
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void validatePattern(int) -> validatePattern
    void setCounters(com.google.zxing.common.BitArray) -> setCounters
    void counterAppend(int) -> counterAppend
    int findStartPattern() -> findStartPattern
    boolean arrayContains(char[],char) -> arrayContains
    int toNarrowWidePattern(int) -> toNarrowWidePattern
com.google.zxing.oned.CodaBarWriter -> com.google.zxing.oned.CodaBarWriter:
    char[] START_END_CHARS -> START_END_CHARS
    char[] ALT_START_END_CHARS -> ALT_START_END_CHARS
    char[] CHARS_WHICH_ARE_TEN_LENGTH_EACH_AFTER_DECODED -> CHARS_WHICH_ARE_TEN_LENGTH_EACH_AFTER_DECODED
    char DEFAULT_GUARD -> DEFAULT_GUARD
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.Code128Reader -> com.google.zxing.oned.Code128Reader:
    int[][] CODE_PATTERNS -> CODE_PATTERNS
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int CODE_SHIFT -> CODE_SHIFT
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_A -> CODE_CODE_A
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_A -> CODE_FNC_4_A
    int CODE_FNC_4_B -> CODE_FNC_4_B
    int CODE_START_A -> CODE_START_A
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_STOP -> CODE_STOP
    int[] findStartPattern(com.google.zxing.common.BitArray) -> findStartPattern
    int decodeCode(com.google.zxing.common.BitArray,int[],int) -> decodeCode
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.Code128Writer -> com.google.zxing.oned.Code128Writer:
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_STOP -> CODE_STOP
    char ESCAPE_FNC_1 -> ESCAPE_FNC_1
    char ESCAPE_FNC_2 -> ESCAPE_FNC_2
    char ESCAPE_FNC_3 -> ESCAPE_FNC_3
    char ESCAPE_FNC_4 -> ESCAPE_FNC_4
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_B -> CODE_FNC_4_B
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
    boolean isDigits(java.lang.CharSequence,int,int) -> isDigits
com.google.zxing.oned.Code39Reader -> com.google.zxing.oned.Code39Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    boolean usingCheckDigit -> usingCheckDigit
    boolean extendedMode -> extendedMode
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray,int[]) -> findAsteriskPattern
    int toNarrowWidePattern(int[]) -> toNarrowWidePattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
com.google.zxing.oned.Code39Writer -> com.google.zxing.oned.Code39Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
    void toIntArray(int,int[]) -> toIntArray
com.google.zxing.oned.Code93Reader -> com.google.zxing.oned.Code93Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray) -> findAsteriskPattern
    int toPattern(int[]) -> toPattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
    void checkChecksums(java.lang.CharSequence) -> checkChecksums
    void checkOneChecksum(java.lang.CharSequence,int,int) -> checkOneChecksum
com.google.zxing.oned.EAN13Reader -> com.google.zxing.oned.EAN13Reader:
    int[] FIRST_DIGIT_ENCODINGS -> FIRST_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    void determineFirstDigit(java.lang.StringBuilder,int) -> determineFirstDigit
com.google.zxing.oned.EAN13Writer -> com.google.zxing.oned.EAN13Writer:
    int CODE_WIDTH -> CODE_WIDTH
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.EAN8Reader -> com.google.zxing.oned.EAN8Reader:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.google.zxing.oned.EAN8Writer -> com.google.zxing.oned.EAN8Writer:
    int CODE_WIDTH -> CODE_WIDTH
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.EANManufacturerOrgSupport -> com.google.zxing.oned.EANManufacturerOrgSupport:
    java.util.List ranges -> ranges
    java.util.List countryIdentifiers -> countryIdentifiers
    java.lang.String lookupCountryIdentifier(java.lang.String) -> lookupCountryIdentifier
    void add(int[],java.lang.String) -> add
    void initIfNeeded() -> initIfNeeded
com.google.zxing.oned.ITFReader -> com.google.zxing.oned.ITFReader:
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int W -> W
    int N -> N
    int[] DEFAULT_ALLOWED_LENGTHS -> DEFAULT_ALLOWED_LENGTHS
    int narrowLineWidth -> narrowLineWidth
    int[] START_PATTERN -> START_PATTERN
    int[] END_PATTERN_REVERSED -> END_PATTERN_REVERSED
    int[][] PATTERNS -> PATTERNS
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void decodeMiddle(com.google.zxing.common.BitArray,int,int,java.lang.StringBuilder) -> decodeMiddle
    int[] decodeStart(com.google.zxing.common.BitArray) -> decodeStart
    void validateQuietZone(com.google.zxing.common.BitArray,int) -> validateQuietZone
    int skipWhiteSpace(com.google.zxing.common.BitArray) -> skipWhiteSpace
    int[] decodeEnd(com.google.zxing.common.BitArray) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,int[]) -> findGuardPattern
    int decodeDigit(int[]) -> decodeDigit
com.google.zxing.oned.ITFWriter -> com.google.zxing.oned.ITFWriter:
    int[] START_PATTERN -> START_PATTERN
    int[] END_PATTERN -> END_PATTERN
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.MultiFormatOneDReader -> com.google.zxing.oned.MultiFormatOneDReader:
    com.google.zxing.oned.OneDReader[] readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.MultiFormatUPCEANReader -> com.google.zxing.oned.MultiFormatUPCEANReader:
    com.google.zxing.oned.UPCEANReader[] readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.OneDReader -> com.google.zxing.oned.OneDReader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.Result doDecode(com.google.zxing.BinaryBitmap,java.util.Map) -> doDecode
    void recordPattern(com.google.zxing.common.BitArray,int,int[]) -> recordPattern
    void recordPatternInReverse(com.google.zxing.common.BitArray,int,int[]) -> recordPatternInReverse
    float patternMatchVariance(int[],int[],float) -> patternMatchVariance
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.OneDimensionalCodeWriter -> com.google.zxing.oned.OneDimensionalCodeWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix renderResult(boolean[],int,int,int) -> renderResult
    int appendPattern(boolean[],int,int[],boolean) -> appendPattern
    int getDefaultMargin() -> getDefaultMargin
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.UPCAReader -> com.google.zxing.oned.UPCAReader:
    com.google.zxing.oned.UPCEANReader ean13Reader -> ean13Reader
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.Result maybeReturnResult(com.google.zxing.Result) -> maybeReturnResult
com.google.zxing.oned.UPCAWriter -> com.google.zxing.oned.UPCAWriter:
    com.google.zxing.oned.EAN13Writer subWriter -> subWriter
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    java.lang.String preencode(java.lang.String) -> preencode
com.google.zxing.oned.UPCEANExtension2Support -> com.google.zxing.oned.UPCEANExtension2Support:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
com.google.zxing.oned.UPCEANExtension5Support -> com.google.zxing.oned.UPCEANExtension5Support:
    int[] CHECK_DIGIT_ENCODINGS -> CHECK_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    int extensionChecksum(java.lang.CharSequence) -> extensionChecksum
    int determineCheckDigit(int) -> determineCheckDigit
    java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
    java.lang.String parseExtension5String(java.lang.String) -> parseExtension5String
com.google.zxing.oned.UPCEANExtensionSupport -> com.google.zxing.oned.UPCEANExtensionSupport:
    int[] EXTENSION_START_PATTERN -> EXTENSION_START_PATTERN
    com.google.zxing.oned.UPCEANExtension2Support twoSupport -> twoSupport
    com.google.zxing.oned.UPCEANExtension5Support fiveSupport -> fiveSupport
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int) -> decodeRow
com.google.zxing.oned.UPCEANReader -> com.google.zxing.oned.UPCEANReader:
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int[] START_END_PATTERN -> START_END_PATTERN
    int[] MIDDLE_PATTERN -> MIDDLE_PATTERN
    int[][] L_PATTERNS -> L_PATTERNS
    int[][] L_AND_G_PATTERNS -> L_AND_G_PATTERNS
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.oned.UPCEANExtensionSupport extensionReader -> extensionReader
    com.google.zxing.oned.EANManufacturerOrgSupport eanManSupport -> eanManSupport
    int[] findStartGuardPattern(com.google.zxing.common.BitArray) -> findStartGuardPattern
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    boolean checkChecksum(java.lang.String) -> checkChecksum
    boolean checkStandardUPCEANChecksum(java.lang.CharSequence) -> checkStandardUPCEANChecksum
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> findGuardPattern
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[],int[]) -> findGuardPattern
    int decodeDigit(com.google.zxing.common.BitArray,int[],int,int[][]) -> decodeDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
com.google.zxing.oned.UPCEANWriter -> com.google.zxing.oned.UPCEANWriter:
    int getDefaultMargin() -> getDefaultMargin
com.google.zxing.oned.UPCEReader -> com.google.zxing.oned.UPCEReader:
    int[] MIDDLE_END_PATTERN -> MIDDLE_END_PATTERN
    int[][] NUMSYS_AND_CHECK_DIGIT_PATTERNS -> NUMSYS_AND_CHECK_DIGIT_PATTERNS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    boolean checkChecksum(java.lang.String) -> checkChecksum
    void determineNumSysAndCheckDigit(java.lang.StringBuilder,int) -> determineNumSysAndCheckDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.lang.String convertUPCEtoUPCA(java.lang.String) -> convertUPCEtoUPCA
com.google.zxing.oned.rss.AbstractRSSReader -> com.google.zxing.oned.rss.AbstractRSSReader:
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    float MIN_FINDER_PATTERN_RATIO -> MIN_FINDER_PATTERN_RATIO
    float MAX_FINDER_PATTERN_RATIO -> MAX_FINDER_PATTERN_RATIO
    int[] decodeFinderCounters -> decodeFinderCounters
    int[] dataCharacterCounters -> dataCharacterCounters
    float[] oddRoundingErrors -> oddRoundingErrors
    float[] evenRoundingErrors -> evenRoundingErrors
    int[] oddCounts -> oddCounts
    int[] evenCounts -> evenCounts
    int[] getDecodeFinderCounters() -> getDecodeFinderCounters
    int[] getDataCharacterCounters() -> getDataCharacterCounters
    float[] getOddRoundingErrors() -> getOddRoundingErrors
    float[] getEvenRoundingErrors() -> getEvenRoundingErrors
    int[] getOddCounts() -> getOddCounts
    int[] getEvenCounts() -> getEvenCounts
    int parseFinderValue(int[],int[][]) -> parseFinderValue
    int count(int[]) -> count
    void increment(int[],float[]) -> increment
    void decrement(int[],float[]) -> decrement
    boolean isFinderPattern(int[]) -> isFinderPattern
com.google.zxing.oned.rss.DataCharacter -> com.google.zxing.oned.rss.DataCharacter:
    int value -> value
    int checksumPortion -> checksumPortion
    int getValue() -> getValue
    int getChecksumPortion() -> getChecksumPortion
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.zxing.oned.rss.FinderPattern -> com.google.zxing.oned.rss.FinderPattern:
    int value -> value
    int[] startEnd -> startEnd
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    int getValue() -> getValue
    int[] getStartEnd() -> getStartEnd
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.zxing.oned.rss.Pair -> com.google.zxing.oned.rss.Pair:
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    int count -> count
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    int getCount() -> getCount
    void incrementCount() -> incrementCount
com.google.zxing.oned.rss.RSS14Reader -> com.google.zxing.oned.rss.RSS14Reader:
    int[] OUTSIDE_EVEN_TOTAL_SUBSET -> OUTSIDE_EVEN_TOTAL_SUBSET
    int[] INSIDE_ODD_TOTAL_SUBSET -> INSIDE_ODD_TOTAL_SUBSET
    int[] OUTSIDE_GSUM -> OUTSIDE_GSUM
    int[] INSIDE_GSUM -> INSIDE_GSUM
    int[] OUTSIDE_ODD_WIDEST -> OUTSIDE_ODD_WIDEST
    int[] INSIDE_ODD_WIDEST -> INSIDE_ODD_WIDEST
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    java.util.List possibleLeftPairs -> possibleLeftPairs
    java.util.List possibleRightPairs -> possibleRightPairs
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void addOrTally(java.util.Collection,com.google.zxing.oned.rss.Pair) -> addOrTally
    void reset() -> reset
    com.google.zxing.Result constructResult(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> constructResult
    boolean checkChecksum(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> checkChecksum
    com.google.zxing.oned.rss.Pair decodePair(com.google.zxing.common.BitArray,boolean,int,java.util.Map) -> decodePair
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean) -> decodeDataCharacter
    int[] findFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> findFinderPattern
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> parseFoundFinderPattern
    void adjustOddEvenCounts(boolean,int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.RSSUtils -> com.google.zxing.oned.rss.RSSUtils:
    int getRSSvalue(int[],int,boolean) -> getRSSvalue
    int combins(int,int) -> combins
com.google.zxing.oned.rss.expanded.BitArrayBuilder -> com.google.zxing.oned.rss.expanded.BitArrayBuilder:
    com.google.zxing.common.BitArray buildBitArray(java.util.List) -> buildBitArray
com.google.zxing.oned.rss.expanded.ExpandedPair -> com.google.zxing.oned.rss.expanded.ExpandedPair:
    boolean mayBeLast -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter leftChar -> leftChar
    com.google.zxing.oned.rss.DataCharacter rightChar -> rightChar
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    boolean mayBeLast() -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter getLeftChar() -> getLeftChar
    com.google.zxing.oned.rss.DataCharacter getRightChar() -> getRightChar
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    boolean mustBeLast() -> mustBeLast
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    int hashCode() -> hashCode
    int hashNotNull(java.lang.Object) -> hashNotNull
com.google.zxing.oned.rss.expanded.ExpandedRow -> com.google.zxing.oned.rss.expanded.ExpandedRow:
    java.util.List pairs -> pairs
    int rowNumber -> rowNumber
    boolean wasReversed -> wasReversed
    java.util.List getPairs() -> getPairs
    int getRowNumber() -> getRowNumber
    boolean isReversed() -> isReversed
    boolean isEquivalent(java.util.List) -> isEquivalent
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.zxing.oned.rss.expanded.RSSExpandedReader -> com.google.zxing.oned.rss.expanded.RSSExpandedReader:
    int[] SYMBOL_WIDEST -> SYMBOL_WIDEST
    int[] EVEN_TOTAL_SUBSET -> EVEN_TOTAL_SUBSET
    int[] GSUM -> GSUM
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    int[][] WEIGHTS -> WEIGHTS
    int FINDER_PAT_A -> FINDER_PAT_A
    int FINDER_PAT_B -> FINDER_PAT_B
    int FINDER_PAT_C -> FINDER_PAT_C
    int FINDER_PAT_D -> FINDER_PAT_D
    int FINDER_PAT_E -> FINDER_PAT_E
    int FINDER_PAT_F -> FINDER_PAT_F
    int[][] FINDER_PATTERN_SEQUENCES -> FINDER_PATTERN_SEQUENCES
    int MAX_PAIRS -> MAX_PAIRS
    java.util.List pairs -> pairs
    java.util.List rows -> rows
    int[] startEnd -> startEnd
    boolean startFromEven -> startFromEven
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
    java.util.List decodeRow2pairs(int,com.google.zxing.common.BitArray) -> decodeRow2pairs
    java.util.List checkRows(boolean) -> checkRows
    java.util.List checkRows(java.util.List,int) -> checkRows
    boolean isValidSequence(java.util.List) -> isValidSequence
    void storeRow(int,boolean) -> storeRow
    void removePartialRows(java.util.List,java.util.List) -> removePartialRows
    boolean isPartialRow(java.lang.Iterable,java.lang.Iterable) -> isPartialRow
    java.util.List getRows() -> getRows
    com.google.zxing.Result constructResult(java.util.List) -> constructResult
    boolean checkChecksum() -> checkChecksum
    int getNextSecondBar(com.google.zxing.common.BitArray,int) -> getNextSecondBar
    com.google.zxing.oned.rss.expanded.ExpandedPair retrieveNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> retrieveNextPair
    void findNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> findNextPair
    void reverseCounters(int[]) -> reverseCounters
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> parseFoundFinderPattern
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> decodeDataCharacter
    boolean isNotA1left(com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> isNotA1left
    void adjustOddEvenCounts(int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder -> com.google.zxing.oned.rss.expanded.decoders.AI013103decoder:
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder:
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    int FIRST_THREE_DIGITS_SIZE -> FIRST_THREE_DIGITS_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    int DATE_SIZE -> DATE_SIZE
    java.lang.String dateCode -> dateCode
    java.lang.String firstAIdigits -> firstAIdigits
    java.lang.String parseInformation() -> parseInformation
    void encodeCompressedDate(java.lang.StringBuilder,int) -> encodeCompressedDate
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs -> com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01decoder -> com.google.zxing.oned.rss.expanded.decoders.AI01decoder:
    int GTIN_SIZE -> GTIN_SIZE
    void encodeCompressedGtin(java.lang.StringBuilder,int) -> encodeCompressedGtin
    void encodeCompressedGtinWithoutAI(java.lang.StringBuilder,int,int) -> encodeCompressedGtinWithoutAI
    void appendCheckDigit(java.lang.StringBuilder,int) -> appendCheckDigit
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder:
    void encodeCompressedWeight(java.lang.StringBuilder,int,int) -> encodeCompressedWeight
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder -> com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder generalDecoder -> generalDecoder
    com.google.zxing.common.BitArray getInformation() -> getInformation
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder getGeneralDecoder() -> getGeneralDecoder
    java.lang.String parseInformation() -> parseInformation
    com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder createDecoder(com.google.zxing.common.BitArray) -> createDecoder
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder -> com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult -> com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult:
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodedInformation -> decodedInformation
    boolean finished -> finished
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation getDecodedInformation() -> getDecodedInformation
    boolean isFinished() -> isFinished
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState:
    int position -> position
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State encoding -> encoding
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    void incrementPosition(int) -> incrementPosition
    boolean isAlpha() -> isAlpha
    boolean isNumeric() -> isNumeric
    boolean isIsoIec646() -> isIsoIec646
    void setNumeric() -> setNumeric
    void setAlpha() -> setAlpha
    void setIsoIec646() -> setIsoIec646
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State:
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State NUMERIC -> NUMERIC
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ALPHA -> ALPHA
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ISO_IEC_646 -> ISO_IEC_646
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] ENUM$VALUES -> ENUM$VALUES
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] values() -> values
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String) -> valueOf
com.google.zxing.oned.rss.expanded.decoders.DecodedChar -> com.google.zxing.oned.rss.expanded.decoders.DecodedChar:
    char value -> value
    char FNC1 -> FNC1
    char getValue() -> getValue
    boolean isFNC1() -> isFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation -> com.google.zxing.oned.rss.expanded.decoders.DecodedInformation:
    java.lang.String newString -> newString
    int remainingValue -> remainingValue
    boolean remaining -> remaining
    java.lang.String getNewString() -> getNewString
    boolean isRemaining() -> isRemaining
    int getRemainingValue() -> getRemainingValue
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric -> com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric:
    int firstDigit -> firstDigit
    int secondDigit -> secondDigit
    int FNC1 -> FNC1
    int getFirstDigit() -> getFirstDigit
    int getSecondDigit() -> getSecondDigit
    int getValue() -> getValue
    boolean isFirstDigitFNC1() -> isFirstDigitFNC1
    boolean isSecondDigitFNC1() -> isSecondDigitFNC1
    boolean isAnyFNC1() -> isAnyFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedObject -> com.google.zxing.oned.rss.expanded.decoders.DecodedObject:
    int newPosition -> newPosition
    int getNewPosition() -> getNewPosition
com.google.zxing.oned.rss.expanded.decoders.FieldParser -> com.google.zxing.oned.rss.expanded.decoders.FieldParser:
    java.lang.Object VARIABLE_LENGTH -> VARIABLE_LENGTH
    java.lang.Object[][] TWO_DIGIT_DATA_LENGTH -> TWO_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_DATA_LENGTH -> THREE_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH -> THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH
    java.lang.Object[][] FOUR_DIGIT_DATA_LENGTH -> FOUR_DIGIT_DATA_LENGTH
    java.lang.String parseFieldsInGeneralPurpose(java.lang.String) -> parseFieldsInGeneralPurpose
    java.lang.String processFixedAI(int,int,java.lang.String) -> processFixedAI
    java.lang.String processVariableAI(int,int,java.lang.String) -> processVariableAI
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder -> com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState current -> current
    java.lang.StringBuilder buffer -> buffer
    java.lang.String decodeAllCodes(java.lang.StringBuilder,int) -> decodeAllCodes
    boolean isStillNumeric(int) -> isStillNumeric
    com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric decodeNumeric(int) -> decodeNumeric
    int extractNumericValueFromBitArray(int,int) -> extractNumericValueFromBitArray
    int extractNumericValueFromBitArray(com.google.zxing.common.BitArray,int,int) -> extractNumericValueFromBitArray
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodeGeneralPurposeField(int,java.lang.String) -> decodeGeneralPurposeField
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation parseBlocks() -> parseBlocks
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseNumericBlock() -> parseNumericBlock
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseIsoIec646Block() -> parseIsoIec646Block
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseAlphaBlock() -> parseAlphaBlock
    boolean isStillIsoIec646(int) -> isStillIsoIec646
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeIsoIec646(int) -> decodeIsoIec646
    boolean isStillAlpha(int) -> isStillAlpha
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeAlphanumeric(int) -> decodeAlphanumeric
    boolean isAlphaTo646ToAlphaLatch(int) -> isAlphaTo646ToAlphaLatch
    boolean isAlphaOr646ToNumericLatch(int) -> isAlphaOr646ToNumericLatch
    boolean isNumericToAlphaNumericLatch(int) -> isNumericToAlphaNumericLatch
com.google.zxing.pdf417.PDF417Common -> com.google.zxing.pdf417.PDF417Common:
    int NUMBER_OF_CODEWORDS -> NUMBER_OF_CODEWORDS
    int MAX_CODEWORDS_IN_BARCODE -> MAX_CODEWORDS_IN_BARCODE
    int MIN_ROWS_IN_BARCODE -> MIN_ROWS_IN_BARCODE
    int MAX_ROWS_IN_BARCODE -> MAX_ROWS_IN_BARCODE
    int MODULES_IN_CODEWORD -> MODULES_IN_CODEWORD
    int MODULES_IN_STOP_PATTERN -> MODULES_IN_STOP_PATTERN
    int BARS_IN_MODULE -> BARS_IN_MODULE
    int[] EMPTY_INT_ARRAY -> EMPTY_INT_ARRAY
    int[] SYMBOL_TABLE -> SYMBOL_TABLE
    int[] CODEWORD_TABLE -> CODEWORD_TABLE
    int getBitCountSum(int[]) -> getBitCountSum
    int[] toIntArray(java.util.Collection) -> toIntArray
    int getCodeword(int) -> getCodeword
com.google.zxing.pdf417.PDF417Reader -> com.google.zxing.pdf417.PDF417Reader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    com.google.zxing.Result[] decode(com.google.zxing.BinaryBitmap,java.util.Map,boolean) -> decode
    int getMaxWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> getMaxWidth
    int getMinWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> getMinWidth
    int getMaxCodewordWidth(com.google.zxing.ResultPoint[]) -> getMaxCodewordWidth
    int getMinCodewordWidth(com.google.zxing.ResultPoint[]) -> getMinCodewordWidth
    void reset() -> reset
com.google.zxing.pdf417.PDF417ResultMetadata -> com.google.zxing.pdf417.PDF417ResultMetadata:
    int segmentIndex -> segmentIndex
    java.lang.String fileId -> fileId
    int[] optionalData -> optionalData
    boolean lastSegment -> lastSegment
    int getSegmentIndex() -> getSegmentIndex
    void setSegmentIndex(int) -> setSegmentIndex
    java.lang.String getFileId() -> getFileId
    void setFileId(java.lang.String) -> setFileId
    int[] getOptionalData() -> getOptionalData
    void setOptionalData(int[]) -> setOptionalData
    boolean isLastSegment() -> isLastSegment
    void setLastSegment(boolean) -> setLastSegment
com.google.zxing.pdf417.PDF417Writer -> com.google.zxing.pdf417.PDF417Writer:
    int WHITE_SPACE -> WHITE_SPACE
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix bitMatrixFromEncoder(com.google.zxing.pdf417.encoder.PDF417,java.lang.String,int,int,int) -> bitMatrixFromEncoder
    com.google.zxing.common.BitMatrix bitMatrixFrombitArray(byte[][],int) -> bitMatrixFrombitArray
    byte[][] rotateArray(byte[][]) -> rotateArray
com.google.zxing.pdf417.decoder.BarcodeMetadata -> com.google.zxing.pdf417.decoder.BarcodeMetadata:
    int columnCount -> columnCount
    int errorCorrectionLevel -> errorCorrectionLevel
    int rowCountUpperPart -> rowCountUpperPart
    int rowCountLowerPart -> rowCountLowerPart
    int rowCount -> rowCount
    int getColumnCount() -> getColumnCount
    int getErrorCorrectionLevel() -> getErrorCorrectionLevel
    int getRowCount() -> getRowCount
    int getRowCountUpperPart() -> getRowCountUpperPart
    int getRowCountLowerPart() -> getRowCountLowerPart
com.google.zxing.pdf417.decoder.BarcodeValue -> com.google.zxing.pdf417.decoder.BarcodeValue:
    java.util.Map values -> values
    void setValue(int) -> setValue
    int[] getValue() -> getValue
    java.lang.Integer getConfidence(int) -> getConfidence
com.google.zxing.pdf417.decoder.BoundingBox -> com.google.zxing.pdf417.decoder.BoundingBox:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPoint topLeft -> topLeft
    com.google.zxing.ResultPoint bottomLeft -> bottomLeft
    com.google.zxing.ResultPoint topRight -> topRight
    com.google.zxing.ResultPoint bottomRight -> bottomRight
    int minX -> minX
    int maxX -> maxX
    int minY -> minY
    int maxY -> maxY
    void init(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> init
    com.google.zxing.pdf417.decoder.BoundingBox merge(com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.pdf417.decoder.BoundingBox) -> merge
    com.google.zxing.pdf417.decoder.BoundingBox addMissingRows(int,int,boolean) -> addMissingRows
    void calculateMinMaxValues() -> calculateMinMaxValues
    int getMinX() -> getMinX
    int getMaxX() -> getMaxX
    int getMinY() -> getMinY
    int getMaxY() -> getMaxY
    com.google.zxing.ResultPoint getTopLeft() -> getTopLeft
    com.google.zxing.ResultPoint getTopRight() -> getTopRight
    com.google.zxing.ResultPoint getBottomLeft() -> getBottomLeft
    com.google.zxing.ResultPoint getBottomRight() -> getBottomRight
com.google.zxing.pdf417.decoder.Codeword -> com.google.zxing.pdf417.decoder.Codeword:
    int BARCODE_ROW_UNKNOWN -> BARCODE_ROW_UNKNOWN
    int startX -> startX
    int endX -> endX
    int bucket -> bucket
    int value -> value
    int rowNumber -> rowNumber
    boolean hasValidRowNumber() -> hasValidRowNumber
    boolean isValidRowNumber(int) -> isValidRowNumber
    void setRowNumberAsRowIndicatorColumn() -> setRowNumberAsRowIndicatorColumn
    int getWidth() -> getWidth
    int getStartX() -> getStartX
    int getEndX() -> getEndX
    int getBucket() -> getBucket
    int getValue() -> getValue
    int getRowNumber() -> getRowNumber
    void setRowNumber(int) -> setRowNumber
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DecodedBitStreamParser -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser:
    int TEXT_COMPACTION_MODE_LATCH -> TEXT_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH -> BYTE_COMPACTION_MODE_LATCH
    int NUMERIC_COMPACTION_MODE_LATCH -> NUMERIC_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH_6 -> BYTE_COMPACTION_MODE_LATCH_6
    int ECI_USER_DEFINED -> ECI_USER_DEFINED
    int ECI_GENERAL_PURPOSE -> ECI_GENERAL_PURPOSE
    int ECI_CHARSET -> ECI_CHARSET
    int BEGIN_MACRO_PDF417_CONTROL_BLOCK -> BEGIN_MACRO_PDF417_CONTROL_BLOCK
    int BEGIN_MACRO_PDF417_OPTIONAL_FIELD -> BEGIN_MACRO_PDF417_OPTIONAL_FIELD
    int MACRO_PDF417_TERMINATOR -> MACRO_PDF417_TERMINATOR
    int MODE_SHIFT_TO_BYTE_COMPACTION_MODE -> MODE_SHIFT_TO_BYTE_COMPACTION_MODE
    int MAX_NUMERIC_CODEWORDS -> MAX_NUMERIC_CODEWORDS
    int PL -> PL
    int LL -> LL
    int AS -> AS
    int ML -> ML
    int AL -> AL
    int PS -> PS
    int PAL -> PAL
    char[] PUNCT_CHARS -> PUNCT_CHARS
    char[] MIXED_CHARS -> MIXED_CHARS
    java.nio.charset.Charset DEFAULT_ENCODING -> DEFAULT_ENCODING
    java.math.BigInteger[] EXP900 -> EXP900
    int NUMBER_OF_SEQUENCE_CODEWORDS -> NUMBER_OF_SEQUENCE_CODEWORDS
    int[] $SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode -> $SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode
    com.google.zxing.common.DecoderResult decode(int[],java.lang.String) -> decode
    int decodeMacroBlock(int[],int,com.google.zxing.pdf417.PDF417ResultMetadata) -> decodeMacroBlock
    int textCompaction(int[],int,java.lang.StringBuilder) -> textCompaction
    void decodeTextCompaction(int[],int[],int,java.lang.StringBuilder) -> decodeTextCompaction
    int byteCompaction(int,int[],java.nio.charset.Charset,int,java.lang.StringBuilder) -> byteCompaction
    int numericCompaction(int[],int,java.lang.StringBuilder) -> numericCompaction
    java.lang.String decodeBase900toBase10(int[],int) -> decodeBase900toBase10
    int[] $SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode() -> $SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA -> ALPHA
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode LOWER -> LOWER
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode MIXED -> MIXED
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT -> PUNCT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA_SHIFT -> ALPHA_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT_SHIFT -> PUNCT_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] ENUM$VALUES -> ENUM$VALUES
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.decoder.DetectionResult -> com.google.zxing.pdf417.decoder.DetectionResult:
    int ADJUST_ROW_NUMBER_SKIP -> ADJUST_ROW_NUMBER_SKIP
    com.google.zxing.pdf417.decoder.BarcodeMetadata barcodeMetadata -> barcodeMetadata
    com.google.zxing.pdf417.decoder.DetectionResultColumn[] detectionResultColumns -> detectionResultColumns
    com.google.zxing.pdf417.decoder.BoundingBox boundingBox -> boundingBox
    int barcodeColumnCount -> barcodeColumnCount
    com.google.zxing.pdf417.decoder.DetectionResultColumn[] getDetectionResultColumns() -> getDetectionResultColumns
    void adjustIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.DetectionResultColumn) -> adjustIndicatorColumnRowNumbers
    int adjustRowNumbers() -> adjustRowNumbers
    int adjustRowNumbersByRow() -> adjustRowNumbersByRow
    void adjustRowNumbersFromBothRI() -> adjustRowNumbersFromBothRI
    int adjustRowNumbersFromRRI() -> adjustRowNumbersFromRRI
    int adjustRowNumbersFromLRI() -> adjustRowNumbersFromLRI
    int adjustRowNumberIfValid(int,int,com.google.zxing.pdf417.decoder.Codeword) -> adjustRowNumberIfValid
    void adjustRowNumbers(int,int,com.google.zxing.pdf417.decoder.Codeword[]) -> adjustRowNumbers
    boolean adjustRowNumber(com.google.zxing.pdf417.decoder.Codeword,com.google.zxing.pdf417.decoder.Codeword) -> adjustRowNumber
    int getBarcodeColumnCount() -> getBarcodeColumnCount
    int getBarcodeRowCount() -> getBarcodeRowCount
    int getBarcodeECLevel() -> getBarcodeECLevel
    void setBoundingBox(com.google.zxing.pdf417.decoder.BoundingBox) -> setBoundingBox
    com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    void setDetectionResultColumn(int,com.google.zxing.pdf417.decoder.DetectionResultColumn) -> setDetectionResultColumn
    com.google.zxing.pdf417.decoder.DetectionResultColumn getDetectionResultColumn(int) -> getDetectionResultColumn
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DetectionResultColumn -> com.google.zxing.pdf417.decoder.DetectionResultColumn:
    int MAX_NEARBY_DISTANCE -> MAX_NEARBY_DISTANCE
    com.google.zxing.pdf417.decoder.BoundingBox boundingBox -> boundingBox
    com.google.zxing.pdf417.decoder.Codeword[] codewords -> codewords
    com.google.zxing.pdf417.decoder.Codeword getCodewordNearby(int) -> getCodewordNearby
    int imageRowToCodewordIndex(int) -> imageRowToCodewordIndex
    void setCodeword(int,com.google.zxing.pdf417.decoder.Codeword) -> setCodeword
    com.google.zxing.pdf417.decoder.Codeword getCodeword(int) -> getCodeword
    com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    com.google.zxing.pdf417.decoder.Codeword[] getCodewords() -> getCodewords
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn -> com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn:
    boolean isLeft -> isLeft
    void setRowNumbers() -> setRowNumbers
    int adjustCompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata) -> adjustCompleteIndicatorColumnRowNumbers
    int[] getRowHeights() -> getRowHeights
    int adjustIncompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata) -> adjustIncompleteIndicatorColumnRowNumbers
    com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata() -> getBarcodeMetadata
    void removeIncorrectCodewords(com.google.zxing.pdf417.decoder.Codeword[],com.google.zxing.pdf417.decoder.BarcodeMetadata) -> removeIncorrectCodewords
    boolean isLeft() -> isLeft
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder -> com.google.zxing.pdf417.decoder.PDF417CodewordDecoder:
    float[][] RATIOS_TABLE -> RATIOS_TABLE
    int getDecodedValue(int[]) -> getDecodedValue
    int[] sampleBitCounts(int[]) -> sampleBitCounts
    int getDecodedCodewordValue(int[]) -> getDecodedCodewordValue
    int getBitValue(int[]) -> getBitValue
    int getClosestDecodedValue(int[]) -> getClosestDecodedValue
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder -> com.google.zxing.pdf417.decoder.PDF417ScanningDecoder:
    int CODEWORD_SKEW_SIZE -> CODEWORD_SKEW_SIZE
    int MAX_ERRORS -> MAX_ERRORS
    int MAX_EC_CODEWORDS -> MAX_EC_CODEWORDS
    com.google.zxing.pdf417.decoder.ec.ErrorCorrection errorCorrection -> errorCorrection
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> decode
    com.google.zxing.pdf417.decoder.DetectionResult merge(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> merge
    com.google.zxing.pdf417.decoder.BoundingBox adjustBoundingBox(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> adjustBoundingBox
    int getMax(int[]) -> getMax
    com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> getBarcodeMetadata
    com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn getRowIndicatorColumn(com.google.zxing.common.BitMatrix,com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.ResultPoint,boolean,int,int) -> getRowIndicatorColumn
    void adjustCodewordCount(com.google.zxing.pdf417.decoder.DetectionResult,com.google.zxing.pdf417.decoder.BarcodeValue[][]) -> adjustCodewordCount
    com.google.zxing.common.DecoderResult createDecoderResult(com.google.zxing.pdf417.decoder.DetectionResult) -> createDecoderResult
    com.google.zxing.common.DecoderResult createDecoderResultFromAmbiguousValues(int,int[],int[],int[],int[][]) -> createDecoderResultFromAmbiguousValues
    com.google.zxing.pdf417.decoder.BarcodeValue[][] createBarcodeMatrix(com.google.zxing.pdf417.decoder.DetectionResult) -> createBarcodeMatrix
    boolean isValidBarcodeColumn(com.google.zxing.pdf417.decoder.DetectionResult,int) -> isValidBarcodeColumn
    int getStartColumn(com.google.zxing.pdf417.decoder.DetectionResult,int,int,boolean) -> getStartColumn
    com.google.zxing.pdf417.decoder.Codeword detectCodeword(com.google.zxing.common.BitMatrix,int,int,boolean,int,int,int,int) -> detectCodeword
    int[] getModuleBitCount(com.google.zxing.common.BitMatrix,int,int,boolean,int,int) -> getModuleBitCount
    int getNumberOfECCodeWords(int) -> getNumberOfECCodeWords
    int adjustCodewordStartColumn(com.google.zxing.common.BitMatrix,int,int,boolean,int,int) -> adjustCodewordStartColumn
    boolean checkCodewordSkew(int,int,int) -> checkCodewordSkew
    com.google.zxing.common.DecoderResult decodeCodewords(int[],int,int[]) -> decodeCodewords
    int correctErrors(int[],int[],int) -> correctErrors
    void verifyCodewordCount(int[],int) -> verifyCodewordCount
    int[] getBitCountForCodeword(int) -> getBitCountForCodeword
    int getCodewordBucketNumber(int) -> getCodewordBucketNumber
    int getCodewordBucketNumber(int[]) -> getCodewordBucketNumber
    java.lang.String toString(com.google.zxing.pdf417.decoder.BarcodeValue[][]) -> toString
com.google.zxing.pdf417.decoder.ec.ErrorCorrection -> com.google.zxing.pdf417.decoder.ec.ErrorCorrection:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> field
    int decode(int[],int,int[]) -> decode
    com.google.zxing.pdf417.decoder.ec.ModulusPoly[] runEuclideanAlgorithm(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int) -> runEuclideanAlgorithm
    int[] findErrorLocations(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> findErrorLocations
    int[] findErrorMagnitudes(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int[]) -> findErrorMagnitudes
com.google.zxing.pdf417.decoder.ec.ModulusGF -> com.google.zxing.pdf417.decoder.ec.ModulusGF:
    com.google.zxing.pdf417.decoder.ec.ModulusGF PDF417_GF -> PDF417_GF
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.pdf417.decoder.ec.ModulusPoly zero -> zero
    com.google.zxing.pdf417.decoder.ec.ModulusPoly one -> one
    int modulus -> modulus
    com.google.zxing.pdf417.decoder.ec.ModulusPoly getZero() -> getZero
    com.google.zxing.pdf417.decoder.ec.ModulusPoly getOne() -> getOne
    com.google.zxing.pdf417.decoder.ec.ModulusPoly buildMonomial(int,int) -> buildMonomial
    int add(int,int) -> add
    int subtract(int,int) -> subtract
    int exp(int) -> exp
    int log(int) -> log
    int inverse(int) -> inverse
    int multiply(int,int) -> multiply
    int getSize() -> getSize
com.google.zxing.pdf417.decoder.ec.ModulusPoly -> com.google.zxing.pdf417.decoder.ec.ModulusPoly:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> field
    int[] coefficients -> coefficients
    int[] getCoefficients() -> getCoefficients
    int getDegree() -> getDegree
    boolean isZero() -> isZero
    int getCoefficient(int) -> getCoefficient
    int evaluateAt(int) -> evaluateAt
    com.google.zxing.pdf417.decoder.ec.ModulusPoly add(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> add
    com.google.zxing.pdf417.decoder.ec.ModulusPoly subtract(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> subtract
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> multiply
    com.google.zxing.pdf417.decoder.ec.ModulusPoly negative() -> negative
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(int) -> multiply
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    com.google.zxing.pdf417.decoder.ec.ModulusPoly[] divide(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> divide
    java.lang.String toString() -> toString
com.google.zxing.pdf417.detector.Detector -> com.google.zxing.pdf417.detector.Detector:
    int[] INDEXES_START_PATTERN -> INDEXES_START_PATTERN
    int[] INDEXES_STOP_PATTERN -> INDEXES_STOP_PATTERN
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int[] START_PATTERN -> START_PATTERN
    int[] STOP_PATTERN -> STOP_PATTERN
    int MAX_PIXEL_DRIFT -> MAX_PIXEL_DRIFT
    int MAX_PATTERN_DRIFT -> MAX_PATTERN_DRIFT
    int SKIPPED_ROW_COUNT_MAX -> SKIPPED_ROW_COUNT_MAX
    int ROW_STEP -> ROW_STEP
    int BARCODE_MIN_HEIGHT -> BARCODE_MIN_HEIGHT
    com.google.zxing.pdf417.detector.PDF417DetectorResult detect(com.google.zxing.BinaryBitmap,java.util.Map,boolean) -> detect
    java.util.List detect(boolean,com.google.zxing.common.BitMatrix) -> detect
    com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix,int,int) -> findVertices
    void copyToResult(com.google.zxing.ResultPoint[],com.google.zxing.ResultPoint[],int[]) -> copyToResult
    com.google.zxing.ResultPoint[] findRowsWithPattern(com.google.zxing.common.BitMatrix,int,int,int,int,int[]) -> findRowsWithPattern
    int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[],int[]) -> findGuardPattern
    float patternMatchVariance(int[],int[],float) -> patternMatchVariance
com.google.zxing.pdf417.detector.PDF417DetectorResult -> com.google.zxing.pdf417.detector.PDF417DetectorResult:
    com.google.zxing.common.BitMatrix bits -> bits
    java.util.List points -> points
    com.google.zxing.common.BitMatrix getBits() -> getBits
    java.util.List getPoints() -> getPoints
com.google.zxing.pdf417.encoder.BarcodeMatrix -> com.google.zxing.pdf417.encoder.BarcodeMatrix:
    com.google.zxing.pdf417.encoder.BarcodeRow[] matrix -> matrix
    int currentRow -> currentRow
    int height -> height
    int width -> width
    void set(int,int,byte) -> set
    void startRow() -> startRow
    com.google.zxing.pdf417.encoder.BarcodeRow getCurrentRow() -> getCurrentRow
    byte[][] getMatrix() -> getMatrix
    byte[][] getScaledMatrix(int,int) -> getScaledMatrix
com.google.zxing.pdf417.encoder.BarcodeRow -> com.google.zxing.pdf417.encoder.BarcodeRow:
    byte[] row -> row
    int currentLocation -> currentLocation
    void set(int,byte) -> set
    void set(int,boolean) -> set
    void addBar(boolean,int) -> addBar
    byte[] getScaledRow(int) -> getScaledRow
com.google.zxing.pdf417.encoder.Compaction -> com.google.zxing.pdf417.encoder.Compaction:
    com.google.zxing.pdf417.encoder.Compaction AUTO -> AUTO
    com.google.zxing.pdf417.encoder.Compaction TEXT -> TEXT
    com.google.zxing.pdf417.encoder.Compaction BYTE -> BYTE
    com.google.zxing.pdf417.encoder.Compaction NUMERIC -> NUMERIC
    com.google.zxing.pdf417.encoder.Compaction[] ENUM$VALUES -> ENUM$VALUES
    com.google.zxing.pdf417.encoder.Compaction[] values() -> values
    com.google.zxing.pdf417.encoder.Compaction valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.encoder.Dimensions -> com.google.zxing.pdf417.encoder.Dimensions:
    int minCols -> minCols
    int maxCols -> maxCols
    int minRows -> minRows
    int maxRows -> maxRows
    int getMinCols() -> getMinCols
    int getMaxCols() -> getMaxCols
    int getMinRows() -> getMinRows
    int getMaxRows() -> getMaxRows
com.google.zxing.pdf417.encoder.PDF417 -> com.google.zxing.pdf417.encoder.PDF417:
    int START_PATTERN -> START_PATTERN
    int STOP_PATTERN -> STOP_PATTERN
    int[][] CODEWORD_TABLE -> CODEWORD_TABLE
    float PREFERRED_RATIO -> PREFERRED_RATIO
    float DEFAULT_MODULE_WIDTH -> DEFAULT_MODULE_WIDTH
    float HEIGHT -> HEIGHT
    com.google.zxing.pdf417.encoder.BarcodeMatrix barcodeMatrix -> barcodeMatrix
    boolean compact -> compact
    com.google.zxing.pdf417.encoder.Compaction compaction -> compaction
    java.nio.charset.Charset encoding -> encoding
    int minCols -> minCols
    int maxCols -> maxCols
    int maxRows -> maxRows
    int minRows -> minRows
    com.google.zxing.pdf417.encoder.BarcodeMatrix getBarcodeMatrix() -> getBarcodeMatrix
    int calculateNumberOfRows(int,int,int) -> calculateNumberOfRows
    int getNumberOfPadCodewords(int,int,int,int) -> getNumberOfPadCodewords
    void encodeChar(int,int,com.google.zxing.pdf417.encoder.BarcodeRow) -> encodeChar
    void encodeLowLevel(java.lang.CharSequence,int,int,int,com.google.zxing.pdf417.encoder.BarcodeMatrix) -> encodeLowLevel
    void generateBarcodeLogic(java.lang.String,int) -> generateBarcodeLogic
    int[] determineDimensions(int,int) -> determineDimensions
    void setDimensions(int,int,int,int) -> setDimensions
    void setCompaction(com.google.zxing.pdf417.encoder.Compaction) -> setCompaction
    void setCompact(boolean) -> setCompact
    void setEncoding(java.nio.charset.Charset) -> setEncoding
com.google.zxing.pdf417.encoder.PDF417ErrorCorrection -> com.google.zxing.pdf417.encoder.PDF417ErrorCorrection:
    int[][] EC_COEFFICIENTS -> EC_COEFFICIENTS
    int getErrorCorrectionCodewordCount(int) -> getErrorCorrectionCodewordCount
    int getRecommendedMinimumErrorCorrectionLevel(int) -> getRecommendedMinimumErrorCorrectionLevel
    java.lang.String generateErrorCorrection(java.lang.CharSequence,int) -> generateErrorCorrection
com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder -> com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder:
    int TEXT_COMPACTION -> TEXT_COMPACTION
    int BYTE_COMPACTION -> BYTE_COMPACTION
    int NUMERIC_COMPACTION -> NUMERIC_COMPACTION
    int SUBMODE_ALPHA -> SUBMODE_ALPHA
    int SUBMODE_LOWER -> SUBMODE_LOWER
    int SUBMODE_MIXED -> SUBMODE_MIXED
    int SUBMODE_PUNCTUATION -> SUBMODE_PUNCTUATION
    int LATCH_TO_TEXT -> LATCH_TO_TEXT
    int LATCH_TO_BYTE_PADDED -> LATCH_TO_BYTE_PADDED
    int LATCH_TO_NUMERIC -> LATCH_TO_NUMERIC
    int SHIFT_TO_BYTE -> SHIFT_TO_BYTE
    int LATCH_TO_BYTE -> LATCH_TO_BYTE
    int ECI_USER_DEFINED -> ECI_USER_DEFINED
    int ECI_GENERAL_PURPOSE -> ECI_GENERAL_PURPOSE
    int ECI_CHARSET -> ECI_CHARSET
    byte[] TEXT_MIXED_RAW -> TEXT_MIXED_RAW
    byte[] TEXT_PUNCTUATION_RAW -> TEXT_PUNCTUATION_RAW
    byte[] MIXED -> MIXED
    byte[] PUNCTUATION -> PUNCTUATION
    java.nio.charset.Charset DEFAULT_ENCODING -> DEFAULT_ENCODING
    java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.pdf417.encoder.Compaction,java.nio.charset.Charset) -> encodeHighLevel
    int encodeText(java.lang.CharSequence,int,int,java.lang.StringBuilder,int) -> encodeText
    void encodeBinary(byte[],int,int,int,java.lang.StringBuilder) -> encodeBinary
    void encodeNumeric(java.lang.String,int,int,java.lang.StringBuilder) -> encodeNumeric
    boolean isDigit(char) -> isDigit
    boolean isAlphaUpper(char) -> isAlphaUpper
    boolean isAlphaLower(char) -> isAlphaLower
    boolean isMixed(char) -> isMixed
    boolean isPunctuation(char) -> isPunctuation
    boolean isText(char) -> isText
    int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    int determineConsecutiveTextCount(java.lang.CharSequence,int) -> determineConsecutiveTextCount
    int determineConsecutiveBinaryCount(java.lang.CharSequence,byte[],int) -> determineConsecutiveBinaryCount
    void encodingECI(int,java.lang.StringBuilder) -> encodingECI
com.google.zxing.qrcode.QRCodeReader -> com.google.zxing.qrcode.QRCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.qrcode.decoder.Decoder decoder -> decoder
    com.google.zxing.qrcode.decoder.Decoder getDecoder() -> getDecoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    float moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.qrcode.QRCodeWriter -> com.google.zxing.qrcode.QRCodeWriter:
    int QUIET_ZONE_SIZE -> QUIET_ZONE_SIZE
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix renderResult(com.google.zxing.qrcode.encoder.QRCode,int,int,int) -> renderResult
com.google.zxing.qrcode.decoder.BitMatrixParser -> com.google.zxing.qrcode.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    com.google.zxing.qrcode.decoder.Version parsedVersion -> parsedVersion
    com.google.zxing.qrcode.decoder.FormatInformation parsedFormatInfo -> parsedFormatInfo
    boolean mirror -> mirror
    com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation() -> readFormatInformation
    com.google.zxing.qrcode.decoder.Version readVersion() -> readVersion
    int copyBit(int,int,int) -> copyBit
    byte[] readCodewords() -> readCodewords
    void remask() -> remask
    void setMirror(boolean) -> setMirror
    void mirror() -> mirror
com.google.zxing.qrcode.decoder.DataBlock -> com.google.zxing.qrcode.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.qrcode.decoder.DataMask -> com.google.zxing.qrcode.decoder.DataMask:
    com.google.zxing.qrcode.decoder.DataMask[] DATA_MASKS -> DATA_MASKS
    void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int) -> unmaskBitMatrix
    boolean isMasked(int,int) -> isMasked
    com.google.zxing.qrcode.decoder.DataMask forReference(int) -> forReference
com.google.zxing.qrcode.decoder.DataMask$DataMask000 -> com.google.zxing.qrcode.decoder.DataMask$DataMask000:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask001 -> com.google.zxing.qrcode.decoder.DataMask$DataMask001:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask010 -> com.google.zxing.qrcode.decoder.DataMask$DataMask010:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask011 -> com.google.zxing.qrcode.decoder.DataMask$DataMask011:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask100 -> com.google.zxing.qrcode.decoder.DataMask$DataMask100:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask101 -> com.google.zxing.qrcode.decoder.DataMask$DataMask101:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask110 -> com.google.zxing.qrcode.decoder.DataMask$DataMask110:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask111 -> com.google.zxing.qrcode.decoder.DataMask$DataMask111:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DecodedBitStreamParser -> com.google.zxing.qrcode.decoder.DecodedBitStreamParser:
    char[] ALPHANUMERIC_CHARS -> ALPHANUMERIC_CHARS
    int GB2312_SUBSET -> GB2312_SUBSET
    com.google.zxing.common.DecoderResult decode(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> decode
    void decodeHanziSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeHanziSegment
    void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeKanjiSegment
    void decodeByteSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,com.google.zxing.common.CharacterSetECI,java.util.Collection,java.util.Map) -> decodeByteSegment
    char toAlphaNumericChar(int) -> toAlphaNumericChar
    void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,boolean) -> decodeAlphanumericSegment
    void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeNumericSegment
    int parseECIValue(com.google.zxing.common.BitSource) -> parseECIValue
com.google.zxing.qrcode.decoder.Decoder -> com.google.zxing.qrcode.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(boolean[][],java.util.Map) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.qrcode.decoder.BitMatrixParser,java.util.Map) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel -> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel:
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L -> L
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel M -> M
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel Q -> Q
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel H -> H
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS -> FOR_BITS
    int bits -> bits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] ENUM$VALUES -> ENUM$VALUES
    int getBits() -> getBits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int) -> forBits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values() -> values
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String) -> valueOf
com.google.zxing.qrcode.decoder.FormatInformation -> com.google.zxing.qrcode.decoder.FormatInformation:
    int FORMAT_INFO_MASK_QR -> FORMAT_INFO_MASK_QR
    int[][] FORMAT_INFO_DECODE_LOOKUP -> FORMAT_INFO_DECODE_LOOKUP
    int[] BITS_SET_IN_HALF_BYTE -> BITS_SET_IN_HALF_BYTE
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel -> errorCorrectionLevel
    byte dataMask -> dataMask
    int numBitsDiffering(int,int) -> numBitsDiffering
    com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int) -> decodeFormatInformation
    com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int) -> doDecodeFormatInformation
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel() -> getErrorCorrectionLevel
    byte getDataMask() -> getDataMask
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.zxing.qrcode.decoder.Mode -> com.google.zxing.qrcode.decoder.Mode:
    com.google.zxing.qrcode.decoder.Mode TERMINATOR -> TERMINATOR
    com.google.zxing.qrcode.decoder.Mode NUMERIC -> NUMERIC
    com.google.zxing.qrcode.decoder.Mode ALPHANUMERIC -> ALPHANUMERIC
    com.google.zxing.qrcode.decoder.Mode STRUCTURED_APPEND -> STRUCTURED_APPEND
    com.google.zxing.qrcode.decoder.Mode BYTE -> BYTE
    com.google.zxing.qrcode.decoder.Mode ECI -> ECI
    com.google.zxing.qrcode.decoder.Mode KANJI -> KANJI
    com.google.zxing.qrcode.decoder.Mode FNC1_FIRST_POSITION -> FNC1_FIRST_POSITION
    com.google.zxing.qrcode.decoder.Mode FNC1_SECOND_POSITION -> FNC1_SECOND_POSITION
    com.google.zxing.qrcode.decoder.Mode HANZI -> HANZI
    int[] characterCountBitsForVersions -> characterCountBitsForVersions
    int bits -> bits
    com.google.zxing.qrcode.decoder.Mode[] ENUM$VALUES -> ENUM$VALUES
    com.google.zxing.qrcode.decoder.Mode forBits(int) -> forBits
    int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version) -> getCharacterCountBits
    int getBits() -> getBits
    com.google.zxing.qrcode.decoder.Mode[] values() -> values
    com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData -> com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData:
    boolean mirrored -> mirrored
    boolean isMirrored() -> isMirrored
    void applyMirroredCorrection(com.google.zxing.ResultPoint[]) -> applyMirroredCorrection
com.google.zxing.qrcode.decoder.Version -> com.google.zxing.qrcode.decoder.Version:
    int[] VERSION_DECODE_INFO -> VERSION_DECODE_INFO
    com.google.zxing.qrcode.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int[] alignmentPatternCenters -> alignmentPatternCenters
    com.google.zxing.qrcode.decoder.Version$ECBlocks[] ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int[] getAlignmentPatternCenters() -> getAlignmentPatternCenters
    int getTotalCodewords() -> getTotalCodewords
    int getDimensionForVersion() -> getDimensionForVersion
    com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getECBlocksForLevel
    com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int) -> getProvisionalVersionForDimension
    com.google.zxing.qrcode.decoder.Version getVersionForNumber(int) -> getVersionForNumber
    com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int) -> decodeVersionInformation
    com.google.zxing.common.BitMatrix buildFunctionPattern() -> buildFunctionPattern
    java.lang.String toString() -> toString
    com.google.zxing.qrcode.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.qrcode.decoder.Version$ECB -> com.google.zxing.qrcode.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.qrcode.decoder.Version$ECBlocks -> com.google.zxing.qrcode.decoder.Version$ECBlocks:
    int ecCodewordsPerBlock -> ecCodewordsPerBlock
    com.google.zxing.qrcode.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewordsPerBlock() -> getECCodewordsPerBlock
    int getNumBlocks() -> getNumBlocks
    int getTotalECCodewords() -> getTotalECCodewords
    com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.qrcode.detector.AlignmentPattern -> com.google.zxing.qrcode.detector.AlignmentPattern:
    float estimatedModuleSize -> estimatedModuleSize
    boolean aboutEquals(float,float,float) -> aboutEquals
    com.google.zxing.qrcode.detector.AlignmentPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.AlignmentPatternFinder -> com.google.zxing.qrcode.detector.AlignmentPatternFinder:
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    int startX -> startX
    int startY -> startY
    int width -> width
    int height -> height
    float moduleSize -> moduleSize
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.qrcode.detector.AlignmentPattern find() -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int) -> handlePossibleCenter
com.google.zxing.qrcode.detector.Detector -> com.google.zxing.qrcode.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    com.google.zxing.ResultPointCallback getResultPointCallback() -> getResultPointCallback
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.common.DetectorResult detect(java.util.Map) -> detect
    com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo) -> processFinderPatternInfo
    com.google.zxing.common.PerspectiveTransform createTransform(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> createTransform
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.common.PerspectiveTransform,int) -> sampleGrid
    int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeDimension
    float calculateModuleSize(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSize
    float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSizeOneWay
    float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int) -> sizeOfBlackWhiteBlackRunBothWays
    float sizeOfBlackWhiteBlackRun(int,int,int,int) -> sizeOfBlackWhiteBlackRun
    com.google.zxing.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float) -> findAlignmentInRegion
com.google.zxing.qrcode.detector.FinderPattern -> com.google.zxing.qrcode.detector.FinderPattern:
    float estimatedModuleSize -> estimatedModuleSize
    int count -> count
    float getEstimatedModuleSize() -> getEstimatedModuleSize
    int getCount() -> getCount
    boolean aboutEquals(float,float,float) -> aboutEquals
    com.google.zxing.qrcode.detector.FinderPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.FinderPatternFinder -> com.google.zxing.qrcode.detector.FinderPatternFinder:
    int CENTER_QUORUM -> CENTER_QUORUM
    int MIN_SKIP -> MIN_SKIP
    int MAX_MODULES -> MAX_MODULES
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    boolean hasSkipped -> hasSkipped
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    java.util.List getPossibleCenters() -> getPossibleCenters
    com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Map) -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    int[] getCrossCheckStateCount() -> getCrossCheckStateCount
    boolean crossCheckDiagonal(int,int,int,int) -> crossCheckDiagonal
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    float crossCheckHorizontal(int,int,int,int) -> crossCheckHorizontal
    boolean handlePossibleCenter(int[],int,int,boolean) -> handlePossibleCenter
    int findRowSkip() -> findRowSkip
    boolean haveMultiplyConfirmedCenters() -> haveMultiplyConfirmedCenters
    com.google.zxing.qrcode.detector.FinderPattern[] selectBestPatterns() -> selectBestPatterns
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator:
    float average -> average
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator:
    float average -> average
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternInfo -> com.google.zxing.qrcode.detector.FinderPatternInfo:
    com.google.zxing.qrcode.detector.FinderPattern bottomLeft -> bottomLeft
    com.google.zxing.qrcode.detector.FinderPattern topLeft -> topLeft
    com.google.zxing.qrcode.detector.FinderPattern topRight -> topRight
    com.google.zxing.qrcode.detector.FinderPattern getBottomLeft() -> getBottomLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopLeft() -> getTopLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopRight() -> getTopRight
com.google.zxing.qrcode.encoder.BlockPair -> com.google.zxing.qrcode.encoder.BlockPair:
    byte[] dataBytes -> dataBytes
    byte[] errorCorrectionBytes -> errorCorrectionBytes
    byte[] getDataBytes() -> getDataBytes
    byte[] getErrorCorrectionBytes() -> getErrorCorrectionBytes
com.google.zxing.qrcode.encoder.ByteMatrix -> com.google.zxing.qrcode.encoder.ByteMatrix:
    byte[][] bytes -> bytes
    int width -> width
    int height -> height
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    byte get(int,int) -> get
    byte[][] getArray() -> getArray
    void set(int,int,byte) -> set
    void set(int,int,int) -> set
    void set(int,int,boolean) -> set
    void clear(byte) -> clear
    java.lang.String toString() -> toString
com.google.zxing.qrcode.encoder.Encoder -> com.google.zxing.qrcode.encoder.Encoder:
    int[] ALPHANUMERIC_TABLE -> ALPHANUMERIC_TABLE
    java.lang.String DEFAULT_BYTE_MODE_ENCODING -> DEFAULT_BYTE_MODE_ENCODING
    int[] $SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode -> $SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode
    int calculateMaskPenalty(com.google.zxing.qrcode.encoder.ByteMatrix) -> calculateMaskPenalty
    com.google.zxing.qrcode.encoder.QRCode encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> encode
    com.google.zxing.qrcode.encoder.QRCode encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> encode
    int getAlphanumericCode(int) -> getAlphanumericCode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String) -> chooseMode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String,java.lang.String) -> chooseMode
    boolean isOnlyDoubleByteKanji(java.lang.String) -> isOnlyDoubleByteKanji
    int chooseMaskPattern(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> chooseMaskPattern
    com.google.zxing.qrcode.decoder.Version chooseVersion(int,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> chooseVersion
    void terminateBits(int,com.google.zxing.common.BitArray) -> terminateBits
    void getNumDataBytesAndNumECBytesForBlockID(int,int,int,int,int[],int[]) -> getNumDataBytesAndNumECBytesForBlockID
    com.google.zxing.common.BitArray interleaveWithECBytes(com.google.zxing.common.BitArray,int,int,int) -> interleaveWithECBytes
    byte[] generateECBytes(byte[],int) -> generateECBytes
    void appendModeInfo(com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendModeInfo
    void appendLengthInfo(int,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendLengthInfo
    void appendBytes(java.lang.String,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray,java.lang.String) -> appendBytes
    void appendNumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendNumericBytes
    void appendAlphanumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendAlphanumericBytes
    void append8BitBytes(java.lang.String,com.google.zxing.common.BitArray,java.lang.String) -> append8BitBytes
    void appendKanjiBytes(java.lang.String,com.google.zxing.common.BitArray) -> appendKanjiBytes
    void appendECI(com.google.zxing.common.CharacterSetECI,com.google.zxing.common.BitArray) -> appendECI
    int[] $SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode() -> $SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode
com.google.zxing.qrcode.encoder.MaskUtil -> com.google.zxing.qrcode.encoder.MaskUtil:
    int N1 -> N1
    int N2 -> N2
    int N3 -> N3
    int N4 -> N4
    int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule1
    int applyMaskPenaltyRule2(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule2
    int applyMaskPenaltyRule3(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule3
    boolean isWhiteHorizontal(byte[],int,int) -> isWhiteHorizontal
    boolean isWhiteVertical(byte[][],int,int,int) -> isWhiteVertical
    int applyMaskPenaltyRule4(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule4
    boolean getDataMaskBit(int,int,int) -> getDataMaskBit
    int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean) -> applyMaskPenaltyRule1Internal
com.google.zxing.qrcode.encoder.MatrixUtil -> com.google.zxing.qrcode.encoder.MatrixUtil:
    int[][] POSITION_DETECTION_PATTERN -> POSITION_DETECTION_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN -> POSITION_ADJUSTMENT_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE -> POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE
    int[][] TYPE_INFO_COORDINATES -> TYPE_INFO_COORDINATES
    int VERSION_INFO_POLY -> VERSION_INFO_POLY
    int TYPE_INFO_POLY -> TYPE_INFO_POLY
    int TYPE_INFO_MASK_PATTERN -> TYPE_INFO_MASK_PATTERN
    void clearMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> clearMatrix
    void buildMatrix(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> buildMatrix
    void embedBasicPatterns(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedBasicPatterns
    void embedTypeInfo(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTypeInfo
    void maybeEmbedVersionInfo(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedVersionInfo
    void embedDataBits(com.google.zxing.common.BitArray,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDataBits
    int findMSBSet(int) -> findMSBSet
    int calculateBCHCode(int,int) -> calculateBCHCode
    void makeTypeInfoBits(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.common.BitArray) -> makeTypeInfoBits
    void makeVersionInfoBits(com.google.zxing.qrcode.decoder.Version,com.google.zxing.common.BitArray) -> makeVersionInfoBits
    boolean isEmpty(int) -> isEmpty
    void embedTimingPatterns(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTimingPatterns
    void embedDarkDotAtLeftBottomCorner(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDarkDotAtLeftBottomCorner
    void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedHorizontalSeparationPattern
    void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedVerticalSeparationPattern
    void embedPositionAdjustmentPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionAdjustmentPattern
    void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPattern
    void embedPositionDetectionPatternsAndSeparators(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPatternsAndSeparators
    void maybeEmbedPositionAdjustmentPatterns(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedPositionAdjustmentPatterns
com.google.zxing.qrcode.encoder.QRCode -> com.google.zxing.qrcode.encoder.QRCode:
    int NUM_MASK_PATTERNS -> NUM_MASK_PATTERNS
    com.google.zxing.qrcode.decoder.Mode mode -> mode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ecLevel -> ecLevel
    com.google.zxing.qrcode.decoder.Version version -> version
    int maskPattern -> maskPattern
    com.google.zxing.qrcode.encoder.ByteMatrix matrix -> matrix
    com.google.zxing.qrcode.decoder.Mode getMode() -> getMode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getECLevel() -> getECLevel
    com.google.zxing.qrcode.decoder.Version getVersion() -> getVersion
    int getMaskPattern() -> getMaskPattern
    com.google.zxing.qrcode.encoder.ByteMatrix getMatrix() -> getMatrix
    java.lang.String toString() -> toString
    void setMode(com.google.zxing.qrcode.decoder.Mode) -> setMode
    void setECLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> setECLevel
    void setVersion(com.google.zxing.qrcode.decoder.Version) -> setVersion
    void setMaskPattern(int) -> setMaskPattern
    void setMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> setMatrix
    boolean isValidMaskPattern(int) -> isValidMaskPattern
com.nineoldandroids.animation.Animator -> com.nineoldandroids.animation.Animator:
    java.util.ArrayList mListeners -> mListeners
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void addListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> addListener
    void removeListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> removeListener
    java.util.ArrayList getListeners() -> getListeners
    void removeAllListeners() -> removeAllListeners
    com.nineoldandroids.animation.Animator clone() -> clone
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void setTarget(java.lang.Object) -> setTarget
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Animator$AnimatorListener -> com.nineoldandroids.animation.Animator$AnimatorListener:
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.nineoldandroids.animation.AnimatorInflater -> com.nineoldandroids.animation.AnimatorInflater:
    int[] AnimatorSet -> AnimatorSet
    int AnimatorSet_ordering -> AnimatorSet_ordering
    int[] PropertyAnimator -> PropertyAnimator
    int PropertyAnimator_propertyName -> PropertyAnimator_propertyName
    int[] Animator -> Animator
    int Animator_interpolator -> Animator_interpolator
    int Animator_duration -> Animator_duration
    int Animator_startOffset -> Animator_startOffset
    int Animator_repeatCount -> Animator_repeatCount
    int Animator_repeatMode -> Animator_repeatMode
    int Animator_valueFrom -> Animator_valueFrom
    int Animator_valueTo -> Animator_valueTo
    int Animator_valueType -> Animator_valueType
    int TOGETHER -> TOGETHER
    int VALUE_TYPE_FLOAT -> VALUE_TYPE_FLOAT
    com.nineoldandroids.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    com.nineoldandroids.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser) -> createAnimatorFromXml
    com.nineoldandroids.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.nineoldandroids.animation.AnimatorSet,int) -> createAnimatorFromXml
    com.nineoldandroids.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.util.AttributeSet) -> loadObjectAnimator
    com.nineoldandroids.animation.ValueAnimator loadAnimator(android.content.Context,android.util.AttributeSet,com.nineoldandroids.animation.ValueAnimator) -> loadAnimator
com.nineoldandroids.animation.AnimatorListenerAdapter -> com.nineoldandroids.animation.AnimatorListenerAdapter:
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
com.nineoldandroids.animation.AnimatorSet -> com.nineoldandroids.animation.AnimatorSet:
    java.util.ArrayList mPlayingSet -> mPlayingSet
    java.util.HashMap mNodeMap -> mNodeMap
    java.util.ArrayList mNodes -> mNodes
    java.util.ArrayList mSortedNodes -> mSortedNodes
    boolean mNeedsSort -> mNeedsSort
    com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> mSetListener
    boolean mTerminated -> mTerminated
    boolean mStarted -> mStarted
    long mStartDelay -> mStartDelay
    com.nineoldandroids.animation.ValueAnimator mDelayAnim -> mDelayAnim
    long mDuration -> mDuration
    void playTogether(com.nineoldandroids.animation.Animator[]) -> playTogether
    void playTogether(java.util.Collection) -> playTogether
    void playSequentially(com.nineoldandroids.animation.Animator[]) -> playSequentially
    void playSequentially(java.util.List) -> playSequentially
    java.util.ArrayList getChildAnimations() -> getChildAnimations
    void setTarget(java.lang.Object) -> setTarget
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.animation.AnimatorSet$Builder play(com.nineoldandroids.animation.Animator) -> play
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getDuration() -> getDuration
    com.nineoldandroids.animation.AnimatorSet setDuration(long) -> setDuration
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void start() -> start
    com.nineoldandroids.animation.AnimatorSet clone() -> clone
    void sortNodes() -> sortNodes
    com.nineoldandroids.animation.Animator clone() -> clone
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
    java.util.ArrayList access$000(com.nineoldandroids.animation.AnimatorSet) -> access$000
    java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet) -> access$100
    java.util.ArrayList access$200(com.nineoldandroids.animation.AnimatorSet) -> access$200
    boolean access$302(com.nineoldandroids.animation.AnimatorSet,boolean) -> access$302
    java.util.ArrayList access$400(com.nineoldandroids.animation.AnimatorSet) -> access$400
com.nineoldandroids.animation.AnimatorSet$1 -> com.nineoldandroids.animation.AnimatorSet$1:
    boolean canceled -> canceled
    java.util.ArrayList val$nodesToStart -> val$nodesToStart
    com.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
com.nineoldandroids.animation.AnimatorSet$Builder -> com.nineoldandroids.animation.AnimatorSet$Builder:
    com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> mCurrentNode
    com.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    com.nineoldandroids.animation.AnimatorSet$Builder with(com.nineoldandroids.animation.Animator) -> with
    com.nineoldandroids.animation.AnimatorSet$Builder before(com.nineoldandroids.animation.Animator) -> before
    com.nineoldandroids.animation.AnimatorSet$Builder after(com.nineoldandroids.animation.Animator) -> after
    com.nineoldandroids.animation.AnimatorSet$Builder after(long) -> after
com.nineoldandroids.animation.AnimatorSet$Dependency -> com.nineoldandroids.animation.AnimatorSet$Dependency:
    int WITH -> WITH
    int AFTER -> AFTER
    com.nineoldandroids.animation.AnimatorSet$Node node -> node
    int rule -> rule
com.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.nineoldandroids.animation.AnimatorSet$DependencyListener:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.nineoldandroids.animation.AnimatorSet$Node mNode -> mNode
    int mRule -> mRule
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void startIfReady(com.nineoldandroids.animation.Animator) -> startIfReady
com.nineoldandroids.animation.AnimatorSet$Node -> com.nineoldandroids.animation.AnimatorSet$Node:
    com.nineoldandroids.animation.Animator animation -> animation
    java.util.ArrayList dependencies -> dependencies
    java.util.ArrayList tmpDependencies -> tmpDependencies
    java.util.ArrayList nodeDependencies -> nodeDependencies
    java.util.ArrayList nodeDependents -> nodeDependents
    boolean done -> done
    void addDependency(com.nineoldandroids.animation.AnimatorSet$Dependency) -> addDependency
    com.nineoldandroids.animation.AnimatorSet$Node clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ArgbEvaluator -> com.nineoldandroids.animation.ArgbEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.FloatEvaluator -> com.nineoldandroids.animation.FloatEvaluator:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.FloatKeyframeSet -> com.nineoldandroids.animation.FloatKeyframeSet:
    float firstValue -> firstValue
    float lastValue -> lastValue
    float deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.nineoldandroids.animation.FloatKeyframeSet clone() -> clone
    float getFloatValue(float) -> getFloatValue
    com.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.IntEvaluator -> com.nineoldandroids.animation.IntEvaluator:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.IntKeyframeSet -> com.nineoldandroids.animation.IntKeyframeSet:
    int firstValue -> firstValue
    int lastValue -> lastValue
    int deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.nineoldandroids.animation.IntKeyframeSet clone() -> clone
    int getIntValue(float) -> getIntValue
    com.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe -> com.nineoldandroids.animation.Keyframe:
    float mFraction -> mFraction
    java.lang.Class mValueType -> mValueType
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mHasValue -> mHasValue
    com.nineoldandroids.animation.Keyframe ofInt(float,int) -> ofInt
    com.nineoldandroids.animation.Keyframe ofInt(float) -> ofInt
    com.nineoldandroids.animation.Keyframe ofFloat(float,float) -> ofFloat
    com.nineoldandroids.animation.Keyframe ofFloat(float) -> ofFloat
    com.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object) -> ofObject
    com.nineoldandroids.animation.Keyframe ofObject(float) -> ofObject
    boolean hasValue() -> hasValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    float getFraction() -> getFraction
    void setFraction(float) -> setFraction
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    java.lang.Class getType() -> getType
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.nineoldandroids.animation.Keyframe$FloatKeyframe:
    float mValue -> mValue
    float getFloatValue() -> getFloatValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> clone
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$IntKeyframe -> com.nineoldandroids.animation.Keyframe$IntKeyframe:
    int mValue -> mValue
    int getIntValue() -> getIntValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> clone
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$ObjectKeyframe -> com.nineoldandroids.animation.Keyframe$ObjectKeyframe:
    java.lang.Object mValue -> mValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.nineoldandroids.animation.Keyframe$ObjectKeyframe clone() -> clone
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.KeyframeSet -> com.nineoldandroids.animation.KeyframeSet:
    int mNumKeyframes -> mNumKeyframes
    com.nineoldandroids.animation.Keyframe mFirstKeyframe -> mFirstKeyframe
    com.nineoldandroids.animation.Keyframe mLastKeyframe -> mLastKeyframe
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mKeyframes -> mKeyframes
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    com.nineoldandroids.animation.KeyframeSet ofInt(int[]) -> ofInt
    com.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> ofFloat
    com.nineoldandroids.animation.KeyframeSet ofKeyframe(com.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    com.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[]) -> ofObject
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    com.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object getValue(float) -> getValue
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ObjectAnimator -> com.nineoldandroids.animation.ObjectAnimator:
    boolean DBG -> DBG
    java.util.Map PROXY_PROPERTIES -> PROXY_PROPERTIES
    java.lang.Object mTarget -> mTarget
    java.lang.String mPropertyName -> mPropertyName
    com.nineoldandroids.util.Property mProperty -> mProperty
    void setPropertyName(java.lang.String) -> setPropertyName
    void setProperty(com.nineoldandroids.util.Property) -> setProperty
    java.lang.String getPropertyName() -> getPropertyName
    com.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]) -> ofInt
    com.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,com.nineoldandroids.util.Property,int[]) -> ofInt
    com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> ofFloat
    com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,com.nineoldandroids.util.Property,float[]) -> ofFloat
    com.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,com.nineoldandroids.util.Property,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void start() -> start
    void initAnimation() -> initAnimation
    com.nineoldandroids.animation.ObjectAnimator setDuration(long) -> setDuration
    java.lang.Object getTarget() -> getTarget
    void setTarget(java.lang.Object) -> setTarget
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void animateValue(float) -> animateValue
    com.nineoldandroids.animation.ObjectAnimator clone() -> clone
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.ValueAnimator clone() -> clone
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    com.nineoldandroids.animation.Animator clone() -> clone
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PreHoneycombCompat -> com.nineoldandroids.animation.PreHoneycombCompat:
    com.nineoldandroids.util.Property ALPHA -> ALPHA
    com.nineoldandroids.util.Property PIVOT_X -> PIVOT_X
    com.nineoldandroids.util.Property PIVOT_Y -> PIVOT_Y
    com.nineoldandroids.util.Property TRANSLATION_X -> TRANSLATION_X
    com.nineoldandroids.util.Property TRANSLATION_Y -> TRANSLATION_Y
    com.nineoldandroids.util.Property ROTATION -> ROTATION
    com.nineoldandroids.util.Property ROTATION_X -> ROTATION_X
    com.nineoldandroids.util.Property ROTATION_Y -> ROTATION_Y
    com.nineoldandroids.util.Property SCALE_X -> SCALE_X
    com.nineoldandroids.util.Property SCALE_Y -> SCALE_Y
    com.nineoldandroids.util.Property SCROLL_X -> SCROLL_X
    com.nineoldandroids.util.Property SCROLL_Y -> SCROLL_Y
    com.nineoldandroids.util.Property X -> X
    com.nineoldandroids.util.Property Y -> Y
com.nineoldandroids.animation.PreHoneycombCompat$1 -> com.nineoldandroids.animation.PreHoneycombCompat$1:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$10 -> com.nineoldandroids.animation.PreHoneycombCompat$10:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$11 -> com.nineoldandroids.animation.PreHoneycombCompat$11:
    void setValue(android.view.View,int) -> setValue
    java.lang.Integer get(android.view.View) -> get
    void setValue(java.lang.Object,int) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$12 -> com.nineoldandroids.animation.PreHoneycombCompat$12:
    void setValue(android.view.View,int) -> setValue
    java.lang.Integer get(android.view.View) -> get
    void setValue(java.lang.Object,int) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$13 -> com.nineoldandroids.animation.PreHoneycombCompat$13:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$14 -> com.nineoldandroids.animation.PreHoneycombCompat$14:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$2 -> com.nineoldandroids.animation.PreHoneycombCompat$2:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$3 -> com.nineoldandroids.animation.PreHoneycombCompat$3:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$4 -> com.nineoldandroids.animation.PreHoneycombCompat$4:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$5 -> com.nineoldandroids.animation.PreHoneycombCompat$5:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$6 -> com.nineoldandroids.animation.PreHoneycombCompat$6:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$7 -> com.nineoldandroids.animation.PreHoneycombCompat$7:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$8 -> com.nineoldandroids.animation.PreHoneycombCompat$8:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$9 -> com.nineoldandroids.animation.PreHoneycombCompat$9:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder:
    java.lang.String mPropertyName -> mPropertyName
    com.nineoldandroids.util.Property mProperty -> mProperty
    java.lang.reflect.Method mSetter -> mSetter
    java.lang.reflect.Method mGetter -> mGetter
    java.lang.Class mValueType -> mValueType
    com.nineoldandroids.animation.KeyframeSet mKeyframeSet -> mKeyframeSet
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> sIntEvaluator
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> sFloatEvaluator
    java.lang.Class[] FLOAT_VARIANTS -> FLOAT_VARIANTS
    java.lang.Class[] INTEGER_VARIANTS -> INTEGER_VARIANTS
    java.lang.Class[] DOUBLE_VARIANTS -> DOUBLE_VARIANTS
    java.util.HashMap sSetterPropertyMap -> sSetterPropertyMap
    java.util.HashMap sGetterPropertyMap -> sGetterPropertyMap
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> mPropertyMapLock
    java.lang.Object[] mTmpValueArray -> mTmpValueArray
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    java.lang.Object mAnimatedValue -> mAnimatedValue
    com.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[]) -> ofInt
    com.nineoldandroids.animation.PropertyValuesHolder ofInt(com.nineoldandroids.util.Property,int[]) -> ofInt
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> ofFloat
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(com.nineoldandroids.util.Property,float[]) -> ofFloat
    com.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.PropertyValuesHolder ofObject(com.nineoldandroids.util.Property,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(com.nineoldandroids.util.Property,com.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setKeyframes(com.nineoldandroids.animation.Keyframe[]) -> setKeyframes
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> getPropertyFunction
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> setupSetterOrGetter
    void setupSetter(java.lang.Class) -> setupSetter
    void setupGetter(java.lang.Class) -> setupGetter
    void setupSetterAndGetter(java.lang.Object) -> setupSetterAndGetter
    void setupValue(java.lang.Object,com.nineoldandroids.animation.Keyframe) -> setupValue
    void setupStartValue(java.lang.Object) -> setupStartValue
    void setupEndValue(java.lang.Object) -> setupEndValue
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void init() -> init
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void calculateValue(float) -> calculateValue
    void setPropertyName(java.lang.String) -> setPropertyName
    void setProperty(com.nineoldandroids.util.Property) -> setProperty
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> getMethodName
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$1 -> com.nineoldandroids.animation.PropertyValuesHolder$1:
com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder:
    com.nineoldandroids.util.FloatProperty mFloatProperty -> mFloatProperty
    com.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> mFloatKeyframeSet
    float mFloatAnimatedValue -> mFloatAnimatedValue
    void setFloatValues(float[]) -> setFloatValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder:
    com.nineoldandroids.util.IntProperty mIntProperty -> mIntProperty
    com.nineoldandroids.animation.IntKeyframeSet mIntKeyframeSet -> mIntKeyframeSet
    int mIntAnimatedValue -> mIntAnimatedValue
    void setIntValues(int[]) -> setIntValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.TimeAnimator -> com.nineoldandroids.animation.TimeAnimator:
    com.nineoldandroids.animation.TimeAnimator$TimeListener mListener -> mListener
    long mPreviousTime -> mPreviousTime
    boolean animationFrame(long) -> animationFrame
    void setTimeListener(com.nineoldandroids.animation.TimeAnimator$TimeListener) -> setTimeListener
    void animateValue(float) -> animateValue
    void initAnimation() -> initAnimation
com.nineoldandroids.animation.TimeAnimator$TimeListener -> com.nineoldandroids.animation.TimeAnimator$TimeListener:
    void onTimeUpdate(com.nineoldandroids.animation.TimeAnimator,long,long) -> onTimeUpdate
com.nineoldandroids.animation.TypeEvaluator -> com.nineoldandroids.animation.TypeEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.ValueAnimator -> com.nineoldandroids.animation.ValueAnimator:
    long DEFAULT_FRAME_DELAY -> DEFAULT_FRAME_DELAY
    int ANIMATION_START -> ANIMATION_START
    int ANIMATION_FRAME -> ANIMATION_FRAME
    int STOPPED -> STOPPED
    int RUNNING -> RUNNING
    int SEEKED -> SEEKED
    long mStartTime -> mStartTime
    long mSeekTime -> mSeekTime
    java.lang.ThreadLocal sAnimationHandler -> sAnimationHandler
    java.lang.ThreadLocal sAnimations -> sAnimations
    java.lang.ThreadLocal sPendingAnimations -> sPendingAnimations
    java.lang.ThreadLocal sDelayedAnims -> sDelayedAnims
    java.lang.ThreadLocal sEndingAnims -> sEndingAnims
    java.lang.ThreadLocal sReadyAnims -> sReadyAnims
    android.view.animation.Interpolator sDefaultInterpolator -> sDefaultInterpolator
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> sIntEvaluator
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> sFloatEvaluator
    boolean mPlayingBackwards -> mPlayingBackwards
    int mCurrentIteration -> mCurrentIteration
    float mCurrentFraction -> mCurrentFraction
    boolean mStartedDelay -> mStartedDelay
    long mDelayStartTime -> mDelayStartTime
    int mPlayingState -> mPlayingState
    boolean mRunning -> mRunning
    boolean mStarted -> mStarted
    boolean mInitialized -> mInitialized
    long mDuration -> mDuration
    long mStartDelay -> mStartDelay
    long sFrameDelay -> sFrameDelay
    int mRepeatCount -> mRepeatCount
    int mRepeatMode -> mRepeatMode
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mUpdateListeners -> mUpdateListeners
    com.nineoldandroids.animation.PropertyValuesHolder[] mValues -> mValues
    java.util.HashMap mValuesMap -> mValuesMap
    int RESTART -> RESTART
    int REVERSE -> REVERSE
    int INFINITE -> INFINITE
    com.nineoldandroids.animation.ValueAnimator ofInt(int[]) -> ofInt
    com.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> ofFloat
    com.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    com.nineoldandroids.animation.ValueAnimator ofObject(com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void setValues(com.nineoldandroids.animation.PropertyValuesHolder[]) -> setValues
    com.nineoldandroids.animation.PropertyValuesHolder[] getValues() -> getValues
    void initAnimation() -> initAnimation
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setCurrentPlayTime(long) -> setCurrentPlayTime
    long getCurrentPlayTime() -> getCurrentPlayTime
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getFrameDelay() -> getFrameDelay
    void setFrameDelay(long) -> setFrameDelay
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.Object getAnimatedValue(java.lang.String) -> getAnimatedValue
    void setRepeatCount(int) -> setRepeatCount
    int getRepeatCount() -> getRepeatCount
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    void addUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> addUpdateListener
    void removeAllUpdateListeners() -> removeAllUpdateListeners
    void removeUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> removeUpdateListener
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void start(boolean) -> start
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void reverse() -> reverse
    void endAnimation() -> endAnimation
    void startAnimation() -> startAnimation
    boolean delayedAnimationFrame(long) -> delayedAnimationFrame
    boolean animationFrame(long) -> animationFrame
    float getAnimatedFraction() -> getAnimatedFraction
    void animateValue(float) -> animateValue
    com.nineoldandroids.animation.ValueAnimator clone() -> clone
    int getCurrentAnimationsCount() -> getCurrentAnimationsCount
    void clearAllAnimations() -> clearAllAnimations
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.Animator clone() -> clone
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
    java.lang.ThreadLocal access$000() -> access$000
    java.lang.ThreadLocal access$100() -> access$100
    java.lang.ThreadLocal access$200() -> access$200
    long access$300(com.nineoldandroids.animation.ValueAnimator) -> access$300
    void access$400(com.nineoldandroids.animation.ValueAnimator) -> access$400
    java.lang.ThreadLocal access$500() -> access$500
    java.lang.ThreadLocal access$600() -> access$600
    boolean access$700(com.nineoldandroids.animation.ValueAnimator,long) -> access$700
    boolean access$802(com.nineoldandroids.animation.ValueAnimator,boolean) -> access$802
    void access$900(com.nineoldandroids.animation.ValueAnimator) -> access$900
    long access$1000() -> access$1000
com.nineoldandroids.animation.ValueAnimator$1 -> com.nineoldandroids.animation.ValueAnimator$1:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$2 -> com.nineoldandroids.animation.ValueAnimator$2:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$3 -> com.nineoldandroids.animation.ValueAnimator$3:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$4 -> com.nineoldandroids.animation.ValueAnimator$4:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$5 -> com.nineoldandroids.animation.ValueAnimator$5:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.nineoldandroids.animation.ValueAnimator$AnimationHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener:
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.nineoldandroids.util.FloatProperty -> com.nineoldandroids.util.FloatProperty:
    void setValue(java.lang.Object,float) -> setValue
    void set(java.lang.Object,java.lang.Float) -> set
    void set(java.lang.Object,java.lang.Object) -> set
com.nineoldandroids.util.IntProperty -> com.nineoldandroids.util.IntProperty:
    void setValue(java.lang.Object,int) -> setValue
    void set(java.lang.Object,java.lang.Integer) -> set
    void set(java.lang.Object,java.lang.Object) -> set
com.nineoldandroids.util.NoSuchPropertyException -> com.nineoldandroids.util.NoSuchPropertyException:
com.nineoldandroids.util.Property -> com.nineoldandroids.util.Property:
    java.lang.String mName -> mName
    java.lang.Class mType -> mType
    com.nineoldandroids.util.Property of(java.lang.Class,java.lang.Class,java.lang.String) -> of
    boolean isReadOnly() -> isReadOnly
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
    java.lang.String getName() -> getName
    java.lang.Class getType() -> getType
com.nineoldandroids.util.ReflectiveProperty -> com.nineoldandroids.util.ReflectiveProperty:
    java.lang.String PREFIX_GET -> PREFIX_GET
    java.lang.String PREFIX_IS -> PREFIX_IS
    java.lang.String PREFIX_SET -> PREFIX_SET
    java.lang.reflect.Method mSetter -> mSetter
    java.lang.reflect.Method mGetter -> mGetter
    java.lang.reflect.Field mField -> mField
    boolean typesMatch(java.lang.Class,java.lang.Class) -> typesMatch
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
    boolean isReadOnly() -> isReadOnly
com.nineoldandroids.view.ViewHelper -> com.nineoldandroids.view.ViewHelper:
    float getAlpha(android.view.View) -> getAlpha
    void setAlpha(android.view.View,float) -> setAlpha
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    void setRotation(android.view.View,float) -> setRotation
    float getRotationX(android.view.View) -> getRotationX
    void setRotationX(android.view.View,float) -> setRotationX
    float getRotationY(android.view.View) -> getRotationY
    void setRotationY(android.view.View,float) -> setRotationY
    float getScaleX(android.view.View) -> getScaleX
    void setScaleX(android.view.View,float) -> setScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setScaleY(android.view.View,float) -> setScaleY
    float getScrollX(android.view.View) -> getScrollX
    void setScrollX(android.view.View,int) -> setScrollX
    float getScrollY(android.view.View) -> getScrollY
    void setScrollY(android.view.View,int) -> setScrollY
    float getTranslationX(android.view.View) -> getTranslationX
    void setTranslationX(android.view.View,float) -> setTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationY(android.view.View,float) -> setTranslationY
    float getX(android.view.View) -> getX
    void setX(android.view.View,float) -> setX
    float getY(android.view.View) -> getY
    void setY(android.view.View,float) -> setY
com.nineoldandroids.view.ViewHelper$Honeycomb -> com.nineoldandroids.view.ViewHelper$Honeycomb:
    float getAlpha(android.view.View) -> getAlpha
    void setAlpha(android.view.View,float) -> setAlpha
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    void setRotation(android.view.View,float) -> setRotation
    float getRotationX(android.view.View) -> getRotationX
    void setRotationX(android.view.View,float) -> setRotationX
    float getRotationY(android.view.View) -> getRotationY
    void setRotationY(android.view.View,float) -> setRotationY
    float getScaleX(android.view.View) -> getScaleX
    void setScaleX(android.view.View,float) -> setScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setScaleY(android.view.View,float) -> setScaleY
    float getScrollX(android.view.View) -> getScrollX
    void setScrollX(android.view.View,int) -> setScrollX
    float getScrollY(android.view.View) -> getScrollY
    void setScrollY(android.view.View,int) -> setScrollY
    float getTranslationX(android.view.View) -> getTranslationX
    void setTranslationX(android.view.View,float) -> setTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationY(android.view.View,float) -> setTranslationY
    float getX(android.view.View) -> getX
    void setX(android.view.View,float) -> setX
    float getY(android.view.View) -> getY
    void setY(android.view.View,float) -> setY
com.nineoldandroids.view.ViewPropertyAnimator -> com.nineoldandroids.view.ViewPropertyAnimator:
    java.util.WeakHashMap ANIMATORS -> ANIMATORS
    com.nineoldandroids.view.ViewPropertyAnimator animate(android.view.View) -> animate
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
com.nineoldandroids.view.ViewPropertyAnimatorHC -> com.nineoldandroids.view.ViewPropertyAnimatorHC:
    java.lang.ref.WeakReference mView -> mView
    long mDuration -> mDuration
    boolean mDurationSet -> mDurationSet
    long mStartDelay -> mStartDelay
    boolean mStartDelaySet -> mStartDelaySet
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mInterpolatorSet -> mInterpolatorSet
    com.nineoldandroids.animation.Animator$AnimatorListener mListener -> mListener
    com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener mAnimatorEventListener -> mAnimatorEventListener
    java.util.ArrayList mPendingAnimations -> mPendingAnimations
    int NONE -> NONE
    int TRANSLATION_X -> TRANSLATION_X
    int TRANSLATION_Y -> TRANSLATION_Y
    int SCALE_X -> SCALE_X
    int SCALE_Y -> SCALE_Y
    int ROTATION -> ROTATION
    int ROTATION_X -> ROTATION_X
    int ROTATION_Y -> ROTATION_Y
    int X -> X
    int Y -> Y
    int ALPHA -> ALPHA
    int TRANSFORM_MASK -> TRANSFORM_MASK
    java.lang.Runnable mAnimationStarter -> mAnimationStarter
    java.util.HashMap mAnimatorMap -> mAnimatorMap
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
    void startAnimation() -> startAnimation
    void animateProperty(int,float) -> animateProperty
    void animatePropertyBy(int,float) -> animatePropertyBy
    void animatePropertyBy(int,float,float) -> animatePropertyBy
    void setValue(int,float) -> setValue
    float getValue(int) -> getValue
    void access$100(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$100
    com.nineoldandroids.animation.Animator$AnimatorListener access$200(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$200
    java.util.HashMap access$300(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$300
    com.nineoldandroids.animation.Animator$AnimatorListener access$202(com.nineoldandroids.view.ViewPropertyAnimatorHC,com.nineoldandroids.animation.Animator$AnimatorListener) -> access$202
    java.lang.ref.WeakReference access$400(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$400
    void access$500(com.nineoldandroids.view.ViewPropertyAnimatorHC,int,float) -> access$500
com.nineoldandroids.view.ViewPropertyAnimatorHC$1 -> com.nineoldandroids.view.ViewPropertyAnimatorHC$1:
    com.nineoldandroids.view.ViewPropertyAnimatorHC this$0 -> this$0
    void run() -> run
com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener -> com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener:
    com.nineoldandroids.view.ViewPropertyAnimatorHC this$0 -> this$0
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.nineoldandroids.view.ViewPropertyAnimatorHC$NameValuesHolder -> com.nineoldandroids.view.ViewPropertyAnimatorHC$NameValuesHolder:
    int mNameConstant -> mNameConstant
    float mFromValue -> mFromValue
    float mDeltaValue -> mDeltaValue
com.nineoldandroids.view.ViewPropertyAnimatorHC$PropertyBundle -> com.nineoldandroids.view.ViewPropertyAnimatorHC$PropertyBundle:
    int mPropertyMask -> mPropertyMask
    java.util.ArrayList mNameValuesHolder -> mNameValuesHolder
    boolean cancel(int) -> cancel
com.nineoldandroids.view.ViewPropertyAnimatorICS -> com.nineoldandroids.view.ViewPropertyAnimatorICS:
    long RETURN_WHEN_NULL -> RETURN_WHEN_NULL
    java.lang.ref.WeakReference mNative -> mNative
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
com.nineoldandroids.view.ViewPropertyAnimatorICS$1 -> com.nineoldandroids.view.ViewPropertyAnimatorICS$1:
    com.nineoldandroids.animation.Animator$AnimatorListener val$listener -> val$listener
    com.nineoldandroids.view.ViewPropertyAnimatorICS this$0 -> this$0
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.nineoldandroids.view.ViewPropertyAnimatorPreHC -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC:
    com.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    java.lang.ref.WeakReference mView -> mView
    long mDuration -> mDuration
    boolean mDurationSet -> mDurationSet
    long mStartDelay -> mStartDelay
    boolean mStartDelaySet -> mStartDelaySet
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mInterpolatorSet -> mInterpolatorSet
    com.nineoldandroids.animation.Animator$AnimatorListener mListener -> mListener
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener mAnimatorEventListener -> mAnimatorEventListener
    java.util.ArrayList mPendingAnimations -> mPendingAnimations
    int NONE -> NONE
    int TRANSLATION_X -> TRANSLATION_X
    int TRANSLATION_Y -> TRANSLATION_Y
    int SCALE_X -> SCALE_X
    int SCALE_Y -> SCALE_Y
    int ROTATION -> ROTATION
    int ROTATION_X -> ROTATION_X
    int ROTATION_Y -> ROTATION_Y
    int X -> X
    int Y -> Y
    int ALPHA -> ALPHA
    int TRANSFORM_MASK -> TRANSFORM_MASK
    java.lang.Runnable mAnimationStarter -> mAnimationStarter
    java.util.HashMap mAnimatorMap -> mAnimatorMap
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
    void startAnimation() -> startAnimation
    void animateProperty(int,float) -> animateProperty
    void animatePropertyBy(int,float) -> animatePropertyBy
    void animatePropertyBy(int,float,float) -> animatePropertyBy
    void setValue(int,float) -> setValue
    float getValue(int) -> getValue
    void access$100(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$100
    com.nineoldandroids.animation.Animator$AnimatorListener access$200(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$200
    java.util.HashMap access$300(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$300
    com.nineoldandroids.animation.Animator$AnimatorListener access$202(com.nineoldandroids.view.ViewPropertyAnimatorPreHC,com.nineoldandroids.animation.Animator$AnimatorListener) -> access$202
    java.lang.ref.WeakReference access$400(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$400
    void access$500(com.nineoldandroids.view.ViewPropertyAnimatorPreHC,int,float) -> access$500
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$1 -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC$1:
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC this$0 -> this$0
    void run() -> run
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener:
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC this$0 -> this$0
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$NameValuesHolder -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC$NameValuesHolder:
    int mNameConstant -> mNameConstant
    float mFromValue -> mFromValue
    float mDeltaValue -> mDeltaValue
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$PropertyBundle -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC$PropertyBundle:
    int mPropertyMask -> mPropertyMask
    java.util.ArrayList mNameValuesHolder -> mNameValuesHolder
    boolean cancel(int) -> cancel
com.nineoldandroids.view.animation.AnimatorProxy -> com.nineoldandroids.view.animation.AnimatorProxy:
    boolean NEEDS_PROXY -> NEEDS_PROXY
    java.util.WeakHashMap PROXIES -> PROXIES
    java.lang.ref.WeakReference mView -> mView
    android.graphics.Camera mCamera -> mCamera
    boolean mHasPivot -> mHasPivot
    float mAlpha -> mAlpha
    float mPivotX -> mPivotX
    float mPivotY -> mPivotY
    float mRotationX -> mRotationX
    float mRotationY -> mRotationY
    float mRotationZ -> mRotationZ
    float mScaleX -> mScaleX
    float mScaleY -> mScaleY
    float mTranslationX -> mTranslationX
    float mTranslationY -> mTranslationY
    android.graphics.RectF mBefore -> mBefore
    android.graphics.RectF mAfter -> mAfter
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> wrap
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getPivotX() -> getPivotX
    void setPivotX(float) -> setPivotX
    float getPivotY() -> getPivotY
    void setPivotY(float) -> setPivotY
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getRotationX() -> getRotationX
    void setRotationX(float) -> setRotationX
    float getRotationY() -> getRotationY
    void setRotationY(float) -> setRotationY
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    void prepareForUpdate() -> prepareForUpdate
    void invalidateAfterUpdate() -> invalidateAfterUpdate
    void computeRect(android.graphics.RectF,android.view.View) -> computeRect
    void transformMatrix(android.graphics.Matrix,android.view.View) -> transformMatrix
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.novell.sasl.client.DigestChallenge -> com.novell.sasl.client.DigestChallenge:
    int QOP_AUTH -> QOP_AUTH
    int QOP_AUTH_INT -> QOP_AUTH_INT
    int QOP_AUTH_CONF -> QOP_AUTH_CONF
    int QOP_UNRECOGNIZED -> QOP_UNRECOGNIZED
    int CIPHER_3DES -> CIPHER_3DES
    int CIPHER_DES -> CIPHER_DES
    int CIPHER_RC4_40 -> CIPHER_RC4_40
    int CIPHER_RC4 -> CIPHER_RC4
    int CIPHER_RC4_56 -> CIPHER_RC4_56
    int CIPHER_UNRECOGNIZED -> CIPHER_UNRECOGNIZED
    int CIPHER_RECOGNIZED_MASK -> CIPHER_RECOGNIZED_MASK
    java.util.ArrayList m_realms -> m_realms
    java.lang.String m_nonce -> m_nonce
    int m_qop -> m_qop
    boolean m_staleFlag -> m_staleFlag
    int m_maxBuf -> m_maxBuf
    java.lang.String m_characterSet -> m_characterSet
    java.lang.String m_algorithm -> m_algorithm
    int m_cipherOptions -> m_cipherOptions
    void checkSemantics(com.novell.sasl.client.DirectiveList) -> checkSemantics
    void handleNonce(com.novell.sasl.client.ParsedDirective) -> handleNonce
    void handleRealm(com.novell.sasl.client.ParsedDirective) -> handleRealm
    void handleQop(com.novell.sasl.client.ParsedDirective) -> handleQop
    void handleMaxbuf(com.novell.sasl.client.ParsedDirective) -> handleMaxbuf
    void handleCharset(com.novell.sasl.client.ParsedDirective) -> handleCharset
    void handleAlgorithm(com.novell.sasl.client.ParsedDirective) -> handleAlgorithm
    void handleCipher(com.novell.sasl.client.ParsedDirective) -> handleCipher
    void handleStale(com.novell.sasl.client.ParsedDirective) -> handleStale
    java.util.ArrayList getRealms() -> getRealms
    java.lang.String getNonce() -> getNonce
    int getQop() -> getQop
    boolean getStaleFlag() -> getStaleFlag
    int getMaxBuf() -> getMaxBuf
    java.lang.String getCharacterSet() -> getCharacterSet
    java.lang.String getAlgorithm() -> getAlgorithm
    int getCipherOptions() -> getCipherOptions
com.novell.sasl.client.DigestMD5SaslClient -> com.novell.sasl.client.DigestMD5SaslClient:
    java.lang.String m_authorizationId -> m_authorizationId
    java.lang.String m_protocol -> m_protocol
    java.lang.String m_serverName -> m_serverName
    java.util.Map m_props -> m_props
    org.apache.harmony.javax.security.auth.callback.CallbackHandler m_cbh -> m_cbh
    int m_state -> m_state
    java.lang.String m_qopValue -> m_qopValue
    char[] m_HA1 -> m_HA1
    java.lang.String m_digestURI -> m_digestURI
    com.novell.sasl.client.DigestChallenge m_dc -> m_dc
    java.lang.String m_clientNonce -> m_clientNonce
    java.lang.String m_realm -> m_realm
    java.lang.String m_name -> m_name
    int STATE_INITIAL -> STATE_INITIAL
    int STATE_DIGEST_RESPONSE_SENT -> STATE_DIGEST_RESPONSE_SENT
    int STATE_VALID_SERVER_RESPONSE -> STATE_VALID_SERVER_RESPONSE
    int STATE_INVALID_SERVER_RESPONSE -> STATE_INVALID_SERVER_RESPONSE
    int STATE_DISPOSED -> STATE_DISPOSED
    int NONCE_BYTE_COUNT -> NONCE_BYTE_COUNT
    int NONCE_HEX_COUNT -> NONCE_HEX_COUNT
    java.lang.String DIGEST_METHOD -> DIGEST_METHOD
    org.apache.harmony.javax.security.sasl.SaslClient getClient(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> getClient
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    void dispose() -> dispose
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    char[] convertToHex(byte[]) -> convertToHex
    char[] DigestCalcHA1(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> DigestCalcHA1
    char[] DigestCalcResponse(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> DigestCalcResponse
    java.lang.String createDigestResponse(byte[]) -> createDigestResponse
    boolean checkServerResponseAuth(byte[]) -> checkServerResponseAuth
    char getHexChar(byte) -> getHexChar
    java.lang.String getClientNonce() -> getClientNonce
    java.lang.String getMechanismName() -> getMechanismName
com.novell.sasl.client.DirectiveList -> com.novell.sasl.client.DirectiveList:
    int STATE_LOOKING_FOR_FIRST_DIRECTIVE -> STATE_LOOKING_FOR_FIRST_DIRECTIVE
    int STATE_LOOKING_FOR_DIRECTIVE -> STATE_LOOKING_FOR_DIRECTIVE
    int STATE_SCANNING_NAME -> STATE_SCANNING_NAME
    int STATE_LOOKING_FOR_EQUALS -> STATE_LOOKING_FOR_EQUALS
    int STATE_LOOKING_FOR_VALUE -> STATE_LOOKING_FOR_VALUE
    int STATE_LOOKING_FOR_COMMA -> STATE_LOOKING_FOR_COMMA
    int STATE_SCANNING_QUOTED_STRING_VALUE -> STATE_SCANNING_QUOTED_STRING_VALUE
    int STATE_SCANNING_TOKEN_VALUE -> STATE_SCANNING_TOKEN_VALUE
    int STATE_NO_UTF8_SUPPORT -> STATE_NO_UTF8_SUPPORT
    int m_curPos -> m_curPos
    int m_errorPos -> m_errorPos
    java.lang.String m_directives -> m_directives
    int m_state -> m_state
    java.util.ArrayList m_directiveList -> m_directiveList
    java.lang.String m_curName -> m_curName
    int m_scanStart -> m_scanStart
    void parseDirectives() -> parseDirectives
    boolean isValidTokenChar(char) -> isValidTokenChar
    boolean isWhiteSpace(char) -> isWhiteSpace
    void addDirective(java.lang.String,boolean) -> addDirective
    java.util.Iterator getIterator() -> getIterator
com.novell.sasl.client.ParsedDirective -> com.novell.sasl.client.ParsedDirective:
    int QUOTED_STRING_VALUE -> QUOTED_STRING_VALUE
    int TOKEN_VALUE -> TOKEN_VALUE
    int m_valueType -> m_valueType
    java.lang.String m_name -> m_name
    java.lang.String m_value -> m_value
    java.lang.String getValue() -> getValue
    java.lang.String getName() -> getName
    int getValueType() -> getValueType
com.novell.sasl.client.ResponseAuth -> com.novell.sasl.client.ResponseAuth:
    java.lang.String m_responseValue -> m_responseValue
    void checkSemantics(com.novell.sasl.client.DirectiveList) -> checkSemantics
    java.lang.String getResponseValue() -> getResponseValue
com.novell.sasl.client.TokenParser -> com.novell.sasl.client.TokenParser:
    int STATE_LOOKING_FOR_FIRST_TOKEN -> STATE_LOOKING_FOR_FIRST_TOKEN
    int STATE_LOOKING_FOR_TOKEN -> STATE_LOOKING_FOR_TOKEN
    int STATE_SCANNING_TOKEN -> STATE_SCANNING_TOKEN
    int STATE_LOOKING_FOR_COMMA -> STATE_LOOKING_FOR_COMMA
    int STATE_PARSING_ERROR -> STATE_PARSING_ERROR
    int STATE_DONE -> STATE_DONE
    int m_curPos -> m_curPos
    int m_scanStart -> m_scanStart
    int m_state -> m_state
    java.lang.String m_tokens -> m_tokens
    java.lang.String parseToken() -> parseToken
    boolean isValidTokenChar(char) -> isValidTokenChar
    boolean isWhiteSpace(char) -> isWhiteSpace
de.measite.smack.AndroidDebugger -> de.measite.smack.AndroidDebugger:
    boolean printInterpreted -> printInterpreted
    java.text.SimpleDateFormat dateFormatter -> dateFormatter
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.PacketListener listener -> listener
    org.jivesoftware.smack.ConnectionListener connListener -> connListener
    java.io.Writer writer -> writer
    java.io.Reader reader -> reader
    org.jivesoftware.smack.util.ReaderListener readerListener -> readerListener
    org.jivesoftware.smack.util.WriterListener writerListener -> writerListener
    void createDebug() -> createDebug
    java.io.Reader newConnectionReader(java.io.Reader) -> newConnectionReader
    java.io.Writer newConnectionWriter(java.io.Writer) -> newConnectionWriter
    void userHasLogged(java.lang.String) -> userHasLogged
    java.io.Reader getReader() -> getReader
    java.io.Writer getWriter() -> getWriter
    org.jivesoftware.smack.PacketListener getReaderListener() -> getReaderListener
    org.jivesoftware.smack.PacketListener getWriterListener() -> getWriterListener
    java.text.SimpleDateFormat access$0(de.measite.smack.AndroidDebugger) -> access$0
    org.jivesoftware.smack.Connection access$1(de.measite.smack.AndroidDebugger) -> access$1
de.measite.smack.AndroidDebugger$1 -> de.measite.smack.AndroidDebugger$1:
    de.measite.smack.AndroidDebugger this$0 -> this$0
    void read(java.lang.String) -> read
de.measite.smack.AndroidDebugger$2 -> de.measite.smack.AndroidDebugger$2:
    de.measite.smack.AndroidDebugger this$0 -> this$0
    void write(java.lang.String) -> write
de.measite.smack.AndroidDebugger$3 -> de.measite.smack.AndroidDebugger$3:
    de.measite.smack.AndroidDebugger this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
de.measite.smack.AndroidDebugger$4 -> de.measite.smack.AndroidDebugger$4:
    de.measite.smack.AndroidDebugger this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectingIn(int) -> reconnectingIn
de.measite.smack.Sasl -> de.measite.smack.Sasl:
    java.lang.String CLIENTFACTORYSRV -> CLIENTFACTORYSRV
    java.lang.String SERVERFACTORYSRV -> SERVERFACTORYSRV
    java.lang.String POLICY_NOPLAINTEXT -> POLICY_NOPLAINTEXT
    java.lang.String POLICY_NOACTIVE -> POLICY_NOACTIVE
    java.lang.String POLICY_NODICTIONARY -> POLICY_NODICTIONARY
    java.lang.String POLICY_NOANONYMOUS -> POLICY_NOANONYMOUS
    java.lang.String POLICY_FORWARD_SECRECY -> POLICY_FORWARD_SECRECY
    java.lang.String POLICY_PASS_CREDENTIALS -> POLICY_PASS_CREDENTIALS
    java.lang.String MAX_BUFFER -> MAX_BUFFER
    java.lang.String RAW_SEND_SIZE -> RAW_SEND_SIZE
    java.lang.String REUSE -> REUSE
    java.lang.String QOP -> QOP
    java.lang.String STRENGTH -> STRENGTH
    java.lang.String SERVER_AUTH -> SERVER_AUTH
    java.util.Enumeration getSaslClientFactories() -> getSaslClientFactories
    java.util.Enumeration getSaslServerFactories() -> getSaslServerFactories
    org.apache.harmony.javax.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslServer
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
de.measite.smack.SaslClientFactory -> de.measite.smack.SaslClientFactory:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.harmony.javax.security.auth.AuthPermission -> org.apache.harmony.javax.security.auth.AuthPermission:
    long serialVersionUID -> serialVersionUID
    java.lang.String CREATE_LOGIN_CONTEXT -> CREATE_LOGIN_CONTEXT
    java.lang.String CREATE_LOGIN_CONTEXT_ANY -> CREATE_LOGIN_CONTEXT_ANY
    java.lang.String init(java.lang.String) -> init
org.apache.harmony.javax.security.auth.DestroyFailedException -> org.apache.harmony.javax.security.auth.DestroyFailedException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.Destroyable -> org.apache.harmony.javax.security.auth.Destroyable:
    void destroy() -> destroy
    boolean isDestroyed() -> isDestroyed
org.apache.harmony.javax.security.auth.PrivateCredentialPermission -> org.apache.harmony.javax.security.auth.PrivateCredentialPermission:
    long serialVersionUID -> serialVersionUID
    java.lang.String READ -> READ
    java.lang.String credentialClass -> credentialClass
    int offset -> offset
    org.apache.harmony.javax.security.auth.PrivateCredentialPermission$CredOwner[] set -> set
    void initTargetName(java.lang.String) -> initTargetName
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.String[][] getPrincipals() -> getPrincipals
    java.lang.String getActions() -> getActions
    java.lang.String getCredentialClass() -> getCredentialClass
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean implies(java.security.Permission) -> implies
    java.security.PermissionCollection newPermissionCollection() -> newPermissionCollection
    boolean sameMembers(java.lang.Object[],java.lang.Object[],int) -> sameMembers
org.apache.harmony.javax.security.auth.PrivateCredentialPermission$CredOwner -> org.apache.harmony.javax.security.auth.PrivateCredentialPermission$CredOwner:
    long serialVersionUID -> serialVersionUID
    java.lang.String principalClass -> principalClass
    java.lang.String principalName -> principalName
    boolean isClassWildcard -> isClassWildcard
    boolean isPNameWildcard -> isPNameWildcard
    boolean implies(java.lang.Object) -> implies
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.harmony.javax.security.auth.RefreshFailedException -> org.apache.harmony.javax.security.auth.RefreshFailedException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.Refreshable -> org.apache.harmony.javax.security.auth.Refreshable:
    void refresh() -> refresh
    boolean isCurrent() -> isCurrent
org.apache.harmony.javax.security.auth.Subject -> org.apache.harmony.javax.security.auth.Subject:
    long serialVersionUID -> serialVersionUID
    org.apache.harmony.javax.security.auth.AuthPermission _AS -> _AS
    org.apache.harmony.javax.security.auth.AuthPermission _AS_PRIVILEGED -> _AS_PRIVILEGED
    org.apache.harmony.javax.security.auth.AuthPermission _SUBJECT -> _SUBJECT
    org.apache.harmony.javax.security.auth.AuthPermission _PRINCIPALS -> _PRINCIPALS
    org.apache.harmony.javax.security.auth.AuthPermission _PRIVATE_CREDENTIALS -> _PRIVATE_CREDENTIALS
    org.apache.harmony.javax.security.auth.AuthPermission _PUBLIC_CREDENTIALS -> _PUBLIC_CREDENTIALS
    org.apache.harmony.javax.security.auth.AuthPermission _READ_ONLY -> _READ_ONLY
    java.util.Set principals -> principals
    boolean readOnly -> readOnly
    org.apache.harmony.javax.security.auth.Subject$SecureSet privateCredentials -> privateCredentials
    org.apache.harmony.javax.security.auth.Subject$SecureSet publicCredentials -> publicCredentials
    java.lang.Object doAs(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedAction) -> doAs
    java.lang.Object doAsPrivileged(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext) -> doAsPrivileged
    java.lang.Object doAs_PrivilegedAction(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext) -> doAs_PrivilegedAction
    java.lang.Object doAs(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedExceptionAction) -> doAs
    java.lang.Object doAsPrivileged(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext) -> doAsPrivileged
    java.lang.Object doAs_PrivilegedExceptionAction(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext) -> doAs_PrivilegedExceptionAction
    boolean equals(java.lang.Object) -> equals
    java.util.Set getPrincipals() -> getPrincipals
    java.util.Set getPrincipals(java.lang.Class) -> getPrincipals
    java.util.Set getPrivateCredentials() -> getPrivateCredentials
    java.util.Set getPrivateCredentials(java.lang.Class) -> getPrivateCredentials
    java.util.Set getPublicCredentials() -> getPublicCredentials
    java.util.Set getPublicCredentials(java.lang.Class) -> getPublicCredentials
    int hashCode() -> hashCode
    void setReadOnly() -> setReadOnly
    boolean isReadOnly() -> isReadOnly
    java.lang.String toString() -> toString
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    org.apache.harmony.javax.security.auth.Subject getSubject(java.security.AccessControlContext) -> getSubject
    void checkPermission(java.security.Permission) -> checkPermission
    void checkState() -> checkState
    void access$0(org.apache.harmony.javax.security.auth.Subject) -> access$0
    void access$1(java.security.Permission) -> access$1
    org.apache.harmony.javax.security.auth.AuthPermission access$2() -> access$2
    org.apache.harmony.javax.security.auth.AuthPermission access$3() -> access$3
    java.util.Set access$4(org.apache.harmony.javax.security.auth.Subject) -> access$4
    org.apache.harmony.javax.security.auth.AuthPermission access$5() -> access$5
org.apache.harmony.javax.security.auth.Subject$1 -> org.apache.harmony.javax.security.auth.Subject$1:
    java.security.AccessControlContext val$context -> val$context
    org.apache.harmony.javax.security.auth.SubjectDomainCombiner val$combiner -> val$combiner
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.Subject$2 -> org.apache.harmony.javax.security.auth.Subject$2:
    java.security.AccessControlContext val$context -> val$context
    org.apache.harmony.javax.security.auth.SubjectDomainCombiner val$combiner -> val$combiner
    java.security.AccessControlContext run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.Subject$3 -> org.apache.harmony.javax.security.auth.Subject$3:
    java.security.AccessControlContext val$context -> val$context
    java.security.DomainCombiner run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.Subject$SecureSet -> org.apache.harmony.javax.security.auth.Subject$SecureSet:
    long serialVersionUID -> serialVersionUID
    java.util.LinkedList elements -> elements
    int setType -> setType
    int SET_Principal -> SET_Principal
    int SET_PrivCred -> SET_PrivCred
    int SET_PubCred -> SET_PubCred
    org.apache.harmony.javax.security.auth.AuthPermission permission -> permission
    org.apache.harmony.javax.security.auth.Subject this$0 -> this$0
    void verifyElement(java.lang.Object) -> verifyElement
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.util.Set get(java.lang.Class) -> get
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    org.apache.harmony.javax.security.auth.AuthPermission access$0(org.apache.harmony.javax.security.auth.Subject$SecureSet) -> access$0
    org.apache.harmony.javax.security.auth.Subject access$1(org.apache.harmony.javax.security.auth.Subject$SecureSet) -> access$1
org.apache.harmony.javax.security.auth.Subject$SecureSet$1 -> org.apache.harmony.javax.security.auth.Subject$SecureSet$1:
    org.apache.harmony.javax.security.auth.Subject$SecureSet this$1 -> this$1
    java.lang.Object next() -> next
org.apache.harmony.javax.security.auth.Subject$SecureSet$2 -> org.apache.harmony.javax.security.auth.Subject$SecureSet$2:
    java.util.LinkedList elements -> elements
    org.apache.harmony.javax.security.auth.Subject$SecureSet this$1 -> this$1
    java.lang.Class val$c -> val$c
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
org.apache.harmony.javax.security.auth.Subject$SecureSet$SecureIterator -> org.apache.harmony.javax.security.auth.Subject$SecureSet$SecureIterator:
    java.util.Iterator iterator -> iterator
    org.apache.harmony.javax.security.auth.Subject$SecureSet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.harmony.javax.security.auth.SubjectDomainCombiner -> org.apache.harmony.javax.security.auth.SubjectDomainCombiner:
    org.apache.harmony.javax.security.auth.Subject subject -> subject
    org.apache.harmony.javax.security.auth.AuthPermission _GET -> _GET
    org.apache.harmony.javax.security.auth.Subject getSubject() -> getSubject
    java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[]) -> combine
org.apache.harmony.javax.security.auth.callback.Callback -> org.apache.harmony.javax.security.auth.callback.Callback:
org.apache.harmony.javax.security.auth.callback.CallbackHandler -> org.apache.harmony.javax.security.auth.callback.CallbackHandler:
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
org.apache.harmony.javax.security.auth.callback.ChoiceCallback -> org.apache.harmony.javax.security.auth.callback.ChoiceCallback:
    long serialVersionUID -> serialVersionUID
    int defaultChoice -> defaultChoice
    java.lang.String prompt -> prompt
    boolean multipleSelectionsAllowed -> multipleSelectionsAllowed
    java.lang.String[] choices -> choices
    int[] selections -> selections
    void setChoices(java.lang.String[]) -> setChoices
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultChoice(int) -> setDefaultChoice
    boolean allowMultipleSelections() -> allowMultipleSelections
    java.lang.String[] getChoices() -> getChoices
    int getDefaultChoice() -> getDefaultChoice
    java.lang.String getPrompt() -> getPrompt
    int[] getSelectedIndexes() -> getSelectedIndexes
    void setSelectedIndex(int) -> setSelectedIndex
    void setSelectedIndexes(int[]) -> setSelectedIndexes
org.apache.harmony.javax.security.auth.callback.ConfirmationCallback -> org.apache.harmony.javax.security.auth.callback.ConfirmationCallback:
    long serialVersionUID -> serialVersionUID
    int YES -> YES
    int NO -> NO
    int CANCEL -> CANCEL
    int OK -> OK
    int YES_NO_OPTION -> YES_NO_OPTION
    int YES_NO_CANCEL_OPTION -> YES_NO_CANCEL_OPTION
    int OK_CANCEL_OPTION -> OK_CANCEL_OPTION
    int UNSPECIFIED_OPTION -> UNSPECIFIED_OPTION
    int INFORMATION -> INFORMATION
    int WARNING -> WARNING
    int ERROR -> ERROR
    java.lang.String prompt -> prompt
    int messageType -> messageType
    int optionType -> optionType
    int defaultOption -> defaultOption
    java.lang.String[] options -> options
    int selection -> selection
    java.lang.String getPrompt() -> getPrompt
    int getMessageType() -> getMessageType
    int getDefaultOption() -> getDefaultOption
    java.lang.String[] getOptions() -> getOptions
    int getOptionType() -> getOptionType
    int getSelectedIndex() -> getSelectedIndex
    void setSelectedIndex(int) -> setSelectedIndex
org.apache.harmony.javax.security.auth.callback.LanguageCallback -> org.apache.harmony.javax.security.auth.callback.LanguageCallback:
    long serialVersionUID -> serialVersionUID
    java.util.Locale locale -> locale
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
org.apache.harmony.javax.security.auth.callback.NameCallback -> org.apache.harmony.javax.security.auth.callback.NameCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String prompt -> prompt
    java.lang.String defaultName -> defaultName
    java.lang.String inputName -> inputName
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultName(java.lang.String) -> setDefaultName
    java.lang.String getPrompt() -> getPrompt
    java.lang.String getDefaultName() -> getDefaultName
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
org.apache.harmony.javax.security.auth.callback.PasswordCallback -> org.apache.harmony.javax.security.auth.callback.PasswordCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String prompt -> prompt
    boolean echoOn -> echoOn
    char[] inputPassword -> inputPassword
    void setPrompt(java.lang.String) -> setPrompt
    java.lang.String getPrompt() -> getPrompt
    boolean isEchoOn() -> isEchoOn
    void setPassword(char[]) -> setPassword
    char[] getPassword() -> getPassword
    void clearPassword() -> clearPassword
org.apache.harmony.javax.security.auth.callback.TextInputCallback -> org.apache.harmony.javax.security.auth.callback.TextInputCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String defaultText -> defaultText
    java.lang.String prompt -> prompt
    java.lang.String inputText -> inputText
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultText(java.lang.String) -> setDefaultText
    java.lang.String getDefaultText() -> getDefaultText
    java.lang.String getPrompt() -> getPrompt
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
org.apache.harmony.javax.security.auth.callback.TextOutputCallback -> org.apache.harmony.javax.security.auth.callback.TextOutputCallback:
    long serialVersionUID -> serialVersionUID
    int INFORMATION -> INFORMATION
    int WARNING -> WARNING
    int ERROR -> ERROR
    java.lang.String message -> message
    int messageType -> messageType
    java.lang.String getMessage() -> getMessage
    int getMessageType() -> getMessageType
org.apache.harmony.javax.security.auth.callback.UnsupportedCallbackException -> org.apache.harmony.javax.security.auth.callback.UnsupportedCallbackException:
    long serialVersionUID -> serialVersionUID
    org.apache.harmony.javax.security.auth.callback.Callback callback -> callback
    org.apache.harmony.javax.security.auth.callback.Callback getCallback() -> getCallback
org.apache.harmony.javax.security.auth.login.AccountException -> org.apache.harmony.javax.security.auth.login.AccountException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AccountExpiredException -> org.apache.harmony.javax.security.auth.login.AccountExpiredException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AccountLockedException -> org.apache.harmony.javax.security.auth.login.AccountLockedException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AccountNotFoundException -> org.apache.harmony.javax.security.auth.login.AccountNotFoundException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AppConfigurationEntry -> org.apache.harmony.javax.security.auth.login.AppConfigurationEntry:
    java.util.Map options -> options
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag controlFlag -> controlFlag
    java.lang.String loginModuleName -> loginModuleName
    java.lang.String getLoginModuleName() -> getLoginModuleName
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag getControlFlag() -> getControlFlag
    java.util.Map getOptions() -> getOptions
org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag -> org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag:
    java.lang.String flag -> flag
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag REQUIRED -> REQUIRED
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag REQUISITE -> REQUISITE
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag OPTIONAL -> OPTIONAL
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag SUFFICIENT -> SUFFICIENT
    java.lang.String toString() -> toString
org.apache.harmony.javax.security.auth.login.Configuration -> org.apache.harmony.javax.security.auth.login.Configuration:
    org.apache.harmony.javax.security.auth.login.Configuration configuration -> configuration
    org.apache.harmony.javax.security.auth.AuthPermission GET_LOGIN_CONFIGURATION -> GET_LOGIN_CONFIGURATION
    org.apache.harmony.javax.security.auth.AuthPermission SET_LOGIN_CONFIGURATION -> SET_LOGIN_CONFIGURATION
    java.lang.String LOGIN_CONFIGURATION_PROVIDER -> LOGIN_CONFIGURATION_PROVIDER
    org.apache.harmony.javax.security.auth.login.Configuration getConfiguration() -> getConfiguration
    org.apache.harmony.javax.security.auth.login.Configuration getDefaultProvider() -> getDefaultProvider
    org.apache.harmony.javax.security.auth.login.Configuration getAccessibleConfiguration() -> getAccessibleConfiguration
    void setConfiguration(org.apache.harmony.javax.security.auth.login.Configuration) -> setConfiguration
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String) -> getAppConfigurationEntry
    void refresh() -> refresh
org.apache.harmony.javax.security.auth.login.Configuration$1 -> org.apache.harmony.javax.security.auth.login.Configuration$1:
    void refresh() -> refresh
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String) -> getAppConfigurationEntry
org.apache.harmony.javax.security.auth.login.CredentialException -> org.apache.harmony.javax.security.auth.login.CredentialException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.CredentialExpiredException -> org.apache.harmony.javax.security.auth.login.CredentialExpiredException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.CredentialNotFoundException -> org.apache.harmony.javax.security.auth.login.CredentialNotFoundException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.FailedLoginException -> org.apache.harmony.javax.security.auth.login.FailedLoginException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.LoginContext -> org.apache.harmony.javax.security.auth.login.LoginContext:
    java.lang.String DEFAULT_CALLBACK_HANDLER_PROPERTY -> DEFAULT_CALLBACK_HANDLER_PROPERTY
    int OPTIONAL -> OPTIONAL
    int REQUIRED -> REQUIRED
    int REQUISITE -> REQUISITE
    int SUFFICIENT -> SUFFICIENT
    org.apache.harmony.javax.security.auth.Subject subject -> subject
    boolean userProvidedSubject -> userProvidedSubject
    boolean userProvidedConfig -> userProvidedConfig
    java.security.AccessControlContext userContext -> userContext
    org.apache.harmony.javax.security.auth.callback.CallbackHandler callbackHandler -> callbackHandler
    org.apache.harmony.javax.security.auth.login.LoginContext$Module[] modules -> modules
    java.util.Map sharedState -> sharedState
    java.lang.ClassLoader contextClassLoader -> contextClassLoader
    boolean loggedIn -> loggedIn
    void init(java.lang.String,org.apache.harmony.javax.security.auth.Subject,org.apache.harmony.javax.security.auth.callback.CallbackHandler,org.apache.harmony.javax.security.auth.login.Configuration) -> init
    org.apache.harmony.javax.security.auth.Subject getSubject() -> getSubject
    void login() -> login
    void loginImpl() -> loginImpl
    void logout() -> logout
    void logoutImpl() -> logoutImpl
    java.security.AccessControlContext access$0(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$0
    java.lang.ClassLoader access$1(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$1
    void access$2(org.apache.harmony.javax.security.auth.login.LoginContext,java.lang.ClassLoader) -> access$2
    void access$3(org.apache.harmony.javax.security.auth.login.LoginContext,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> access$3
    void access$4(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$4
    void access$5(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$5
org.apache.harmony.javax.security.auth.login.LoginContext$1 -> org.apache.harmony.javax.security.auth.login.LoginContext$1:
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    org.apache.harmony.javax.security.auth.callback.CallbackHandler val$cbHandler -> val$cbHandler
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$2 -> org.apache.harmony.javax.security.auth.login.LoginContext$2:
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$3 -> org.apache.harmony.javax.security.auth.login.LoginContext$3:
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler -> org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler:
    org.apache.harmony.javax.security.auth.callback.CallbackHandler hiddenHandlerRef -> hiddenHandlerRef
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
    org.apache.harmony.javax.security.auth.callback.CallbackHandler access$0(org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler) -> access$0
org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler$1 -> org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler$1:
    org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler this$1 -> this$1
    org.apache.harmony.javax.security.auth.callback.Callback[] val$callbacks -> val$callbacks
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$Module -> org.apache.harmony.javax.security.auth.login.LoginContext$Module:
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry entry -> entry
    int flag -> flag
    org.apache.harmony.javax.security.auth.spi.LoginModule module -> module
    java.lang.Class klass -> klass
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    int getFlag() -> getFlag
    void create(org.apache.harmony.javax.security.auth.Subject,org.apache.harmony.javax.security.auth.callback.CallbackHandler,java.util.Map) -> create
org.apache.harmony.javax.security.auth.login.LoginException -> org.apache.harmony.javax.security.auth.login.LoginException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.spi.LoginModule -> org.apache.harmony.javax.security.auth.spi.LoginModule:
    void initialize(org.apache.harmony.javax.security.auth.Subject,org.apache.harmony.javax.security.auth.callback.CallbackHandler,java.util.Map,java.util.Map) -> initialize
    boolean login() -> login
    boolean commit() -> commit
    boolean abort() -> abort
    boolean logout() -> logout
org.apache.harmony.javax.security.sasl.AuthenticationException -> org.apache.harmony.javax.security.sasl.AuthenticationException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.sasl.AuthorizeCallback -> org.apache.harmony.javax.security.sasl.AuthorizeCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String authenticationID -> authenticationID
    java.lang.String authorizationID -> authorizationID
    java.lang.String authorizedID -> authorizedID
    boolean authorized -> authorized
    java.lang.String getAuthenticationID() -> getAuthenticationID
    java.lang.String getAuthorizationID() -> getAuthorizationID
    java.lang.String getAuthorizedID() -> getAuthorizedID
    boolean isAuthorized() -> isAuthorized
    void setAuthorized(boolean) -> setAuthorized
    void setAuthorizedID(java.lang.String) -> setAuthorizedID
org.apache.harmony.javax.security.sasl.RealmCallback -> org.apache.harmony.javax.security.sasl.RealmCallback:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.sasl.RealmChoiceCallback -> org.apache.harmony.javax.security.sasl.RealmChoiceCallback:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.sasl.Sasl -> org.apache.harmony.javax.security.sasl.Sasl:
    java.lang.String CLIENTFACTORYSRV -> CLIENTFACTORYSRV
    java.lang.String SERVERFACTORYSRV -> SERVERFACTORYSRV
    java.lang.String POLICY_NOPLAINTEXT -> POLICY_NOPLAINTEXT
    java.lang.String POLICY_NOACTIVE -> POLICY_NOACTIVE
    java.lang.String POLICY_NODICTIONARY -> POLICY_NODICTIONARY
    java.lang.String POLICY_NOANONYMOUS -> POLICY_NOANONYMOUS
    java.lang.String POLICY_FORWARD_SECRECY -> POLICY_FORWARD_SECRECY
    java.lang.String POLICY_PASS_CREDENTIALS -> POLICY_PASS_CREDENTIALS
    java.lang.String MAX_BUFFER -> MAX_BUFFER
    java.lang.String RAW_SEND_SIZE -> RAW_SEND_SIZE
    java.lang.String REUSE -> REUSE
    java.lang.String QOP -> QOP
    java.lang.String STRENGTH -> STRENGTH
    java.lang.String SERVER_AUTH -> SERVER_AUTH
    java.lang.Object newInstance(java.lang.String,java.security.Provider) -> newInstance
    java.util.Collection findFactories(java.lang.String) -> findFactories
    java.util.Enumeration getSaslClientFactories() -> getSaslClientFactories
    java.util.Enumeration getSaslServerFactories() -> getSaslServerFactories
    org.apache.harmony.javax.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslServer
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
org.apache.harmony.javax.security.sasl.SaslClient -> org.apache.harmony.javax.security.sasl.SaslClient:
    void dispose() -> dispose
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    java.lang.String getMechanismName() -> getMechanismName
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
org.apache.harmony.javax.security.sasl.SaslClientFactory -> org.apache.harmony.javax.security.sasl.SaslClientFactory:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.harmony.javax.security.sasl.SaslException -> org.apache.harmony.javax.security.sasl.SaslException:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable _exception -> _exception
    java.lang.Throwable getCause() -> getCause
    java.lang.Throwable initCause(java.lang.Throwable) -> initCause
    java.lang.String toString() -> toString
org.apache.harmony.javax.security.sasl.SaslServer -> org.apache.harmony.javax.security.sasl.SaslServer:
    void dispose() -> dispose
    byte[] evaluateResponse(byte[]) -> evaluateResponse
    java.lang.String getAuthorizationID() -> getAuthorizationID
    java.lang.String getMechanismName() -> getMechanismName
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
org.apache.harmony.javax.security.sasl.SaslServerFactory -> org.apache.harmony.javax.security.sasl.SaslServerFactory:
    org.apache.harmony.javax.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslServer
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.qpid.management.common.sasl.CRAMMD5HashedSaslClientFactory -> org.apache.qpid.management.common.sasl.CRAMMD5HashedSaslClientFactory:
    java.lang.String MECHANISM -> MECHANISM
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.qpid.management.common.sasl.ClientSaslFactory -> org.apache.qpid.management.common.sasl.ClientSaslFactory:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.qpid.management.common.sasl.Constants -> org.apache.qpid.management.common.sasl.Constants:
    java.lang.String MECH_CRAMMD5 -> MECH_CRAMMD5
    java.lang.String MECH_PLAIN -> MECH_PLAIN
    java.lang.String SASL_CRAMMD5 -> SASL_CRAMMD5
    java.lang.String SASL_PLAIN -> SASL_PLAIN
org.apache.qpid.management.common.sasl.JCAProvider -> org.apache.qpid.management.common.sasl.JCAProvider:
    long serialVersionUID -> serialVersionUID
    void register(java.util.Map) -> register
org.apache.qpid.management.common.sasl.PlainSaslClient -> org.apache.qpid.management.common.sasl.PlainSaslClient:
    boolean completed -> completed
    org.apache.harmony.javax.security.auth.callback.CallbackHandler cbh -> cbh
    java.lang.String authorizationID -> authorizationID
    java.lang.String authenticationID -> authenticationID
    byte[] password -> password
    byte SEPARATOR -> SEPARATOR
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    java.lang.String getMechanismName() -> getMechanismName
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    void clearPassword() -> clearPassword
    void dispose() -> dispose
    void finalize() -> finalize
    java.lang.Object[] getUserInfo() -> getUserInfo
org.apache.qpid.management.common.sasl.SaslProvider -> org.apache.qpid.management.common.sasl.SaslProvider:
    long serialVersionUID -> serialVersionUID
org.apache.qpid.management.common.sasl.UserPasswordCallbackHandler -> org.apache.qpid.management.common.sasl.UserPasswordCallbackHandler:
    java.lang.String user -> user
    char[] pwchars -> pwchars
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
    void clearPassword() -> clearPassword
    void finalize() -> finalize
org.apache.qpid.management.common.sasl.UsernameHashedPasswordCallbackHandler -> org.apache.qpid.management.common.sasl.UsernameHashedPasswordCallbackHandler:
    java.lang.String user -> user
    char[] pwchars -> pwchars
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
    void clearPassword() -> clearPassword
    void finalize() -> finalize
    char[] getHash(java.lang.String) -> getHash
org.jivesoftware.smack.AccountManager -> org.jivesoftware.smack.AccountManager:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.packet.Registration info -> info
    boolean accountCreationSupported -> accountCreationSupported
    void setSupportsAccountCreation(boolean) -> setSupportsAccountCreation
    boolean supportsAccountCreation() -> supportsAccountCreation
    java.util.Collection getAccountAttributes() -> getAccountAttributes
    java.lang.String getAccountAttribute(java.lang.String) -> getAccountAttribute
    java.lang.String getAccountInstructions() -> getAccountInstructions
    void createAccount(java.lang.String,java.lang.String) -> createAccount
    void createAccount(java.lang.String,java.lang.String,java.util.Map) -> createAccount
    void changePassword(java.lang.String) -> changePassword
    void deleteAccount() -> deleteAccount
    void getRegistrationInfo() -> getRegistrationInfo
org.jivesoftware.smack.BOSHConfiguration -> org.jivesoftware.smack.BOSHConfiguration:
    boolean ssl -> ssl
    java.lang.String file -> file
    boolean isProxyEnabled() -> isProxyEnabled
    org.jivesoftware.smack.proxy.ProxyInfo getProxyInfo() -> getProxyInfo
    java.lang.String getProxyAddress() -> getProxyAddress
    int getProxyPort() -> getProxyPort
    boolean isUsingSSL() -> isUsingSSL
    java.net.URI getURI() -> getURI
org.jivesoftware.smack.Connection -> org.jivesoftware.smack.Connection:
    java.util.concurrent.atomic.AtomicInteger connectionCounter -> connectionCounter
    java.util.Set connectionEstablishedListeners -> connectionEstablishedListeners
    boolean DEBUG_ENABLED -> DEBUG_ENABLED
    java.util.Collection connectionListeners -> connectionListeners
    java.util.Collection collectors -> collectors
    java.util.Map recvListeners -> recvListeners
    java.util.Map sendListeners -> sendListeners
    java.util.Map interceptors -> interceptors
    org.jivesoftware.smack.AccountManager accountManager -> accountManager
    org.jivesoftware.smack.debugger.SmackDebugger debugger -> debugger
    java.io.Reader reader -> reader
    java.io.Writer writer -> writer
    org.jivesoftware.smack.RosterStorage rosterStorage -> rosterStorage
    org.jivesoftware.smack.SASLAuthentication saslAuthentication -> saslAuthentication
    int connectionCounterValue -> connectionCounterValue
    org.jivesoftware.smack.ConnectionConfiguration config -> config
    org.jivesoftware.smack.ConnectionConfiguration getConfiguration() -> getConfiguration
    java.lang.String getServiceName() -> getServiceName
    java.lang.String getHost() -> getHost
    java.lang.String getCapsNode() -> getCapsNode
    int getPort() -> getPort
    java.lang.String getUser() -> getUser
    java.lang.String getConnectionID() -> getConnectionID
    boolean isConnected() -> isConnected
    boolean isAuthenticated() -> isAuthenticated
    boolean isAnonymous() -> isAnonymous
    boolean isSecureConnection() -> isSecureConnection
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    boolean isUsingCompression() -> isUsingCompression
    void connect() -> connect
    void login(java.lang.String,java.lang.String) -> login
    void login(java.lang.String,java.lang.String,java.lang.String) -> login
    void loginAnonymously() -> loginAnonymously
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> sendPacket
    org.jivesoftware.smack.AccountManager getAccountManager() -> getAccountManager
    org.jivesoftware.smack.Roster getRoster() -> getRoster
    void setRosterStorage(org.jivesoftware.smack.RosterStorage) -> setRosterStorage
    org.jivesoftware.smack.SASLAuthentication getSASLAuthentication() -> getSASLAuthentication
    void disconnect() -> disconnect
    void disconnect(org.jivesoftware.smack.packet.Presence) -> disconnect
    void addConnectionCreationListener(org.jivesoftware.smack.ConnectionCreationListener) -> addConnectionCreationListener
    void removeConnectionCreationListener(org.jivesoftware.smack.ConnectionCreationListener) -> removeConnectionCreationListener
    java.util.Collection getConnectionCreationListeners() -> getConnectionCreationListeners
    void addConnectionListener(org.jivesoftware.smack.ConnectionListener) -> addConnectionListener
    void removeConnectionListener(org.jivesoftware.smack.ConnectionListener) -> removeConnectionListener
    java.util.Collection getConnectionListeners() -> getConnectionListeners
    org.jivesoftware.smack.PacketCollector createPacketCollector(org.jivesoftware.smack.filter.PacketFilter) -> createPacketCollector
    void removePacketCollector(org.jivesoftware.smack.PacketCollector) -> removePacketCollector
    java.util.Collection getPacketCollectors() -> getPacketCollectors
    void addPacketListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> addPacketListener
    void removePacketListener(org.jivesoftware.smack.PacketListener) -> removePacketListener
    java.util.Map getPacketListeners() -> getPacketListeners
    void addPacketSendingListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> addPacketSendingListener
    void removePacketSendingListener(org.jivesoftware.smack.PacketListener) -> removePacketSendingListener
    java.util.Map getPacketSendingListeners() -> getPacketSendingListeners
    void firePacketSendingListeners(org.jivesoftware.smack.packet.Packet) -> firePacketSendingListeners
    void addPacketInterceptor(org.jivesoftware.smack.PacketInterceptor,org.jivesoftware.smack.filter.PacketFilter) -> addPacketInterceptor
    void removePacketInterceptor(org.jivesoftware.smack.PacketInterceptor) -> removePacketInterceptor
    boolean isSendPresence() -> isSendPresence
    java.util.Map getPacketInterceptors() -> getPacketInterceptors
    void firePacketInterceptors(org.jivesoftware.smack.packet.Packet) -> firePacketInterceptors
    void initDebugger() -> initDebugger
org.jivesoftware.smack.Connection$InterceptorWrapper -> org.jivesoftware.smack.Connection$InterceptorWrapper:
    org.jivesoftware.smack.PacketInterceptor packetInterceptor -> packetInterceptor
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    boolean equals(java.lang.Object) -> equals
    void notifyListener(org.jivesoftware.smack.packet.Packet) -> notifyListener
org.jivesoftware.smack.Connection$ListenerWrapper -> org.jivesoftware.smack.Connection$ListenerWrapper:
    org.jivesoftware.smack.PacketListener packetListener -> packetListener
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    void notifyListener(org.jivesoftware.smack.packet.Packet) -> notifyListener
org.jivesoftware.smack.ConnectionConfiguration -> org.jivesoftware.smack.ConnectionConfiguration:
    java.lang.String serviceName -> serviceName
    java.lang.String host -> host
    int port -> port
    java.lang.String truststorePath -> truststorePath
    java.lang.String truststoreType -> truststoreType
    java.lang.String truststorePassword -> truststorePassword
    java.lang.String keystorePath -> keystorePath
    java.lang.String keystoreType -> keystoreType
    java.lang.String pkcs11Library -> pkcs11Library
    boolean verifyChainEnabled -> verifyChainEnabled
    boolean verifyRootCAEnabled -> verifyRootCAEnabled
    boolean selfSignedCertificateEnabled -> selfSignedCertificateEnabled
    boolean expiredCertificatesCheckEnabled -> expiredCertificatesCheckEnabled
    boolean notMatchingDomainCheckEnabled -> notMatchingDomainCheckEnabled
    boolean isRosterVersioningAvailable -> isRosterVersioningAvailable
    java.lang.String capsNode -> capsNode
    boolean compressionEnabled -> compressionEnabled
    boolean saslAuthenticationEnabled -> saslAuthenticationEnabled
    org.apache.harmony.javax.security.auth.callback.CallbackHandler callbackHandler -> callbackHandler
    boolean debuggerEnabled -> debuggerEnabled
    boolean reconnectionAllowed -> reconnectionAllowed
    javax.net.SocketFactory socketFactory -> socketFactory
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String resource -> resource
    boolean sendPresence -> sendPresence
    boolean rosterLoadedAtLogin -> rosterLoadedAtLogin
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode securityMode -> securityMode
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    void init(java.lang.String,int,java.lang.String,org.jivesoftware.smack.proxy.ProxyInfo) -> init
    void setServiceName(java.lang.String) -> setServiceName
    java.lang.String getServiceName() -> getServiceName
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode getSecurityMode() -> getSecurityMode
    void setSecurityMode(org.jivesoftware.smack.ConnectionConfiguration$SecurityMode) -> setSecurityMode
    java.lang.String getTruststorePath() -> getTruststorePath
    void setTruststorePath(java.lang.String) -> setTruststorePath
    java.lang.String getTruststoreType() -> getTruststoreType
    void setTruststoreType(java.lang.String) -> setTruststoreType
    java.lang.String getTruststorePassword() -> getTruststorePassword
    void setTruststorePassword(java.lang.String) -> setTruststorePassword
    java.lang.String getKeystorePath() -> getKeystorePath
    void setKeystorePath(java.lang.String) -> setKeystorePath
    java.lang.String getKeystoreType() -> getKeystoreType
    void setKeystoreType(java.lang.String) -> setKeystoreType
    java.lang.String getPKCS11Library() -> getPKCS11Library
    void setPKCS11Library(java.lang.String) -> setPKCS11Library
    boolean isVerifyChainEnabled() -> isVerifyChainEnabled
    void setVerifyChainEnabled(boolean) -> setVerifyChainEnabled
    boolean isVerifyRootCAEnabled() -> isVerifyRootCAEnabled
    void setVerifyRootCAEnabled(boolean) -> setVerifyRootCAEnabled
    boolean isSelfSignedCertificateEnabled() -> isSelfSignedCertificateEnabled
    void setSelfSignedCertificateEnabled(boolean) -> setSelfSignedCertificateEnabled
    boolean isExpiredCertificatesCheckEnabled() -> isExpiredCertificatesCheckEnabled
    void setExpiredCertificatesCheckEnabled(boolean) -> setExpiredCertificatesCheckEnabled
    boolean isNotMatchingDomainCheckEnabled() -> isNotMatchingDomainCheckEnabled
    void setNotMatchingDomainCheckEnabled(boolean) -> setNotMatchingDomainCheckEnabled
    boolean isCompressionEnabled() -> isCompressionEnabled
    void setCompressionEnabled(boolean) -> setCompressionEnabled
    boolean isSASLAuthenticationEnabled() -> isSASLAuthenticationEnabled
    void setSASLAuthenticationEnabled(boolean) -> setSASLAuthenticationEnabled
    boolean isDebuggerEnabled() -> isDebuggerEnabled
    void setDebuggerEnabled(boolean) -> setDebuggerEnabled
    void setReconnectionAllowed(boolean) -> setReconnectionAllowed
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    void setSocketFactory(javax.net.SocketFactory) -> setSocketFactory
    void setSendPresence(boolean) -> setSendPresence
    boolean isRosterLoadedAtLogin() -> isRosterLoadedAtLogin
    void setRosterLoadedAtLogin(boolean) -> setRosterLoadedAtLogin
    org.apache.harmony.javax.security.auth.callback.CallbackHandler getCallbackHandler() -> getCallbackHandler
    void setCallbackHandler(org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> setCallbackHandler
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    java.lang.String getResource() -> getResource
    boolean isRosterVersioningAvailable() -> isRosterVersioningAvailable
    void setRosterVersioningAvailable(boolean) -> setRosterVersioningAvailable
    void setCapsNode(java.lang.String) -> setCapsNode
    java.lang.String getCapsNode() -> getCapsNode
    boolean isSendPresence() -> isSendPresence
    void setLoginInfo(java.lang.String,java.lang.String,java.lang.String) -> setLoginInfo
org.jivesoftware.smack.ConnectionConfiguration$SecurityMode -> org.jivesoftware.smack.ConnectionConfiguration$SecurityMode:
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode required -> required
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode enabled -> enabled
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode disabled -> disabled
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode[] values() -> values
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.ConnectionCreationListener -> org.jivesoftware.smack.ConnectionCreationListener:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.ConnectionListener -> org.jivesoftware.smack.ConnectionListener:
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
org.jivesoftware.smack.NonSASLAuthentication -> org.jivesoftware.smack.NonSASLAuthentication:
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticateAnonymously() -> authenticateAnonymously
org.jivesoftware.smack.OpenTrustManager -> org.jivesoftware.smack.OpenTrustManager:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
org.jivesoftware.smack.PacketCollector -> org.jivesoftware.smack.PacketCollector:
    int MAX_PACKETS -> MAX_PACKETS
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    java.util.concurrent.LinkedBlockingQueue resultQueue -> resultQueue
    org.jivesoftware.smack.Connection conection -> conection
    boolean cancelled -> cancelled
    void cancel() -> cancel
    org.jivesoftware.smack.filter.PacketFilter getPacketFilter() -> getPacketFilter
    org.jivesoftware.smack.packet.Packet pollResult() -> pollResult
    org.jivesoftware.smack.packet.Packet nextResult() -> nextResult
    org.jivesoftware.smack.packet.Packet nextResult(long) -> nextResult
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.PacketInterceptor -> org.jivesoftware.smack.PacketInterceptor:
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> interceptPacket
org.jivesoftware.smack.PacketListener -> org.jivesoftware.smack.PacketListener:
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.PacketReader -> org.jivesoftware.smack.PacketReader:
    java.lang.Thread readerThread -> readerThread
    java.util.concurrent.ExecutorService listenerExecutor -> listenerExecutor
    org.jivesoftware.smack.XMPPConnection connection -> connection
    org.xmlpull.v1.XmlPullParser parser -> parser
    boolean done -> done
    java.lang.String connectionID -> connectionID
    java.util.concurrent.Semaphore connectionSemaphore -> connectionSemaphore
    void init() -> init
    void startup() -> startup
    void shutdown() -> shutdown
    void cleanup() -> cleanup
    void notifyConnectionError(java.lang.Exception) -> notifyConnectionError
    void notifyReconnection() -> notifyReconnection
    void resetParser() -> resetParser
    void parsePackets(java.lang.Thread) -> parsePackets
    void releaseConnectionIDLock() -> releaseConnectionIDLock
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void parseFeatures(org.xmlpull.v1.XmlPullParser) -> parseFeatures
    org.jivesoftware.smack.XMPPConnection access$0(org.jivesoftware.smack.PacketReader) -> access$0
    void access$1(org.jivesoftware.smack.PacketReader,java.lang.Thread) -> access$1
org.jivesoftware.smack.PacketReader$1 -> org.jivesoftware.smack.PacketReader$1:
    org.jivesoftware.smack.PacketReader this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.PacketReader$2 -> org.jivesoftware.smack.PacketReader$2:
    org.jivesoftware.smack.PacketReader this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.jivesoftware.smack.PacketReader$ListenerNotification -> org.jivesoftware.smack.PacketReader$ListenerNotification:
    org.jivesoftware.smack.packet.Packet packet -> packet
    org.jivesoftware.smack.PacketReader this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.PacketWriter -> org.jivesoftware.smack.PacketWriter:
    java.lang.Thread writerThread -> writerThread
    java.lang.Thread keepAliveThread -> keepAliveThread
    java.io.Writer writer -> writer
    org.jivesoftware.smack.XMPPConnection connection -> connection
    java.util.concurrent.BlockingQueue queue -> queue
    boolean done -> done
    long lastActive -> lastActive
    void init() -> init
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> sendPacket
    void startup() -> startup
    void startKeepAliveProcess() -> startKeepAliveProcess
    void setWriter(java.io.Writer) -> setWriter
    void shutdown() -> shutdown
    void cleanup() -> cleanup
    org.jivesoftware.smack.packet.Packet nextPacket() -> nextPacket
    void writePackets(java.lang.Thread) -> writePackets
    void openStream() -> openStream
    boolean access$0(org.jivesoftware.smack.PacketWriter) -> access$0
    java.lang.Thread access$1(org.jivesoftware.smack.PacketWriter) -> access$1
    long access$2(org.jivesoftware.smack.PacketWriter) -> access$2
    java.io.Writer access$3(org.jivesoftware.smack.PacketWriter) -> access$3
    void access$4(org.jivesoftware.smack.PacketWriter,java.lang.Thread) -> access$4
org.jivesoftware.smack.PacketWriter$1 -> org.jivesoftware.smack.PacketWriter$1:
    org.jivesoftware.smack.PacketWriter this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.PacketWriter$KeepAliveTask -> org.jivesoftware.smack.PacketWriter$KeepAliveTask:
    int delay -> delay
    java.lang.Thread thread -> thread
    org.jivesoftware.smack.PacketWriter this$0 -> this$0
    void setThread(java.lang.Thread) -> setThread
    void run() -> run
org.jivesoftware.smack.PrivacyList -> org.jivesoftware.smack.PrivacyList:
    boolean isActiveList -> isActiveList
    boolean isDefaultList -> isDefaultList
    java.lang.String listName -> listName
    java.util.List items -> items
    boolean isActiveList() -> isActiveList
    boolean isDefaultList() -> isDefaultList
    java.util.List getItems() -> getItems
    java.lang.String toString() -> toString
org.jivesoftware.smack.PrivacyListListener -> org.jivesoftware.smack.PrivacyListListener:
    void setPrivacyList(java.lang.String,java.util.List) -> setPrivacyList
    void updatedPrivacyList(java.lang.String) -> updatedPrivacyList
org.jivesoftware.smack.PrivacyListManager -> org.jivesoftware.smack.PrivacyListManager:
    java.util.Map instances -> instances
    org.jivesoftware.smack.Connection connection -> connection
    java.util.List listeners -> listeners
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    java.lang.String getUser() -> getUser
    void init() -> init
    org.jivesoftware.smack.PrivacyListManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    org.jivesoftware.smack.packet.Privacy getRequest(org.jivesoftware.smack.packet.Privacy) -> getRequest
    org.jivesoftware.smack.packet.Packet setRequest(org.jivesoftware.smack.packet.Privacy) -> setRequest
    org.jivesoftware.smack.packet.Privacy getPrivacyWithListNames() -> getPrivacyWithListNames
    org.jivesoftware.smack.PrivacyList getActiveList() -> getActiveList
    org.jivesoftware.smack.PrivacyList getDefaultList() -> getDefaultList
    java.util.List getPrivacyListItems(java.lang.String) -> getPrivacyListItems
    org.jivesoftware.smack.PrivacyList getPrivacyList(java.lang.String) -> getPrivacyList
    org.jivesoftware.smack.PrivacyList[] getPrivacyLists() -> getPrivacyLists
    void setActiveListName(java.lang.String) -> setActiveListName
    void declineActiveList() -> declineActiveList
    void setDefaultListName(java.lang.String) -> setDefaultListName
    void declineDefaultList() -> declineDefaultList
    void createPrivacyList(java.lang.String,java.util.List) -> createPrivacyList
    void updatePrivacyList(java.lang.String,java.util.List) -> updatePrivacyList
    void deletePrivacyList(java.lang.String) -> deletePrivacyList
    void addListener(org.jivesoftware.smack.PrivacyListListener) -> addListener
    java.util.Map access$1() -> access$1
    org.jivesoftware.smack.Connection access$2(org.jivesoftware.smack.PrivacyListManager) -> access$2
    java.util.List access$3(org.jivesoftware.smack.PrivacyListManager) -> access$3
org.jivesoftware.smack.PrivacyListManager$1 -> org.jivesoftware.smack.PrivacyListManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.PrivacyListManager$2 -> org.jivesoftware.smack.PrivacyListManager$2:
    org.jivesoftware.smack.PrivacyListManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
org.jivesoftware.smack.PrivacyListManager$3 -> org.jivesoftware.smack.PrivacyListManager$3:
    org.jivesoftware.smack.PrivacyListManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.PrivacyListManager$3$1 -> org.jivesoftware.smack.PrivacyListManager$3$1:
    org.jivesoftware.smack.PrivacyListManager$3 this$1 -> this$1
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.ReconnectionManager -> org.jivesoftware.smack.ReconnectionManager:
    org.jivesoftware.smack.Connection connection -> connection
    boolean done -> done
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    void reconnect() -> reconnect
    void notifyReconnectionFailed(java.lang.Exception) -> notifyReconnectionFailed
    void notifyAttemptToReconnectIn(int) -> notifyAttemptToReconnectIn
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    boolean access$1(org.jivesoftware.smack.ReconnectionManager) -> access$1
    org.jivesoftware.smack.Connection access$2(org.jivesoftware.smack.ReconnectionManager) -> access$2
org.jivesoftware.smack.ReconnectionManager$1 -> org.jivesoftware.smack.ReconnectionManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.ReconnectionManager$2 -> org.jivesoftware.smack.ReconnectionManager$2:
    int attempts -> attempts
    org.jivesoftware.smack.ReconnectionManager this$0 -> this$0
    int timeDelay() -> timeDelay
    void run() -> run
org.jivesoftware.smack.Roster -> org.jivesoftware.smack.Roster:
    org.jivesoftware.smack.Roster$SubscriptionMode defaultSubscriptionMode -> defaultSubscriptionMode
    org.jivesoftware.smack.RosterStorage persistentStorage -> persistentStorage
    org.jivesoftware.smack.Connection connection -> connection
    java.util.Map groups -> groups
    java.util.Map entries -> entries
    java.util.List unfiledEntries -> unfiledEntries
    java.util.List rosterListeners -> rosterListeners
    java.util.Map presenceMap -> presenceMap
    boolean rosterInitialized -> rosterInitialized
    org.jivesoftware.smack.Roster$PresencePacketListener presencePacketListener -> presencePacketListener
    org.jivesoftware.smack.Roster$SubscriptionMode subscriptionMode -> subscriptionMode
    java.lang.String requestPacketId -> requestPacketId
    org.jivesoftware.smack.Roster$SubscriptionMode getDefaultSubscriptionMode() -> getDefaultSubscriptionMode
    void setDefaultSubscriptionMode(org.jivesoftware.smack.Roster$SubscriptionMode) -> setDefaultSubscriptionMode
    org.jivesoftware.smack.Roster$SubscriptionMode getSubscriptionMode() -> getSubscriptionMode
    void setSubscriptionMode(org.jivesoftware.smack.Roster$SubscriptionMode) -> setSubscriptionMode
    void reload() -> reload
    void addRosterListener(org.jivesoftware.smack.RosterListener) -> addRosterListener
    void removeRosterListener(org.jivesoftware.smack.RosterListener) -> removeRosterListener
    org.jivesoftware.smack.RosterGroup createGroup(java.lang.String) -> createGroup
    void createEntry(java.lang.String,java.lang.String,java.lang.String[]) -> createEntry
    void insertRosterItems(java.util.List) -> insertRosterItems
    void insertRosterItem(org.jivesoftware.smack.packet.RosterPacket$Item,java.util.Collection,java.util.Collection,java.util.Collection) -> insertRosterItem
    void removeEntry(org.jivesoftware.smack.RosterEntry) -> removeEntry
    int getEntryCount() -> getEntryCount
    java.util.Collection getEntries() -> getEntries
    int getUnfiledEntryCount() -> getUnfiledEntryCount
    java.util.Collection getUnfiledEntries() -> getUnfiledEntries
    org.jivesoftware.smack.RosterEntry getEntry(java.lang.String) -> getEntry
    boolean contains(java.lang.String) -> contains
    org.jivesoftware.smack.RosterGroup getGroup(java.lang.String) -> getGroup
    int getGroupCount() -> getGroupCount
    java.util.Collection getGroups() -> getGroups
    org.jivesoftware.smack.packet.Presence getPresence(java.lang.String) -> getPresence
    org.jivesoftware.smack.packet.Presence getPresenceResource(java.lang.String) -> getPresenceResource
    java.util.Iterator getPresences(java.lang.String) -> getPresences
    void cleanup() -> cleanup
    java.lang.String getPresenceMapKey(java.lang.String) -> getPresenceMapKey
    void setOfflinePresences() -> setOfflinePresences
    void fireRosterChangedEvent(java.util.Collection,java.util.Collection,java.util.Collection) -> fireRosterChangedEvent
    void fireRosterPresenceEvent(org.jivesoftware.smack.packet.Presence) -> fireRosterPresenceEvent
    java.lang.String access$0(org.jivesoftware.smack.Roster,java.lang.String) -> access$0
    java.util.Map access$1(org.jivesoftware.smack.Roster) -> access$1
    java.util.Map access$2(org.jivesoftware.smack.Roster) -> access$2
    void access$3(org.jivesoftware.smack.Roster,org.jivesoftware.smack.packet.Presence) -> access$3
    org.jivesoftware.smack.Roster$SubscriptionMode access$4(org.jivesoftware.smack.Roster) -> access$4
    org.jivesoftware.smack.Connection access$5(org.jivesoftware.smack.Roster) -> access$5
    org.jivesoftware.smack.RosterStorage access$6(org.jivesoftware.smack.Roster) -> access$6
    void access$7(org.jivesoftware.smack.Roster,org.jivesoftware.smack.packet.RosterPacket$Item,java.util.Collection,java.util.Collection,java.util.Collection) -> access$7
    void access$8(org.jivesoftware.smack.Roster,java.util.Collection,java.util.Collection,java.util.Collection) -> access$8
    void access$9(org.jivesoftware.smack.Roster,org.jivesoftware.smack.RosterStorage) -> access$9
    void access$10(org.jivesoftware.smack.Roster) -> access$10
org.jivesoftware.smack.Roster$1 -> org.jivesoftware.smack.Roster$1:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
org.jivesoftware.smack.Roster$PresencePacketListener -> org.jivesoftware.smack.Roster$PresencePacketListener:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$RosterPacketListener -> org.jivesoftware.smack.Roster$RosterPacketListener:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$RosterResultListener -> org.jivesoftware.smack.Roster$RosterResultListener:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$SubscriptionMode -> org.jivesoftware.smack.Roster$SubscriptionMode:
    org.jivesoftware.smack.Roster$SubscriptionMode accept_all -> accept_all
    org.jivesoftware.smack.Roster$SubscriptionMode reject_all -> reject_all
    org.jivesoftware.smack.Roster$SubscriptionMode manual -> manual
    org.jivesoftware.smack.Roster$SubscriptionMode[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.Roster$SubscriptionMode[] values() -> values
    org.jivesoftware.smack.Roster$SubscriptionMode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.RosterEntry -> org.jivesoftware.smack.RosterEntry:
    java.lang.String user -> user
    java.lang.String name -> name
    org.jivesoftware.smack.packet.RosterPacket$ItemType type -> type
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus status -> status
    org.jivesoftware.smack.Roster roster -> roster
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String getUser() -> getUser
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    void updateState(java.lang.String,org.jivesoftware.smack.packet.RosterPacket$ItemType,org.jivesoftware.smack.packet.RosterPacket$ItemStatus) -> updateState
    java.util.Collection getGroups() -> getGroups
    org.jivesoftware.smack.packet.RosterPacket$ItemType getType() -> getType
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus getStatus() -> getStatus
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.jivesoftware.smack.packet.RosterPacket$Item toRosterItem(org.jivesoftware.smack.RosterEntry) -> toRosterItem
org.jivesoftware.smack.RosterGroup -> org.jivesoftware.smack.RosterGroup:
    java.lang.String name -> name
    org.jivesoftware.smack.Connection connection -> connection
    java.util.List entries -> entries
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getEntryCount() -> getEntryCount
    java.util.Collection getEntries() -> getEntries
    org.jivesoftware.smack.RosterEntry getEntry(java.lang.String) -> getEntry
    boolean contains(org.jivesoftware.smack.RosterEntry) -> contains
    boolean contains(java.lang.String) -> contains
    void addEntry(org.jivesoftware.smack.RosterEntry) -> addEntry
    void removeEntry(org.jivesoftware.smack.RosterEntry) -> removeEntry
    void addEntryLocal(org.jivesoftware.smack.RosterEntry) -> addEntryLocal
    void removeEntryLocal(org.jivesoftware.smack.RosterEntry) -> removeEntryLocal
org.jivesoftware.smack.RosterListener -> org.jivesoftware.smack.RosterListener:
    void entriesAdded(java.util.Collection) -> entriesAdded
    void entriesUpdated(java.util.Collection) -> entriesUpdated
    void entriesDeleted(java.util.Collection) -> entriesDeleted
    void presenceChanged(org.jivesoftware.smack.packet.Presence) -> presenceChanged
org.jivesoftware.smack.RosterStorage -> org.jivesoftware.smack.RosterStorage:
    java.util.List getEntries() -> getEntries
    org.jivesoftware.smack.packet.RosterPacket$Item getEntry(java.lang.String) -> getEntry
    int getEntryCount() -> getEntryCount
    java.lang.String getRosterVersion() -> getRosterVersion
    void addEntry(org.jivesoftware.smack.packet.RosterPacket$Item,java.lang.String) -> addEntry
    void removeEntry(java.lang.String) -> removeEntry
    void updateLocalEntry(org.jivesoftware.smack.packet.RosterPacket$Item) -> updateLocalEntry
org.jivesoftware.smack.SASLAuthentication -> org.jivesoftware.smack.SASLAuthentication:
    java.util.Map implementedMechanisms -> implementedMechanisms
    java.util.List mechanismsPreferences -> mechanismsPreferences
    org.jivesoftware.smack.Connection connection -> connection
    java.util.Collection serverMechanisms -> serverMechanisms
    org.jivesoftware.smack.sasl.SASLMechanism currentMechanism -> currentMechanism
    boolean saslNegotiated -> saslNegotiated
    boolean saslFailed -> saslFailed
    boolean resourceBinded -> resourceBinded
    boolean sessionSupported -> sessionSupported
    java.lang.String errorCondition -> errorCondition
    void registerSASLMechanism(java.lang.String,java.lang.Class) -> registerSASLMechanism
    void unregisterSASLMechanism(java.lang.String) -> unregisterSASLMechanism
    void supportSASLMechanism(java.lang.String) -> supportSASLMechanism
    void supportSASLMechanism(java.lang.String,int) -> supportSASLMechanism
    void unsupportSASLMechanism(java.lang.String) -> unsupportSASLMechanism
    java.util.List getRegisterSASLMechanisms() -> getRegisterSASLMechanisms
    boolean hasAnonymousAuthentication() -> hasAnonymousAuthentication
    boolean hasNonAnonymousAuthentication() -> hasNonAnonymousAuthentication
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticateAnonymously() -> authenticateAnonymously
    java.lang.String bindResourceAndEstablishSession(java.lang.String) -> bindResourceAndEstablishSession
    void setAvailableSASLMethods(java.util.Collection) -> setAvailableSASLMethods
    boolean isAuthenticated() -> isAuthenticated
    void challengeReceived(java.lang.String) -> challengeReceived
    void authenticated() -> authenticated
    void authenticationFailed() -> authenticationFailed
    void authenticationFailed(java.lang.String) -> authenticationFailed
    void bindingRequired() -> bindingRequired
    void send(org.jivesoftware.smack.packet.Packet) -> send
    void sessionsSupported() -> sessionsSupported
    void init() -> init
org.jivesoftware.smack.ServerTrustManager -> org.jivesoftware.smack.ServerTrustManager:
    java.util.regex.Pattern cnPattern -> cnPattern
    org.jivesoftware.smack.ConnectionConfiguration configuration -> configuration
    java.lang.String server -> server
    java.security.KeyStore trustStore -> trustStore
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.util.List getPeerIdentity(java.security.cert.X509Certificate) -> getPeerIdentity
    java.util.List getSubjectAlternativeNames(java.security.cert.X509Certificate) -> getSubjectAlternativeNames
org.jivesoftware.smack.SmackConfiguration -> org.jivesoftware.smack.SmackConfiguration:
    java.lang.String SMACK_VERSION -> SMACK_VERSION
    int packetReplyTimeout -> packetReplyTimeout
    int keepAliveInterval -> keepAliveInterval
    java.util.Vector defaultMechs -> defaultMechs
    java.lang.String getVersion() -> getVersion
    int getPacketReplyTimeout() -> getPacketReplyTimeout
    void setPacketReplyTimeout(int) -> setPacketReplyTimeout
    int getKeepAliveInterval() -> getKeepAliveInterval
    void setKeepAliveInterval(int) -> setKeepAliveInterval
    void addSaslMech(java.lang.String) -> addSaslMech
    void addSaslMechs(java.util.Collection) -> addSaslMechs
    void removeSaslMech(java.lang.String) -> removeSaslMech
    void removeSaslMechs(java.util.Collection) -> removeSaslMechs
    java.util.List getSaslMechs() -> getSaslMechs
    void parseClassToLoad(org.xmlpull.v1.XmlPullParser) -> parseClassToLoad
    int parseIntProperty(org.xmlpull.v1.XmlPullParser,int) -> parseIntProperty
    java.lang.ClassLoader[] getClassLoaders() -> getClassLoaders
org.jivesoftware.smack.UserAuthentication -> org.jivesoftware.smack.UserAuthentication:
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticateAnonymously() -> authenticateAnonymously
org.jivesoftware.smack.XMPPConnection -> org.jivesoftware.smack.XMPPConnection:
    java.net.Socket socket -> socket
    java.lang.String connectionID -> connectionID
    java.lang.String user -> user
    boolean connected -> connected
    boolean authenticated -> authenticated
    boolean wasAuthenticated -> wasAuthenticated
    boolean anonymous -> anonymous
    boolean usingTLS -> usingTLS
    org.jivesoftware.smack.PacketWriter packetWriter -> packetWriter
    org.jivesoftware.smack.PacketReader packetReader -> packetReader
    org.jivesoftware.smack.Roster roster -> roster
    java.util.Collection compressionMethods -> compressionMethods
    boolean usingCompression -> usingCompression
    java.lang.String getConnectionID() -> getConnectionID
    java.lang.String getUser() -> getUser
    void login(java.lang.String,java.lang.String,java.lang.String) -> login
    void loginAnonymously() -> loginAnonymously
    org.jivesoftware.smack.Roster getRoster() -> getRoster
    boolean isConnected() -> isConnected
    boolean isSecureConnection() -> isSecureConnection
    boolean isAuthenticated() -> isAuthenticated
    boolean isAnonymous() -> isAnonymous
    void shutdown(org.jivesoftware.smack.packet.Presence) -> shutdown
    void disconnect(org.jivesoftware.smack.packet.Presence) -> disconnect
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> sendPacket
    void addPacketWriterInterceptor(org.jivesoftware.smack.PacketInterceptor,org.jivesoftware.smack.filter.PacketFilter) -> addPacketWriterInterceptor
    void removePacketWriterInterceptor(org.jivesoftware.smack.PacketInterceptor) -> removePacketWriterInterceptor
    void addPacketWriterListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> addPacketWriterListener
    void removePacketWriterListener(org.jivesoftware.smack.PacketListener) -> removePacketWriterListener
    void connectUsingConfiguration(org.jivesoftware.smack.ConnectionConfiguration) -> connectUsingConfiguration
    void initConnection() -> initConnection
    void initReaderAndWriter() -> initReaderAndWriter
    boolean isUsingTLS() -> isUsingTLS
    void startTLSReceived(boolean) -> startTLSReceived
    void proceedTLSReceived() -> proceedTLSReceived
    void setAvailableCompressionMethods(java.util.Collection) -> setAvailableCompressionMethods
    boolean hasAvailableCompressionMethod(java.lang.String) -> hasAvailableCompressionMethod
    boolean isUsingCompression() -> isUsingCompression
    boolean useCompression() -> useCompression
    void requestStreamCompression() -> requestStreamCompression
    void startStreamCompression() -> startStreamCompression
    void streamCompressionDenied() -> streamCompressionDenied
    void connect() -> connect
    void setWasAuthenticated(boolean) -> setWasAuthenticated
    void setRosterStorage(org.jivesoftware.smack.RosterStorage) -> setRosterStorage
    void startKeepAliveThread() -> startKeepAliveThread
org.jivesoftware.smack.XMPPException -> org.jivesoftware.smack.XMPPException:
    org.jivesoftware.smack.packet.StreamError streamError -> streamError
    org.jivesoftware.smack.packet.XMPPError error -> error
    java.lang.Throwable wrappedThrowable -> wrappedThrowable
    org.jivesoftware.smack.packet.XMPPError getXMPPError() -> getXMPPError
    org.jivesoftware.smack.packet.StreamError getStreamError() -> getStreamError
    java.lang.Throwable getWrappedThrowable() -> getWrappedThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.jivesoftware.smack.debugger.ConsoleDebugger -> org.jivesoftware.smack.debugger.ConsoleDebugger:
    boolean printInterpreted -> printInterpreted
    java.text.SimpleDateFormat dateFormatter -> dateFormatter
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.PacketListener listener -> listener
    org.jivesoftware.smack.ConnectionListener connListener -> connListener
    java.io.Writer writer -> writer
    java.io.Reader reader -> reader
    org.jivesoftware.smack.util.ReaderListener readerListener -> readerListener
    org.jivesoftware.smack.util.WriterListener writerListener -> writerListener
    void createDebug() -> createDebug
    java.io.Reader newConnectionReader(java.io.Reader) -> newConnectionReader
    java.io.Writer newConnectionWriter(java.io.Writer) -> newConnectionWriter
    void userHasLogged(java.lang.String) -> userHasLogged
    java.io.Reader getReader() -> getReader
    java.io.Writer getWriter() -> getWriter
    org.jivesoftware.smack.PacketListener getReaderListener() -> getReaderListener
    org.jivesoftware.smack.PacketListener getWriterListener() -> getWriterListener
    java.text.SimpleDateFormat access$0(org.jivesoftware.smack.debugger.ConsoleDebugger) -> access$0
    org.jivesoftware.smack.Connection access$1(org.jivesoftware.smack.debugger.ConsoleDebugger) -> access$1
org.jivesoftware.smack.debugger.ConsoleDebugger$1 -> org.jivesoftware.smack.debugger.ConsoleDebugger$1:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void read(java.lang.String) -> read
org.jivesoftware.smack.debugger.ConsoleDebugger$2 -> org.jivesoftware.smack.debugger.ConsoleDebugger$2:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void write(java.lang.String) -> write
org.jivesoftware.smack.debugger.ConsoleDebugger$3 -> org.jivesoftware.smack.debugger.ConsoleDebugger$3:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.debugger.ConsoleDebugger$4 -> org.jivesoftware.smack.debugger.ConsoleDebugger$4:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectingIn(int) -> reconnectingIn
org.jivesoftware.smack.debugger.SmackDebugger -> org.jivesoftware.smack.debugger.SmackDebugger:
    void userHasLogged(java.lang.String) -> userHasLogged
    java.io.Reader getReader() -> getReader
    java.io.Writer getWriter() -> getWriter
    java.io.Reader newConnectionReader(java.io.Reader) -> newConnectionReader
    java.io.Writer newConnectionWriter(java.io.Writer) -> newConnectionWriter
    org.jivesoftware.smack.PacketListener getReaderListener() -> getReaderListener
    org.jivesoftware.smack.PacketListener getWriterListener() -> getWriterListener
org.jivesoftware.smack.filter.AndFilter -> org.jivesoftware.smack.filter.AndFilter:
    java.util.List filters -> filters
    void addFilter(org.jivesoftware.smack.filter.PacketFilter) -> addFilter
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.FromContainsFilter -> org.jivesoftware.smack.filter.FromContainsFilter:
    java.lang.String from -> from
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.FromMatchesFilter -> org.jivesoftware.smack.filter.FromMatchesFilter:
    java.lang.String address -> address
    boolean matchBareJID -> matchBareJID
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.IQTypeFilter -> org.jivesoftware.smack.filter.IQTypeFilter:
    org.jivesoftware.smack.packet.IQ$Type type -> type
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.MessageTypeFilter -> org.jivesoftware.smack.filter.MessageTypeFilter:
    org.jivesoftware.smack.packet.Message$Type type -> type
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.NotFilter -> org.jivesoftware.smack.filter.NotFilter:
    org.jivesoftware.smack.filter.PacketFilter filter -> filter
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.OrFilter -> org.jivesoftware.smack.filter.OrFilter:
    int size -> size
    org.jivesoftware.smack.filter.PacketFilter[] filters -> filters
    void addFilter(org.jivesoftware.smack.filter.PacketFilter) -> addFilter
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.PacketExtensionFilter -> org.jivesoftware.smack.filter.PacketExtensionFilter:
    java.lang.String elementName -> elementName
    java.lang.String namespace -> namespace
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.PacketFilter -> org.jivesoftware.smack.filter.PacketFilter:
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.PacketIDFilter -> org.jivesoftware.smack.filter.PacketIDFilter:
    java.lang.String packetID -> packetID
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.PacketTypeFilter -> org.jivesoftware.smack.filter.PacketTypeFilter:
    java.lang.Class packetType -> packetType
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.ThreadFilter -> org.jivesoftware.smack.filter.ThreadFilter:
    java.lang.String thread -> thread
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.ToContainsFilter -> org.jivesoftware.smack.filter.ToContainsFilter:
    java.lang.String to -> to
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.packet.Authentication -> org.jivesoftware.smack.packet.Authentication:
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String digest -> digest
    java.lang.String resource -> resource
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getDigest() -> getDigest
    void setDigest(java.lang.String,java.lang.String) -> setDigest
    void setDigest(java.lang.String) -> setDigest
    java.lang.String getResource() -> getResource
    void setResource(java.lang.String) -> setResource
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.Bind -> org.jivesoftware.smack.packet.Bind:
    java.lang.String resource -> resource
    java.lang.String jid -> jid
    java.lang.String getResource() -> getResource
    void setResource(java.lang.String) -> setResource
    java.lang.String getJid() -> getJid
    void setJid(java.lang.String) -> setJid
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.DefaultPacketExtension -> org.jivesoftware.smack.packet.DefaultPacketExtension:
    java.lang.String elementName -> elementName
    java.lang.String namespace -> namespace
    java.util.Map map -> map
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.util.Collection getNames() -> getNames
    java.lang.String getValue(java.lang.String) -> getValue
    void setValue(java.lang.String,java.lang.String) -> setValue
org.jivesoftware.smack.packet.IQ -> org.jivesoftware.smack.packet.IQ:
    org.jivesoftware.smack.packet.IQ$Type type -> type
    org.jivesoftware.smack.packet.IQ$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.IQ$Type) -> setType
    java.lang.String toXML() -> toXML
    java.lang.String getChildElementXML() -> getChildElementXML
    org.jivesoftware.smack.packet.IQ createResultIQ(org.jivesoftware.smack.packet.IQ) -> createResultIQ
    org.jivesoftware.smack.packet.IQ createErrorResponse(org.jivesoftware.smack.packet.IQ,org.jivesoftware.smack.packet.XMPPError) -> createErrorResponse
org.jivesoftware.smack.packet.IQ$1 -> org.jivesoftware.smack.packet.IQ$1:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.IQ$2 -> org.jivesoftware.smack.packet.IQ$2:
    org.jivesoftware.smack.packet.IQ val$request -> val$request
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.IQ$Type -> org.jivesoftware.smack.packet.IQ$Type:
    org.jivesoftware.smack.packet.IQ$Type GET -> GET
    org.jivesoftware.smack.packet.IQ$Type SET -> SET
    org.jivesoftware.smack.packet.IQ$Type RESULT -> RESULT
    org.jivesoftware.smack.packet.IQ$Type ERROR -> ERROR
    java.lang.String value -> value
    org.jivesoftware.smack.packet.IQ$Type fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Message -> org.jivesoftware.smack.packet.Message:
    org.jivesoftware.smack.packet.Message$Type type -> type
    java.lang.String thread -> thread
    java.lang.String language -> language
    java.util.Set subjects -> subjects
    java.util.Set bodies -> bodies
    org.jivesoftware.smack.packet.Message$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.Message$Type) -> setType
    java.lang.String getSubject() -> getSubject
    java.lang.String getSubject(java.lang.String) -> getSubject
    org.jivesoftware.smack.packet.Message$Subject getMessageSubject(java.lang.String) -> getMessageSubject
    java.util.Collection getSubjects() -> getSubjects
    void setSubject(java.lang.String) -> setSubject
    org.jivesoftware.smack.packet.Message$Subject addSubject(java.lang.String,java.lang.String) -> addSubject
    boolean removeSubject(java.lang.String) -> removeSubject
    boolean removeSubject(org.jivesoftware.smack.packet.Message$Subject) -> removeSubject
    java.util.Collection getSubjectLanguages() -> getSubjectLanguages
    java.lang.String getBody() -> getBody
    java.lang.String getBody(java.lang.String) -> getBody
    org.jivesoftware.smack.packet.Message$Body getMessageBody(java.lang.String) -> getMessageBody
    java.util.Collection getBodies() -> getBodies
    void setBody(java.lang.String) -> setBody
    org.jivesoftware.smack.packet.Message$Body addBody(java.lang.String,java.lang.String) -> addBody
    boolean removeBody(java.lang.String) -> removeBody
    boolean removeBody(org.jivesoftware.smack.packet.Message$Body) -> removeBody
    java.util.Collection getBodyLanguages() -> getBodyLanguages
    java.lang.String getThread() -> getThread
    void setThread(java.lang.String) -> setThread
    java.lang.String getLanguage() -> getLanguage
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String determineLanguage(java.lang.String) -> determineLanguage
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.packet.Message$Body -> org.jivesoftware.smack.packet.Message$Body:
    java.lang.String message -> message
    java.lang.String language -> language
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getMessage() -> getMessage
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String access$0(org.jivesoftware.smack.packet.Message$Body) -> access$0
    java.lang.String access$1(org.jivesoftware.smack.packet.Message$Body) -> access$1
org.jivesoftware.smack.packet.Message$Subject -> org.jivesoftware.smack.packet.Message$Subject:
    java.lang.String subject -> subject
    java.lang.String language -> language
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getSubject() -> getSubject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String access$0(org.jivesoftware.smack.packet.Message$Subject) -> access$0
    java.lang.String access$1(org.jivesoftware.smack.packet.Message$Subject) -> access$1
org.jivesoftware.smack.packet.Message$Type -> org.jivesoftware.smack.packet.Message$Type:
    org.jivesoftware.smack.packet.Message$Type normal -> normal
    org.jivesoftware.smack.packet.Message$Type chat -> chat
    org.jivesoftware.smack.packet.Message$Type groupchat -> groupchat
    org.jivesoftware.smack.packet.Message$Type headline -> headline
    org.jivesoftware.smack.packet.Message$Type error -> error
    org.jivesoftware.smack.packet.Message$Type[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.packet.Message$Type fromString(java.lang.String) -> fromString
    org.jivesoftware.smack.packet.Message$Type[] values() -> values
    org.jivesoftware.smack.packet.Message$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Packet -> org.jivesoftware.smack.packet.Packet:
    java.lang.String DEFAULT_LANGUAGE -> DEFAULT_LANGUAGE
    java.lang.String DEFAULT_XML_NS -> DEFAULT_XML_NS
    java.lang.String ID_NOT_AVAILABLE -> ID_NOT_AVAILABLE
    java.text.DateFormat XEP_0082_UTC_FORMAT -> XEP_0082_UTC_FORMAT
    java.lang.String prefix -> prefix
    long id -> id
    java.lang.String xmlns -> xmlns
    java.lang.String packetID -> packetID
    java.lang.String to -> to
    java.lang.String from -> from
    java.util.List packetExtensions -> packetExtensions
    java.util.Map properties -> properties
    org.jivesoftware.smack.packet.XMPPError error -> error
    java.lang.String nextID() -> nextID
    void setDefaultXmlns(java.lang.String) -> setDefaultXmlns
    java.lang.String getPacketID() -> getPacketID
    void setPacketID(java.lang.String) -> setPacketID
    java.lang.String getTo() -> getTo
    void setTo(java.lang.String) -> setTo
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    org.jivesoftware.smack.packet.XMPPError getError() -> getError
    void setError(org.jivesoftware.smack.packet.XMPPError) -> setError
    java.util.Collection getExtensions() -> getExtensions
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String) -> getExtension
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String,java.lang.String) -> getExtension
    void addExtension(org.jivesoftware.smack.packet.PacketExtension) -> addExtension
    void removeExtension(org.jivesoftware.smack.packet.PacketExtension) -> removeExtension
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void deleteProperty(java.lang.String) -> deleteProperty
    java.util.Collection getPropertyNames() -> getPropertyNames
    java.lang.String toXML() -> toXML
    java.lang.String getExtensionsXML() -> getExtensionsXML
    java.lang.String getXmlns() -> getXmlns
    java.lang.String getDefaultLanguage() -> getDefaultLanguage
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.packet.PacketExtension -> org.jivesoftware.smack.packet.PacketExtension:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.packet.Presence -> org.jivesoftware.smack.packet.Presence:
    org.jivesoftware.smack.packet.Presence$Type type -> type
    java.lang.String status -> status
    int priority -> priority
    org.jivesoftware.smack.packet.Presence$Mode mode -> mode
    java.lang.String language -> language
    boolean isAvailable() -> isAvailable
    boolean isAway() -> isAway
    org.jivesoftware.smack.packet.Presence$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.Presence$Type) -> setType
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    org.jivesoftware.smack.packet.Presence$Mode getMode() -> getMode
    void setMode(org.jivesoftware.smack.packet.Presence$Mode) -> setMode
    java.lang.String getLanguage() -> getLanguage
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Presence$Mode -> org.jivesoftware.smack.packet.Presence$Mode:
    org.jivesoftware.smack.packet.Presence$Mode chat -> chat
    org.jivesoftware.smack.packet.Presence$Mode available -> available
    org.jivesoftware.smack.packet.Presence$Mode away -> away
    org.jivesoftware.smack.packet.Presence$Mode xa -> xa
    org.jivesoftware.smack.packet.Presence$Mode dnd -> dnd
    org.jivesoftware.smack.packet.Presence$Mode[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.packet.Presence$Mode[] values() -> values
    org.jivesoftware.smack.packet.Presence$Mode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Presence$Type -> org.jivesoftware.smack.packet.Presence$Type:
    org.jivesoftware.smack.packet.Presence$Type available -> available
    org.jivesoftware.smack.packet.Presence$Type unavailable -> unavailable
    org.jivesoftware.smack.packet.Presence$Type subscribe -> subscribe
    org.jivesoftware.smack.packet.Presence$Type subscribed -> subscribed
    org.jivesoftware.smack.packet.Presence$Type unsubscribe -> unsubscribe
    org.jivesoftware.smack.packet.Presence$Type unsubscribed -> unsubscribed
    org.jivesoftware.smack.packet.Presence$Type error -> error
    org.jivesoftware.smack.packet.Presence$Type[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.packet.Presence$Type[] values() -> values
    org.jivesoftware.smack.packet.Presence$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Privacy -> org.jivesoftware.smack.packet.Privacy:
    boolean declineActiveList -> declineActiveList
    java.lang.String activeName -> activeName
    boolean declineDefaultList -> declineDefaultList
    java.lang.String defaultName -> defaultName
    java.util.Map itemLists -> itemLists
    java.util.List setPrivacyList(java.lang.String,java.util.List) -> setPrivacyList
    java.util.List setActivePrivacyList() -> setActivePrivacyList
    void deletePrivacyList(java.lang.String) -> deletePrivacyList
    java.util.List getActivePrivacyList() -> getActivePrivacyList
    java.util.List getDefaultPrivacyList() -> getDefaultPrivacyList
    java.util.List getPrivacyList(java.lang.String) -> getPrivacyList
    org.jivesoftware.smack.packet.PrivacyItem getItem(java.lang.String,int) -> getItem
    boolean changeDefaultList(java.lang.String) -> changeDefaultList
    void deleteList(java.lang.String) -> deleteList
    java.lang.String getActiveName() -> getActiveName
    void setActiveName(java.lang.String) -> setActiveName
    java.lang.String getDefaultName() -> getDefaultName
    void setDefaultName(java.lang.String) -> setDefaultName
    java.util.Map getItemLists() -> getItemLists
    boolean isDeclineActiveList() -> isDeclineActiveList
    void setDeclineActiveList(boolean) -> setDeclineActiveList
    boolean isDeclineDefaultList() -> isDeclineDefaultList
    void setDeclineDefaultList(boolean) -> setDeclineDefaultList
    java.util.Set getPrivacyListNames() -> getPrivacyListNames
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.PrivacyItem -> org.jivesoftware.smack.packet.PrivacyItem:
    boolean allow -> allow
    int order -> order
    org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule rule -> rule
    boolean filterIQ -> filterIQ
    boolean filterMessage -> filterMessage
    boolean filterPresence_in -> filterPresence_in
    boolean filterPresence_out -> filterPresence_out
    boolean isAllow() -> isAllow
    void setAllow(boolean) -> setAllow
    boolean isFilterIQ() -> isFilterIQ
    void setFilterIQ(boolean) -> setFilterIQ
    boolean isFilterMessage() -> isFilterMessage
    void setFilterMessage(boolean) -> setFilterMessage
    boolean isFilterPresence_in() -> isFilterPresence_in
    void setFilterPresence_in(boolean) -> setFilterPresence_in
    boolean isFilterPresence_out() -> isFilterPresence_out
    void setFilterPresence_out(boolean) -> setFilterPresence_out
    int getOrder() -> getOrder
    void setOrder(int) -> setOrder
    void setValue(java.lang.String) -> setValue
    org.jivesoftware.smack.packet.PrivacyItem$Type getType() -> getType
    java.lang.String getValue() -> getValue
    boolean isFilterEverything() -> isFilterEverything
    org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule getRule() -> getRule
    void setRule(org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule) -> setRule
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule -> org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule:
    org.jivesoftware.smack.packet.PrivacyItem$Type type -> type
    java.lang.String value -> value
    java.lang.String SUBSCRIPTION_BOTH -> SUBSCRIPTION_BOTH
    java.lang.String SUBSCRIPTION_TO -> SUBSCRIPTION_TO
    java.lang.String SUBSCRIPTION_FROM -> SUBSCRIPTION_FROM
    java.lang.String SUBSCRIPTION_NONE -> SUBSCRIPTION_NONE
    org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule fromString(java.lang.String) -> fromString
    org.jivesoftware.smack.packet.PrivacyItem$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.PrivacyItem$Type) -> setType
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    void setSuscriptionValue(java.lang.String) -> setSuscriptionValue
    boolean isSuscription() -> isSuscription
org.jivesoftware.smack.packet.PrivacyItem$Type -> org.jivesoftware.smack.packet.PrivacyItem$Type:
    org.jivesoftware.smack.packet.PrivacyItem$Type group -> group
    org.jivesoftware.smack.packet.PrivacyItem$Type jid -> jid
    org.jivesoftware.smack.packet.PrivacyItem$Type subscription -> subscription
    org.jivesoftware.smack.packet.PrivacyItem$Type[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.packet.PrivacyItem$Type[] values() -> values
    org.jivesoftware.smack.packet.PrivacyItem$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Registration -> org.jivesoftware.smack.packet.Registration:
    java.lang.String instructions -> instructions
    java.util.Map attributes -> attributes
    java.util.List requiredFields -> requiredFields
    boolean registered -> registered
    boolean remove -> remove
    java.lang.String getInstructions() -> getInstructions
    void setInstructions(java.lang.String) -> setInstructions
    java.util.Map getAttributes() -> getAttributes
    void addRequiredField(java.lang.String) -> addRequiredField
    java.util.List getRequiredFields() -> getRequiredFields
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setRegistered(boolean) -> setRegistered
    boolean isRegistered() -> isRegistered
    java.lang.String getField(java.lang.String) -> getField
    java.util.List getFieldNames() -> getFieldNames
    void setUsername(java.lang.String) -> setUsername
    void setPassword(java.lang.String) -> setPassword
    void setRemove(boolean) -> setRemove
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.RosterPacket -> org.jivesoftware.smack.packet.RosterPacket:
    java.util.List rosterItems -> rosterItems
    java.lang.String version -> version
    void addRosterItem(org.jivesoftware.smack.packet.RosterPacket$Item) -> addRosterItem
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    int getRosterItemCount() -> getRosterItemCount
    java.util.Collection getRosterItems() -> getRosterItems
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.RosterPacket$Item -> org.jivesoftware.smack.packet.RosterPacket$Item:
    java.lang.String user -> user
    java.lang.String name -> name
    org.jivesoftware.smack.packet.RosterPacket$ItemType itemType -> itemType
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus itemStatus -> itemStatus
    java.util.Set groupNames -> groupNames
    java.lang.String getUser() -> getUser
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    org.jivesoftware.smack.packet.RosterPacket$ItemType getItemType() -> getItemType
    void setItemType(org.jivesoftware.smack.packet.RosterPacket$ItemType) -> setItemType
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus getItemStatus() -> getItemStatus
    void setItemStatus(org.jivesoftware.smack.packet.RosterPacket$ItemStatus) -> setItemStatus
    java.util.Set getGroupNames() -> getGroupNames
    void addGroupName(java.lang.String) -> addGroupName
    void removeGroupName(java.lang.String) -> removeGroupName
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.packet.RosterPacket$ItemStatus -> org.jivesoftware.smack.packet.RosterPacket$ItemStatus:
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus SUBSCRIPTION_PENDING -> SUBSCRIPTION_PENDING
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus UNSUBSCRIPTION_PENDING -> UNSUBSCRIPTION_PENDING
    java.lang.String value -> value
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.RosterPacket$ItemType -> org.jivesoftware.smack.packet.RosterPacket$ItemType:
    org.jivesoftware.smack.packet.RosterPacket$ItemType none -> none
    org.jivesoftware.smack.packet.RosterPacket$ItemType to -> to
    org.jivesoftware.smack.packet.RosterPacket$ItemType from -> from
    org.jivesoftware.smack.packet.RosterPacket$ItemType both -> both
    org.jivesoftware.smack.packet.RosterPacket$ItemType remove -> remove
    org.jivesoftware.smack.packet.RosterPacket$ItemType[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.packet.RosterPacket$ItemType[] values() -> values
    org.jivesoftware.smack.packet.RosterPacket$ItemType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Session -> org.jivesoftware.smack.packet.Session:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.StreamError -> org.jivesoftware.smack.packet.StreamError:
    java.lang.String code -> code
    java.lang.String getCode() -> getCode
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.XMPPError -> org.jivesoftware.smack.packet.XMPPError:
    int code -> code
    org.jivesoftware.smack.packet.XMPPError$Type type -> type
    java.lang.String condition -> condition
    java.lang.String message -> message
    java.util.List applicationExtensions -> applicationExtensions
    void init(org.jivesoftware.smack.packet.XMPPError$Condition) -> init
    java.lang.String getCondition() -> getCondition
    org.jivesoftware.smack.packet.XMPPError$Type getType() -> getType
    int getCode() -> getCode
    java.lang.String getMessage() -> getMessage
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
    java.util.List getExtensions() -> getExtensions
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String,java.lang.String) -> getExtension
    void addExtension(org.jivesoftware.smack.packet.PacketExtension) -> addExtension
    void setExtension(java.util.List) -> setExtension
org.jivesoftware.smack.packet.XMPPError$Condition -> org.jivesoftware.smack.packet.XMPPError$Condition:
    org.jivesoftware.smack.packet.XMPPError$Condition interna_server_error -> interna_server_error
    org.jivesoftware.smack.packet.XMPPError$Condition forbidden -> forbidden
    org.jivesoftware.smack.packet.XMPPError$Condition bad_request -> bad_request
    org.jivesoftware.smack.packet.XMPPError$Condition conflict -> conflict
    org.jivesoftware.smack.packet.XMPPError$Condition feature_not_implemented -> feature_not_implemented
    org.jivesoftware.smack.packet.XMPPError$Condition gone -> gone
    org.jivesoftware.smack.packet.XMPPError$Condition item_not_found -> item_not_found
    org.jivesoftware.smack.packet.XMPPError$Condition jid_malformed -> jid_malformed
    org.jivesoftware.smack.packet.XMPPError$Condition no_acceptable -> no_acceptable
    org.jivesoftware.smack.packet.XMPPError$Condition not_allowed -> not_allowed
    org.jivesoftware.smack.packet.XMPPError$Condition not_authorized -> not_authorized
    org.jivesoftware.smack.packet.XMPPError$Condition payment_required -> payment_required
    org.jivesoftware.smack.packet.XMPPError$Condition recipient_unavailable -> recipient_unavailable
    org.jivesoftware.smack.packet.XMPPError$Condition redirect -> redirect
    org.jivesoftware.smack.packet.XMPPError$Condition registration_required -> registration_required
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_error -> remote_server_error
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_not_found -> remote_server_not_found
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_timeout -> remote_server_timeout
    org.jivesoftware.smack.packet.XMPPError$Condition resource_constraint -> resource_constraint
    org.jivesoftware.smack.packet.XMPPError$Condition service_unavailable -> service_unavailable
    org.jivesoftware.smack.packet.XMPPError$Condition subscription_required -> subscription_required
    org.jivesoftware.smack.packet.XMPPError$Condition undefined_condition -> undefined_condition
    org.jivesoftware.smack.packet.XMPPError$Condition unexpected_request -> unexpected_request
    org.jivesoftware.smack.packet.XMPPError$Condition request_timeout -> request_timeout
    java.lang.String value -> value
    java.lang.String toString() -> toString
    java.lang.String access$0(org.jivesoftware.smack.packet.XMPPError$Condition) -> access$0
org.jivesoftware.smack.packet.XMPPError$ErrorSpecification -> org.jivesoftware.smack.packet.XMPPError$ErrorSpecification:
    int code -> code
    org.jivesoftware.smack.packet.XMPPError$Type type -> type
    org.jivesoftware.smack.packet.XMPPError$Condition condition -> condition
    java.util.Map instances -> instances
    java.util.Map errorSpecifications() -> errorSpecifications
    org.jivesoftware.smack.packet.XMPPError$ErrorSpecification specFor(org.jivesoftware.smack.packet.XMPPError$Condition) -> specFor
    org.jivesoftware.smack.packet.XMPPError$Condition getCondition() -> getCondition
    org.jivesoftware.smack.packet.XMPPError$Type getType() -> getType
    int getCode() -> getCode
org.jivesoftware.smack.packet.XMPPError$Type -> org.jivesoftware.smack.packet.XMPPError$Type:
    org.jivesoftware.smack.packet.XMPPError$Type WAIT -> WAIT
    org.jivesoftware.smack.packet.XMPPError$Type CANCEL -> CANCEL
    org.jivesoftware.smack.packet.XMPPError$Type MODIFY -> MODIFY
    org.jivesoftware.smack.packet.XMPPError$Type AUTH -> AUTH
    org.jivesoftware.smack.packet.XMPPError$Type CONTINUE -> CONTINUE
    org.jivesoftware.smack.packet.XMPPError$Type[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.packet.XMPPError$Type[] values() -> values
    org.jivesoftware.smack.packet.XMPPError$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.provider.IQProvider -> org.jivesoftware.smack.provider.IQProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smack.provider.PacketExtensionProvider -> org.jivesoftware.smack.provider.PacketExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smack.provider.PrivacyProvider -> org.jivesoftware.smack.provider.PrivacyProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    void parseList(org.xmlpull.v1.XmlPullParser,org.jivesoftware.smack.packet.Privacy) -> parseList
    org.jivesoftware.smack.packet.PrivacyItem parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
org.jivesoftware.smack.provider.ProviderManager -> org.jivesoftware.smack.provider.ProviderManager:
    org.jivesoftware.smack.provider.ProviderManager instance -> instance
    java.util.Map extensionProviders -> extensionProviders
    java.util.Map iqProviders -> iqProviders
    org.jivesoftware.smack.provider.ProviderManager getInstance() -> getInstance
    void setInstance(org.jivesoftware.smack.provider.ProviderManager) -> setInstance
    void initialize() -> initialize
    java.lang.Object getIQProvider(java.lang.String,java.lang.String) -> getIQProvider
    java.util.Collection getIQProviders() -> getIQProviders
    void addIQProvider(java.lang.String,java.lang.String,java.lang.Object) -> addIQProvider
    void removeIQProvider(java.lang.String,java.lang.String) -> removeIQProvider
    java.lang.Object getExtensionProvider(java.lang.String,java.lang.String) -> getExtensionProvider
    void addExtensionProvider(java.lang.String,java.lang.String,java.lang.Object) -> addExtensionProvider
    void removeExtensionProvider(java.lang.String,java.lang.String) -> removeExtensionProvider
    java.util.Collection getExtensionProviders() -> getExtensionProviders
    java.lang.String getProviderKey(java.lang.String,java.lang.String) -> getProviderKey
    java.lang.ClassLoader[] getClassLoaders() -> getClassLoaders
org.jivesoftware.smack.proxy.DirectSocketFactory -> org.jivesoftware.smack.proxy.DirectSocketFactory:
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
org.jivesoftware.smack.proxy.HTTPProxySocketFactory -> org.jivesoftware.smack.proxy.HTTPProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    java.util.regex.Pattern RESPONSE_PATTERN -> RESPONSE_PATTERN
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket httpProxifiedSocket(java.lang.String,int) -> httpProxifiedSocket
org.jivesoftware.smack.proxy.ProxyException -> org.jivesoftware.smack.proxy.ProxyException:
org.jivesoftware.smack.proxy.ProxyInfo -> org.jivesoftware.smack.proxy.ProxyInfo:
    java.lang.String proxyAddress -> proxyAddress
    int proxyPort -> proxyPort
    java.lang.String proxyUsername -> proxyUsername
    java.lang.String proxyPassword -> proxyPassword
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType proxyType -> proxyType
    org.jivesoftware.smack.proxy.ProxyInfo forHttpProxy(java.lang.String,int,java.lang.String,java.lang.String) -> forHttpProxy
    org.jivesoftware.smack.proxy.ProxyInfo forSocks4Proxy(java.lang.String,int,java.lang.String,java.lang.String) -> forSocks4Proxy
    org.jivesoftware.smack.proxy.ProxyInfo forSocks5Proxy(java.lang.String,int,java.lang.String,java.lang.String) -> forSocks5Proxy
    org.jivesoftware.smack.proxy.ProxyInfo forNoProxy() -> forNoProxy
    org.jivesoftware.smack.proxy.ProxyInfo forDefaultProxy() -> forDefaultProxy
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType getProxyType() -> getProxyType
    java.lang.String getProxyAddress() -> getProxyAddress
    int getProxyPort() -> getProxyPort
    java.lang.String getProxyUsername() -> getProxyUsername
    java.lang.String getProxyPassword() -> getProxyPassword
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
org.jivesoftware.smack.proxy.ProxyInfo$ProxyType -> org.jivesoftware.smack.proxy.ProxyInfo$ProxyType:
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType NONE -> NONE
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType HTTP -> HTTP
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType SOCKS4 -> SOCKS4
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType SOCKS5 -> SOCKS5
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType[] values() -> values
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.proxy.Socks4ProxySocketFactory -> org.jivesoftware.smack.proxy.Socks4ProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket socks4ProxifiedSocket(java.lang.String,int) -> socks4ProxifiedSocket
org.jivesoftware.smack.proxy.Socks5ProxySocketFactory -> org.jivesoftware.smack.proxy.Socks5ProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket socks5ProxifiedSocket(java.lang.String,int) -> socks5ProxifiedSocket
    void fill(java.io.InputStream,byte[],int) -> fill
org.jivesoftware.smack.sasl.SASLAnonymous -> org.jivesoftware.smack.sasl.SASLAnonymous:
    java.lang.String getName() -> getName
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    void authenticate() -> authenticate
    void challengeReceived(java.lang.String) -> challengeReceived
org.jivesoftware.smack.sasl.SASLCramMD5Mechanism -> org.jivesoftware.smack.sasl.SASLCramMD5Mechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.sasl.SASLDigestMD5Mechanism -> org.jivesoftware.smack.sasl.SASLDigestMD5Mechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.sasl.SASLExternalMechanism -> org.jivesoftware.smack.sasl.SASLExternalMechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.sasl.SASLGSSAPIMechanism -> org.jivesoftware.smack.sasl.SASLGSSAPIMechanism:
    java.lang.String getName() -> getName
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
org.jivesoftware.smack.sasl.SASLMechanism -> org.jivesoftware.smack.sasl.SASLMechanism:
    org.jivesoftware.smack.SASLAuthentication saslAuthentication -> saslAuthentication
    org.apache.harmony.javax.security.sasl.SaslClient sc -> sc
    java.lang.String authenticationId -> authenticationId
    java.lang.String password -> password
    java.lang.String hostname -> hostname
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate() -> authenticate
    void challengeReceived(java.lang.String) -> challengeReceived
    java.lang.String getName() -> getName
    org.jivesoftware.smack.SASLAuthentication getSASLAuthentication() -> getSASLAuthentication
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
org.jivesoftware.smack.sasl.SASLMechanism$AuthMechanism -> org.jivesoftware.smack.sasl.SASLMechanism$AuthMechanism:
    java.lang.String name -> name
    java.lang.String authenticationText -> authenticationText
    org.jivesoftware.smack.sasl.SASLMechanism this$0 -> this$0
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Challenge -> org.jivesoftware.smack.sasl.SASLMechanism$Challenge:
    java.lang.String data -> data
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Failure -> org.jivesoftware.smack.sasl.SASLMechanism$Failure:
    java.lang.String condition -> condition
    java.lang.String getCondition() -> getCondition
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Response -> org.jivesoftware.smack.sasl.SASLMechanism$Response:
    java.lang.String authenticationText -> authenticationText
    org.jivesoftware.smack.sasl.SASLMechanism this$0 -> this$0
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Success -> org.jivesoftware.smack.sasl.SASLMechanism$Success:
    java.lang.String data -> data
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLPlainMechanism -> org.jivesoftware.smack.sasl.SASLPlainMechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.util.Base64 -> org.jivesoftware.smack.util.Base64:
    int NO_OPTIONS -> NO_OPTIONS
    int ENCODE -> ENCODE
    int DECODE -> DECODE
    int GZIP -> GZIP
    int DONT_BREAK_LINES -> DONT_BREAK_LINES
    int URL_SAFE -> URL_SAFE
    int ORDERED -> ORDERED
    int MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    byte EQUALS_SIGN -> EQUALS_SIGN
    byte NEW_LINE -> NEW_LINE
    java.lang.String PREFERRED_ENCODING -> PREFERRED_ENCODING
    byte WHITE_SPACE_ENC -> WHITE_SPACE_ENC
    byte EQUALS_SIGN_ENC -> EQUALS_SIGN_ENC
    byte[] _STANDARD_ALPHABET -> _STANDARD_ALPHABET
    byte[] _STANDARD_DECODABET -> _STANDARD_DECODABET
    byte[] _URL_SAFE_ALPHABET -> _URL_SAFE_ALPHABET
    byte[] _URL_SAFE_DECODABET -> _URL_SAFE_DECODABET
    byte[] _ORDERED_ALPHABET -> _ORDERED_ALPHABET
    byte[] _ORDERED_DECODABET -> _ORDERED_DECODABET
    byte[] getAlphabet(int) -> getAlphabet
    byte[] getDecodabet(int) -> getDecodabet
    void main(java.lang.String[]) -> main
    void usage(java.lang.String) -> usage
    byte[] encode3to4(byte[],byte[],int,int) -> encode3to4
    byte[] encode3to4(byte[],int,int,byte[],int,int) -> encode3to4
    java.lang.String encodeObject(java.io.Serializable) -> encodeObject
    java.lang.String encodeObject(java.io.Serializable,int) -> encodeObject
    java.lang.String encodeBytes(byte[]) -> encodeBytes
    java.lang.String encodeBytes(byte[],int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int,int) -> encodeBytes
    int decode4to3(byte[],int,byte[],int,int) -> decode4to3
    byte[] decode(byte[],int,int,int) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(java.lang.String,int) -> decode
    java.lang.Object decodeToObject(java.lang.String) -> decodeToObject
    boolean encodeToFile(byte[],java.lang.String) -> encodeToFile
    boolean decodeToFile(java.lang.String,java.lang.String) -> decodeToFile
    byte[] decodeFromFile(java.lang.String) -> decodeFromFile
    java.lang.String encodeFromFile(java.lang.String) -> encodeFromFile
    void encodeFileToFile(java.lang.String,java.lang.String) -> encodeFileToFile
    void decodeFileToFile(java.lang.String,java.lang.String) -> decodeFileToFile
    byte[] access$0(int) -> access$0
    byte[] access$1(int) -> access$1
    byte[] access$2(byte[],int,int,byte[],int,int) -> access$2
    int access$3(byte[],int,byte[],int,int) -> access$3
    byte[] access$4(byte[],byte[],int,int) -> access$4
org.jivesoftware.smack.util.Base64$InputStream -> org.jivesoftware.smack.util.Base64$InputStream:
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> bufferLength
    int numSigBytes -> numSigBytes
    int lineLength -> lineLength
    boolean breakLines -> breakLines
    int options -> options
    byte[] alphabet -> alphabet
    byte[] decodabet -> decodabet
    int read() -> read
    int read(byte[],int,int) -> read
org.jivesoftware.smack.util.Base64$OutputStream -> org.jivesoftware.smack.util.Base64$OutputStream:
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> bufferLength
    int lineLength -> lineLength
    boolean breakLines -> breakLines
    byte[] b4 -> b4
    boolean suspendEncoding -> suspendEncoding
    int options -> options
    byte[] alphabet -> alphabet
    byte[] decodabet -> decodabet
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flushBase64() -> flushBase64
    void close() -> close
    void suspendEncoding() -> suspendEncoding
    void resumeEncoding() -> resumeEncoding
org.jivesoftware.smack.util.Cache -> org.jivesoftware.smack.util.Cache:
    java.util.Map map -> map
    org.jivesoftware.smack.util.Cache$LinkedList lastAccessedList -> lastAccessedList
    org.jivesoftware.smack.util.Cache$LinkedList ageList -> ageList
    int maxCacheSize -> maxCacheSize
    long maxLifetime -> maxLifetime
    long cacheHits -> cacheHits
    long cacheMisses -> cacheMisses
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object remove(java.lang.Object,boolean) -> remove
    void clear() -> clear
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Collection values() -> values
    boolean containsKey(java.lang.Object) -> containsKey
    void putAll(java.util.Map) -> putAll
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    long getCacheHits() -> getCacheHits
    long getCacheMisses() -> getCacheMisses
    int getMaxCacheSize() -> getMaxCacheSize
    void setMaxCacheSize(int) -> setMaxCacheSize
    long getMaxLifetime() -> getMaxLifetime
    void setMaxLifetime(long) -> setMaxLifetime
    void deleteExpiredEntries() -> deleteExpiredEntries
    void cullCache() -> cullCache
org.jivesoftware.smack.util.Cache$1 -> org.jivesoftware.smack.util.Cache$1:
    java.util.Collection values -> values
    org.jivesoftware.smack.util.Cache this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.jivesoftware.smack.util.Cache$1$1 -> org.jivesoftware.smack.util.Cache$1$1:
    java.util.Iterator it -> it
    org.jivesoftware.smack.util.Cache$1 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.jivesoftware.smack.util.Cache$2 -> org.jivesoftware.smack.util.Cache$2:
    java.util.Set set -> set
    org.jivesoftware.smack.util.Cache this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.util.Set access$0(org.jivesoftware.smack.util.Cache$2) -> access$0
org.jivesoftware.smack.util.Cache$2$1 -> org.jivesoftware.smack.util.Cache$2$1:
    java.util.Iterator it -> it
    org.jivesoftware.smack.util.Cache$2 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.jivesoftware.smack.util.Cache$2$1$1 -> org.jivesoftware.smack.util.Cache$2$1$1:
    org.jivesoftware.smack.util.Cache$2$1 this$2 -> this$2
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.Cache$CacheObject -> org.jivesoftware.smack.util.Cache$CacheObject:
    java.lang.Object object -> object
    org.jivesoftware.smack.util.Cache$LinkedListNode lastAccessedListNode -> lastAccessedListNode
    org.jivesoftware.smack.util.Cache$LinkedListNode ageListNode -> ageListNode
    int readCount -> readCount
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.util.Cache$LinkedList -> org.jivesoftware.smack.util.Cache$LinkedList:
    org.jivesoftware.smack.util.Cache$LinkedListNode head -> head
    org.jivesoftware.smack.util.Cache$LinkedListNode getFirst() -> getFirst
    org.jivesoftware.smack.util.Cache$LinkedListNode getLast() -> getLast
    org.jivesoftware.smack.util.Cache$LinkedListNode addFirst(org.jivesoftware.smack.util.Cache$LinkedListNode) -> addFirst
    org.jivesoftware.smack.util.Cache$LinkedListNode addFirst(java.lang.Object) -> addFirst
    org.jivesoftware.smack.util.Cache$LinkedListNode addLast(java.lang.Object) -> addLast
    void clear() -> clear
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.Cache$LinkedListNode -> org.jivesoftware.smack.util.Cache$LinkedListNode:
    org.jivesoftware.smack.util.Cache$LinkedListNode previous -> previous
    org.jivesoftware.smack.util.Cache$LinkedListNode next -> next
    java.lang.Object object -> object
    long timestamp -> timestamp
    void remove() -> remove
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.DNSUtil -> org.jivesoftware.smack.util.DNSUtil:
    java.util.Map ccache -> ccache
    java.util.Map scache -> scache
    org.jivesoftware.smack.util.DNSUtil$HostAddress resolveSRV(java.lang.String) -> resolveSRV
    org.jivesoftware.smack.util.DNSUtil$HostAddress resolveXMPPDomain(java.lang.String) -> resolveXMPPDomain
    org.jivesoftware.smack.util.DNSUtil$HostAddress resolveXMPPServerDomain(java.lang.String) -> resolveXMPPServerDomain
org.jivesoftware.smack.util.DNSUtil$HostAddress -> org.jivesoftware.smack.util.DNSUtil$HostAddress:
    java.lang.String host -> host
    int port -> port
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
org.jivesoftware.smack.util.ObservableReader -> org.jivesoftware.smack.util.ObservableReader:
    java.io.Reader wrappedReader -> wrappedReader
    java.util.List listeners -> listeners
    int read(char[],int,int) -> read
    void close() -> close
    int read() -> read
    int read(char[]) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void addReaderListener(org.jivesoftware.smack.util.ReaderListener) -> addReaderListener
    void removeReaderListener(org.jivesoftware.smack.util.ReaderListener) -> removeReaderListener
org.jivesoftware.smack.util.ObservableWriter -> org.jivesoftware.smack.util.ObservableWriter:
    java.io.Writer wrappedWriter -> wrappedWriter
    java.util.List listeners -> listeners
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void write(int) -> write
    void write(char[]) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    void notifyListeners(java.lang.String) -> notifyListeners
    void addWriterListener(org.jivesoftware.smack.util.WriterListener) -> addWriterListener
    void removeWriterListener(org.jivesoftware.smack.util.WriterListener) -> removeWriterListener
org.jivesoftware.smack.util.PacketParserUtils -> org.jivesoftware.smack.util.PacketParserUtils:
    java.lang.String PROPERTIES_NAMESPACE -> PROPERTIES_NAMESPACE
    org.jivesoftware.smack.packet.Packet parseMessage(org.xmlpull.v1.XmlPullParser) -> parseMessage
    java.lang.String parseContent(org.xmlpull.v1.XmlPullParser) -> parseContent
    org.jivesoftware.smack.packet.Presence parsePresence(org.xmlpull.v1.XmlPullParser) -> parsePresence
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser,org.jivesoftware.smack.Connection) -> parseIQ
    org.jivesoftware.smack.packet.Authentication parseAuthentication(org.xmlpull.v1.XmlPullParser) -> parseAuthentication
    org.jivesoftware.smack.packet.RosterPacket parseRoster(org.xmlpull.v1.XmlPullParser) -> parseRoster
    org.jivesoftware.smack.packet.Registration parseRegistration(org.xmlpull.v1.XmlPullParser) -> parseRegistration
    org.jivesoftware.smack.packet.Bind parseResourceBinding(org.xmlpull.v1.XmlPullParser) -> parseResourceBinding
    java.util.Collection parseMechanisms(org.xmlpull.v1.XmlPullParser) -> parseMechanisms
    java.util.Collection parseCompressionMethods(org.xmlpull.v1.XmlPullParser) -> parseCompressionMethods
    java.util.Map parseProperties(org.xmlpull.v1.XmlPullParser) -> parseProperties
    org.jivesoftware.smack.sasl.SASLMechanism$Failure parseSASLFailure(org.xmlpull.v1.XmlPullParser) -> parseSASLFailure
    org.jivesoftware.smack.packet.StreamError parseStreamError(org.xmlpull.v1.XmlPullParser) -> parseStreamError
    org.jivesoftware.smack.packet.XMPPError parseError(org.xmlpull.v1.XmlPullParser) -> parseError
    org.jivesoftware.smack.packet.PacketExtension parsePacketExtension(java.lang.String,java.lang.String,org.xmlpull.v1.XmlPullParser) -> parsePacketExtension
    java.lang.String getLanguageAttribute(org.xmlpull.v1.XmlPullParser) -> getLanguageAttribute
    java.lang.Object parseWithIntrospection(java.lang.String,java.lang.Class,org.xmlpull.v1.XmlPullParser) -> parseWithIntrospection
    java.lang.Object decode(java.lang.Class,java.lang.String) -> decode
org.jivesoftware.smack.util.PacketParserUtils$1 -> org.jivesoftware.smack.util.PacketParserUtils$1:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.util.PacketParserUtils$2 -> org.jivesoftware.smack.util.PacketParserUtils$2:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.util.ReaderListener -> org.jivesoftware.smack.util.ReaderListener:
    void read(java.lang.String) -> read
org.jivesoftware.smack.util.StringUtils -> org.jivesoftware.smack.util.StringUtils:
    char[] QUOTE_ENCODE -> QUOTE_ENCODE
    char[] APOS_ENCODE -> APOS_ENCODE
    char[] AMP_ENCODE -> AMP_ENCODE
    char[] LT_ENCODE -> LT_ENCODE
    char[] GT_ENCODE -> GT_ENCODE
    java.security.MessageDigest digest -> digest
    java.util.Random randGen -> randGen
    char[] numbersAndLetters -> numbersAndLetters
    java.lang.String parseName(java.lang.String) -> parseName
    java.lang.String parseServer(java.lang.String) -> parseServer
    java.lang.String parseResource(java.lang.String) -> parseResource
    java.lang.String parseBareAddress(java.lang.String) -> parseBareAddress
    java.lang.String escapeNode(java.lang.String) -> escapeNode
    java.lang.String unescapeNode(java.lang.String) -> unescapeNode
    java.lang.String escapeForXML(java.lang.String) -> escapeForXML
    java.lang.String hash(java.lang.String) -> hash
    java.lang.String encodeHex(byte[]) -> encodeHex
    java.lang.String encodeBase64(java.lang.String) -> encodeBase64
    java.lang.String encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64(byte[],boolean) -> encodeBase64
    java.lang.String encodeBase64(byte[],int,int,boolean) -> encodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    java.lang.String randomString(int) -> randomString
org.jivesoftware.smack.util.WriterListener -> org.jivesoftware.smack.util.WriterListener:
    void write(java.lang.String) -> write
org.jivesoftware.smack.util.collections.AbstractEmptyIterator -> org.jivesoftware.smack.util.collections.AbstractEmptyIterator:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    void reset() -> reset
org.jivesoftware.smack.util.collections.AbstractHashedMap -> org.jivesoftware.smack.util.collections.AbstractHashedMap:
    java.lang.String NO_NEXT_ENTRY -> NO_NEXT_ENTRY
    java.lang.String NO_PREVIOUS_ENTRY -> NO_PREVIOUS_ENTRY
    java.lang.String REMOVE_INVALID -> REMOVE_INVALID
    java.lang.String GETKEY_INVALID -> GETKEY_INVALID
    java.lang.String GETVALUE_INVALID -> GETVALUE_INVALID
    java.lang.String SETVALUE_INVALID -> SETVALUE_INVALID
    int DEFAULT_CAPACITY -> DEFAULT_CAPACITY
    int DEFAULT_THRESHOLD -> DEFAULT_THRESHOLD
    float DEFAULT_LOAD_FACTOR -> DEFAULT_LOAD_FACTOR
    int MAXIMUM_CAPACITY -> MAXIMUM_CAPACITY
    java.lang.Object NULL -> NULL
    float loadFactor -> loadFactor
    int size -> size
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry[] data -> data
    int threshold -> threshold
    int modCount -> modCount
    org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySet entrySet -> entrySet
    org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySet keySet -> keySet
    org.jivesoftware.smack.util.collections.AbstractHashedMap$Values values -> values
    void init() -> init
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    int hash(java.lang.Object) -> hash
    boolean isEqualKey(java.lang.Object,java.lang.Object) -> isEqualKey
    boolean isEqualValue(java.lang.Object,java.lang.Object) -> isEqualValue
    int hashIndex(int,int) -> hashIndex
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry getEntry(java.lang.Object) -> getEntry
    void updateEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,java.lang.Object) -> updateEntry
    void reuseEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,int,java.lang.Object,java.lang.Object) -> reuseEntry
    void addMapping(int,int,java.lang.Object,java.lang.Object) -> addMapping
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry createEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,java.lang.Object,java.lang.Object) -> createEntry
    void addEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int) -> addEntry
    void removeMapping(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> removeMapping
    void removeEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> removeEntry
    void destroyEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> destroyEntry
    void checkCapacity() -> checkCapacity
    void ensureCapacity(int) -> ensureCapacity
    int calculateNewCapacity(int) -> calculateNewCapacity
    int calculateThreshold(int,float) -> calculateThreshold
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry entryNext(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryNext
    int entryHashCode(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryHashCode
    java.lang.Object entryKey(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryKey
    java.lang.Object entryValue(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryValue
    org.jivesoftware.smack.util.collections.MapIterator mapIterator() -> mapIterator
    java.util.Set entrySet() -> entrySet
    java.util.Iterator createEntrySetIterator() -> createEntrySetIterator
    java.util.Set keySet() -> keySet
    java.util.Iterator createKeySetIterator() -> createKeySetIterator
    java.util.Collection values() -> values
    java.util.Iterator createValuesIterator() -> createValuesIterator
    void doWriteObject(java.io.ObjectOutputStream) -> doWriteObject
    void doReadObject(java.io.ObjectInputStream) -> doReadObject
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySet -> org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySet:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int size() -> size
    void clear() -> clear
    boolean contains(java.util.Map$Entry) -> contains
    boolean remove(java.lang.Object) -> remove
    java.util.Iterator iterator() -> iterator
org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySetIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySetIterator:
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry next() -> next
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry -> org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry:
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry next -> next
    int hashCode -> hashCode
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    void setKey(java.lang.Object) -> setKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object access$0(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> access$0
    void access$1(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,java.lang.Object) -> access$1
    void access$2(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,java.lang.Object) -> access$2
    java.lang.Object access$3(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> access$3
org.jivesoftware.smack.util.collections.AbstractHashedMap$HashIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$HashIterator:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int hashIndex -> hashIndex
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry last -> last
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry next -> next
    int expectedModCount -> expectedModCount
    boolean hasNext() -> hasNext
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry nextEntry() -> nextEntry
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry currentEntry() -> currentEntry
    void remove() -> remove
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.collections.AbstractHashedMap$HashMapIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$HashMapIterator:
    java.lang.Object next() -> next
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySet -> org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySet:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    java.util.Iterator iterator() -> iterator
org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySetIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySetIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractHashedMap$Values -> org.jivesoftware.smack.util.collections.AbstractHashedMap$Values:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
org.jivesoftware.smack.util.collections.AbstractHashedMap$ValuesIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$ValuesIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractKeyValue -> org.jivesoftware.smack.util.collections.AbstractKeyValue:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.collections.AbstractMapEntry -> org.jivesoftware.smack.util.collections.AbstractMapEntry:
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.util.collections.AbstractReferenceMap -> org.jivesoftware.smack.util.collections.AbstractReferenceMap:
    int HARD -> HARD
    int SOFT -> SOFT
    int WEAK -> WEAK
    int keyType -> keyType
    int valueType -> valueType
    boolean purgeValues -> purgeValues
    java.lang.ref.ReferenceQueue queue -> queue
    void init() -> init
    void verify(java.lang.String,int) -> verify
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    org.jivesoftware.smack.util.collections.MapIterator mapIterator() -> mapIterator
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    void purgeBeforeRead() -> purgeBeforeRead
    void purgeBeforeWrite() -> purgeBeforeWrite
    void purge() -> purge
    void purge(java.lang.ref.Reference) -> purge
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry getEntry(java.lang.Object) -> getEntry
    int hashEntry(java.lang.Object,java.lang.Object) -> hashEntry
    boolean isEqualKey(java.lang.Object,java.lang.Object) -> isEqualKey
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry createEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,java.lang.Object,java.lang.Object) -> createEntry
    java.util.Iterator createEntrySetIterator() -> createEntrySetIterator
    java.util.Iterator createKeySetIterator() -> createKeySetIterator
    java.util.Iterator createValuesIterator() -> createValuesIterator
    void doWriteObject(java.io.ObjectOutputStream) -> doWriteObject
    void doReadObject(java.io.ObjectInputStream) -> doReadObject
    java.lang.ref.ReferenceQueue access$0(org.jivesoftware.smack.util.collections.AbstractReferenceMap) -> access$0
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry:
    org.jivesoftware.smack.util.collections.AbstractReferenceMap parent -> parent
    java.lang.ref.Reference refKey -> refKey
    java.lang.ref.Reference refValue -> refValue
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.ref.Reference toReference(int,java.lang.Object,int) -> toReference
    boolean purge(java.lang.ref.Reference) -> purge
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySet -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySet:
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySetIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySetIterator:
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry next() -> next
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceIteratorBase -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceIteratorBase:
    org.jivesoftware.smack.util.collections.AbstractReferenceMap parent -> parent
    int index -> index
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry entry -> entry
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry previous -> previous
    java.lang.Object nextKey -> nextKey
    java.lang.Object nextValue -> nextValue
    java.lang.Object currentKey -> currentKey
    java.lang.Object currentValue -> currentValue
    int expectedModCount -> expectedModCount
    boolean hasNext() -> hasNext
    void checkMod() -> checkMod
    boolean nextNull() -> nextNull
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry nextEntry() -> nextEntry
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry currentEntry() -> currentEntry
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry superNext() -> superNext
    void remove() -> remove
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySet -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySet:
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySetIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySetIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceMapIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceMapIterator:
    java.lang.Object next() -> next
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValues -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValues:
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValuesIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValuesIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$SoftRef -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$SoftRef:
    int hash -> hash
    int hashCode() -> hashCode
org.jivesoftware.smack.util.collections.AbstractReferenceMap$WeakRef -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$WeakRef:
    int hash -> hash
    int hashCode() -> hashCode
org.jivesoftware.smack.util.collections.DefaultMapEntry -> org.jivesoftware.smack.util.collections.DefaultMapEntry:
org.jivesoftware.smack.util.collections.EmptyIterator -> org.jivesoftware.smack.util.collections.EmptyIterator:
    org.jivesoftware.smack.util.collections.ResettableIterator RESETTABLE_INSTANCE -> RESETTABLE_INSTANCE
    java.util.Iterator INSTANCE -> INSTANCE
    java.util.Iterator getInstance() -> getInstance
    java.lang.Object getValue() -> getValue
    boolean hasPrevious() -> hasPrevious
    java.lang.Object getKey() -> getKey
    java.lang.Object next() -> next
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    void reset() -> reset
    int previousIndex() -> previousIndex
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    void remove() -> remove
    boolean hasNext() -> hasNext
org.jivesoftware.smack.util.collections.EmptyMapIterator -> org.jivesoftware.smack.util.collections.EmptyMapIterator:
    org.jivesoftware.smack.util.collections.MapIterator INSTANCE -> INSTANCE
    java.lang.Object getValue() -> getValue
    boolean hasPrevious() -> hasPrevious
    java.lang.Object getKey() -> getKey
    java.lang.Object next() -> next
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    void reset() -> reset
    int previousIndex() -> previousIndex
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    void remove() -> remove
    boolean hasNext() -> hasNext
org.jivesoftware.smack.util.collections.IterableMap -> org.jivesoftware.smack.util.collections.IterableMap:
    org.jivesoftware.smack.util.collections.MapIterator mapIterator() -> mapIterator
org.jivesoftware.smack.util.collections.KeyValue -> org.jivesoftware.smack.util.collections.KeyValue:
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
org.jivesoftware.smack.util.collections.MapIterator -> org.jivesoftware.smack.util.collections.MapIterator:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    void remove() -> remove
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.collections.ReferenceMap -> org.jivesoftware.smack.util.collections.ReferenceMap:
    long serialVersionUID -> serialVersionUID
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
org.jivesoftware.smack.util.collections.ResettableIterator -> org.jivesoftware.smack.util.collections.ResettableIterator:
    void reset() -> reset
org.xbill.DNS.A6Record -> org.xbill.DNS.A6Record:
    long serialVersionUID -> serialVersionUID
    int prefixBits -> prefixBits
    java.net.InetAddress suffix -> suffix
    org.xbill.DNS.Name prefix -> prefix
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    int getPrefixBits() -> getPrefixBits
    java.net.InetAddress getSuffix() -> getSuffix
    org.xbill.DNS.Name getPrefix() -> getPrefix
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.AAAARecord -> org.xbill.DNS.AAAARecord:
    long serialVersionUID -> serialVersionUID
    java.net.InetAddress address -> address
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    java.net.InetAddress getAddress() -> getAddress
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.AFSDBRecord -> org.xbill.DNS.AFSDBRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    int getSubtype() -> getSubtype
    org.xbill.DNS.Name getHost() -> getHost
org.xbill.DNS.APLRecord -> org.xbill.DNS.APLRecord:
    long serialVersionUID -> serialVersionUID
    java.util.List elements -> elements
    org.xbill.DNS.Record getObject() -> getObject
    boolean validatePrefixLength(int,int) -> validatePrefixLength
    byte[] parseAddress(byte[],int) -> parseAddress
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    java.util.List getElements() -> getElements
    int addressLength(byte[]) -> addressLength
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    boolean access$0(int,int) -> access$0
org.xbill.DNS.APLRecord$Element -> org.xbill.DNS.APLRecord$Element:
    int family -> family
    boolean negative -> negative
    int prefixLength -> prefixLength
    java.lang.Object address -> address
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.xbill.DNS.ARecord -> org.xbill.DNS.ARecord:
    long serialVersionUID -> serialVersionUID
    int addr -> addr
    org.xbill.DNS.Record getObject() -> getObject
    int fromArray(byte[]) -> fromArray
    byte[] toArray(int) -> toArray
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    java.net.InetAddress getAddress() -> getAddress
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.Address -> org.xbill.DNS.Address:
    int IPv4 -> IPv4
    int IPv6 -> IPv6
    byte[] parseV4(java.lang.String) -> parseV4
    byte[] parseV6(java.lang.String) -> parseV6
    int[] toArray(java.lang.String,int) -> toArray
    int[] toArray(java.lang.String) -> toArray
    byte[] toByteArray(java.lang.String,int) -> toByteArray
    boolean isDottedQuad(java.lang.String) -> isDottedQuad
    java.lang.String toDottedQuad(byte[]) -> toDottedQuad
    java.lang.String toDottedQuad(int[]) -> toDottedQuad
    org.xbill.DNS.Record[] lookupHostName(java.lang.String) -> lookupHostName
    java.net.InetAddress addrFromRecord(java.lang.String,org.xbill.DNS.Record) -> addrFromRecord
    java.net.InetAddress getByName(java.lang.String) -> getByName
    java.net.InetAddress[] getAllByName(java.lang.String) -> getAllByName
    java.net.InetAddress getByAddress(java.lang.String) -> getByAddress
    java.net.InetAddress getByAddress(java.lang.String,int) -> getByAddress
    java.lang.String getHostName(java.net.InetAddress) -> getHostName
    int familyOf(java.net.InetAddress) -> familyOf
    int addressLength(int) -> addressLength
org.xbill.DNS.CERTRecord -> org.xbill.DNS.CERTRecord:
    int PKIX -> PKIX
    int SPKI -> SPKI
    int PGP -> PGP
    int URI -> URI
    int OID -> OID
    long serialVersionUID -> serialVersionUID
    int certType -> certType
    int keyTag -> keyTag
    int alg -> alg
    byte[] cert -> cert
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    int getCertType() -> getCertType
    int getKeyTag() -> getKeyTag
    int getAlgorithm() -> getAlgorithm
    byte[] getCert() -> getCert
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.CERTRecord$CertificateType -> org.xbill.DNS.CERTRecord$CertificateType:
    int PKIX -> PKIX
    int SPKI -> SPKI
    int PGP -> PGP
    int IPKIX -> IPKIX
    int ISPKI -> ISPKI
    int IPGP -> IPGP
    int ACPKIX -> ACPKIX
    int IACPKIX -> IACPKIX
    int URI -> URI
    int OID -> OID
    org.xbill.DNS.Mnemonic types -> types
    java.lang.String string(int) -> string
    int value(java.lang.String) -> value
org.xbill.DNS.CNAMERecord -> org.xbill.DNS.CNAMERecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getTarget() -> getTarget
    org.xbill.DNS.Name getAlias() -> getAlias
org.xbill.DNS.Cache -> org.xbill.DNS.Cache:
    org.xbill.DNS.Cache$CacheMap data -> data
    int maxncache -> maxncache
    int maxcache -> maxcache
    int dclass -> dclass
    int defaultMaxEntries -> defaultMaxEntries
    int limitExpire(long,long) -> limitExpire
    java.lang.Object exactName(org.xbill.DNS.Name) -> exactName
    void removeName(org.xbill.DNS.Name) -> removeName
    org.xbill.DNS.Cache$Element[] allElements(java.lang.Object) -> allElements
    org.xbill.DNS.Cache$Element oneElement(org.xbill.DNS.Name,java.lang.Object,int,int) -> oneElement
    org.xbill.DNS.Cache$Element findElement(org.xbill.DNS.Name,int,int) -> findElement
    void addElement(org.xbill.DNS.Name,org.xbill.DNS.Cache$Element) -> addElement
    void removeElement(org.xbill.DNS.Name,int) -> removeElement
    void clearCache() -> clearCache
    void addRecord(org.xbill.DNS.Record,int,java.lang.Object) -> addRecord
    void addRRset(org.xbill.DNS.RRset,int) -> addRRset
    void addNegative(org.xbill.DNS.Name,int,org.xbill.DNS.SOARecord,int) -> addNegative
    org.xbill.DNS.SetResponse lookup(org.xbill.DNS.Name,int,int) -> lookup
    org.xbill.DNS.SetResponse lookupRecords(org.xbill.DNS.Name,int,int) -> lookupRecords
    org.xbill.DNS.RRset[] findRecords(org.xbill.DNS.Name,int,int) -> findRecords
    org.xbill.DNS.RRset[] findRecords(org.xbill.DNS.Name,int) -> findRecords
    org.xbill.DNS.RRset[] findAnyRecords(org.xbill.DNS.Name,int) -> findAnyRecords
    int getCred(int,boolean) -> getCred
    void markAdditional(org.xbill.DNS.RRset,java.util.Set) -> markAdditional
    org.xbill.DNS.SetResponse addMessage(org.xbill.DNS.Message) -> addMessage
    void flushSet(org.xbill.DNS.Name,int) -> flushSet
    void flushName(org.xbill.DNS.Name) -> flushName
    void setMaxNCache(int) -> setMaxNCache
    int getMaxNCache() -> getMaxNCache
    void setMaxCache(int) -> setMaxCache
    int getMaxCache() -> getMaxCache
    int getSize() -> getSize
    int getMaxEntries() -> getMaxEntries
    void setMaxEntries(int) -> setMaxEntries
    int getDClass() -> getDClass
    java.lang.String toString() -> toString
    int access$0(long,long) -> access$0
org.xbill.DNS.Cache$CacheMap -> org.xbill.DNS.Cache$CacheMap:
    int maxsize -> maxsize
    int getMaxSize() -> getMaxSize
    void setMaxSize(int) -> setMaxSize
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
org.xbill.DNS.Cache$CacheRRset -> org.xbill.DNS.Cache$CacheRRset:
    long serialVersionUID -> serialVersionUID
    int credibility -> credibility
    int expire -> expire
    boolean expired() -> expired
    int compareCredibility(int) -> compareCredibility
    java.lang.String toString() -> toString
org.xbill.DNS.Cache$Element -> org.xbill.DNS.Cache$Element:
    boolean expired() -> expired
    int compareCredibility(int) -> compareCredibility
    int getType() -> getType
org.xbill.DNS.Cache$NegativeElement -> org.xbill.DNS.Cache$NegativeElement:
    int type -> type
    org.xbill.DNS.Name name -> name
    int credibility -> credibility
    int expire -> expire
    int getType() -> getType
    boolean expired() -> expired
    int compareCredibility(int) -> compareCredibility
    java.lang.String toString() -> toString
org.xbill.DNS.Client -> org.xbill.DNS.Client:
    long endTime -> endTime
    java.nio.channels.SelectionKey key -> key
    void blockUntil(java.nio.channels.SelectionKey,long) -> blockUntil
    void verboseLog(java.lang.String,byte[]) -> verboseLog
    void cleanup() -> cleanup
org.xbill.DNS.Compression -> org.xbill.DNS.Compression:
    int TABLE_SIZE -> TABLE_SIZE
    int MAX_POINTER -> MAX_POINTER
    org.xbill.DNS.Compression$Entry[] table -> table
    boolean verbose -> verbose
    void add(int,org.xbill.DNS.Name) -> add
    int get(org.xbill.DNS.Name) -> get
org.xbill.DNS.Compression$Entry -> org.xbill.DNS.Compression$Entry:
    org.xbill.DNS.Name name -> name
    int pos -> pos
    org.xbill.DNS.Compression$Entry next -> next
org.xbill.DNS.Credibility -> org.xbill.DNS.Credibility:
    int HINT -> HINT
    int ADDITIONAL -> ADDITIONAL
    int GLUE -> GLUE
    int NONAUTH_AUTHORITY -> NONAUTH_AUTHORITY
    int NONAUTH_ANSWER -> NONAUTH_ANSWER
    int AUTH_AUTHORITY -> AUTH_AUTHORITY
    int AUTH_ANSWER -> AUTH_ANSWER
    int ZONE -> ZONE
    int NORMAL -> NORMAL
    int ANY -> ANY
org.xbill.DNS.DClass -> org.xbill.DNS.DClass:
    int IN -> IN
    int CH -> CH
    int CHAOS -> CHAOS
    int HS -> HS
    int HESIOD -> HESIOD
    int NONE -> NONE
    int ANY -> ANY
    org.xbill.DNS.Mnemonic classes -> classes
    void check(int) -> check
    java.lang.String string(int) -> string
    int value(java.lang.String) -> value
org.xbill.DNS.DClass$DClassMnemonic -> org.xbill.DNS.DClass$DClassMnemonic:
    void check(int) -> check
org.xbill.DNS.DHCIDRecord -> org.xbill.DNS.DHCIDRecord:
    long serialVersionUID -> serialVersionUID
    byte[] data -> data
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    java.lang.String rrToString() -> rrToString
    byte[] getData() -> getData
org.xbill.DNS.DLVRecord -> org.xbill.DNS.DLVRecord:
    int SHA1_DIGEST_ID -> SHA1_DIGEST_ID
    int SHA256_DIGEST_ID -> SHA256_DIGEST_ID
    long serialVersionUID -> serialVersionUID
    int footprint -> footprint
    int alg -> alg
    int digestid -> digestid
    byte[] digest -> digest
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    int getAlgorithm() -> getAlgorithm
    int getDigestID() -> getDigestID
    byte[] getDigest() -> getDigest
    int getFootprint() -> getFootprint
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.DNAMERecord -> org.xbill.DNS.DNAMERecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getTarget() -> getTarget
    org.xbill.DNS.Name getAlias() -> getAlias
org.xbill.DNS.DNSInput -> org.xbill.DNS.DNSInput:
    byte[] array -> array
    int pos -> pos
    int end -> end
    int saved_pos -> saved_pos
    int saved_end -> saved_end
    int current() -> current
    int remaining() -> remaining
    void require(int) -> require
    void setActive(int) -> setActive
    void clearActive() -> clearActive
    void jump(int) -> jump
    void save() -> save
    void restore() -> restore
    int readU8() -> readU8
    int readU16() -> readU16
    long readU32() -> readU32
    void readByteArray(byte[],int,int) -> readByteArray
    byte[] readByteArray(int) -> readByteArray
    byte[] readByteArray() -> readByteArray
    byte[] readCountedString() -> readCountedString
org.xbill.DNS.DNSKEYRecord -> org.xbill.DNS.DNSKEYRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    int getFlags() -> getFlags
    byte[] getKey() -> getKey
    java.security.PublicKey getPublicKey() -> getPublicKey
    int getFootprint() -> getFootprint
    int getProtocol() -> getProtocol
    int getAlgorithm() -> getAlgorithm
org.xbill.DNS.DNSKEYRecord$Flags -> org.xbill.DNS.DNSKEYRecord$Flags:
    int ZONE_KEY -> ZONE_KEY
    int SEP_KEY -> SEP_KEY
    int REVOKE -> REVOKE
org.xbill.DNS.DNSKEYRecord$Protocol -> org.xbill.DNS.DNSKEYRecord$Protocol:
    int DNSSEC -> DNSSEC
org.xbill.DNS.DNSOutput -> org.xbill.DNS.DNSOutput:
    byte[] array -> array
    int pos -> pos
    int saved_pos -> saved_pos
    int current() -> current
    void check(long,int) -> check
    void need(int) -> need
    void jump(int) -> jump
    void save() -> save
    void restore() -> restore
    void writeU8(int) -> writeU8
    void writeU16(int) -> writeU16
    void writeU32(long) -> writeU32
    void writeByteArray(byte[],int,int) -> writeByteArray
    void writeByteArray(byte[]) -> writeByteArray
    void writeCountedString(byte[]) -> writeCountedString
    byte[] toByteArray() -> toByteArray
org.xbill.DNS.DNSSEC -> org.xbill.DNS.DNSSEC:
    int ASN1_SEQ -> ASN1_SEQ
    int ASN1_INT -> ASN1_INT
    int DSA_LEN -> DSA_LEN
    void digestSIG(org.xbill.DNS.DNSOutput,org.xbill.DNS.SIGBase) -> digestSIG
    byte[] digestRRset(org.xbill.DNS.RRSIGRecord,org.xbill.DNS.RRset) -> digestRRset
    byte[] digestMessage(org.xbill.DNS.SIGRecord,org.xbill.DNS.Message,byte[]) -> digestMessage
    int BigIntegerLength(java.math.BigInteger) -> BigIntegerLength
    java.math.BigInteger readBigInteger(org.xbill.DNS.DNSInput,int) -> readBigInteger
    java.math.BigInteger readBigInteger(org.xbill.DNS.DNSInput) -> readBigInteger
    void writeBigInteger(org.xbill.DNS.DNSOutput,java.math.BigInteger) -> writeBigInteger
    java.security.PublicKey toRSAPublicKey(org.xbill.DNS.KEYBase) -> toRSAPublicKey
    java.security.PublicKey toDSAPublicKey(org.xbill.DNS.KEYBase) -> toDSAPublicKey
    java.security.PublicKey toPublicKey(org.xbill.DNS.KEYBase) -> toPublicKey
    byte[] fromRSAPublicKey(java.security.interfaces.RSAPublicKey) -> fromRSAPublicKey
    byte[] fromDSAPublicKey(java.security.interfaces.DSAPublicKey) -> fromDSAPublicKey
    byte[] fromPublicKey(java.security.PublicKey,int) -> fromPublicKey
    java.lang.String algString(int) -> algString
    byte[] DSASignaturefromDNS(byte[]) -> DSASignaturefromDNS
    byte[] DSASignaturetoDNS(byte[],int) -> DSASignaturetoDNS
    void verify(java.security.PublicKey,int,byte[],byte[]) -> verify
    boolean matches(org.xbill.DNS.SIGBase,org.xbill.DNS.KEYBase) -> matches
    void verify(org.xbill.DNS.RRset,org.xbill.DNS.RRSIGRecord,org.xbill.DNS.DNSKEYRecord) -> verify
    byte[] sign(java.security.PrivateKey,java.security.PublicKey,int,byte[]) -> sign
    void checkAlgorithm(java.security.PrivateKey,int) -> checkAlgorithm
    org.xbill.DNS.RRSIGRecord sign(org.xbill.DNS.RRset,org.xbill.DNS.DNSKEYRecord,java.security.PrivateKey,java.util.Date,java.util.Date) -> sign
    org.xbill.DNS.SIGRecord signMessage(org.xbill.DNS.Message,org.xbill.DNS.SIGRecord,org.xbill.DNS.KEYRecord,java.security.PrivateKey,java.util.Date,java.util.Date) -> signMessage
    void verifyMessage(org.xbill.DNS.Message,byte[],org.xbill.DNS.SIGRecord,org.xbill.DNS.SIGRecord,org.xbill.DNS.KEYRecord) -> verifyMessage
    byte[] generateDS(org.xbill.DNS.DNSKEYRecord,int) -> generateDS
org.xbill.DNS.DNSSEC$Algorithm -> org.xbill.DNS.DNSSEC$Algorithm:
    int RSAMD5 -> RSAMD5
    int DH -> DH
    int DSA -> DSA
    int ECC -> ECC
    int RSASHA1 -> RSASHA1
    int DSA_NSEC3_SHA1 -> DSA_NSEC3_SHA1
    int RSA_NSEC3_SHA1 -> RSA_NSEC3_SHA1
    int RSASHA256 -> RSASHA256
    int RSASHA512 -> RSASHA512
    int INDIRECT -> INDIRECT
    int PRIVATEDNS -> PRIVATEDNS
    int PRIVATEOID -> PRIVATEOID
    org.xbill.DNS.Mnemonic algs -> algs
    java.lang.String string(int) -> string
    int value(java.lang.String) -> value
org.xbill.DNS.DNSSEC$DNSSECException -> org.xbill.DNS.DNSSEC$DNSSECException:
org.xbill.DNS.DNSSEC$IncompatibleKeyException -> org.xbill.DNS.DNSSEC$IncompatibleKeyException:
org.xbill.DNS.DNSSEC$KeyMismatchException -> org.xbill.DNS.DNSSEC$KeyMismatchException:
    org.xbill.DNS.KEYBase key -> key
    org.xbill.DNS.SIGBase sig -> sig
org.xbill.DNS.DNSSEC$MalformedKeyException -> org.xbill.DNS.DNSSEC$MalformedKeyException:
org.xbill.DNS.DNSSEC$SignatureExpiredException -> org.xbill.DNS.DNSSEC$SignatureExpiredException:
    java.util.Date when -> when
    java.util.Date now -> now
    java.util.Date getExpiration() -> getExpiration
    java.util.Date getVerifyTime() -> getVerifyTime
org.xbill.DNS.DNSSEC$SignatureNotYetValidException -> org.xbill.DNS.DNSSEC$SignatureNotYetValidException:
    java.util.Date when -> when
    java.util.Date now -> now
    java.util.Date getExpiration() -> getExpiration
    java.util.Date getVerifyTime() -> getVerifyTime
org.xbill.DNS.DNSSEC$SignatureVerificationException -> org.xbill.DNS.DNSSEC$SignatureVerificationException:
org.xbill.DNS.DNSSEC$UnsupportedAlgorithmException -> org.xbill.DNS.DNSSEC$UnsupportedAlgorithmException:
org.xbill.DNS.DSRecord -> org.xbill.DNS.DSRecord:
    int SHA1_DIGEST_ID -> SHA1_DIGEST_ID
    int SHA256_DIGEST_ID -> SHA256_DIGEST_ID
    long serialVersionUID -> serialVersionUID
    int footprint -> footprint
    int alg -> alg
    int digestid -> digestid
    byte[] digest -> digest
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    int getAlgorithm() -> getAlgorithm
    int getDigestID() -> getDigestID
    byte[] getDigest() -> getDigest
    int getFootprint() -> getFootprint
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.DSRecord$Digest -> org.xbill.DNS.DSRecord$Digest:
    int SHA1 -> SHA1
    int SHA256 -> SHA256
org.xbill.DNS.EmptyRecord -> org.xbill.DNS.EmptyRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.ExtendedFlags -> org.xbill.DNS.ExtendedFlags:
    org.xbill.DNS.Mnemonic extflags -> extflags
    int DO -> DO
    java.lang.String string(int) -> string
    int value(java.lang.String) -> value
org.xbill.DNS.ExtendedResolver -> org.xbill.DNS.ExtendedResolver:
    int quantum -> quantum
    java.util.List resolvers -> resolvers
    boolean loadBalance -> loadBalance
    int lbStart -> lbStart
    int retries -> retries
    void init() -> init
    void setPort(int) -> setPort
    void setTCP(boolean) -> setTCP
    void setIgnoreTruncation(boolean) -> setIgnoreTruncation
    void setEDNS(int) -> setEDNS
    void setEDNS(int,int,int,java.util.List) -> setEDNS
    void setTSIGKey(org.xbill.DNS.TSIG) -> setTSIGKey
    void setTimeout(int,int) -> setTimeout
    void setTimeout(int) -> setTimeout
    org.xbill.DNS.Message send(org.xbill.DNS.Message) -> send
    java.lang.Object sendAsync(org.xbill.DNS.Message,org.xbill.DNS.ResolverListener) -> sendAsync
    org.xbill.DNS.Resolver getResolver(int) -> getResolver
    org.xbill.DNS.Resolver[] getResolvers() -> getResolvers
    void addResolver(org.xbill.DNS.Resolver) -> addResolver
    void deleteResolver(org.xbill.DNS.Resolver) -> deleteResolver
    void setLoadBalance(boolean) -> setLoadBalance
    void setRetries(int) -> setRetries
    java.util.List access$0(org.xbill.DNS.ExtendedResolver) -> access$0
    boolean access$1(org.xbill.DNS.ExtendedResolver) -> access$1
    int access$2(org.xbill.DNS.ExtendedResolver) -> access$2
    void access$3(org.xbill.DNS.ExtendedResolver,int) -> access$3
    int access$4(org.xbill.DNS.ExtendedResolver) -> access$4
org.xbill.DNS.ExtendedResolver$Resolution -> org.xbill.DNS.ExtendedResolver$Resolution:
    org.xbill.DNS.Resolver[] resolvers -> resolvers
    int[] sent -> sent
    java.lang.Object[] inprogress -> inprogress
    int retries -> retries
    int outstanding -> outstanding
    boolean done -> done
    org.xbill.DNS.Message query -> query
    org.xbill.DNS.Message response -> response
    java.lang.Throwable thrown -> thrown
    org.xbill.DNS.ResolverListener listener -> listener
    void send(int) -> send
    org.xbill.DNS.Message start() -> start
    void startAsync(org.xbill.DNS.ResolverListener) -> startAsync
    void receiveMessage(java.lang.Object,org.xbill.DNS.Message) -> receiveMessage
    void handleException(java.lang.Object,java.lang.Exception) -> handleException
org.xbill.DNS.Flags -> org.xbill.DNS.Flags:
    org.xbill.DNS.Mnemonic flags -> flags
    byte QR -> QR
    byte AA -> AA
    byte TC -> TC
    byte RD -> RD
    byte RA -> RA
    byte AD -> AD
    byte CD -> CD
    int DO -> DO
    java.lang.String string(int) -> string
    int value(java.lang.String) -> value
    boolean isFlag(int) -> isFlag
org.xbill.DNS.FormattedTime -> org.xbill.DNS.FormattedTime:
    java.text.NumberFormat w2 -> w2
    java.text.NumberFormat w4 -> w4
    java.lang.String format(java.util.Date) -> format
    java.util.Date parse(java.lang.String) -> parse
org.xbill.DNS.GPOSRecord -> org.xbill.DNS.GPOSRecord:
    long serialVersionUID -> serialVersionUID
    byte[] latitude -> latitude
    byte[] longitude -> longitude
    byte[] altitude -> altitude
    org.xbill.DNS.Record getObject() -> getObject
    void validate(double,double) -> validate
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    java.lang.String getLongitudeString() -> getLongitudeString
    double getLongitude() -> getLongitude
    java.lang.String getLatitudeString() -> getLatitudeString
    double getLatitude() -> getLatitude
    java.lang.String getAltitudeString() -> getAltitudeString
    double getAltitude() -> getAltitude
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.Generator -> org.xbill.DNS.Generator:
    long start -> start
    long end -> end
    long step -> step
    java.lang.String namePattern -> namePattern
    int type -> type
    int dclass -> dclass
    long ttl -> ttl
    java.lang.String rdataPattern -> rdataPattern
    org.xbill.DNS.Name origin -> origin
    long current -> current
    boolean supportedType(int) -> supportedType
    java.lang.String substitute(java.lang.String,long) -> substitute
    org.xbill.DNS.Record nextRecord() -> nextRecord
    org.xbill.DNS.Record[] expand() -> expand
    java.lang.String toString() -> toString
org.xbill.DNS.HINFORecord -> org.xbill.DNS.HINFORecord:
    long serialVersionUID -> serialVersionUID
    byte[] cpu -> cpu
    byte[] os -> os
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String getCPU() -> getCPU
    java.lang.String getOS() -> getOS
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    java.lang.String rrToString() -> rrToString
org.xbill.DNS.Header -> org.xbill.DNS.Header:
    int id -> id
    int flags -> flags
    int[] counts -> counts
    java.util.Random random -> random
    int LENGTH -> LENGTH
    void init() -> init
    void toWire(org.xbill.DNS.DNSOutput) -> toWire
    byte[] toWire() -> toWire
    boolean validFlag(int) -> validFlag
    void checkFlag(int) -> checkFlag
    void setFlag(int) -> setFlag
    void unsetFlag(int) -> unsetFlag
    boolean getFlag(int) -> getFlag
    boolean[] getFlags() -> getFlags
    int getID() -> getID
    void setID(int) -> setID
    void setRcode(int) -> setRcode
    int getRcode() -> getRcode
    void setOpcode(int) -> setOpcode
    int getOpcode() -> getOpcode
    void setCount(int,int) -> setCount
    void incCount(int) -> incCount
    void decCount(int) -> decCount
    int getCount(int) -> getCount
    java.lang.String printFlags() -> printFlags
    java.lang.String toStringWithRcode(int) -> toStringWithRcode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.xbill.DNS.IPSECKEYRecord -> org.xbill.DNS.IPSECKEYRecord:
    long serialVersionUID -> serialVersionUID
    int precedence -> precedence
    int gatewayType -> gatewayType
    int algorithmType -> algorithmType
    java.lang.Object gateway -> gateway
    byte[] key -> key
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    int getPrecedence() -> getPrecedence
    int getGatewayType() -> getGatewayType
    int getAlgorithmType() -> getAlgorithmType
    java.lang.Object getGateway() -> getGateway
    byte[] getKey() -> getKey
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.IPSECKEYRecord$Algorithm -> org.xbill.DNS.IPSECKEYRecord$Algorithm:
    int DSA -> DSA
    int RSA -> RSA
org.xbill.DNS.IPSECKEYRecord$Gateway -> org.xbill.DNS.IPSECKEYRecord$Gateway:
    int None -> None
    int IPv4 -> IPv4
    int IPv6 -> IPv6
    int Name -> Name
org.xbill.DNS.ISDNRecord -> org.xbill.DNS.ISDNRecord:
    long serialVersionUID -> serialVersionUID
    byte[] address -> address
    byte[] subAddress -> subAddress
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String getAddress() -> getAddress
    java.lang.String getSubAddress() -> getSubAddress
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    java.lang.String rrToString() -> rrToString
org.xbill.DNS.InvalidDClassException -> org.xbill.DNS.InvalidDClassException:
org.xbill.DNS.InvalidTTLException -> org.xbill.DNS.InvalidTTLException:
org.xbill.DNS.InvalidTypeException -> org.xbill.DNS.InvalidTypeException:
org.xbill.DNS.KEYBase -> org.xbill.DNS.KEYBase:
    long serialVersionUID -> serialVersionUID
    int flags -> flags
    int proto -> proto
    int alg -> alg
    byte[] key -> key
    int footprint -> footprint
    java.security.PublicKey publicKey -> publicKey
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    java.lang.String rrToString() -> rrToString
    int getFlags() -> getFlags
    int getProtocol() -> getProtocol
    int getAlgorithm() -> getAlgorithm
    byte[] getKey() -> getKey
    int getFootprint() -> getFootprint
    java.security.PublicKey getPublicKey() -> getPublicKey
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.KEYRecord -> org.xbill.DNS.KEYRecord:
    long serialVersionUID -> serialVersionUID
    int FLAG_NOCONF -> FLAG_NOCONF
    int FLAG_NOAUTH -> FLAG_NOAUTH
    int FLAG_NOKEY -> FLAG_NOKEY
    int OWNER_ZONE -> OWNER_ZONE
    int OWNER_HOST -> OWNER_HOST
    int OWNER_USER -> OWNER_USER
    int PROTOCOL_TLS -> PROTOCOL_TLS
    int PROTOCOL_EMAIL -> PROTOCOL_EMAIL
    int PROTOCOL_DNSSEC -> PROTOCOL_DNSSEC
    int PROTOCOL_IPSEC -> PROTOCOL_IPSEC
    int PROTOCOL_ANY -> PROTOCOL_ANY
    org.xbill.DNS.Record getObject() -> getObject
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    int getFlags() -> getFlags
    byte[] getKey() -> getKey
    java.security.PublicKey getPublicKey() -> getPublicKey
    int getFootprint() -> getFootprint
    int getProtocol() -> getProtocol
    int getAlgorithm() -> getAlgorithm
org.xbill.DNS.KEYRecord$Flags -> org.xbill.DNS.KEYRecord$Flags:
    int NOCONF -> NOCONF
    int NOAUTH -> NOAUTH
    int NOKEY -> NOKEY
    int USE_MASK -> USE_MASK
    int FLAG2 -> FLAG2
    int EXTEND -> EXTEND
    int FLAG4 -> FLAG4
    int FLAG5 -> FLAG5
    int USER -> USER
    int ZONE -> ZONE
    int HOST -> HOST
    int NTYP3 -> NTYP3
    int OWNER_MASK -> OWNER_MASK
    int FLAG8 -> FLAG8
    int FLAG9 -> FLAG9
    int FLAG10 -> FLAG10
    int FLAG11 -> FLAG11
    int SIG0 -> SIG0
    int SIG1 -> SIG1
    int SIG2 -> SIG2
    int SIG3 -> SIG3
    int SIG4 -> SIG4
    int SIG5 -> SIG5
    int SIG6 -> SIG6
    int SIG7 -> SIG7
    int SIG8 -> SIG8
    int SIG9 -> SIG9
    int SIG10 -> SIG10
    int SIG11 -> SIG11
    int SIG12 -> SIG12
    int SIG13 -> SIG13
    int SIG14 -> SIG14
    int SIG15 -> SIG15
    org.xbill.DNS.Mnemonic flags -> flags
    int value(java.lang.String) -> value
org.xbill.DNS.KEYRecord$Protocol -> org.xbill.DNS.KEYRecord$Protocol:
    int NONE -> NONE
    int TLS -> TLS
    int EMAIL -> EMAIL
    int DNSSEC -> DNSSEC
    int IPSEC -> IPSEC
    int ANY -> ANY
    org.xbill.DNS.Mnemonic protocols -> protocols
    java.lang.String string(int) -> string
    int value(java.lang.String) -> value
org.xbill.DNS.KXRecord -> org.xbill.DNS.KXRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getTarget() -> getTarget
    int getPreference() -> getPreference
    org.xbill.DNS.Name getAdditionalName() -> getAdditionalName
org.xbill.DNS.LOCRecord -> org.xbill.DNS.LOCRecord:
    long serialVersionUID -> serialVersionUID
    java.text.NumberFormat w2 -> w2
    java.text.NumberFormat w3 -> w3
    long size -> size
    long hPrecision -> hPrecision
    long vPrecision -> vPrecision
    long latitude -> latitude
    long longitude -> longitude
    long altitude -> altitude
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    double parseFixedPoint(java.lang.String) -> parseFixedPoint
    long parsePosition(org.xbill.DNS.Tokenizer,java.lang.String) -> parsePosition
    long parseDouble(org.xbill.DNS.Tokenizer,java.lang.String,boolean,long,long,long) -> parseDouble
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    void renderFixedPoint(java.lang.StringBuffer,java.text.NumberFormat,long,long) -> renderFixedPoint
    java.lang.String positionToString(long,char,char) -> positionToString
    java.lang.String rrToString() -> rrToString
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    double getAltitude() -> getAltitude
    double getSize() -> getSize
    double getHPrecision() -> getHPrecision
    double getVPrecision() -> getVPrecision
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    long parseLOCformat(int) -> parseLOCformat
    int toLOCformat(long) -> toLOCformat
org.xbill.DNS.Lookup -> org.xbill.DNS.Lookup:
    org.xbill.DNS.Resolver defaultResolver -> defaultResolver
    org.xbill.DNS.Name[] defaultSearchPath -> defaultSearchPath
    java.util.Map defaultCaches -> defaultCaches
    org.xbill.DNS.Resolver resolver -> resolver
    org.xbill.DNS.Name[] searchPath -> searchPath
    org.xbill.DNS.Cache cache -> cache
    boolean temporary_cache -> temporary_cache
    int credibility -> credibility
    org.xbill.DNS.Name name -> name
    int type -> type
    int dclass -> dclass
    boolean verbose -> verbose
    int iterations -> iterations
    boolean foundAlias -> foundAlias
    boolean done -> done
    boolean doneCurrent -> doneCurrent
    java.util.List aliases -> aliases
    org.xbill.DNS.Record[] answers -> answers
    int result -> result
    java.lang.String error -> error
    boolean nxdomain -> nxdomain
    boolean badresponse -> badresponse
    java.lang.String badresponse_error -> badresponse_error
    boolean networkerror -> networkerror
    boolean timedout -> timedout
    boolean nametoolong -> nametoolong
    boolean referral -> referral
    org.xbill.DNS.Name[] noAliases -> noAliases
    int SUCCESSFUL -> SUCCESSFUL
    int UNRECOVERABLE -> UNRECOVERABLE
    int TRY_AGAIN -> TRY_AGAIN
    int HOST_NOT_FOUND -> HOST_NOT_FOUND
    int TYPE_NOT_FOUND -> TYPE_NOT_FOUND
    void refreshDefault() -> refreshDefault
    org.xbill.DNS.Resolver getDefaultResolver() -> getDefaultResolver
    void setDefaultResolver(org.xbill.DNS.Resolver) -> setDefaultResolver
    org.xbill.DNS.Cache getDefaultCache(int) -> getDefaultCache
    void setDefaultCache(org.xbill.DNS.Cache,int) -> setDefaultCache
    org.xbill.DNS.Name[] getDefaultSearchPath() -> getDefaultSearchPath
    void setDefaultSearchPath(org.xbill.DNS.Name[]) -> setDefaultSearchPath
    void setDefaultSearchPath(java.lang.String[]) -> setDefaultSearchPath
    void reset() -> reset
    void setResolver(org.xbill.DNS.Resolver) -> setResolver
    void setSearchPath(org.xbill.DNS.Name[]) -> setSearchPath
    void setSearchPath(java.lang.String[]) -> setSearchPath
    void setCache(org.xbill.DNS.Cache) -> setCache
    void setCredibility(int) -> setCredibility
    void follow(org.xbill.DNS.Name,org.xbill.DNS.Name) -> follow
    void processResponse(org.xbill.DNS.Name,org.xbill.DNS.SetResponse) -> processResponse
    void lookup(org.xbill.DNS.Name) -> lookup
    void resolve(org.xbill.DNS.Name,org.xbill.DNS.Name) -> resolve
    org.xbill.DNS.Record[] run() -> run
    void checkDone() -> checkDone
    org.xbill.DNS.Record[] getAnswers() -> getAnswers
    org.xbill.DNS.Name[] getAliases() -> getAliases
    int getResult() -> getResult
    java.lang.String getErrorString() -> getErrorString
org.xbill.DNS.MBRecord -> org.xbill.DNS.MBRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getMailbox() -> getMailbox
    org.xbill.DNS.Name getAdditionalName() -> getAdditionalName
org.xbill.DNS.MDRecord -> org.xbill.DNS.MDRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getMailAgent() -> getMailAgent
    org.xbill.DNS.Name getAdditionalName() -> getAdditionalName
org.xbill.DNS.MFRecord -> org.xbill.DNS.MFRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getMailAgent() -> getMailAgent
    org.xbill.DNS.Name getAdditionalName() -> getAdditionalName
org.xbill.DNS.MGRecord -> org.xbill.DNS.MGRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getMailbox() -> getMailbox
org.xbill.DNS.MINFORecord -> org.xbill.DNS.MINFORecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Name responsibleAddress -> responsibleAddress
    org.xbill.DNS.Name errorAddress -> errorAddress
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    org.xbill.DNS.Name getResponsibleAddress() -> getResponsibleAddress
    org.xbill.DNS.Name getErrorAddress() -> getErrorAddress
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.MRRecord -> org.xbill.DNS.MRRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getNewName() -> getNewName
org.xbill.DNS.MXRecord -> org.xbill.DNS.MXRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getTarget() -> getTarget
    int getPriority() -> getPriority
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    org.xbill.DNS.Name getAdditionalName() -> getAdditionalName
org.xbill.DNS.Master -> org.xbill.DNS.Master:
    org.xbill.DNS.Name origin -> origin
    java.io.File file -> file
    org.xbill.DNS.Record last -> last
    long defaultTTL -> defaultTTL
    org.xbill.DNS.Master included -> included
    org.xbill.DNS.Tokenizer st -> st
    int currentType -> currentType
    int currentDClass -> currentDClass
    long currentTTL -> currentTTL
    boolean needSOATTL -> needSOATTL
    org.xbill.DNS.Generator generator -> generator
    java.util.List generators -> generators
    boolean noExpandGenerate -> noExpandGenerate
    org.xbill.DNS.Name parseName(java.lang.String,org.xbill.DNS.Name) -> parseName
    void parseTTLClassAndType() -> parseTTLClassAndType
    long parseUInt32(java.lang.String) -> parseUInt32
    void startGenerate() -> startGenerate
    void endGenerate() -> endGenerate
    org.xbill.DNS.Record nextGenerated() -> nextGenerated
    org.xbill.DNS.Record _nextRecord() -> _nextRecord
    org.xbill.DNS.Record nextRecord() -> nextRecord
    void expandGenerate(boolean) -> expandGenerate
    java.util.Iterator generators() -> generators
    void finalize() -> finalize
org.xbill.DNS.Message -> org.xbill.DNS.Message:
    int MAXLENGTH -> MAXLENGTH
    org.xbill.DNS.Header header -> header
    java.util.List[] sections -> sections
    int size -> size
    org.xbill.DNS.TSIG tsigkey -> tsigkey
    org.xbill.DNS.TSIGRecord querytsig -> querytsig
    int tsigerror -> tsigerror
    int tsigstart -> tsigstart
    int tsigState -> tsigState
    int sig0start -> sig0start
    int TSIG_UNSIGNED -> TSIG_UNSIGNED
    int TSIG_VERIFIED -> TSIG_VERIFIED
    int TSIG_INTERMEDIATE -> TSIG_INTERMEDIATE
    int TSIG_SIGNED -> TSIG_SIGNED
    int TSIG_FAILED -> TSIG_FAILED
    org.xbill.DNS.Record[] emptyRecordArray -> emptyRecordArray
    org.xbill.DNS.RRset[] emptyRRsetArray -> emptyRRsetArray
    org.xbill.DNS.Message newQuery(org.xbill.DNS.Record) -> newQuery
    org.xbill.DNS.Message newUpdate(org.xbill.DNS.Name) -> newUpdate
    void setHeader(org.xbill.DNS.Header) -> setHeader
    org.xbill.DNS.Header getHeader() -> getHeader
    void addRecord(org.xbill.DNS.Record,int) -> addRecord
    boolean removeRecord(org.xbill.DNS.Record,int) -> removeRecord
    void removeAllRecords(int) -> removeAllRecords
    boolean findRecord(org.xbill.DNS.Record,int) -> findRecord
    boolean findRecord(org.xbill.DNS.Record) -> findRecord
    boolean findRRset(org.xbill.DNS.Name,int,int) -> findRRset
    boolean findRRset(org.xbill.DNS.Name,int) -> findRRset
    org.xbill.DNS.Record getQuestion() -> getQuestion
    org.xbill.DNS.TSIGRecord getTSIG() -> getTSIG
    boolean isSigned() -> isSigned
    boolean isVerified() -> isVerified
    org.xbill.DNS.OPTRecord getOPT() -> getOPT
    int getRcode() -> getRcode
    org.xbill.DNS.Record[] getSectionArray(int) -> getSectionArray
    boolean sameSet(org.xbill.DNS.Record,org.xbill.DNS.Record) -> sameSet
    org.xbill.DNS.RRset[] getSectionRRsets(int) -> getSectionRRsets
    void toWire(org.xbill.DNS.DNSOutput) -> toWire
    int sectionToWire(org.xbill.DNS.DNSOutput,int,org.xbill.DNS.Compression,int) -> sectionToWire
    boolean toWire(org.xbill.DNS.DNSOutput,int) -> toWire
    byte[] toWire() -> toWire
    byte[] toWire(int) -> toWire
    void setTSIG(org.xbill.DNS.TSIG,int,org.xbill.DNS.TSIGRecord) -> setTSIG
    int numBytes() -> numBytes
    java.lang.String sectionToString(int) -> sectionToString
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.xbill.DNS.Mnemonic -> org.xbill.DNS.Mnemonic:
    java.lang.Integer[] cachedInts -> cachedInts
    int CASE_SENSITIVE -> CASE_SENSITIVE
    int CASE_UPPER -> CASE_UPPER
    int CASE_LOWER -> CASE_LOWER
    java.util.HashMap strings -> strings
    java.util.HashMap values -> values
    java.lang.String description -> description
    int wordcase -> wordcase
    java.lang.String prefix -> prefix
    int max -> max
    boolean numericok -> numericok
    void setMaximum(int) -> setMaximum
    void setPrefix(java.lang.String) -> setPrefix
    void setNumericAllowed(boolean) -> setNumericAllowed
    java.lang.Integer toInteger(int) -> toInteger
    void check(int) -> check
    java.lang.String sanitize(java.lang.String) -> sanitize
    int parseNumeric(java.lang.String) -> parseNumeric
    void add(int,java.lang.String) -> add
    void addAlias(int,java.lang.String) -> addAlias
    void addAll(org.xbill.DNS.Mnemonic) -> addAll
    java.lang.String getText(int) -> getText
    int getValue(java.lang.String) -> getValue
org.xbill.DNS.NAPTRRecord -> org.xbill.DNS.NAPTRRecord:
    long serialVersionUID -> serialVersionUID
    int order -> order
    int preference -> preference
    byte[] flags -> flags
    byte[] service -> service
    byte[] regexp -> regexp
    org.xbill.DNS.Name replacement -> replacement
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    int getOrder() -> getOrder
    int getPreference() -> getPreference
    java.lang.String getFlags() -> getFlags
    java.lang.String getService() -> getService
    java.lang.String getRegexp() -> getRegexp
    org.xbill.DNS.Name getReplacement() -> getReplacement
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    org.xbill.DNS.Name getAdditionalName() -> getAdditionalName
org.xbill.DNS.NSAPRecord -> org.xbill.DNS.NSAPRecord:
    long serialVersionUID -> serialVersionUID
    byte[] address -> address
    org.xbill.DNS.Record getObject() -> getObject
    byte[] checkAndConvertAddress(java.lang.String) -> checkAndConvertAddress
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String getAddress() -> getAddress
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    java.lang.String rrToString() -> rrToString
org.xbill.DNS.NSAP_PTRRecord -> org.xbill.DNS.NSAP_PTRRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getTarget() -> getTarget
org.xbill.DNS.NSEC3PARAMRecord -> org.xbill.DNS.NSEC3PARAMRecord:
    long serialVersionUID -> serialVersionUID
    int hashAlg -> hashAlg
    int flags -> flags
    int iterations -> iterations
    byte[] salt -> salt
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    int getHashAlgorithm() -> getHashAlgorithm
    int getFlags() -> getFlags
    int getIterations() -> getIterations
    byte[] getSalt() -> getSalt
    byte[] hashName(org.xbill.DNS.Name) -> hashName
org.xbill.DNS.NSEC3Record -> org.xbill.DNS.NSEC3Record:
    int SHA1_DIGEST_ID -> SHA1_DIGEST_ID
    long serialVersionUID -> serialVersionUID
    int hashAlg -> hashAlg
    int flags -> flags
    int iterations -> iterations
    byte[] salt -> salt
    byte[] next -> next
    org.xbill.DNS.TypeBitmap types -> types
    org.xbill.DNS.utils.base32 b32 -> b32
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    int getHashAlgorithm() -> getHashAlgorithm
    int getFlags() -> getFlags
    int getIterations() -> getIterations
    byte[] getSalt() -> getSalt
    byte[] getNext() -> getNext
    int[] getTypes() -> getTypes
    boolean hasType(int) -> hasType
    byte[] hashName(org.xbill.DNS.Name,int,int,byte[]) -> hashName
    byte[] hashName(org.xbill.DNS.Name) -> hashName
org.xbill.DNS.NSEC3Record$Digest -> org.xbill.DNS.NSEC3Record$Digest:
    int SHA1 -> SHA1
org.xbill.DNS.NSEC3Record$Flags -> org.xbill.DNS.NSEC3Record$Flags:
    int OPT_OUT -> OPT_OUT
org.xbill.DNS.NSECRecord -> org.xbill.DNS.NSECRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Name next -> next
    org.xbill.DNS.TypeBitmap types -> types
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    org.xbill.DNS.Name getNext() -> getNext
    int[] getTypes() -> getTypes
    boolean hasType(int) -> hasType
org.xbill.DNS.NSRecord -> org.xbill.DNS.NSRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getTarget() -> getTarget
    org.xbill.DNS.Name getAdditionalName() -> getAdditionalName
org.xbill.DNS.NULLRecord -> org.xbill.DNS.NULLRecord:
    long serialVersionUID -> serialVersionUID
    byte[] data -> data
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    byte[] getData() -> getData
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.NXTRecord -> org.xbill.DNS.NXTRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Name next -> next
    java.util.BitSet bitmap -> bitmap
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    org.xbill.DNS.Name getNext() -> getNext
    java.util.BitSet getBitmap() -> getBitmap
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.Name -> org.xbill.DNS.Name:
    long serialVersionUID -> serialVersionUID
    int LABEL_NORMAL -> LABEL_NORMAL
    int LABEL_COMPRESSION -> LABEL_COMPRESSION
    int LABEL_MASK -> LABEL_MASK
    byte[] name -> name
    long offsets -> offsets
    int hashcode -> hashcode
    byte[] emptyLabel -> emptyLabel
    byte[] wildLabel -> wildLabel
    org.xbill.DNS.Name root -> root
    org.xbill.DNS.Name empty -> empty
    int MAXNAME -> MAXNAME
    int MAXLABEL -> MAXLABEL
    int MAXLABELS -> MAXLABELS
    int MAXOFFSETS -> MAXOFFSETS
    java.text.DecimalFormat byteFormat -> byteFormat
    byte[] lowercase -> lowercase
    org.xbill.DNS.Name wild -> wild
    void setoffset(int,int) -> setoffset
    int offset(int) -> offset
    void setlabels(int) -> setlabels
    int getlabels() -> getlabels
    void copy(org.xbill.DNS.Name,org.xbill.DNS.Name) -> copy
    void append(byte[],int,int) -> append
    org.xbill.DNS.TextParseException parseException(java.lang.String,java.lang.String) -> parseException
    void appendFromString(java.lang.String,byte[],int,int) -> appendFromString
    void appendSafe(byte[],int,int) -> appendSafe
    org.xbill.DNS.Name fromString(java.lang.String,org.xbill.DNS.Name) -> fromString
    org.xbill.DNS.Name fromString(java.lang.String) -> fromString
    org.xbill.DNS.Name fromConstantString(java.lang.String) -> fromConstantString
    org.xbill.DNS.Name concatenate(org.xbill.DNS.Name,org.xbill.DNS.Name) -> concatenate
    org.xbill.DNS.Name relativize(org.xbill.DNS.Name) -> relativize
    org.xbill.DNS.Name wild(int) -> wild
    org.xbill.DNS.Name fromDNAME(org.xbill.DNS.DNAMERecord) -> fromDNAME
    boolean isWild() -> isWild
    boolean isAbsolute() -> isAbsolute
    short length() -> length
    int labels() -> labels
    boolean subdomain(org.xbill.DNS.Name) -> subdomain
    java.lang.String byteString(byte[],int) -> byteString
    java.lang.String toString() -> toString
    byte[] getLabel(int) -> getLabel
    java.lang.String getLabelString(int) -> getLabelString
    void toWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression) -> toWire
    byte[] toWire() -> toWire
    void toWireCanonical(org.xbill.DNS.DNSOutput) -> toWireCanonical
    byte[] toWireCanonical() -> toWireCanonical
    void toWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> toWire
    boolean equals(byte[],int) -> equals
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
org.xbill.DNS.NameTooLongException -> org.xbill.DNS.NameTooLongException:
org.xbill.DNS.OPTRecord -> org.xbill.DNS.OPTRecord:
    long serialVersionUID -> serialVersionUID
    java.util.List options -> options
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    int getPayloadSize() -> getPayloadSize
    int getExtendedRcode() -> getExtendedRcode
    int getVersion() -> getVersion
    int getFlags() -> getFlags
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    java.util.List getOptions() -> getOptions
    java.util.List getOptions(int) -> getOptions
org.xbill.DNS.OPTRecord$Option -> org.xbill.DNS.OPTRecord$Option:
    int code -> code
    byte[] data -> data
    java.lang.String toString() -> toString
org.xbill.DNS.Opcode -> org.xbill.DNS.Opcode:
    int QUERY -> QUERY
    int IQUERY -> IQUERY
    int STATUS -> STATUS
    int NOTIFY -> NOTIFY
    int UPDATE -> UPDATE
    org.xbill.DNS.Mnemonic opcodes -> opcodes
    java.lang.String string(int) -> string
    int value(java.lang.String) -> value
org.xbill.DNS.Options -> org.xbill.DNS.Options:
    java.util.Map table -> table
    void refresh() -> refresh
    void clear() -> clear
    void set(java.lang.String) -> set
    void set(java.lang.String,java.lang.String) -> set
    void unset(java.lang.String) -> unset
    boolean check(java.lang.String) -> check
    java.lang.String value(java.lang.String) -> value
    int intValue(java.lang.String) -> intValue
org.xbill.DNS.PTRRecord -> org.xbill.DNS.PTRRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getTarget() -> getTarget
org.xbill.DNS.PXRecord -> org.xbill.DNS.PXRecord:
    long serialVersionUID -> serialVersionUID
    int preference -> preference
    org.xbill.DNS.Name map822 -> map822
    org.xbill.DNS.Name mapX400 -> mapX400
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    int getPreference() -> getPreference
    org.xbill.DNS.Name getMap822() -> getMap822
    org.xbill.DNS.Name getMapX400() -> getMapX400
org.xbill.DNS.RPRecord -> org.xbill.DNS.RPRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Name mailbox -> mailbox
    org.xbill.DNS.Name textDomain -> textDomain
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    org.xbill.DNS.Name getMailbox() -> getMailbox
    org.xbill.DNS.Name getTextDomain() -> getTextDomain
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.RRSIGRecord -> org.xbill.DNS.RRSIGRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getSigner() -> getSigner
    int getFootprint() -> getFootprint
    long getOrigTTL() -> getOrigTTL
    int getLabels() -> getLabels
    java.util.Date getExpire() -> getExpire
    byte[] getSignature() -> getSignature
    int getTypeCovered() -> getTypeCovered
    java.util.Date getTimeSigned() -> getTimeSigned
    int getAlgorithm() -> getAlgorithm
org.xbill.DNS.RRset -> org.xbill.DNS.RRset:
    long serialVersionUID -> serialVersionUID
    java.util.List rrs -> rrs
    short nsigs -> nsigs
    short position -> position
    void safeAddRR(org.xbill.DNS.Record) -> safeAddRR
    void addRR(org.xbill.DNS.Record) -> addRR
    void deleteRR(org.xbill.DNS.Record) -> deleteRR
    void clear() -> clear
    java.util.Iterator iterator(boolean,boolean) -> iterator
    java.util.Iterator rrs(boolean) -> rrs
    java.util.Iterator rrs() -> rrs
    java.util.Iterator sigs() -> sigs
    int size() -> size
    org.xbill.DNS.Name getName() -> getName
    int getType() -> getType
    int getDClass() -> getDClass
    long getTTL() -> getTTL
    org.xbill.DNS.Record first() -> first
    java.lang.String iteratorToString(java.util.Iterator) -> iteratorToString
    java.lang.String toString() -> toString
org.xbill.DNS.RTRecord -> org.xbill.DNS.RTRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    int getPreference() -> getPreference
    org.xbill.DNS.Name getIntermediateHost() -> getIntermediateHost
org.xbill.DNS.Rcode -> org.xbill.DNS.Rcode:
    org.xbill.DNS.Mnemonic rcodes -> rcodes
    org.xbill.DNS.Mnemonic tsigrcodes -> tsigrcodes
    int NOERROR -> NOERROR
    int FORMERR -> FORMERR
    int SERVFAIL -> SERVFAIL
    int NXDOMAIN -> NXDOMAIN
    int NOTIMP -> NOTIMP
    int NOTIMPL -> NOTIMPL
    int REFUSED -> REFUSED
    int YXDOMAIN -> YXDOMAIN
    int YXRRSET -> YXRRSET
    int NXRRSET -> NXRRSET
    int NOTAUTH -> NOTAUTH
    int NOTZONE -> NOTZONE
    int BADVERS -> BADVERS
    int BADSIG -> BADSIG
    int BADKEY -> BADKEY
    int BADTIME -> BADTIME
    int BADMODE -> BADMODE
    java.lang.String string(int) -> string
    java.lang.String TSIGstring(int) -> TSIGstring
    int value(java.lang.String) -> value
org.xbill.DNS.Record -> org.xbill.DNS.Record:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Name name -> name
    int type -> type
    int dclass -> dclass
    long ttl -> ttl
    java.text.DecimalFormat byteFormat -> byteFormat
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Record getEmptyRecord(org.xbill.DNS.Name,int,int,long,boolean) -> getEmptyRecord
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    org.xbill.DNS.Record newRecord(org.xbill.DNS.Name,int,int,long,int,org.xbill.DNS.DNSInput) -> newRecord
    org.xbill.DNS.Record newRecord(org.xbill.DNS.Name,int,int,long,int,byte[]) -> newRecord
    org.xbill.DNS.Record newRecord(org.xbill.DNS.Name,int,int,long,byte[]) -> newRecord
    org.xbill.DNS.Record newRecord(org.xbill.DNS.Name,int,int,long) -> newRecord
    org.xbill.DNS.Record newRecord(org.xbill.DNS.Name,int,int) -> newRecord
    org.xbill.DNS.Record fromWire(org.xbill.DNS.DNSInput,int,boolean) -> fromWire
    org.xbill.DNS.Record fromWire(org.xbill.DNS.DNSInput,int) -> fromWire
    org.xbill.DNS.Record fromWire(byte[],int) -> fromWire
    void toWire(org.xbill.DNS.DNSOutput,int,org.xbill.DNS.Compression) -> toWire
    byte[] toWire(int) -> toWire
    void toWireCanonical(org.xbill.DNS.DNSOutput,boolean) -> toWireCanonical
    byte[] toWireCanonical(boolean) -> toWireCanonical
    byte[] toWireCanonical() -> toWireCanonical
    byte[] rdataToWireCanonical() -> rdataToWireCanonical
    java.lang.String rrToString() -> rrToString
    java.lang.String rdataToString() -> rdataToString
    java.lang.String toString() -> toString
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    byte[] byteArrayFromString(java.lang.String) -> byteArrayFromString
    java.lang.String byteArrayToString(byte[],boolean) -> byteArrayToString
    java.lang.String unknownToString(byte[]) -> unknownToString
    org.xbill.DNS.Record fromString(org.xbill.DNS.Name,int,int,long,org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> fromString
    org.xbill.DNS.Record fromString(org.xbill.DNS.Name,int,int,long,java.lang.String,org.xbill.DNS.Name) -> fromString
    org.xbill.DNS.Name getName() -> getName
    int getType() -> getType
    int getRRsetType() -> getRRsetType
    int getDClass() -> getDClass
    long getTTL() -> getTTL
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    boolean sameRRset(org.xbill.DNS.Record) -> sameRRset
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.xbill.DNS.Record cloneRecord() -> cloneRecord
    org.xbill.DNS.Record withName(org.xbill.DNS.Name) -> withName
    org.xbill.DNS.Record withDClass(int,long) -> withDClass
    void setTTL(long) -> setTTL
    int compareTo(java.lang.Object) -> compareTo
    org.xbill.DNS.Name getAdditionalName() -> getAdditionalName
    int checkU8(java.lang.String,int) -> checkU8
    int checkU16(java.lang.String,int) -> checkU16
    long checkU32(java.lang.String,long) -> checkU32
    org.xbill.DNS.Name checkName(java.lang.String,org.xbill.DNS.Name) -> checkName
org.xbill.DNS.RelativeNameException -> org.xbill.DNS.RelativeNameException:
org.xbill.DNS.ResolveThread -> org.xbill.DNS.ResolveThread:
    org.xbill.DNS.Message query -> query
    java.lang.Object id -> id
    org.xbill.DNS.ResolverListener listener -> listener
    org.xbill.DNS.Resolver res -> res
    void run() -> run
org.xbill.DNS.Resolver -> org.xbill.DNS.Resolver:
    void setPort(int) -> setPort
    void setTCP(boolean) -> setTCP
    void setIgnoreTruncation(boolean) -> setIgnoreTruncation
    void setEDNS(int) -> setEDNS
    void setEDNS(int,int,int,java.util.List) -> setEDNS
    void setTSIGKey(org.xbill.DNS.TSIG) -> setTSIGKey
    void setTimeout(int,int) -> setTimeout
    void setTimeout(int) -> setTimeout
    org.xbill.DNS.Message send(org.xbill.DNS.Message) -> send
    java.lang.Object sendAsync(org.xbill.DNS.Message,org.xbill.DNS.ResolverListener) -> sendAsync
org.xbill.DNS.ResolverConfig -> org.xbill.DNS.ResolverConfig:
    java.lang.String[] servers -> servers
    org.xbill.DNS.Name[] searchlist -> searchlist
    org.xbill.DNS.ResolverConfig currentConfig -> currentConfig
    void addServer(java.lang.String,java.util.List) -> addServer
    void addSearch(java.lang.String,java.util.List) -> addSearch
    void configureFromLists(java.util.List,java.util.List) -> configureFromLists
    boolean findProperty() -> findProperty
    boolean findSunJVM() -> findSunJVM
    void findResolvConf(java.lang.String) -> findResolvConf
    void findUnix() -> findUnix
    void findNetware() -> findNetware
    void findWin(java.io.InputStream) -> findWin
    void find95() -> find95
    void findNT() -> findNT
    void findAndroid() -> findAndroid
    java.lang.String[] servers() -> servers
    java.lang.String server() -> server
    org.xbill.DNS.Name[] searchPath() -> searchPath
    org.xbill.DNS.ResolverConfig getCurrentConfig() -> getCurrentConfig
    void refresh() -> refresh
org.xbill.DNS.ResolverListener -> org.xbill.DNS.ResolverListener:
    void receiveMessage(java.lang.Object,org.xbill.DNS.Message) -> receiveMessage
    void handleException(java.lang.Object,java.lang.Exception) -> handleException
org.xbill.DNS.ReverseMap -> org.xbill.DNS.ReverseMap:
    org.xbill.DNS.Name inaddr4 -> inaddr4
    org.xbill.DNS.Name inaddr6 -> inaddr6
    org.xbill.DNS.Name fromAddress(byte[]) -> fromAddress
    org.xbill.DNS.Name fromAddress(int[]) -> fromAddress
    org.xbill.DNS.Name fromAddress(java.net.InetAddress) -> fromAddress
    org.xbill.DNS.Name fromAddress(java.lang.String,int) -> fromAddress
    org.xbill.DNS.Name fromAddress(java.lang.String) -> fromAddress
org.xbill.DNS.SIG0 -> org.xbill.DNS.SIG0:
    short VALIDITY -> VALIDITY
    void signMessage(org.xbill.DNS.Message,org.xbill.DNS.KEYRecord,java.security.PrivateKey,org.xbill.DNS.SIGRecord) -> signMessage
    void verifyMessage(org.xbill.DNS.Message,byte[],org.xbill.DNS.KEYRecord,org.xbill.DNS.SIGRecord) -> verifyMessage
org.xbill.DNS.SIGBase -> org.xbill.DNS.SIGBase:
    long serialVersionUID -> serialVersionUID
    int covered -> covered
    int alg -> alg
    int labels -> labels
    long origttl -> origttl
    java.util.Date expire -> expire
    java.util.Date timeSigned -> timeSigned
    int footprint -> footprint
    org.xbill.DNS.Name signer -> signer
    byte[] signature -> signature
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    int getTypeCovered() -> getTypeCovered
    int getAlgorithm() -> getAlgorithm
    int getLabels() -> getLabels
    long getOrigTTL() -> getOrigTTL
    java.util.Date getExpire() -> getExpire
    java.util.Date getTimeSigned() -> getTimeSigned
    int getFootprint() -> getFootprint
    org.xbill.DNS.Name getSigner() -> getSigner
    byte[] getSignature() -> getSignature
    void setSignature(byte[]) -> setSignature
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.SIGRecord -> org.xbill.DNS.SIGRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    org.xbill.DNS.Name getSigner() -> getSigner
    int getFootprint() -> getFootprint
    long getOrigTTL() -> getOrigTTL
    int getLabels() -> getLabels
    java.util.Date getExpire() -> getExpire
    byte[] getSignature() -> getSignature
    int getTypeCovered() -> getTypeCovered
    java.util.Date getTimeSigned() -> getTimeSigned
    int getAlgorithm() -> getAlgorithm
org.xbill.DNS.SOARecord -> org.xbill.DNS.SOARecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Name host -> host
    org.xbill.DNS.Name admin -> admin
    long serial -> serial
    long refresh -> refresh
    long retry -> retry
    long expire -> expire
    long minimum -> minimum
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    org.xbill.DNS.Name getHost() -> getHost
    org.xbill.DNS.Name getAdmin() -> getAdmin
    long getSerial() -> getSerial
    long getRefresh() -> getRefresh
    long getRetry() -> getRetry
    long getExpire() -> getExpire
    long getMinimum() -> getMinimum
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.SPFRecord -> org.xbill.DNS.SPFRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    java.util.List getStringsAsByteArrays() -> getStringsAsByteArrays
    java.util.List getStrings() -> getStrings
org.xbill.DNS.SRVRecord -> org.xbill.DNS.SRVRecord:
    long serialVersionUID -> serialVersionUID
    int priority -> priority
    int weight -> weight
    int port -> port
    org.xbill.DNS.Name target -> target
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    int getPriority() -> getPriority
    int getWeight() -> getWeight
    int getPort() -> getPort
    org.xbill.DNS.Name getTarget() -> getTarget
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    org.xbill.DNS.Name getAdditionalName() -> getAdditionalName
org.xbill.DNS.SSHFPRecord -> org.xbill.DNS.SSHFPRecord:
    long serialVersionUID -> serialVersionUID
    int alg -> alg
    int digestType -> digestType
    byte[] fingerprint -> fingerprint
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    int getAlgorithm() -> getAlgorithm
    int getDigestType() -> getDigestType
    byte[] getFingerPrint() -> getFingerPrint
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.SSHFPRecord$Algorithm -> org.xbill.DNS.SSHFPRecord$Algorithm:
    int RSA -> RSA
    int DSS -> DSS
org.xbill.DNS.SSHFPRecord$Digest -> org.xbill.DNS.SSHFPRecord$Digest:
    int SHA1 -> SHA1
org.xbill.DNS.Section -> org.xbill.DNS.Section:
    int QUESTION -> QUESTION
    int ANSWER -> ANSWER
    int AUTHORITY -> AUTHORITY
    int ADDITIONAL -> ADDITIONAL
    int ZONE -> ZONE
    int PREREQ -> PREREQ
    int UPDATE -> UPDATE
    org.xbill.DNS.Mnemonic sections -> sections
    java.lang.String[] longSections -> longSections
    java.lang.String[] updateSections -> updateSections
    java.lang.String string(int) -> string
    java.lang.String longString(int) -> longString
    java.lang.String updString(int) -> updString
    int value(java.lang.String) -> value
org.xbill.DNS.Serial -> org.xbill.DNS.Serial:
    long MAX32 -> MAX32
    int compare(long,long) -> compare
    long increment(long) -> increment
org.xbill.DNS.SetResponse -> org.xbill.DNS.SetResponse:
    int UNKNOWN -> UNKNOWN
    int NXDOMAIN -> NXDOMAIN
    int NXRRSET -> NXRRSET
    int DELEGATION -> DELEGATION
    int CNAME -> CNAME
    int DNAME -> DNAME
    int SUCCESSFUL -> SUCCESSFUL
    org.xbill.DNS.SetResponse unknown -> unknown
    org.xbill.DNS.SetResponse nxdomain -> nxdomain
    org.xbill.DNS.SetResponse nxrrset -> nxrrset
    int type -> type
    java.lang.Object data -> data
    org.xbill.DNS.SetResponse ofType(int) -> ofType
    void addRRset(org.xbill.DNS.RRset) -> addRRset
    boolean isUnknown() -> isUnknown
    boolean isNXDOMAIN() -> isNXDOMAIN
    boolean isNXRRSET() -> isNXRRSET
    boolean isDelegation() -> isDelegation
    boolean isCNAME() -> isCNAME
    boolean isDNAME() -> isDNAME
    boolean isSuccessful() -> isSuccessful
    org.xbill.DNS.RRset[] answers() -> answers
    org.xbill.DNS.CNAMERecord getCNAME() -> getCNAME
    org.xbill.DNS.DNAMERecord getDNAME() -> getDNAME
    org.xbill.DNS.RRset getNS() -> getNS
    java.lang.String toString() -> toString
org.xbill.DNS.SimpleResolver -> org.xbill.DNS.SimpleResolver:
    int DEFAULT_PORT -> DEFAULT_PORT
    int DEFAULT_EDNS_PAYLOADSIZE -> DEFAULT_EDNS_PAYLOADSIZE
    java.net.InetSocketAddress address -> address
    java.net.InetSocketAddress localAddress -> localAddress
    boolean useTCP -> useTCP
    boolean ignoreTruncation -> ignoreTruncation
    org.xbill.DNS.OPTRecord queryOPT -> queryOPT
    org.xbill.DNS.TSIG tsig -> tsig
    long timeoutValue -> timeoutValue
    short DEFAULT_UDPSIZE -> DEFAULT_UDPSIZE
    java.lang.String defaultResolver -> defaultResolver
    int uniqueID -> uniqueID
    java.net.InetSocketAddress getAddress() -> getAddress
    void setDefaultResolver(java.lang.String) -> setDefaultResolver
    void setPort(int) -> setPort
    void setAddress(java.net.InetSocketAddress) -> setAddress
    void setAddress(java.net.InetAddress) -> setAddress
    void setLocalAddress(java.net.InetSocketAddress) -> setLocalAddress
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    void setTCP(boolean) -> setTCP
    void setIgnoreTruncation(boolean) -> setIgnoreTruncation
    void setEDNS(int,int,int,java.util.List) -> setEDNS
    void setEDNS(int) -> setEDNS
    void setTSIGKey(org.xbill.DNS.TSIG) -> setTSIGKey
    org.xbill.DNS.TSIG getTSIGKey() -> getTSIGKey
    void setTimeout(int,int) -> setTimeout
    void setTimeout(int) -> setTimeout
    long getTimeout() -> getTimeout
    org.xbill.DNS.Message parseMessage(byte[]) -> parseMessage
    void verifyTSIG(org.xbill.DNS.Message,org.xbill.DNS.Message,byte[],org.xbill.DNS.TSIG) -> verifyTSIG
    void applyEDNS(org.xbill.DNS.Message) -> applyEDNS
    int maxUDPSize(org.xbill.DNS.Message) -> maxUDPSize
    org.xbill.DNS.Message send(org.xbill.DNS.Message) -> send
    java.lang.Object sendAsync(org.xbill.DNS.Message,org.xbill.DNS.ResolverListener) -> sendAsync
    org.xbill.DNS.Message sendAXFR(org.xbill.DNS.Message) -> sendAXFR
org.xbill.DNS.SingleCompressedNameBase -> org.xbill.DNS.SingleCompressedNameBase:
    long serialVersionUID -> serialVersionUID
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.SingleNameBase -> org.xbill.DNS.SingleNameBase:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Name singleName -> singleName
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    org.xbill.DNS.Name getSingleName() -> getSingleName
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.TCPClient -> org.xbill.DNS.TCPClient:
    void bind(java.net.SocketAddress) -> bind
    void connect(java.net.SocketAddress) -> connect
    void send(byte[]) -> send
    byte[] _recv(int) -> _recv
    byte[] recv() -> recv
    byte[] sendrecv(java.net.SocketAddress,java.net.SocketAddress,byte[],long) -> sendrecv
    byte[] sendrecv(java.net.SocketAddress,byte[],long) -> sendrecv
org.xbill.DNS.TKEYRecord -> org.xbill.DNS.TKEYRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Name alg -> alg
    java.util.Date timeInception -> timeInception
    java.util.Date timeExpire -> timeExpire
    int mode -> mode
    int error -> error
    byte[] key -> key
    byte[] other -> other
    int SERVERASSIGNED -> SERVERASSIGNED
    int DIFFIEHELLMAN -> DIFFIEHELLMAN
    int GSSAPI -> GSSAPI
    int RESOLVERASSIGNED -> RESOLVERASSIGNED
    int DELETE -> DELETE
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String modeString() -> modeString
    java.lang.String rrToString() -> rrToString
    org.xbill.DNS.Name getAlgorithm() -> getAlgorithm
    java.util.Date getTimeInception() -> getTimeInception
    java.util.Date getTimeExpire() -> getTimeExpire
    int getMode() -> getMode
    int getError() -> getError
    byte[] getKey() -> getKey
    byte[] getOther() -> getOther
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.TSIG -> org.xbill.DNS.TSIG:
    java.lang.String HMAC_MD5_STR -> HMAC_MD5_STR
    java.lang.String HMAC_SHA1_STR -> HMAC_SHA1_STR
    java.lang.String HMAC_SHA256_STR -> HMAC_SHA256_STR
    org.xbill.DNS.Name HMAC_MD5 -> HMAC_MD5
    org.xbill.DNS.Name HMAC -> HMAC
    org.xbill.DNS.Name HMAC_SHA1 -> HMAC_SHA1
    org.xbill.DNS.Name HMAC_SHA256 -> HMAC_SHA256
    short FUDGE -> FUDGE
    org.xbill.DNS.Name name -> name
    org.xbill.DNS.Name alg -> alg
    java.lang.String digest -> digest
    byte[] key -> key
    void getDigest() -> getDigest
    org.xbill.DNS.TSIG fromString(java.lang.String) -> fromString
    org.xbill.DNS.TSIGRecord generate(org.xbill.DNS.Message,byte[],int,org.xbill.DNS.TSIGRecord) -> generate
    void apply(org.xbill.DNS.Message,int,org.xbill.DNS.TSIGRecord) -> apply
    void apply(org.xbill.DNS.Message,org.xbill.DNS.TSIGRecord) -> apply
    void applyStream(org.xbill.DNS.Message,org.xbill.DNS.TSIGRecord,boolean) -> applyStream
    byte verify(org.xbill.DNS.Message,byte[],int,org.xbill.DNS.TSIGRecord) -> verify
    int verify(org.xbill.DNS.Message,byte[],org.xbill.DNS.TSIGRecord) -> verify
    int recordLength() -> recordLength
    java.lang.String access$0(org.xbill.DNS.TSIG) -> access$0
    byte[] access$1(org.xbill.DNS.TSIG) -> access$1
    org.xbill.DNS.Name access$2(org.xbill.DNS.TSIG) -> access$2
    org.xbill.DNS.Name access$3(org.xbill.DNS.TSIG) -> access$3
org.xbill.DNS.TSIG$StreamVerifier -> org.xbill.DNS.TSIG$StreamVerifier:
    org.xbill.DNS.TSIG key -> key
    org.xbill.DNS.utils.HMAC verifier -> verifier
    int nresponses -> nresponses
    int lastsigned -> lastsigned
    org.xbill.DNS.TSIGRecord lastTSIG -> lastTSIG
    int verify(org.xbill.DNS.Message,byte[]) -> verify
org.xbill.DNS.TSIGRecord -> org.xbill.DNS.TSIGRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Name alg -> alg
    java.util.Date timeSigned -> timeSigned
    int fudge -> fudge
    byte[] signature -> signature
    int originalID -> originalID
    int error -> error
    byte[] other -> other
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    org.xbill.DNS.Name getAlgorithm() -> getAlgorithm
    java.util.Date getTimeSigned() -> getTimeSigned
    int getFudge() -> getFudge
    byte[] getSignature() -> getSignature
    int getOriginalID() -> getOriginalID
    int getError() -> getError
    byte[] getOther() -> getOther
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.TTL -> org.xbill.DNS.TTL:
    long MAX_VALUE -> MAX_VALUE
    void check(long) -> check
    long parse(java.lang.String,boolean) -> parse
    long parseTTL(java.lang.String) -> parseTTL
    java.lang.String format(long) -> format
org.xbill.DNS.TXTBase -> org.xbill.DNS.TXTBase:
    long serialVersionUID -> serialVersionUID
    java.util.List strings -> strings
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    java.util.List getStrings() -> getStrings
    java.util.List getStringsAsByteArrays() -> getStringsAsByteArrays
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.TXTRecord -> org.xbill.DNS.TXTRecord:
    long serialVersionUID -> serialVersionUID
    org.xbill.DNS.Record getObject() -> getObject
    java.util.List getStringsAsByteArrays() -> getStringsAsByteArrays
    java.util.List getStrings() -> getStrings
org.xbill.DNS.TextParseException -> org.xbill.DNS.TextParseException:
org.xbill.DNS.Tokenizer -> org.xbill.DNS.Tokenizer:
    java.lang.String delim -> delim
    java.lang.String quotes -> quotes
    int EOF -> EOF
    int EOL -> EOL
    int WHITESPACE -> WHITESPACE
    int IDENTIFIER -> IDENTIFIER
    int QUOTED_STRING -> QUOTED_STRING
    int COMMENT -> COMMENT
    java.io.PushbackInputStream is -> is
    boolean ungottenToken -> ungottenToken
    int multiline -> multiline
    boolean quoting -> quoting
    java.lang.String delimiters -> delimiters
    org.xbill.DNS.Tokenizer$Token current -> current
    java.lang.StringBuffer sb -> sb
    boolean wantClose -> wantClose
    java.lang.String filename -> filename
    int line -> line
    int getChar() -> getChar
    void ungetChar(int) -> ungetChar
    int skipWhitespace() -> skipWhitespace
    void checkUnbalancedParens() -> checkUnbalancedParens
    org.xbill.DNS.Tokenizer$Token get(boolean,boolean) -> get
    org.xbill.DNS.Tokenizer$Token get() -> get
    void unget() -> unget
    java.lang.String getString() -> getString
    java.lang.String _getIdentifier(java.lang.String) -> _getIdentifier
    java.lang.String getIdentifier() -> getIdentifier
    long getLong() -> getLong
    long getUInt32() -> getUInt32
    int getUInt16() -> getUInt16
    int getUInt8() -> getUInt8
    long getTTL() -> getTTL
    long getTTLLike() -> getTTLLike
    org.xbill.DNS.Name getName(org.xbill.DNS.Name) -> getName
    java.net.InetAddress getAddress(int) -> getAddress
    void getEOL() -> getEOL
    java.lang.String remainingStrings() -> remainingStrings
    byte[] getBase64(boolean) -> getBase64
    byte[] getBase64() -> getBase64
    byte[] getHex(boolean) -> getHex
    byte[] getHex() -> getHex
    byte[] getHexString() -> getHexString
    byte[] getBase32String(org.xbill.DNS.utils.base32) -> getBase32String
    org.xbill.DNS.TextParseException exception(java.lang.String) -> exception
    void close() -> close
    void finalize() -> finalize
org.xbill.DNS.Tokenizer$Token -> org.xbill.DNS.Tokenizer$Token:
    int type -> type
    java.lang.String value -> value
    org.xbill.DNS.Tokenizer$Token set(int,java.lang.StringBuffer) -> set
    java.lang.String toString() -> toString
    boolean isString() -> isString
    boolean isEOL() -> isEOL
    org.xbill.DNS.Tokenizer$Token access$1(org.xbill.DNS.Tokenizer$Token,int,java.lang.StringBuffer) -> access$1
org.xbill.DNS.Tokenizer$TokenizerException -> org.xbill.DNS.Tokenizer$TokenizerException:
    java.lang.String message -> message
    java.lang.String getBaseMessage() -> getBaseMessage
org.xbill.DNS.Type -> org.xbill.DNS.Type:
    int A -> A
    int NS -> NS
    int MD -> MD
    int MF -> MF
    int CNAME -> CNAME
    int SOA -> SOA
    int MB -> MB
    int MG -> MG
    int MR -> MR
    int NULL -> NULL
    int WKS -> WKS
    int PTR -> PTR
    int HINFO -> HINFO
    int MINFO -> MINFO
    int MX -> MX
    int TXT -> TXT
    int RP -> RP
    int AFSDB -> AFSDB
    int X25 -> X25
    int ISDN -> ISDN
    int RT -> RT
    int NSAP -> NSAP
    int NSAP_PTR -> NSAP_PTR
    int SIG -> SIG
    int KEY -> KEY
    int PX -> PX
    int GPOS -> GPOS
    int AAAA -> AAAA
    int LOC -> LOC
    int NXT -> NXT
    int EID -> EID
    int NIMLOC -> NIMLOC
    int SRV -> SRV
    int ATMA -> ATMA
    int NAPTR -> NAPTR
    int KX -> KX
    int CERT -> CERT
    int A6 -> A6
    int DNAME -> DNAME
    int OPT -> OPT
    int APL -> APL
    int DS -> DS
    int SSHFP -> SSHFP
    int IPSECKEY -> IPSECKEY
    int RRSIG -> RRSIG
    int NSEC -> NSEC
    int DNSKEY -> DNSKEY
    int DHCID -> DHCID
    int NSEC3 -> NSEC3
    int NSEC3PARAM -> NSEC3PARAM
    int SPF -> SPF
    int TKEY -> TKEY
    int TSIG -> TSIG
    int IXFR -> IXFR
    int AXFR -> AXFR
    int MAILB -> MAILB
    int MAILA -> MAILA
    int ANY -> ANY
    int DLV -> DLV
    org.xbill.DNS.Type$TypeMnemonic types -> types
    void check(int) -> check
    java.lang.String string(int) -> string
    int value(java.lang.String,boolean) -> value
    int value(java.lang.String) -> value
    org.xbill.DNS.Record getProto(int) -> getProto
    boolean isRR(int) -> isRR
org.xbill.DNS.Type$TypeMnemonic -> org.xbill.DNS.Type$TypeMnemonic:
    java.util.HashMap objects -> objects
    void add(int,java.lang.String,org.xbill.DNS.Record) -> add
    void check(int) -> check
    org.xbill.DNS.Record getProto(int) -> getProto
org.xbill.DNS.TypeBitmap -> org.xbill.DNS.TypeBitmap:
    long serialVersionUID -> serialVersionUID
    java.util.TreeSet types -> types
    int[] toArray() -> toArray
    java.lang.String toString() -> toString
    void mapToWire(org.xbill.DNS.DNSOutput,java.util.TreeSet,int) -> mapToWire
    void toWire(org.xbill.DNS.DNSOutput) -> toWire
    boolean empty() -> empty
    boolean contains(int) -> contains
org.xbill.DNS.U16NameBase -> org.xbill.DNS.U16NameBase:
    long serialVersionUID -> serialVersionUID
    int u16Field -> u16Field
    org.xbill.DNS.Name nameField -> nameField
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    int getU16Field() -> getU16Field
    org.xbill.DNS.Name getNameField() -> getNameField
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.UDPClient -> org.xbill.DNS.UDPClient:
    int EPHEMERAL_START -> EPHEMERAL_START
    int EPHEMERAL_STOP -> EPHEMERAL_STOP
    int EPHEMERAL_RANGE -> EPHEMERAL_RANGE
    java.security.SecureRandom prng -> prng
    boolean prng_initializing -> prng_initializing
    boolean bound -> bound
    void bind_random(java.net.InetSocketAddress) -> bind_random
    void bind(java.net.SocketAddress) -> bind
    void connect(java.net.SocketAddress) -> connect
    void send(byte[]) -> send
    byte[] recv(int) -> recv
    byte[] sendrecv(java.net.SocketAddress,java.net.SocketAddress,byte[],int,long) -> sendrecv
    byte[] sendrecv(java.net.SocketAddress,byte[],int,long) -> sendrecv
    java.security.SecureRandom access$0() -> access$0
    void access$1(boolean) -> access$1
org.xbill.DNS.UDPClient$1 -> org.xbill.DNS.UDPClient$1:
    void run() -> run
org.xbill.DNS.UNKRecord -> org.xbill.DNS.UNKRecord:
    long serialVersionUID -> serialVersionUID
    byte[] data -> data
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    byte[] getData() -> getData
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.Update -> org.xbill.DNS.Update:
    org.xbill.DNS.Name origin -> origin
    int dclass -> dclass
    void newPrereq(org.xbill.DNS.Record) -> newPrereq
    void newUpdate(org.xbill.DNS.Record) -> newUpdate
    void present(org.xbill.DNS.Name) -> present
    void present(org.xbill.DNS.Name,int) -> present
    void present(org.xbill.DNS.Name,int,java.lang.String) -> present
    void present(org.xbill.DNS.Name,int,org.xbill.DNS.Tokenizer) -> present
    void present(org.xbill.DNS.Record) -> present
    void absent(org.xbill.DNS.Name) -> absent
    void absent(org.xbill.DNS.Name,int) -> absent
    void add(org.xbill.DNS.Name,int,long,java.lang.String) -> add
    void add(org.xbill.DNS.Name,int,long,org.xbill.DNS.Tokenizer) -> add
    void add(org.xbill.DNS.Record) -> add
    void add(org.xbill.DNS.Record[]) -> add
    void add(org.xbill.DNS.RRset) -> add
    void delete(org.xbill.DNS.Name) -> delete
    void delete(org.xbill.DNS.Name,int) -> delete
    void delete(org.xbill.DNS.Name,int,java.lang.String) -> delete
    void delete(org.xbill.DNS.Name,int,org.xbill.DNS.Tokenizer) -> delete
    void delete(org.xbill.DNS.Record) -> delete
    void delete(org.xbill.DNS.Record[]) -> delete
    void delete(org.xbill.DNS.RRset) -> delete
    void replace(org.xbill.DNS.Name,int,long,java.lang.String) -> replace
    void replace(org.xbill.DNS.Name,int,long,org.xbill.DNS.Tokenizer) -> replace
    void replace(org.xbill.DNS.Record) -> replace
    void replace(org.xbill.DNS.Record[]) -> replace
    void replace(org.xbill.DNS.RRset) -> replace
org.xbill.DNS.WKSRecord -> org.xbill.DNS.WKSRecord:
    long serialVersionUID -> serialVersionUID
    byte[] address -> address
    int protocol -> protocol
    int[] services -> services
    org.xbill.DNS.Record getObject() -> getObject
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String rrToString() -> rrToString
    java.net.InetAddress getAddress() -> getAddress
    int getProtocol() -> getProtocol
    int[] getServices() -> getServices
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
org.xbill.DNS.WKSRecord$Protocol -> org.xbill.DNS.WKSRecord$Protocol:
    int ICMP -> ICMP
    int IGMP -> IGMP
    int GGP -> GGP
    int ST -> ST
    int TCP -> TCP
    int UCL -> UCL
    int EGP -> EGP
    int IGP -> IGP
    int BBN_RCC_MON -> BBN_RCC_MON
    int NVP_II -> NVP_II
    int PUP -> PUP
    int ARGUS -> ARGUS
    int EMCON -> EMCON
    int XNET -> XNET
    int CHAOS -> CHAOS
    int UDP -> UDP
    int MUX -> MUX
    int DCN_MEAS -> DCN_MEAS
    int HMP -> HMP
    int PRM -> PRM
    int XNS_IDP -> XNS_IDP
    int TRUNK_1 -> TRUNK_1
    int TRUNK_2 -> TRUNK_2
    int LEAF_1 -> LEAF_1
    int LEAF_2 -> LEAF_2
    int RDP -> RDP
    int IRTP -> IRTP
    int ISO_TP4 -> ISO_TP4
    int NETBLT -> NETBLT
    int MFE_NSP -> MFE_NSP
    int MERIT_INP -> MERIT_INP
    int SEP -> SEP
    int CFTP -> CFTP
    int SAT_EXPAK -> SAT_EXPAK
    int MIT_SUBNET -> MIT_SUBNET
    int RVD -> RVD
    int IPPC -> IPPC
    int SAT_MON -> SAT_MON
    int IPCV -> IPCV
    int BR_SAT_MON -> BR_SAT_MON
    int WB_MON -> WB_MON
    int WB_EXPAK -> WB_EXPAK
    org.xbill.DNS.Mnemonic protocols -> protocols
    java.lang.String string(int) -> string
    int value(java.lang.String) -> value
org.xbill.DNS.WKSRecord$Service -> org.xbill.DNS.WKSRecord$Service:
    int RJE -> RJE
    int ECHO -> ECHO
    int DISCARD -> DISCARD
    int USERS -> USERS
    int DAYTIME -> DAYTIME
    int QUOTE -> QUOTE
    int CHARGEN -> CHARGEN
    int FTP_DATA -> FTP_DATA
    int FTP -> FTP
    int TELNET -> TELNET
    int SMTP -> SMTP
    int NSW_FE -> NSW_FE
    int MSG_ICP -> MSG_ICP
    int MSG_AUTH -> MSG_AUTH
    int DSP -> DSP
    int TIME -> TIME
    int RLP -> RLP
    int GRAPHICS -> GRAPHICS
    int NAMESERVER -> NAMESERVER
    int NICNAME -> NICNAME
    int MPM_FLAGS -> MPM_FLAGS
    int MPM -> MPM
    int MPM_SND -> MPM_SND
    int NI_FTP -> NI_FTP
    int LOGIN -> LOGIN
    int LA_MAINT -> LA_MAINT
    int DOMAIN -> DOMAIN
    int ISI_GL -> ISI_GL
    int NI_MAIL -> NI_MAIL
    int VIA_FTP -> VIA_FTP
    int TACACS_DS -> TACACS_DS
    int BOOTPS -> BOOTPS
    int BOOTPC -> BOOTPC
    int TFTP -> TFTP
    int NETRJS_1 -> NETRJS_1
    int NETRJS_2 -> NETRJS_2
    int NETRJS_3 -> NETRJS_3
    int NETRJS_4 -> NETRJS_4
    int FINGER -> FINGER
    int HOSTS2_NS -> HOSTS2_NS
    int SU_MIT_TG -> SU_MIT_TG
    int MIT_DOV -> MIT_DOV
    int DCP -> DCP
    int SUPDUP -> SUPDUP
    int SWIFT_RVF -> SWIFT_RVF
    int TACNEWS -> TACNEWS
    int METAGRAM -> METAGRAM
    int HOSTNAME -> HOSTNAME
    int ISO_TSAP -> ISO_TSAP
    int X400 -> X400
    int X400_SND -> X400_SND
    int CSNET_NS -> CSNET_NS
    int RTELNET -> RTELNET
    int POP_2 -> POP_2
    int SUNRPC -> SUNRPC
    int AUTH -> AUTH
    int SFTP -> SFTP
    int UUCP_PATH -> UUCP_PATH
    int NNTP -> NNTP
    int ERPC -> ERPC
    int NTP -> NTP
    int LOCUS_MAP -> LOCUS_MAP
    int LOCUS_CON -> LOCUS_CON
    int PWDGEN -> PWDGEN
    int CISCO_FNA -> CISCO_FNA
    int CISCO_TNA -> CISCO_TNA
    int CISCO_SYS -> CISCO_SYS
    int STATSRV -> STATSRV
    int INGRES_NET -> INGRES_NET
    int LOC_SRV -> LOC_SRV
    int PROFILE -> PROFILE
    int NETBIOS_NS -> NETBIOS_NS
    int NETBIOS_DGM -> NETBIOS_DGM
    int NETBIOS_SSN -> NETBIOS_SSN
    int EMFIS_DATA -> EMFIS_DATA
    int EMFIS_CNTL -> EMFIS_CNTL
    int BL_IDM -> BL_IDM
    int SUR_MEAS -> SUR_MEAS
    int LINK -> LINK
    org.xbill.DNS.Mnemonic services -> services
    java.lang.String string(int) -> string
    int value(java.lang.String) -> value
org.xbill.DNS.WireParseException -> org.xbill.DNS.WireParseException:
org.xbill.DNS.X25Record -> org.xbill.DNS.X25Record:
    long serialVersionUID -> serialVersionUID
    byte[] address -> address
    org.xbill.DNS.Record getObject() -> getObject
    byte[] checkAndConvertAddress(java.lang.String) -> checkAndConvertAddress
    void rrFromWire(org.xbill.DNS.DNSInput) -> rrFromWire
    void rdataFromString(org.xbill.DNS.Tokenizer,org.xbill.DNS.Name) -> rdataFromString
    java.lang.String getAddress() -> getAddress
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> rrToWire
    java.lang.String rrToString() -> rrToString
org.xbill.DNS.Zone -> org.xbill.DNS.Zone:
    long serialVersionUID -> serialVersionUID
    int PRIMARY -> PRIMARY
    int SECONDARY -> SECONDARY
    java.util.Map data -> data
    org.xbill.DNS.Name origin -> origin
    java.lang.Object originNode -> originNode
    int dclass -> dclass
    org.xbill.DNS.RRset NS -> NS
    org.xbill.DNS.SOARecord SOA -> SOA
    boolean hasWild -> hasWild
    void validate() -> validate
    void maybeAddRecord(org.xbill.DNS.Record) -> maybeAddRecord
    void fromXFR(org.xbill.DNS.ZoneTransferIn) -> fromXFR
    org.xbill.DNS.Name getOrigin() -> getOrigin
    org.xbill.DNS.RRset getNS() -> getNS
    org.xbill.DNS.SOARecord getSOA() -> getSOA
    int getDClass() -> getDClass
    java.lang.Object exactName(org.xbill.DNS.Name) -> exactName
    org.xbill.DNS.RRset[] allRRsets(java.lang.Object) -> allRRsets
    org.xbill.DNS.RRset oneRRset(java.lang.Object,int) -> oneRRset
    org.xbill.DNS.RRset findRRset(org.xbill.DNS.Name,int) -> findRRset
    void addRRset(org.xbill.DNS.Name,org.xbill.DNS.RRset) -> addRRset
    void removeRRset(org.xbill.DNS.Name,int) -> removeRRset
    org.xbill.DNS.SetResponse lookup(org.xbill.DNS.Name,int) -> lookup
    org.xbill.DNS.SetResponse findRecords(org.xbill.DNS.Name,int) -> findRecords
    org.xbill.DNS.RRset findExactMatch(org.xbill.DNS.Name,int) -> findExactMatch
    void addRRset(org.xbill.DNS.RRset) -> addRRset
    void addRecord(org.xbill.DNS.Record) -> addRecord
    void removeRecord(org.xbill.DNS.Record) -> removeRecord
    java.util.Iterator iterator() -> iterator
    java.util.Iterator AXFR() -> AXFR
    void nodeToString(java.lang.StringBuffer,java.lang.Object) -> nodeToString
    java.lang.String toMasterFile() -> toMasterFile
    java.lang.String toString() -> toString
    java.util.Map access$0(org.xbill.DNS.Zone) -> access$0
    java.lang.Object access$1(org.xbill.DNS.Zone) -> access$1
    org.xbill.DNS.RRset[] access$2(org.xbill.DNS.Zone,java.lang.Object) -> access$2
    org.xbill.DNS.RRset access$3(org.xbill.DNS.Zone,java.lang.Object,int) -> access$3
    org.xbill.DNS.Name access$4(org.xbill.DNS.Zone) -> access$4
org.xbill.DNS.Zone$ZoneIterator -> org.xbill.DNS.Zone$ZoneIterator:
    java.util.Iterator zentries -> zentries
    org.xbill.DNS.RRset[] current -> current
    int count -> count
    boolean wantLastSOA -> wantLastSOA
    org.xbill.DNS.Zone this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.xbill.DNS.ZoneTransferException -> org.xbill.DNS.ZoneTransferException:
org.xbill.DNS.ZoneTransferIn -> org.xbill.DNS.ZoneTransferIn:
    int INITIALSOA -> INITIALSOA
    int FIRSTDATA -> FIRSTDATA
    int IXFR_DELSOA -> IXFR_DELSOA
    int IXFR_DEL -> IXFR_DEL
    int IXFR_ADDSOA -> IXFR_ADDSOA
    int IXFR_ADD -> IXFR_ADD
    int AXFR -> AXFR
    int END -> END
    org.xbill.DNS.Name zname -> zname
    int qtype -> qtype
    int dclass -> dclass
    long ixfr_serial -> ixfr_serial
    boolean want_fallback -> want_fallback
    java.net.SocketAddress localAddress -> localAddress
    java.net.SocketAddress address -> address
    org.xbill.DNS.TCPClient client -> client
    org.xbill.DNS.TSIG tsig -> tsig
    org.xbill.DNS.TSIG$StreamVerifier verifier -> verifier
    long timeout -> timeout
    int state -> state
    long end_serial -> end_serial
    long current_serial -> current_serial
    org.xbill.DNS.Record initialsoa -> initialsoa
    int rtype -> rtype
    java.util.List axfr -> axfr
    java.util.List ixfr -> ixfr
    org.xbill.DNS.ZoneTransferIn newAXFR(org.xbill.DNS.Name,java.net.SocketAddress,org.xbill.DNS.TSIG) -> newAXFR
    org.xbill.DNS.ZoneTransferIn newAXFR(org.xbill.DNS.Name,java.lang.String,int,org.xbill.DNS.TSIG) -> newAXFR
    org.xbill.DNS.ZoneTransferIn newAXFR(org.xbill.DNS.Name,java.lang.String,org.xbill.DNS.TSIG) -> newAXFR
    org.xbill.DNS.ZoneTransferIn newIXFR(org.xbill.DNS.Name,long,boolean,java.net.SocketAddress,org.xbill.DNS.TSIG) -> newIXFR
    org.xbill.DNS.ZoneTransferIn newIXFR(org.xbill.DNS.Name,long,boolean,java.lang.String,int,org.xbill.DNS.TSIG) -> newIXFR
    org.xbill.DNS.ZoneTransferIn newIXFR(org.xbill.DNS.Name,long,boolean,java.lang.String,org.xbill.DNS.TSIG) -> newIXFR
    org.xbill.DNS.Name getName() -> getName
    int getType() -> getType
    void setTimeout(int) -> setTimeout
    void setDClass(int) -> setDClass
    void setLocalAddress(java.net.SocketAddress) -> setLocalAddress
    void openConnection() -> openConnection
    void sendQuery() -> sendQuery
    long getSOASerial(org.xbill.DNS.Record) -> getSOASerial
    void logxfr(java.lang.String) -> logxfr
    void fail(java.lang.String) -> fail
    void fallback() -> fallback
    void parseRR(org.xbill.DNS.Record) -> parseRR
    void closeConnection() -> closeConnection
    org.xbill.DNS.Message parseMessage(byte[]) -> parseMessage
    void doxfr() -> doxfr
    java.util.List run() -> run
    boolean isAXFR() -> isAXFR
    java.util.List getAXFR() -> getAXFR
    boolean isIXFR() -> isIXFR
    java.util.List getIXFR() -> getIXFR
    boolean isCurrent() -> isCurrent
org.xbill.DNS.ZoneTransferIn$Delta -> org.xbill.DNS.ZoneTransferIn$Delta:
    long start -> start
    long end -> end
    java.util.List adds -> adds
    java.util.List deletes -> deletes
org.xbill.DNS.spi.DNSJavaNameService -> org.xbill.DNS.spi.DNSJavaNameService:
    java.lang.String nsProperty -> nsProperty
    java.lang.String domainProperty -> domainProperty
    java.lang.String v6Property -> v6Property
    boolean preferV6 -> preferV6
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.net.InetAddress[] lookupAllHostAddr(java.lang.String) -> lookupAllHostAddr
    java.lang.String getHostByAddr(byte[]) -> getHostByAddr
org.xbill.DNS.tests.primary -> org.xbill.DNS.tests.primary:
    void usage() -> usage
    void main(java.lang.String[]) -> main
org.xbill.DNS.tests.xfrin -> org.xbill.DNS.tests.xfrin:
    void usage(java.lang.String) -> usage
    void main(java.lang.String[]) -> main
org.xbill.DNS.utils.HMAC -> org.xbill.DNS.utils.HMAC:
    java.security.MessageDigest digest -> digest
    byte[] ipad -> ipad
    byte[] opad -> opad
    byte IPAD -> IPAD
    byte OPAD -> OPAD
    byte PADLEN -> PADLEN
    void init(byte[]) -> init
    void update(byte[],int,int) -> update
    void update(byte[]) -> update
    byte[] sign() -> sign
    boolean verify(byte[]) -> verify
    void clear() -> clear
org.xbill.DNS.utils.base16 -> org.xbill.DNS.utils.base16:
    java.lang.String Base16 -> Base16
    java.lang.String toString(byte[]) -> toString
    byte[] fromString(java.lang.String) -> fromString
org.xbill.DNS.utils.base32 -> org.xbill.DNS.utils.base32:
    java.lang.String alphabet -> alphabet
    boolean padding -> padding
    boolean lowercase -> lowercase
    int blockLenToPadding(int) -> blockLenToPadding
    int paddingToBlockLen(int) -> paddingToBlockLen
    java.lang.String toString(byte[]) -> toString
    byte[] fromString(java.lang.String) -> fromString
org.xbill.DNS.utils.base32$Alphabet -> org.xbill.DNS.utils.base32$Alphabet:
    java.lang.String BASE32 -> BASE32
    java.lang.String BASE32HEX -> BASE32HEX
org.xbill.DNS.utils.base64 -> org.xbill.DNS.utils.base64:
    java.lang.String Base64 -> Base64
    java.lang.String toString(byte[]) -> toString
    java.lang.String formatString(byte[],int,java.lang.String,boolean) -> formatString
    byte[] fromString(java.lang.String) -> fromString
org.xbill.DNS.utils.hexdump -> org.xbill.DNS.utils.hexdump:
    char[] hex -> hex
    java.lang.String dump(java.lang.String,byte[],int,int) -> dump
    java.lang.String dump(java.lang.String,byte[]) -> dump
vi.com.gdi.bgl.android.java.EnvDrawText -> vi.com.gdi.bgl.android.java.EnvDrawText:
    java.lang.String a -> a
    android.graphics.Paint pt -> pt
    int iWordWidthMax -> iWordWidthMax
    int iWordHightMax -> iWordHightMax
    boolean bBmpChange -> bBmpChange
    android.graphics.Bitmap bmp -> bmp
    android.graphics.Canvas canvasTemp -> canvasTemp
    int[] buffer -> buffer
    android.util.SparseArray fontCache -> fontCache
    int[] drawText(java.lang.String,int,int,int[],int,int,int,int) -> drawText
    short[] getTextSize(java.lang.String,int) -> getTextSize
    void registFontCache(int,android.graphics.Typeface) -> registFontCache
    void removeFontCache(int) -> removeFontCache
vi.com.gdi.bgl.android.java.a -> vi.com.gdi.bgl.android.java.a:
    android.graphics.Typeface a -> a
    int b -> b
